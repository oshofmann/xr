var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  libata-core.c - helper library for ATA</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Maintained by:  Jeff Garzik &lt;jgarzik@pobox.com&gt;</span>", 
"<span class=\"comment\"> *    <span class=\"ts\"/><span class=\"ts\"/>    Please ALWAYS copy linux-ide@vger.kernel.org</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>    on emails.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright 2003-2004 Red Hat, Inc.  All rights reserved.</span>", 
"<span class=\"comment\"> *  Copyright 2003-2004 Jeff Garzik</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *  it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> *  the Free Software Foundation; either version 2, or (at your option)</span>", 
"<span class=\"comment\"> *  any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> *  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> *  GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> *  along with this program; see the file COPYING.  If not, write to</span>", 
"<span class=\"comment\"> *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  libata documentation is available via 'make {ps|pdf}docs',</span>", 
"<span class=\"comment\"> *  as Documentation/DocBook/libata.*</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Hardware documentation available from http://www.t13.org/ and</span>", 
"<span class=\"comment\"> *  http://www.sata-io.org/</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Standards documents from:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>http://www.t13.org (ATA standards, PCI DMA IDE spec)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>http://www.t10.org (SCSI MMC - for ATAPI MMC)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>http://www.sata-io.org (SATA)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>http://www.compactflash.org (CF)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>http://www.qic.org (QIC157 - Tape and DSC)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>http://www.ce-ata.org (CE-ATA: not supported)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#completion\">completion</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#suspend\">suspend</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#workqueue\">workqueue</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#scatterlist\">scatterlist</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#async\">async</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#log2\">log2</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi\">scsi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_host\">scsi_host</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#libata\">libata</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#byteorder\">byteorder</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cdrom\">cdrom</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ratelimit\">ratelimit</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"libata.h\"", 
"", 
"", 
"<span class=\"comment\">/* debounce timing parameters in msecs { interval, duration, timeout } */</span>", 
"const unsigned long <a class=\"id\" href=\"#sata_deb_timing_normal\">sata_deb_timing_normal</a>[]<span class=\"ts\"/><span class=\"ts\"/>= {   5,  100, 2000 };", 
"const unsigned long <a class=\"id\" href=\"#sata_deb_timing_hotplug\">sata_deb_timing_hotplug</a>[]<span class=\"ts\"/><span class=\"ts\"/>= {  25,  500, 2000 };", 
"const unsigned long <a class=\"id\" href=\"#sata_deb_timing_long\">sata_deb_timing_long</a>[]<span class=\"ts\"/><span class=\"ts\"/>= { 100, 2000, 5000 };", 
"", 
"const struct <a class=\"id\" href=\"#ata_port_operations\">ata_port_operations</a> <a class=\"id\" href=\"#ata_base_port_ops\">ata_base_port_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#prereset\">prereset</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_std_prereset\">ata_std_prereset</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#postreset\">postreset</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_std_postreset\">ata_std_postreset</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#error_handler\">error_handler</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_std_error_handler\">ata_std_error_handler</a>,", 
"};", 
"", 
"const struct <a class=\"id\" href=\"#ata_port_operations\">ata_port_operations</a> <a class=\"id\" href=\"#sata_port_ops\">sata_port_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#inherits\">inherits</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ata_base_port_ops\">ata_base_port_ops</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#qc_defer\">qc_defer</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_std_qc_defer\">ata_std_qc_defer</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#hardreset\">hardreset</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sata_std_hardreset\">sata_std_hardreset</a>,", 
"};", 
"", 
"static unsigned int <a class=\"id\" href=\"#ata_dev_init_params\">ata_dev_init_params</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#heads\">heads</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#sectors\">sectors</a>);", 
"static unsigned int <a class=\"id\" href=\"#ata_dev_set_xfermode\">ata_dev_set_xfermode</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"static unsigned int <a class=\"id\" href=\"#ata_dev_set_feature\">ata_dev_set_feature</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#enable\">enable</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#feature\">feature</a>);", 
"static void <a class=\"id\" href=\"#ata_dev_xfermask\">ata_dev_xfermask</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"static unsigned long <a class=\"id\" href=\"#ata_dev_blacklisted\">ata_dev_blacklisted</a>(const struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"unsigned int <a class=\"id\" href=\"#ata_print_id\">ata_print_id</a> = 1;", 
"", 
"struct <a class=\"id\" href=\"#ata_force_param\">ata_force_param</a> {", 
"<span class=\"ts\"/>const char<span class=\"ts\"/>*<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#cbl\">cbl</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spd_limit\">spd_limit</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#xfer_mask\">xfer_mask</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#horkage_on\">horkage_on</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#horkage_off\">horkage_off</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#lflags\">lflags</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ata_force_ent\">ata_force_ent</a> {", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_force_param\">ata_force_param</a><span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>;", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#ata_force_ent\">ata_force_ent</a> *<a class=\"id\" href=\"#ata_force_tbl\">ata_force_tbl</a>;", 
"static int <a class=\"id\" href=\"#ata_force_tbl_size\">ata_force_tbl_size</a>;", 
"", 
"static char <a class=\"id\" href=\"#ata_force_param_buf\">ata_force_param_buf</a>[<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>] <a class=\"id\" href=\"#__initdata\">__initdata</a>;", 
"<span class=\"comment\">/* param_buf is thrown away after initialization, disallow read */</span>", 
"<a class=\"id\" href=\"#module_param_string\">module_param_string</a>(<a class=\"id\" href=\"#force\">force</a>, <a class=\"id\" href=\"#ata_force_param_buf\">ata_force_param_buf</a>, sizeof(<a class=\"id\" href=\"#ata_force_param_buf\">ata_force_param_buf</a>), 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#force\">force</a>, \"Force ATA configurations including cable type, link speed and transfer mode (see Documentation/kernel-parameters.txt for details)\");", 
"", 
"static int <a class=\"id\" href=\"#atapi_enabled\">atapi_enabled</a> = 1;", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#atapi_enabled\">atapi_enabled</a>, int, 0444);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#atapi_enabled\">atapi_enabled</a>, \"Enable discovery of ATAPI devices (0=off, 1=on [default])\");", 
"", 
"static int <a class=\"id\" href=\"#atapi_dmadir\">atapi_dmadir</a> = 0;", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#atapi_dmadir\">atapi_dmadir</a>, int, 0444);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#atapi_dmadir\">atapi_dmadir</a>, \"Enable ATAPI DMADIR bridge support (0=off [default], 1=on)\");", 
"", 
"int <a class=\"id\" href=\"#atapi_passthru16\">atapi_passthru16</a> = 1;", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#atapi_passthru16\">atapi_passthru16</a>, int, 0444);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#atapi_passthru16\">atapi_passthru16</a>, \"Enable ATA_16 passthru for ATAPI devices (0=off, 1=on [default])\");", 
"", 
"int <a class=\"id\" href=\"#libata_fua\">libata_fua</a> = 0;", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#fua\">fua</a>, <a class=\"id\" href=\"#libata_fua\">libata_fua</a>, int, 0444);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#fua\">fua</a>, \"FUA support (0=off [default], 1=on)\");", 
"", 
"static int <a class=\"id\" href=\"#ata_ignore_hpa\">ata_ignore_hpa</a>;", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#ignore_hpa\">ignore_hpa</a>, <a class=\"id\" href=\"#ata_ignore_hpa\">ata_ignore_hpa</a>, int, 0644);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#ignore_hpa\">ignore_hpa</a>, \"Ignore HPA limit (0=keep BIOS limits, 1=ignore limits, using full disk)\");", 
"", 
"static int <a class=\"id\" href=\"#libata_dma_mask\">libata_dma_mask</a> = <a class=\"id\" href=\"#ATA_DMA_MASK_ATA\">ATA_DMA_MASK_ATA</a>|<a class=\"id\" href=\"#ATA_DMA_MASK_ATAPI\">ATA_DMA_MASK_ATAPI</a>|<a class=\"id\" href=\"#ATA_DMA_MASK_CFA\">ATA_DMA_MASK_CFA</a>;", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#dma\">dma</a>, <a class=\"id\" href=\"#libata_dma_mask\">libata_dma_mask</a>, int, 0444);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#dma\">dma</a>, \"DMA enable/disable (0x1==ATA, 0x2==ATAPI, 0x4==CF)\");", 
"", 
"static int <a class=\"id\" href=\"#ata_probe_timeout\">ata_probe_timeout</a>;", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#ata_probe_timeout\">ata_probe_timeout</a>, int, 0444);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#ata_probe_timeout\">ata_probe_timeout</a>, \"Set ATA probing timeout (seconds)\");", 
"", 
"int <a class=\"id\" href=\"#libata_noacpi\">libata_noacpi</a> = 0;", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#noacpi\">noacpi</a>, <a class=\"id\" href=\"#libata_noacpi\">libata_noacpi</a>, int, 0444);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#noacpi\">noacpi</a>, \"Disable the use of ACPI in probe/suspend/resume (0=off [default], 1=on)\");", 
"", 
"int <a class=\"id\" href=\"#libata_allow_tpm\">libata_allow_tpm</a> = 0;", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#allow_tpm\">allow_tpm</a>, <a class=\"id\" href=\"#libata_allow_tpm\">libata_allow_tpm</a>, int, 0444);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#allow_tpm\">allow_tpm</a>, \"Permit the use of TPM commands (0=off [default], 1=on)\");", 
"", 
"static int <a class=\"id\" href=\"#atapi_an\">atapi_an</a>;", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#atapi_an\">atapi_an</a>, int, 0444);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#atapi_an\">atapi_an</a>, \"Enable ATAPI AN media presence notification (0=0ff [default], 1=on)\");", 
"", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"Jeff Garzik\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"Library module for ATA devices\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"<a class=\"id\" href=\"#MODULE_VERSION\">MODULE_VERSION</a>(<a class=\"id\" href=\"#DRV_VERSION\">DRV_VERSION</a>);", 
"", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#ata_sstatus_online\">ata_sstatus_online</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sstatus\">sstatus</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#sstatus\">sstatus</a> &amp; 0xf) == 0x3;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_link_next - link iteration helper</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@link: the previous link, NULL to start</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: ATA port containing links to iterate</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@mode: iteration mode, one of ATA_LITER_*</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Host lock or EH context.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pointer to the next link.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#ata_link_next\">ata_link_next</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       enum <a class=\"id\" href=\"#ata_link_iter_mode\">ata_link_iter_mode</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#mode\">mode</a> != <a class=\"id\" href=\"#ATA_LITER_EDGE\">ATA_LITER_EDGE</a> &&", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#mode\">mode</a> != <a class=\"id\" href=\"#ATA_LITER_PMP_FIRST\">ATA_LITER_PMP_FIRST</a> && <a class=\"id\" href=\"#mode\">mode</a> != <a class=\"id\" href=\"#ATA_LITER_HOST_FIRST\">ATA_LITER_HOST_FIRST</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* NULL link indicates start of iteration */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#link\">link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#mode\">mode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_LITER_EDGE\">ATA_LITER_EDGE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_LITER_PMP_FIRST\">ATA_LITER_PMP_FIRST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sata_pmp_attached\">sata_pmp_attached</a>(<a class=\"id\" href=\"#ap\">ap</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#pmp_link\">pmp_link</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_LITER_HOST_FIRST\">ATA_LITER_HOST_FIRST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we just iterated over the host link, what's next? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#link\">link</a> == &amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#mode\">mode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_LITER_HOST_FIRST\">ATA_LITER_HOST_FIRST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sata_pmp_attached\">sata_pmp_attached</a>(<a class=\"id\" href=\"#ap\">ap</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#pmp_link\">pmp_link</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_LITER_PMP_FIRST\">ATA_LITER_PMP_FIRST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#slave_link\">slave_link</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#slave_link\">slave_link</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_LITER_EDGE\">ATA_LITER_EDGE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* slave_link excludes PMP */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#link\">link</a> == <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#slave_link\">slave_link</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we were over a PMP link */</span>", 
"<span class=\"ts\"/>if (++<a class=\"id\" href=\"#link\">link</a> &lt; <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#pmp_link\">pmp_link</a> + <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#nr_pmp_links\">nr_pmp_links</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#link\">link</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mode\">mode</a> == <a class=\"id\" href=\"#ATA_LITER_PMP_FIRST\">ATA_LITER_PMP_FIRST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_dev_next - device iteration helper</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: the previous device, NULL to start</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@link: ATA link containing devices to iterate</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@mode: iteration mode, one of ATA_DITER_*</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Host lock or EH context.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pointer to the next device.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#ata_dev_next\">ata_dev_next</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>enum <a class=\"id\" href=\"#ata_dev_iter_mode\">ata_dev_iter_mode</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#mode\">mode</a> != <a class=\"id\" href=\"#ATA_DITER_ENABLED\">ATA_DITER_ENABLED</a> && <a class=\"id\" href=\"#mode\">mode</a> != <a class=\"id\" href=\"#ATA_DITER_ENABLED_REVERSE\">ATA_DITER_ENABLED_REVERSE</a> &&", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#mode\">mode</a> != <a class=\"id\" href=\"#ATA_DITER_ALL\">ATA_DITER_ALL</a> && <a class=\"id\" href=\"#mode\">mode</a> != <a class=\"id\" href=\"#ATA_DITER_ALL_REVERSE\">ATA_DITER_ALL_REVERSE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* NULL dev indicates start of iteration */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#mode\">mode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_DITER_ENABLED\">ATA_DITER_ENABLED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_DITER_ALL\">ATA_DITER_ALL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#check\">check</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_DITER_ENABLED_REVERSE\">ATA_DITER_ENABLED_REVERSE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_DITER_ALL_REVERSE\">ATA_DITER_ALL_REVERSE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#device\">device</a> + <a class=\"id\" href=\"#ata_link_max_devices\">ata_link_max_devices</a>(<a class=\"id\" href=\"#link\">link</a>) - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#check\">check</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
" <a class=\"id\" href=\"#next\">next</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* move to the next one */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#mode\">mode</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_DITER_ENABLED\">ATA_DITER_ENABLED</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_DITER_ALL\">ATA_DITER_ALL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#dev\">dev</a> &lt; <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#device\">device</a> + <a class=\"id\" href=\"#ata_link_max_devices\">ata_link_max_devices</a>(<a class=\"id\" href=\"#link\">link</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#check\">check</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_DITER_ENABLED_REVERSE\">ATA_DITER_ENABLED_REVERSE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_DITER_ALL_REVERSE\">ATA_DITER_ALL_REVERSE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (--<a class=\"id\" href=\"#dev\">dev</a> >= <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#device\">device</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#check\">check</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
" <a class=\"id\" href=\"#check\">check</a>:", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#mode\">mode</a> == <a class=\"id\" href=\"#ATA_DITER_ENABLED\">ATA_DITER_ENABLED</a> || <a class=\"id\" href=\"#mode\">mode</a> == <a class=\"id\" href=\"#ATA_DITER_ENABLED_REVERSE\">ATA_DITER_ENABLED_REVERSE</a>) &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#ata_dev_enabled\">ata_dev_enabled</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_dev_phys_link - find physical link for a device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: ATA device to look up physical link for</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Look up physical link which @dev is attached to.  Note that</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>this is different from @dev-&gt;link only when @dev is on slave</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>link.  For all other cases, it's the same as @dev-&gt;link.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Don't care.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pointer to the found physical link.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#ata_dev_phys_link\">ata_dev_phys_link</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#slave_link\">slave_link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#link\">link</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devno\">devno</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#slave_link\">slave_link</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_force_cbl - force cable type according to libata.force</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: ATA port of interest</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Force cable type according to libata.force and whine about it.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The last entry which has matching port number is used, so it</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>can be specified as part of device force parameters.  For</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>example, both \"a:40c,1.00:udma4\" and \"1.00:40c,udma4\" have the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>same effect.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>EH context.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ata_force_cbl\">ata_force_cbl</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#ata_force_tbl_size\">ata_force_tbl_size</a> - 1; <a class=\"id\" href=\"#i\">i</a> >= 0; <a class=\"id\" href=\"#i\">i</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#ata_force_ent\">ata_force_ent</a> *<a class=\"id\" href=\"#fe\">fe</a> = &amp;<a class=\"id\" href=\"#ata_force_tbl\">ata_force_tbl</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#port\">port</a> != -1 && <a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#port\">port</a> != <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#print_id\">print_id</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#cbl\">cbl</a> == <a class=\"id\" href=\"#ATA_CBL_NONE\">ATA_CBL_NONE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#cbl\">cbl</a> = <a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#cbl\">cbl</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_port_printk\">ata_port_printk</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"FORCE: cable set to %s\\n\", <a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_force_link_limits - force link limits according to libata.force</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@link: ATA link of interest</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Force link flags and SATA spd limit according to libata.force</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and whine about it.  When only the port part is specified</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(e.g. 1:), the limit applies to all links connected to both</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the host link and all fan-out ports connected via PMP.  If the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>device part is specified as 0 (e.g. 1.00:), it specifies the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>first fan-out link not the host link.  Device number 15 always</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>points to the host link whether PMP is attached or not.  If the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>controller has slave link, device number 16 points to it.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>EH context.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ata_force_link_limits\">ata_force_link_limits</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#did_spd\">did_spd</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#linkno\">linkno</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#pmp\">pmp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_is_host_link\">ata_is_host_link</a>(<a class=\"id\" href=\"#link\">link</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#linkno\">linkno</a> += 15;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#ata_force_tbl_size\">ata_force_tbl_size</a> - 1; <a class=\"id\" href=\"#i\">i</a> >= 0; <a class=\"id\" href=\"#i\">i</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#ata_force_ent\">ata_force_ent</a> *<a class=\"id\" href=\"#fe\">fe</a> = &amp;<a class=\"id\" href=\"#ata_force_tbl\">ata_force_tbl</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#port\">port</a> != -1 && <a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#port\">port</a> != <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#print_id\">print_id</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#device\">device</a> != -1 && <a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#device\">device</a> != <a class=\"id\" href=\"#linkno\">linkno</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* only honor the first spd limit */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#did_spd\">did_spd</a> && <a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#spd_limit\">spd_limit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#hw_sata_spd_limit\">hw_sata_spd_limit</a> = (1 << <a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#spd_limit\">spd_limit</a>) - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_link_printk\">ata_link_printk</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"FORCE: PHY spd limit set to %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#did_spd\">did_spd</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* let lflags stack */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#lflags\">lflags</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#lflags\">lflags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_link_printk\">ata_link_printk</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"FORCE: link flag 0x%x forced -> 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#lflags\">lflags</a>, <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_force_xfermask - force xfermask according to libata.force</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: ATA device of interest</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Force xfer_mask according to libata.force and whine about it.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>For consistency with link selection, device number 15 selects</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the first device connected to the host link.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>EH context.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ata_force_xfermask\">ata_force_xfermask</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#devno\">devno</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#pmp\">pmp</a> + <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devno\">devno</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#alt_devno\">alt_devno</a> = <a class=\"id\" href=\"#devno\">devno</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* allow n.15/16 for devices attached to host port */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_is_host_link\">ata_is_host_link</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#link\">link</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alt_devno\">alt_devno</a> += 15;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#ata_force_tbl_size\">ata_force_tbl_size</a> - 1; <a class=\"id\" href=\"#i\">i</a> >= 0; <a class=\"id\" href=\"#i\">i</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#ata_force_ent\">ata_force_ent</a> *<a class=\"id\" href=\"#fe\">fe</a> = &amp;<a class=\"id\" href=\"#ata_force_tbl\">ata_force_tbl</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pio_mask\">pio_mask</a>, <a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a>, <a class=\"id\" href=\"#udma_mask\">udma_mask</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#port\">port</a> != -1 && <a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#port\">port</a> != <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#print_id\">print_id</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#device\">device</a> != -1 && <a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#device\">device</a> != <a class=\"id\" href=\"#devno\">devno</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#device\">device</a> != <a class=\"id\" href=\"#alt_devno\">alt_devno</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#xfer_mask\">xfer_mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_unpack_xfermask\">ata_unpack_xfermask</a>(<a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#xfer_mask\">xfer_mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#pio_mask\">pio_mask</a>, &amp;<a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a>, &amp;<a class=\"id\" href=\"#udma_mask\">udma_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#udma_mask\">udma_mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#udma_mask\">udma_mask</a> = <a class=\"id\" href=\"#udma_mask\">udma_mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#udma_mask\">udma_mask</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a> = <a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#udma_mask\">udma_mask</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#pio_mask\">pio_mask</a> = <a class=\"id\" href=\"#pio_mask\">pio_mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"FORCE: xfer_mask set to %s\\n\", <a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_force_horkage - force horkage according to libata.force</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: ATA device of interest</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Force horkage according to libata.force and whine about it.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>For consistency with link selection, device number 15 selects</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the first device connected to the host link.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>EH context.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ata_force_horkage\">ata_force_horkage</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#devno\">devno</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#pmp\">pmp</a> + <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devno\">devno</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#alt_devno\">alt_devno</a> = <a class=\"id\" href=\"#devno\">devno</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* allow n.15/16 for devices attached to host port */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_is_host_link\">ata_is_host_link</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#link\">link</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alt_devno\">alt_devno</a> += 15;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ata_force_tbl_size\">ata_force_tbl_size</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#ata_force_ent\">ata_force_ent</a> *<a class=\"id\" href=\"#fe\">fe</a> = &amp;<a class=\"id\" href=\"#ata_force_tbl\">ata_force_tbl</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#port\">port</a> != -1 && <a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#port\">port</a> != <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#print_id\">print_id</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#device\">device</a> != -1 && <a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#device\">device</a> != <a class=\"id\" href=\"#devno\">devno</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#device\">device</a> != <a class=\"id\" href=\"#alt_devno\">alt_devno</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(~<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#horkage\">horkage</a> &amp; <a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#horkage_on\">horkage_on</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#horkage\">horkage</a> &amp; <a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#horkage_off\">horkage_off</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#horkage\">horkage</a> |= <a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#horkage_on\">horkage_on</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#horkage\">horkage</a> &= ~<a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#horkage_off\">horkage_off</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"FORCE: horkage modified (%s)\\n\", <a class=\"id\" href=\"#fe\">fe</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>atapi_cmd_type - Determine ATAPI command type from SCSI opcode</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@opcode: SCSI opcode</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Determine ATAPI command type from @opcode.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>None.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ATAPI_{READ|WRITE|READ_CD|PASS_THRU|MISC}</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#atapi_cmd_type\">atapi_cmd_type</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#opcode\">opcode</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#opcode\">opcode</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#GPCMD_READ_10\">GPCMD_READ_10</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#GPCMD_READ_12\">GPCMD_READ_12</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ATAPI_READ\">ATAPI_READ</a>;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#GPCMD_WRITE_10\">GPCMD_WRITE_10</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#GPCMD_WRITE_12\">GPCMD_WRITE_12</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#GPCMD_WRITE_AND_VERIFY_10\">GPCMD_WRITE_AND_VERIFY_10</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ATAPI_WRITE\">ATAPI_WRITE</a>;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#GPCMD_READ_CD\">GPCMD_READ_CD</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#GPCMD_READ_CD_MSF\">GPCMD_READ_CD_MSF</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ATAPI_READ_CD\">ATAPI_READ_CD</a>;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_16\">ATA_16</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_12\">ATA_12</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atapi_passthru16\">atapi_passthru16</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ATAPI_PASS_THRU\">ATAPI_PASS_THRU</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall thru */</span>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ATAPI_MISC\">ATAPI_MISC</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_tf_to_fis - Convert ATA taskfile to SATA FIS structure</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tf: Taskfile to convert</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@pmp: Port multiplier port</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@is_cmd: This FIS is for command</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@fis: Buffer into which data will output</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Converts a standard ATA taskfile to a Serial ATA</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>FIS structure (Register - Host to Device).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ata_tf_to_fis\">ata_tf_to_fis</a>(const struct <a class=\"id\" href=\"#ata_taskfile\">ata_taskfile</a> *<a class=\"id\" href=\"#tf\">tf</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#pmp\">pmp</a>, int <a class=\"id\" href=\"#is_cmd\">is_cmd</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#fis\">fis</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fis\">fis</a>[0] = 0x27;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Register - Host to Device FIS */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fis\">fis</a>[1] = <a class=\"id\" href=\"#pmp\">pmp</a> &amp; 0xf;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Port multiplier number*/</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_cmd\">is_cmd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fis\">fis</a>[1] |= (1 << 7);<span class=\"ts\"/><span class=\"comment\">/* bit 7 indicates Command FIS */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fis\">fis</a>[2] = <a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#command\">command</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fis\">fis</a>[3] = <a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#feature\">feature</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fis\">fis</a>[4] = <a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#lbal\">lbal</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fis\">fis</a>[5] = <a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#lbam\">lbam</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fis\">fis</a>[6] = <a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#lbah\">lbah</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fis\">fis</a>[7] = <a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fis\">fis</a>[8] = <a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_lbal\">hob_lbal</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fis\">fis</a>[9] = <a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_lbam\">hob_lbam</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fis\">fis</a>[10] = <a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_lbah\">hob_lbah</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fis\">fis</a>[11] = <a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_feature\">hob_feature</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fis\">fis</a>[12] = <a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#nsect\">nsect</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fis\">fis</a>[13] = <a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_nsect\">hob_nsect</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fis\">fis</a>[14] = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fis\">fis</a>[15] = <a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#ctl\">ctl</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fis\">fis</a>[16] = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fis\">fis</a>[17] = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fis\">fis</a>[18] = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fis\">fis</a>[19] = 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_tf_from_fis - Convert SATA FIS to ATA taskfile</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@fis: Buffer from which data will be input</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tf: Taskfile to output</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Converts a serial ATA FIS structure to a standard ATA taskfile.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#ata_tf_from_fis\">ata_tf_from_fis</a>(const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#fis\">fis</a>, struct <a class=\"id\" href=\"#ata_taskfile\">ata_taskfile</a> *<a class=\"id\" href=\"#tf\">tf</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#command\">command</a><span class=\"ts\"/>= <a class=\"id\" href=\"#fis\">fis</a>[2];<span class=\"ts\"/><span class=\"comment\">/* status */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#feature\">feature</a><span class=\"ts\"/>= <a class=\"id\" href=\"#fis\">fis</a>[3];<span class=\"ts\"/><span class=\"comment\">/* error */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#lbal\">lbal</a><span class=\"ts\"/>= <a class=\"id\" href=\"#fis\">fis</a>[4];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#lbam\">lbam</a><span class=\"ts\"/>= <a class=\"id\" href=\"#fis\">fis</a>[5];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#lbah\">lbah</a><span class=\"ts\"/>= <a class=\"id\" href=\"#fis\">fis</a>[6];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#device\">device</a><span class=\"ts\"/>= <a class=\"id\" href=\"#fis\">fis</a>[7];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_lbal\">hob_lbal</a><span class=\"ts\"/>= <a class=\"id\" href=\"#fis\">fis</a>[8];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_lbam\">hob_lbam</a><span class=\"ts\"/>= <a class=\"id\" href=\"#fis\">fis</a>[9];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_lbah\">hob_lbah</a><span class=\"ts\"/>= <a class=\"id\" href=\"#fis\">fis</a>[10];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#nsect\">nsect</a><span class=\"ts\"/>= <a class=\"id\" href=\"#fis\">fis</a>[12];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#hob_nsect\">hob_nsect</a><span class=\"ts\"/>= <a class=\"id\" href=\"#fis\">fis</a>[13];", 
"}", 
"", 
"static const <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#ata_rw_cmds\">ata_rw_cmds</a>[] = {", 
"<span class=\"ts\"/><span class=\"comment\">/* pio multi */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_CMD_READ_MULTI\">ATA_CMD_READ_MULTI</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_CMD_WRITE_MULTI\">ATA_CMD_WRITE_MULTI</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_CMD_READ_MULTI_EXT\">ATA_CMD_READ_MULTI_EXT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_CMD_WRITE_MULTI_EXT\">ATA_CMD_WRITE_MULTI_EXT</a>,", 
"<span class=\"ts\"/>0,", 
"<span class=\"ts\"/>0,", 
"<span class=\"ts\"/>0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_CMD_WRITE_MULTI_FUA_EXT\">ATA_CMD_WRITE_MULTI_FUA_EXT</a>,", 
"<span class=\"ts\"/><span class=\"comment\">/* pio */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_CMD_PIO_READ\">ATA_CMD_PIO_READ</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_CMD_PIO_WRITE\">ATA_CMD_PIO_WRITE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_CMD_PIO_READ_EXT\">ATA_CMD_PIO_READ_EXT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_CMD_PIO_WRITE_EXT\">ATA_CMD_PIO_WRITE_EXT</a>,", 
"<span class=\"ts\"/>0,", 
"<span class=\"ts\"/>0,", 
"<span class=\"ts\"/>0,", 
"<span class=\"ts\"/>0,", 
"<span class=\"ts\"/><span class=\"comment\">/* dma */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_CMD_READ\">ATA_CMD_READ</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_CMD_WRITE\">ATA_CMD_WRITE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_CMD_READ_EXT\">ATA_CMD_READ_EXT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_CMD_WRITE_EXT\">ATA_CMD_WRITE_EXT</a>,", 
"<span class=\"ts\"/>0,", 
"<span class=\"ts\"/>0,", 
"<span class=\"ts\"/>0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_CMD_WRITE_FUA_EXT\">ATA_CMD_WRITE_FUA_EXT</a>", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_rwcmd_protocol - set taskfile r/w commands and protocol</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tf: command to examine and configure</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: device tf belongs to</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Examine the device configuration and tf-&gt;flags to calculate</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the proper read/write commands and protocol to use.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>caller.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ata_rwcmd_protocol\">ata_rwcmd_protocol</a>(struct <a class=\"id\" href=\"#ata_taskfile\">ata_taskfile</a> *<a class=\"id\" href=\"#tf\">tf</a>, struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#cmd\">cmd</a>;", 
"", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#fua\">fua</a>, <a class=\"id\" href=\"#lba48\">lba48</a>, <a class=\"id\" href=\"#write\">write</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fua\">fua</a> = (<a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_FUA\">ATA_TFLAG_FUA</a>) ? 4 : 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lba48\">lba48</a> = (<a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_LBA48\">ATA_TFLAG_LBA48</a>) ? 2 : 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write\">write</a> = (<a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_TFLAG_WRITE\">ATA_TFLAG_WRITE</a>) ? 1 : 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_DFLAG_PIO\">ATA_DFLAG_PIO</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#ATA_PROT_PIO\">ATA_PROT_PIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#multi_count\">multi_count</a> ? 0 : 8;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#lba48\">lba48</a> && (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_FLAG_PIO_LBA48\">ATA_FLAG_PIO_LBA48</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Unable to use DMA due to host limitation */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#ATA_PROT_PIO\">ATA_PROT_PIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#multi_count\">multi_count</a> ? 0 : 8;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#ATA_PROT_DMA\">ATA_PROT_DMA</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = 16;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a> = <a class=\"id\" href=\"#ata_rw_cmds\">ata_rw_cmds</a>[<a class=\"id\" href=\"#index\">index</a> + <a class=\"id\" href=\"#fua\">fua</a> + <a class=\"id\" href=\"#lba48\">lba48</a> + <a class=\"id\" href=\"#write\">write</a>];", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#command\">command</a> = <a class=\"id\" href=\"#cmd\">cmd</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_tf_read_block - Read block address from ATA taskfile</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tf: ATA taskfile of interest</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: ATA device @tf belongs to</span>", 
];
xr_frag_insert('l/df/308e249a1656e37c36e9d28d9936f894e9191b.xr', __xr_tmp);
