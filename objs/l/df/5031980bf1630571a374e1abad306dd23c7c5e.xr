var __xr_tmp = [
"<span class=\"comment\">/* auditfilter.c -- filtering of audit events</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright 2003-2004 Red Hat, Inc.</span>", 
"<span class=\"comment\"> * Copyright 2005 Hewlett-Packard Development Company, L.P.</span>", 
"<span class=\"comment\"> * Copyright 2005 IBM Corporation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#audit\">audit</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kthread\">kthread</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#namei\">namei</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netlink\">netlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"audit.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Locking model:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * audit_filter_mutex:</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/>Synchronizes writes and blocking reads of audit's filterlist</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/>data.  Rcu is used to traverse the filterlist and access</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/>contents of structs audit_entry, audit_watch and opaque</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/>LSM rules during filtering.  If modified, these structures</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/>must be copied and replace their counterparts in the filterlist.</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/>An audit_parent struct is not accessed during filtering, so may</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/>be written directly provided audit_filter_mutex is held.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* Audit filter lists, defined in &lt;linux/audit.h&gt; */</span>", 
"struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#audit_filter_list\">audit_filter_list</a>[<a class=\"id\" href=\"#AUDIT_NR_FILTERS\">AUDIT_NR_FILTERS</a>] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD_INIT\">LIST_HEAD_INIT</a>(<a class=\"id\" href=\"#audit_filter_list\">audit_filter_list</a>[0]),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD_INIT\">LIST_HEAD_INIT</a>(<a class=\"id\" href=\"#audit_filter_list\">audit_filter_list</a>[1]),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD_INIT\">LIST_HEAD_INIT</a>(<a class=\"id\" href=\"#audit_filter_list\">audit_filter_list</a>[2]),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD_INIT\">LIST_HEAD_INIT</a>(<a class=\"id\" href=\"#audit_filter_list\">audit_filter_list</a>[3]),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD_INIT\">LIST_HEAD_INIT</a>(<a class=\"id\" href=\"#audit_filter_list\">audit_filter_list</a>[4]),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD_INIT\">LIST_HEAD_INIT</a>(<a class=\"id\" href=\"#audit_filter_list\">audit_filter_list</a>[5]),", 
"#if <a class=\"id\" href=\"#AUDIT_NR_FILTERS\">AUDIT_NR_FILTERS</a> != 6", 
"#<a class=\"id\" href=\"#error\">error</a> <a class=\"id\" href=\"#Fix\">Fix</a> <a class=\"id\" href=\"#audit_filter_list\">audit_filter_list</a> <a class=\"id\" href=\"#initialiser\">initialiser</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"static struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#audit_rules_list\">audit_rules_list</a>[<a class=\"id\" href=\"#AUDIT_NR_FILTERS\">AUDIT_NR_FILTERS</a>] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD_INIT\">LIST_HEAD_INIT</a>(<a class=\"id\" href=\"#audit_rules_list\">audit_rules_list</a>[0]),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD_INIT\">LIST_HEAD_INIT</a>(<a class=\"id\" href=\"#audit_rules_list\">audit_rules_list</a>[1]),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD_INIT\">LIST_HEAD_INIT</a>(<a class=\"id\" href=\"#audit_rules_list\">audit_rules_list</a>[2]),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD_INIT\">LIST_HEAD_INIT</a>(<a class=\"id\" href=\"#audit_rules_list\">audit_rules_list</a>[3]),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD_INIT\">LIST_HEAD_INIT</a>(<a class=\"id\" href=\"#audit_rules_list\">audit_rules_list</a>[4]),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD_INIT\">LIST_HEAD_INIT</a>(<a class=\"id\" href=\"#audit_rules_list\">audit_rules_list</a>[5]),", 
"};", 
"", 
"<a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#audit_filter_mutex\">audit_filter_mutex</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#audit_free_rule\">audit_free_rule</a>(struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#e\">e</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_krule\">audit_krule</a> *<a class=\"id\" href=\"#erule\">erule</a> = &amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#rule\">rule</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* some rules don't have associated watches */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#erule\">erule</a>-><a class=\"id\" href=\"#watch\">watch</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_put_watch\">audit_put_watch</a>(<a class=\"id\" href=\"#erule\">erule</a>-><a class=\"id\" href=\"#watch\">watch</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#erule\">erule</a>-><a class=\"id\" href=\"#fields\">fields</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#erule\">erule</a>-><a class=\"id\" href=\"#field_count\">field_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_field\">audit_field</a> *<a class=\"id\" href=\"#f\">f</a> = &amp;<a class=\"id\" href=\"#erule\">erule</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#lsm_str\">lsm_str</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#security_audit_rule_free\">security_audit_rule_free</a>(<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#lsm_rule\">lsm_rule</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#erule\">erule</a>-><a class=\"id\" href=\"#fields\">fields</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#erule\">erule</a>-><a class=\"id\" href=\"#filterkey\">filterkey</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#e\">e</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#audit_free_rule_rcu\">audit_free_rule_rcu</a>(struct <a class=\"id\" href=\"#rcu_head\">rcu_head</a> *<a class=\"id\" href=\"#head\">head</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#head\">head</a>, struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a>, <a class=\"id\" href=\"#rcu\">rcu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_free_rule\">audit_free_rule</a>(<a class=\"id\" href=\"#e\">e</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Initialize an audit filterlist entry. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#audit_init_entry\">audit_init_entry</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#field_count\">field_count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_field\">audit_field</a> *<a class=\"id\" href=\"#fields\">fields</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#entry\">entry</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#entry\">entry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fields\">fields</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#fields\">fields</a>) * <a class=\"id\" href=\"#field_count\">field_count</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#fields\">fields</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#fields\">fields</a> = <a class=\"id\" href=\"#fields\">fields</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#entry\">entry</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Unpack a filter field's string representation from user-space</span>", 
"<span class=\"comment\"> * buffer. */</span>", 
"char *<a class=\"id\" href=\"#audit_unpack_string\">audit_unpack_string</a>(void **<a class=\"id\" href=\"#bufp\">bufp</a>, <a class=\"id\" href=\"#size_t\">size_t</a> *<a class=\"id\" href=\"#remain\">remain</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#str\">str</a>;", 
"", 
"<span class=\"ts\"/>if (!*<a class=\"id\" href=\"#bufp\">bufp</a> || (<a class=\"id\" href=\"#len\">len</a> == 0) || (<a class=\"id\" href=\"#len\">len</a> &gt; *<a class=\"id\" href=\"#remain\">remain</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Of the currently implemented string fields, PATH_MAX</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * defines the longest valid length.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#PATH_MAX\">PATH_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENAMETOOLONG\">ENAMETOOLONG</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#len\">len</a> + 1, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#str\">str</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#str\">str</a>, *<a class=\"id\" href=\"#bufp\">bufp</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a>[<a class=\"id\" href=\"#len\">len</a>] = 0;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#bufp\">bufp</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#remain\">remain</a> -= <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#str\">str</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Translate an inode field to kernel respresentation. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#audit_to_inode\">audit_to_inode</a>(struct <a class=\"id\" href=\"#audit_krule\">audit_krule</a> *<a class=\"id\" href=\"#krule\">krule</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#audit_field\">audit_field</a> *<a class=\"id\" href=\"#f\">f</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#listnr\">listnr</a> != <a class=\"id\" href=\"#AUDIT_FILTER_EXIT\">AUDIT_FILTER_EXIT</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#watch\">watch</a> || <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#inode_f\">inode_f</a> || <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#tree\">tree</a> ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a> != <a class=\"id\" href=\"#Audit_equal\">Audit_equal</a> && <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a> != <a class=\"id\" href=\"#Audit_not_equal\">Audit_not_equal</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#inode_f\">inode_f</a> = <a class=\"id\" href=\"#f\">f</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#__u32\">__u32</a> *<a class=\"id\" href=\"#classes\">classes</a>[<a class=\"id\" href=\"#AUDIT_SYSCALL_CLASSES\">AUDIT_SYSCALL_CLASSES</a>];", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#audit_register_class\">audit_register_class</a>(int <a class=\"id\" href=\"#class\">class</a>, unsigned *<a class=\"id\" href=\"#list\">list</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#AUDIT_BITMASK_SIZE\">AUDIT_BITMASK_SIZE</a> * sizeof(<a class=\"id\" href=\"#__u32\">__u32</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>while (*<a class=\"id\" href=\"#list\">list</a> != ~0U) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#n\">n</a> = *<a class=\"id\" href=\"#list\">list</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a> >= <a class=\"id\" href=\"#AUDIT_BITMASK_SIZE\">AUDIT_BITMASK_SIZE</a> * 32 - <a class=\"id\" href=\"#AUDIT_SYSCALL_CLASSES\">AUDIT_SYSCALL_CLASSES</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>[<a class=\"id\" href=\"#AUDIT_WORD\">AUDIT_WORD</a>(<a class=\"id\" href=\"#n\">n</a>)] |= <a class=\"id\" href=\"#AUDIT_BIT\">AUDIT_BIT</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#class\">class</a> >= <a class=\"id\" href=\"#AUDIT_SYSCALL_CLASSES\">AUDIT_SYSCALL_CLASSES</a> || <a class=\"id\" href=\"#classes\">classes</a>[<a class=\"id\" href=\"#class\">class</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#classes\">classes</a>[<a class=\"id\" href=\"#class\">class</a>] = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#audit_match_class\">audit_match_class</a>(int <a class=\"id\" href=\"#class\">class</a>, unsigned <a class=\"id\" href=\"#syscall\">syscall</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#syscall\">syscall</a> >= <a class=\"id\" href=\"#AUDIT_BITMASK_SIZE\">AUDIT_BITMASK_SIZE</a> * 32))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#class\">class</a> >= <a class=\"id\" href=\"#AUDIT_SYSCALL_CLASSES\">AUDIT_SYSCALL_CLASSES</a> || !<a class=\"id\" href=\"#classes\">classes</a>[<a class=\"id\" href=\"#class\">class</a>]))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#classes\">classes</a>[<a class=\"id\" href=\"#class\">class</a>][<a class=\"id\" href=\"#AUDIT_WORD\">AUDIT_WORD</a>(<a class=\"id\" href=\"#syscall\">syscall</a>)] &amp; <a class=\"id\" href=\"#AUDIT_BIT\">AUDIT_BIT</a>(<a class=\"id\" href=\"#syscall\">syscall</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_AUDITSYSCALL\">CONFIG_AUDITSYSCALL</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#audit_match_class_bits\">audit_match_class_bits</a>(int <a class=\"id\" href=\"#class\">class</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#classes\">classes</a>[<a class=\"id\" href=\"#class\">class</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#AUDIT_BITMASK_SIZE\">AUDIT_BITMASK_SIZE</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mask\">mask</a>[<a class=\"id\" href=\"#i\">i</a>] &amp; <a class=\"id\" href=\"#classes\">classes</a>[<a class=\"id\" href=\"#class\">class</a>][<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#audit_match_signal\">audit_match_signal</a>(struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_field\">audit_field</a> *<a class=\"id\" href=\"#arch\">arch</a> = <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#arch_f\">arch_f</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#arch\">arch</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* When arch is unspecified, we must check both masks on biarch</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * as syscall number alone is ambiguous. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#audit_match_class_bits\">audit_match_class_bits</a>(<a class=\"id\" href=\"#AUDIT_CLASS_SIGNAL\">AUDIT_CLASS_SIGNAL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#mask\">mask</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_match_class_bits\">audit_match_class_bits</a>(<a class=\"id\" href=\"#AUDIT_CLASS_SIGNAL_32\">AUDIT_CLASS_SIGNAL_32</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#mask\">mask</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>switch(<a class=\"id\" href=\"#audit_classify_arch\">audit_classify_arch</a>(<a class=\"id\" href=\"#arch\">arch</a>-><a class=\"id\" href=\"#val\">val</a>)) {", 
"<span class=\"ts\"/>case 0: <span class=\"comment\">/* native */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#audit_match_class_bits\">audit_match_class_bits</a>(<a class=\"id\" href=\"#AUDIT_CLASS_SIGNAL\">AUDIT_CLASS_SIGNAL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#mask\">mask</a>));", 
"<span class=\"ts\"/>case 1: <span class=\"comment\">/* 32bit on biarch */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#audit_match_class_bits\">audit_match_class_bits</a>(<a class=\"id\" href=\"#AUDIT_CLASS_SIGNAL_32\">AUDIT_CLASS_SIGNAL_32</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#mask\">mask</a>));", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* Common user-space to kernel rule translation. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#audit_to_entry_common\">audit_to_entry_common</a>(struct <a class=\"id\" href=\"#audit_rule\">audit_rule</a> *<a class=\"id\" href=\"#rule\">rule</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#listnr\">listnr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#listnr\">listnr</a> = <a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; ~<a class=\"id\" href=\"#AUDIT_FILTER_PREPEND\">AUDIT_FILTER_PREPEND</a>;", 
"<span class=\"ts\"/>switch(<a class=\"id\" href=\"#listnr\">listnr</a>) {", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_err\">exit_err</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_FILTER_USER\">AUDIT_FILTER_USER</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_FILTER_TYPE\">AUDIT_FILTER_TYPE</a>:", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_AUDITSYSCALL\">CONFIG_AUDITSYSCALL</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_FILTER_ENTRY\">AUDIT_FILTER_ENTRY</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_FILTER_EXIT\">AUDIT_FILTER_EXIT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_FILTER_TASK\">AUDIT_FILTER_TASK</a>:", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#action\">action</a> == <a class=\"id\" href=\"#AUDIT_POSSIBLE\">AUDIT_POSSIBLE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"AUDIT_POSSIBLE is deprecated\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_err\">exit_err</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#action\">action</a> != <a class=\"id\" href=\"#AUDIT_NEVER\">AUDIT_NEVER</a> && <a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#action\">action</a> != <a class=\"id\" href=\"#AUDIT_ALWAYS\">AUDIT_ALWAYS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_err\">exit_err</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#field_count\">field_count</a> &gt; <a class=\"id\" href=\"#AUDIT_MAX_FIELDS\">AUDIT_MAX_FIELDS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_err\">exit_err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#audit_init_entry\">audit_init_entry</a>(<a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#field_count\">field_count</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#entry\">entry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_err\">exit_err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#AUDIT_FILTER_PREPEND\">AUDIT_FILTER_PREPEND</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#listnr\">listnr</a> = <a class=\"id\" href=\"#listnr\">listnr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#action\">action</a> = <a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#action\">action</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#field_count\">field_count</a> = <a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#field_count\">field_count</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#AUDIT_BITMASK_SIZE\">AUDIT_BITMASK_SIZE</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#mask\">mask</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#mask\">mask</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#AUDIT_SYSCALL_CLASSES\">AUDIT_SYSCALL_CLASSES</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#bit\">bit</a> = <a class=\"id\" href=\"#AUDIT_BITMASK_SIZE\">AUDIT_BITMASK_SIZE</a> * 32 - <a class=\"id\" href=\"#i\">i</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> *<a class=\"id\" href=\"#p\">p</a> = &amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#mask\">mask</a>[<a class=\"id\" href=\"#AUDIT_WORD\">AUDIT_WORD</a>(<a class=\"id\" href=\"#bit\">bit</a>)];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> *<a class=\"id\" href=\"#class\">class</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(*<a class=\"id\" href=\"#p\">p</a> &amp; <a class=\"id\" href=\"#AUDIT_BIT\">AUDIT_BIT</a>(<a class=\"id\" href=\"#bit\">bit</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a> &= ~<a class=\"id\" href=\"#AUDIT_BIT\">AUDIT_BIT</a>(<a class=\"id\" href=\"#bit\">bit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#class\">class</a> = <a class=\"id\" href=\"#classes\">classes</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#class\">class</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#AUDIT_BITMASK_SIZE\">AUDIT_BITMASK_SIZE</a>; <a class=\"id\" href=\"#j\">j</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#mask\">mask</a>[<a class=\"id\" href=\"#j\">j</a>] |= <a class=\"id\" href=\"#class\">class</a>[<a class=\"id\" href=\"#j\">j</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<a class=\"id\" href=\"#exit_err\">exit_err</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#audit_ops\">audit_ops</a>[] =", 
"{", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#Audit_equal\">Audit_equal</a>] = <a class=\"id\" href=\"#AUDIT_EQUAL\">AUDIT_EQUAL</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#Audit_not_equal\">Audit_not_equal</a>] = <a class=\"id\" href=\"#AUDIT_NOT_EQUAL\">AUDIT_NOT_EQUAL</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#Audit_bitmask\">Audit_bitmask</a>] = <a class=\"id\" href=\"#AUDIT_BIT_MASK\">AUDIT_BIT_MASK</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#Audit_bittest\">Audit_bittest</a>] = <a class=\"id\" href=\"#AUDIT_BIT_TEST\">AUDIT_BIT_TEST</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#Audit_lt\">Audit_lt</a>] = <a class=\"id\" href=\"#AUDIT_LESS_THAN\">AUDIT_LESS_THAN</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#Audit_gt\">Audit_gt</a>] = <a class=\"id\" href=\"#AUDIT_GREATER_THAN\">AUDIT_GREATER_THAN</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#Audit_le\">Audit_le</a>] = <a class=\"id\" href=\"#AUDIT_LESS_THAN_OR_EQUAL\">AUDIT_LESS_THAN_OR_EQUAL</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#Audit_ge\">Audit_ge</a>] = <a class=\"id\" href=\"#AUDIT_GREATER_THAN_OR_EQUAL\">AUDIT_GREATER_THAN_OR_EQUAL</a>,", 
"};", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#audit_to_op\">audit_to_op</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#op\">op</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#Audit_equal\">Audit_equal</a>; <a class=\"id\" href=\"#n\">n</a> &lt; <a class=\"id\" href=\"#Audit_bad\">Audit_bad</a> && <a class=\"id\" href=\"#audit_ops\">audit_ops</a>[<a class=\"id\" href=\"#n\">n</a>] != <a class=\"id\" href=\"#op\">op</a>; <a class=\"id\" href=\"#n\">n</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/* Translate struct audit_rule to kernel's rule respresentation.</span>", 
"<span class=\"comment\"> * Exists for backward compatibility with userspace. */</span>", 
"static struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#audit_rule_to_entry\">audit_rule_to_entry</a>(struct <a class=\"id\" href=\"#audit_rule\">audit_rule</a> *<a class=\"id\" href=\"#rule\">rule</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#audit_to_entry_common\">audit_to_entry_common</a>(<a class=\"id\" href=\"#rule\">rule</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#entry\">entry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_nofree\">exit_nofree</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#field_count\">field_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_field\">audit_field</a> *<a class=\"id\" href=\"#f\">f</a> = &amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>] &amp; (<a class=\"id\" href=\"#AUDIT_NEGATE\">AUDIT_NEGATE</a>|<a class=\"id\" href=\"#AUDIT_OPERATORS\">AUDIT_OPERATORS</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Support for legacy operators where</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * AUDIT_NEGATE bit signifies != and otherwise assumes == */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a> &amp; <a class=\"id\" href=\"#AUDIT_NEGATE\">AUDIT_NEGATE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#Audit_not_equal\">Audit_not_equal</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (!<a class=\"id\" href=\"#n\">n</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#Audit_equal\">Audit_equal</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#audit_to_op\">audit_to_op</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#vers_ops\">vers_ops</a> = (<a class=\"id\" href=\"#n\">n</a> &amp; <a class=\"id\" href=\"#AUDIT_OPERATORS\">AUDIT_OPERATORS</a>) ? 2 : 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>] &amp; ~(<a class=\"id\" href=\"#AUDIT_NEGATE\">AUDIT_NEGATE</a>|<a class=\"id\" href=\"#AUDIT_OPERATORS\">AUDIT_OPERATORS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#values\">values</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#Audit_bad\">Audit_bad</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_free\">exit_free</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch(<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_free\">exit_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_PID\">AUDIT_PID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_UID\">AUDIT_UID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_EUID\">AUDIT_EUID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUID\">AUDIT_SUID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_FSUID\">AUDIT_FSUID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_GID\">AUDIT_GID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_EGID\">AUDIT_EGID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SGID\">AUDIT_SGID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_FSGID\">AUDIT_FSGID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_LOGINUID\">AUDIT_LOGINUID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_PERS\">AUDIT_PERS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_MSGTYPE\">AUDIT_MSGTYPE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_PPID\">AUDIT_PPID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_DEVMAJOR\">AUDIT_DEVMAJOR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_DEVMINOR\">AUDIT_DEVMINOR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_EXIT\">AUDIT_EXIT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUCCESS\">AUDIT_SUCCESS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bit ops are only useful on syscall args */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#Audit_bitmask\">Audit_bitmask</a> || <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#Audit_bittest\">Audit_bittest</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_free\">exit_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_ARG0\">AUDIT_ARG0</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_ARG1\">AUDIT_ARG1</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_ARG2\">AUDIT_ARG2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_ARG3\">AUDIT_ARG3</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* arch is only allowed to be = or != */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_ARCH\">AUDIT_ARCH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a> != <a class=\"id\" href=\"#Audit_not_equal\">Audit_not_equal</a> && <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a> != <a class=\"id\" href=\"#Audit_equal\">Audit_equal</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_free\">exit_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#arch_f\">arch_f</a> = <a class=\"id\" href=\"#f\">f</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_PERM\">AUDIT_PERM</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a> &amp; ~15)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_free\">exit_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_FILETYPE\">AUDIT_FILETYPE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a> &amp; ~<a class=\"id\" href=\"#S_IFMT\">S_IFMT</a>) &gt; <a class=\"id\" href=\"#S_IFMT\">S_IFMT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_free\">exit_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_INODE\">AUDIT_INODE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#audit_to_inode\">audit_to_inode</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>, <a class=\"id\" href=\"#f\">f</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_free\">exit_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#inode_f\">inode_f</a> && <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#inode_f\">inode_f</a>-><a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#Audit_not_equal\">Audit_not_equal</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#inode_f\">inode_f</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<a class=\"id\" href=\"#exit_nofree\">exit_nofree</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<a class=\"id\" href=\"#exit_free\">exit_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_free_rule\">audit_free_rule</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Translate struct audit_rule_data to kernel's rule respresentation. */</span>", 
"static struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#audit_data_to_entry\">audit_data_to_entry</a>(struct <a class=\"id\" href=\"#audit_rule_data\">audit_rule_data</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#datasz\">datasz</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#bufp\">bufp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#remain\">remain</a> = <a class=\"id\" href=\"#datasz\">datasz</a> - sizeof(struct <a class=\"id\" href=\"#audit_rule_data\">audit_rule_data</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#str\">str</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#audit_to_entry_common\">audit_to_entry_common</a>((struct <a class=\"id\" href=\"#audit_rule\">audit_rule</a> *)<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#entry\">entry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_nofree\">exit_nofree</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bufp\">bufp</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#vers_ops\">vers_ops</a> = 2;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#field_count\">field_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_field\">audit_field</a> *<a class=\"id\" href=\"#f\">f</a> = &amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#audit_to_op\">audit_to_op</a>(<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#fieldflags\">fieldflags</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#Audit_bad\">Audit_bad</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_free\">exit_free</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#values\">values</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#lsm_str\">lsm_str</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#lsm_rule\">lsm_rule</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>switch(<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_PID\">AUDIT_PID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_UID\">AUDIT_UID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_EUID\">AUDIT_EUID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUID\">AUDIT_SUID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_FSUID\">AUDIT_FSUID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_GID\">AUDIT_GID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_EGID\">AUDIT_EGID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SGID\">AUDIT_SGID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_FSGID\">AUDIT_FSGID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_LOGINUID\">AUDIT_LOGINUID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_PERS\">AUDIT_PERS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_MSGTYPE\">AUDIT_MSGTYPE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_PPID\">AUDIT_PPID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_DEVMAJOR\">AUDIT_DEVMAJOR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_DEVMINOR\">AUDIT_DEVMINOR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_EXIT\">AUDIT_EXIT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUCCESS\">AUDIT_SUCCESS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_ARG0\">AUDIT_ARG0</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_ARG1\">AUDIT_ARG1</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_ARG2\">AUDIT_ARG2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_ARG3\">AUDIT_ARG3</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_ARCH\">AUDIT_ARCH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#arch_f\">arch_f</a> = <a class=\"id\" href=\"#f\">f</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_USER\">AUDIT_SUBJ_USER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_ROLE\">AUDIT_SUBJ_ROLE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_TYPE\">AUDIT_SUBJ_TYPE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_SEN\">AUDIT_SUBJ_SEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_CLR\">AUDIT_SUBJ_CLR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_USER\">AUDIT_OBJ_USER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_ROLE\">AUDIT_OBJ_ROLE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_TYPE\">AUDIT_OBJ_TYPE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_LEV_LOW\">AUDIT_OBJ_LEV_LOW</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_LEV_HIGH\">AUDIT_OBJ_LEV_HIGH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a> = <a class=\"id\" href=\"#audit_unpack_string\">audit_unpack_string</a>(&amp;<a class=\"id\" href=\"#bufp\">bufp</a>, &amp;<a class=\"id\" href=\"#remain\">remain</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#str\">str</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_free\">exit_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#buflen\">buflen</a> += <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#security_audit_rule_init\">security_audit_rule_init</a>(<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#str\">str</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (void **)&amp;<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#lsm_rule\">lsm_rule</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Keep currently invalid fields around in case they</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * become valid after a policy reload. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"audit rule for LSM \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"\\'%s\\' is invalid\\n\",  <a class=\"id\" href=\"#str\">str</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#str\">str</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_free\">exit_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#lsm_str\">lsm_str</a> = <a class=\"id\" href=\"#str\">str</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_WATCH\">AUDIT_WATCH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a> = <a class=\"id\" href=\"#audit_unpack_string\">audit_unpack_string</a>(&amp;<a class=\"id\" href=\"#bufp\">bufp</a>, &amp;<a class=\"id\" href=\"#remain\">remain</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#str\">str</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_free\">exit_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#buflen\">buflen</a> += <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#audit_to_watch\">audit_to_watch</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>, <a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#str\">str</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_free\">exit_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_DIR\">AUDIT_DIR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a> = <a class=\"id\" href=\"#audit_unpack_string\">audit_unpack_string</a>(&amp;<a class=\"id\" href=\"#bufp\">bufp</a>, &amp;<a class=\"id\" href=\"#remain\">remain</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#str\">str</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_free\">exit_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#buflen\">buflen</a> += <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#audit_make_tree\">audit_make_tree</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>, <a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#str\">str</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_free\">exit_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_INODE\">AUDIT_INODE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#audit_to_inode\">audit_to_inode</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>, <a class=\"id\" href=\"#f\">f</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_free\">exit_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_FILTERKEY\">AUDIT_FILTERKEY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#filterkey\">filterkey</a> || <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a> &gt; <a class=\"id\" href=\"#AUDIT_MAX_KEY_LEN\">AUDIT_MAX_KEY_LEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_free\">exit_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a> = <a class=\"id\" href=\"#audit_unpack_string\">audit_unpack_string</a>(&amp;<a class=\"id\" href=\"#bufp\">bufp</a>, &amp;<a class=\"id\" href=\"#remain\">remain</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#str\">str</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_free\">exit_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#buflen\">buflen</a> += <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#filterkey\">filterkey</a> = <a class=\"id\" href=\"#str\">str</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_PERM\">AUDIT_PERM</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a> &amp; ~15)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_free\">exit_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_FILETYPE\">AUDIT_FILETYPE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a> &amp; ~<a class=\"id\" href=\"#S_IFMT\">S_IFMT</a>) &gt; <a class=\"id\" href=\"#S_IFMT\">S_IFMT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_free\">exit_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_free\">exit_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#inode_f\">inode_f</a> && <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#inode_f\">inode_f</a>-><a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#Audit_not_equal\">Audit_not_equal</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#inode_f\">inode_f</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<a class=\"id\" href=\"#exit_nofree\">exit_nofree</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<a class=\"id\" href=\"#exit_free\">exit_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_free_rule\">audit_free_rule</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Pack a filter field's string representation into data block. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#audit_pack_string\">audit_pack_string</a>(void **<a class=\"id\" href=\"#bufp\">bufp</a>, const char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#str\">str</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(*<a class=\"id\" href=\"#bufp\">bufp</a>, <a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#bufp\">bufp</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Translate kernel rule respresentation to struct audit_rule.</span>", 
"<span class=\"comment\"> * Exists for backward compatibility with userspace. */</span>", 
"static struct <a class=\"id\" href=\"#audit_rule\">audit_rule</a> *<a class=\"id\" href=\"#audit_krule_to_rule\">audit_krule_to_rule</a>(struct <a class=\"id\" href=\"#audit_krule\">audit_krule</a> *<a class=\"id\" href=\"#krule\">krule</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_rule\">audit_rule</a> *<a class=\"id\" href=\"#rule\">rule</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rule\">rule</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#rule\">rule</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#rule\">rule</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#flags\">flags</a> | <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#listnr\">listnr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#action\">action</a> = <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#action\">action</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#field_count\">field_count</a> = <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#field_count\">field_count</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#field_count\">field_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#values\">values</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#type\">type</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#vers_ops\">vers_ops</a> == 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#Audit_not_equal\">Audit_not_equal</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>] |= <a class=\"id\" href=\"#AUDIT_NEGATE\">AUDIT_NEGATE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>] |= <a class=\"id\" href=\"#audit_ops\">audit_ops</a>[<a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#op\">op</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#AUDIT_BITMASK_SIZE\">AUDIT_BITMASK_SIZE</a>; <a class=\"id\" href=\"#i\">i</a>++) <a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#mask\">mask</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#mask\">mask</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rule\">rule</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Translate kernel rule respresentation to struct audit_rule_data. */</span>", 
"static struct <a class=\"id\" href=\"#audit_rule_data\">audit_rule_data</a> *<a class=\"id\" href=\"#audit_krule_to_data\">audit_krule_to_data</a>(struct <a class=\"id\" href=\"#audit_krule\">audit_krule</a> *<a class=\"id\" href=\"#krule\">krule</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_rule_data\">audit_rule_data</a> *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#bufp\">bufp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#data\">data</a>) + <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#buflen\">buflen</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#data\">data</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#data\">data</a>, 0, sizeof(*<a class=\"id\" href=\"#data\">data</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#flags\">flags</a> | <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#listnr\">listnr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#action\">action</a> = <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#action\">action</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#field_count\">field_count</a> = <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#field_count\">field_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bufp\">bufp</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#field_count\">field_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_field\">audit_field</a> *<a class=\"id\" href=\"#f\">f</a> = &amp;<a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#fieldflags\">fieldflags</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#audit_ops\">audit_ops</a>[<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#op\">op</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>switch(<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_USER\">AUDIT_SUBJ_USER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_ROLE\">AUDIT_SUBJ_ROLE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_TYPE\">AUDIT_SUBJ_TYPE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_SEN\">AUDIT_SUBJ_SEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_CLR\">AUDIT_SUBJ_CLR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_USER\">AUDIT_OBJ_USER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_ROLE\">AUDIT_OBJ_ROLE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_TYPE\">AUDIT_OBJ_TYPE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_LEV_LOW\">AUDIT_OBJ_LEV_LOW</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_LEV_HIGH\">AUDIT_OBJ_LEV_HIGH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#buflen\">buflen</a> += <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#values\">values</a>[<a class=\"id\" href=\"#i\">i</a>] =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_pack_string\">audit_pack_string</a>(&amp;<a class=\"id\" href=\"#bufp\">bufp</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#lsm_str\">lsm_str</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_WATCH\">AUDIT_WATCH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#buflen\">buflen</a> += <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#values\">values</a>[<a class=\"id\" href=\"#i\">i</a>] =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_pack_string\">audit_pack_string</a>(&amp;<a class=\"id\" href=\"#bufp\">bufp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#audit_watch_path\">audit_watch_path</a>(<a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#watch\">watch</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_DIR\">AUDIT_DIR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#buflen\">buflen</a> += <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#values\">values</a>[<a class=\"id\" href=\"#i\">i</a>] =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_pack_string\">audit_pack_string</a>(&amp;<a class=\"id\" href=\"#bufp\">bufp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#audit_tree_path\">audit_tree_path</a>(<a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#tree\">tree</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_FILTERKEY\">AUDIT_FILTERKEY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#buflen\">buflen</a> += <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#values\">values</a>[<a class=\"id\" href=\"#i\">i</a>] =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_pack_string\">audit_pack_string</a>(&amp;<a class=\"id\" href=\"#bufp\">bufp</a>, <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#filterkey\">filterkey</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#values\">values</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#AUDIT_BITMASK_SIZE\">AUDIT_BITMASK_SIZE</a>; <a class=\"id\" href=\"#i\">i</a>++) <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#mask\">mask</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#krule\">krule</a>-><a class=\"id\" href=\"#mask\">mask</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#data\">data</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Compare two rules in kernel format.  Considered success if rules</span>", 
"<span class=\"comment\"> * don't match. */</span>", 
"static int <a class=\"id\" href=\"#audit_compare_rule\">audit_compare_rule</a>(struct <a class=\"id\" href=\"#audit_krule\">audit_krule</a> *<a class=\"id\" href=\"#a\">a</a>, struct <a class=\"id\" href=\"#audit_krule\">audit_krule</a> *<a class=\"id\" href=\"#b\">b</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#flags\">flags</a> != <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#flags\">flags</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#listnr\">listnr</a> != <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#listnr\">listnr</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#action\">action</a> != <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#action\">action</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#field_count\">field_count</a> != <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#field_count\">field_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#field_count\">field_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#type\">type</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#op\">op</a> != <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#op\">op</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch(<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_USER\">AUDIT_SUBJ_USER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_ROLE\">AUDIT_SUBJ_ROLE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_TYPE\">AUDIT_SUBJ_TYPE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_SEN\">AUDIT_SUBJ_SEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_CLR\">AUDIT_SUBJ_CLR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_USER\">AUDIT_OBJ_USER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_ROLE\">AUDIT_OBJ_ROLE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_TYPE\">AUDIT_OBJ_TYPE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_LEV_LOW\">AUDIT_OBJ_LEV_LOW</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_LEV_HIGH\">AUDIT_OBJ_LEV_HIGH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#lsm_str\">lsm_str</a>, <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#lsm_str\">lsm_str</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_WATCH\">AUDIT_WATCH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#audit_watch_path\">audit_watch_path</a>(<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#watch\">watch</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#audit_watch_path\">audit_watch_path</a>(<a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#watch\">watch</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_DIR\">AUDIT_DIR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#audit_tree_path\">audit_tree_path</a>(<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#tree\">tree</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#audit_tree_path\">audit_tree_path</a>(<a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tree\">tree</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_FILTERKEY\">AUDIT_FILTERKEY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* both filterkeys exist based on above type compare */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#filterkey\">filterkey</a>, <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#filterkey\">filterkey</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#val\">val</a> != <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#val\">val</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#AUDIT_BITMASK_SIZE\">AUDIT_BITMASK_SIZE</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#mask\">mask</a>[<a class=\"id\" href=\"#i\">i</a>] != <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#mask\">mask</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Duplicate LSM field information.  The lsm_rule is opaque, so must be</span>", 
"<span class=\"comment\"> * re-initialized. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#audit_dupe_lsm_field\">audit_dupe_lsm_field</a>(struct <a class=\"id\" href=\"#audit_field\">audit_field</a> *<a class=\"id\" href=\"#df\">df</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#audit_field\">audit_field</a> *<a class=\"id\" href=\"#sf\">sf</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#lsm_str\">lsm_str</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* our own copy of lsm_str */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lsm_str\">lsm_str</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#sf\">sf</a>-><a class=\"id\" href=\"#lsm_str\">lsm_str</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#lsm_str\">lsm_str</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#df\">df</a>-><a class=\"id\" href=\"#lsm_str\">lsm_str</a> = <a class=\"id\" href=\"#lsm_str\">lsm_str</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* our own (refreshed) copy of lsm_rule */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#security_audit_rule_init\">security_audit_rule_init</a>(<a class=\"id\" href=\"#df\">df</a>-><a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#df\">df</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#df\">df</a>-><a class=\"id\" href=\"#lsm_str\">lsm_str</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (void **)&amp;<a class=\"id\" href=\"#df\">df</a>-><a class=\"id\" href=\"#lsm_rule\">lsm_rule</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Keep currently invalid fields around in case they</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * become valid after a policy reload. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"audit rule for LSM \\'%s\\' is \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"invalid\\n\", <a class=\"id\" href=\"#df\">df</a>-><a class=\"id\" href=\"#lsm_str\">lsm_str</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Duplicate an audit rule.  This will be a deep copy with the exception</span>", 
"<span class=\"comment\"> * of the watch - that pointer is carried over.  The LSM specific fields</span>", 
"<span class=\"comment\"> * will be updated in the copy.  The point is to be able to replace the old</span>", 
"<span class=\"comment\"> * rule with the new rule in the filterlist, then free the old rule.</span>", 
"<span class=\"comment\"> * The rlist element is undefined; list manipulations are handled apart from</span>", 
"<span class=\"comment\"> * the initial copy. */</span>", 
"struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#audit_dupe_rule\">audit_dupe_rule</a>(struct <a class=\"id\" href=\"#audit_krule\">audit_krule</a> *<a class=\"id\" href=\"#old\">old</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#fcount\">fcount</a> = <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#field_count\">field_count</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_krule\">audit_krule</a> *<a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#fk\">fk</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#audit_init_entry\">audit_init_entry</a>(<a class=\"id\" href=\"#fcount\">fcount</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#entry\">entry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> = &amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#vers_ops\">vers_ops</a> = <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#vers_ops\">vers_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#listnr\">listnr</a> = <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#listnr\">listnr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#action\">action</a> = <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#action\">action</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#AUDIT_BITMASK_SIZE\">AUDIT_BITMASK_SIZE</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#mask\">mask</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#mask\">mask</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#prio\">prio</a> = <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#prio\">prio</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#buflen\">buflen</a> = <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#buflen\">buflen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#inode_f\">inode_f</a> = <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#inode_f\">inode_f</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#field_count\">field_count</a> = <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#field_count\">field_count</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * note that we are OK with not refcounting here; audit_match_tree()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * never dereferences tree and we can't get false positives there</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * since we'd have to have rule gone from the list *and* removed</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * before the chunks found by lookup had been allocated, i.e. before</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the beginning of list scan.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#tree\">tree</a> = <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#tree\">tree</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#fields\">fields</a>, <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#fields\">fields</a>, sizeof(struct <a class=\"id\" href=\"#audit_field\">audit_field</a>) * <a class=\"id\" href=\"#fcount\">fcount</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* deep copy this information, updating the lsm_rule fields, because</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the originals will all be freed when the old rule is freed. */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#fcount\">fcount</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_USER\">AUDIT_SUBJ_USER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_ROLE\">AUDIT_SUBJ_ROLE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_TYPE\">AUDIT_SUBJ_TYPE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_SEN\">AUDIT_SUBJ_SEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SUBJ_CLR\">AUDIT_SUBJ_CLR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_USER\">AUDIT_OBJ_USER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_ROLE\">AUDIT_OBJ_ROLE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_TYPE\">AUDIT_OBJ_TYPE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_LEV_LOW\">AUDIT_OBJ_LEV_LOW</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_OBJ_LEV_HIGH\">AUDIT_OBJ_LEV_HIGH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#audit_dupe_lsm_field\">audit_dupe_lsm_field</a>(&amp;<a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#fields\">fields</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_FILTERKEY\">AUDIT_FILTERKEY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fk\">fk</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#filterkey\">filterkey</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#fk\">fk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#filterkey\">filterkey</a> = <a class=\"id\" href=\"#fk\">fk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_free_rule\">audit_free_rule</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#watch\">watch</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_get_watch\">audit_get_watch</a>(<a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#watch\">watch</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#watch\">watch</a> = <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#watch\">watch</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#entry\">entry</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Find an existing audit rule.</span>", 
"<span class=\"comment\"> * Caller must hold audit_filter_mutex to prevent stale rule data. */</span>", 
"static struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#audit_find_rule\">audit_find_rule</a>(struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#list_head\">list_head</a> **<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#e\">e</a>, *<a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#h\">h</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#inode_f\">inode_f</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#audit_hash_ino\">audit_hash_ino</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#inode_f\">inode_f</a>-><a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#list\">list</a> = &amp;<a class=\"id\" href=\"#audit_inode_hash\">audit_inode_hash</a>[<a class=\"id\" href=\"#h\">h</a>];", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#watch\">watch</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* we don't know the inode number, so must walk entire hash */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#h\">h</a> = 0; <a class=\"id\" href=\"#h\">h</a> &lt; <a class=\"id\" href=\"#AUDIT_INODE_BUCKETS\">AUDIT_INODE_BUCKETS</a>; <a class=\"id\" href=\"#h\">h</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a> = &amp;<a class=\"id\" href=\"#audit_inode_hash\">audit_inode_hash</a>[<a class=\"id\" href=\"#h\">h</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#audit_compare_rule\">audit_compare_rule</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>, &amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#rule\">rule</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#list\">list</a> = &amp;<a class=\"id\" href=\"#audit_filter_list\">audit_filter_list</a>[<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#listnr\">listnr</a>];", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#audit_compare_rule\">audit_compare_rule</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>, &amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#rule\">rule</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#found\">found</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#prio_low\">prio_low</a> = ~0ULL/2;", 
"static <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#prio_high\">prio_high</a> = ~0ULL/2 - 1;", 
"", 
"<span class=\"comment\">/* Add rule to given filterlist if not a duplicate. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#audit_add_rule\">audit_add_rule</a>(struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_watch\">audit_watch</a> *<a class=\"id\" href=\"#watch\">watch</a> = <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#watch\">watch</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_tree\">audit_tree</a> *<a class=\"id\" href=\"#tree\">tree</a> = <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#tree\">tree</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_AUDITSYSCALL\">CONFIG_AUDITSYSCALL</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#dont_count\">dont_count</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If either of these, don't count towards total */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#listnr\">listnr</a> == <a class=\"id\" href=\"#AUDIT_FILTER_USER\">AUDIT_FILTER_USER</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#listnr\">listnr</a> == <a class=\"id\" href=\"#AUDIT_FILTER_TYPE\">AUDIT_FILTER_TYPE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dont_count\">dont_count</a> = 1;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#audit_filter_mutex\">audit_filter_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#audit_find_rule\">audit_find_rule</a>(<a class=\"id\" href=\"#entry\">entry</a>, &amp;<a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#audit_filter_mutex\">audit_filter_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* normally audit_add_tree_rule() will free it on failure */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tree\">tree</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_put_tree\">audit_put_tree</a>(<a class=\"id\" href=\"#tree\">tree</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#watch\">watch</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* audit_filter_mutex is dropped and re-taken during this call */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#audit_add_watch\">audit_add_watch</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>, &amp;<a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#audit_filter_mutex\">audit_filter_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tree\">tree</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#audit_add_tree_rule\">audit_add_tree_rule</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#audit_filter_mutex\">audit_filter_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#prio\">prio</a> = ~0ULL;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#listnr\">listnr</a> == <a class=\"id\" href=\"#AUDIT_FILTER_EXIT\">AUDIT_FILTER_EXIT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#AUDIT_FILTER_PREPEND\">AUDIT_FILTER_PREPEND</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#prio\">prio</a> = ++<a class=\"id\" href=\"#prio_high\">prio_high</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#prio\">prio</a> = --<a class=\"id\" href=\"#prio_low\">prio_low</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#AUDIT_FILTER_PREPEND\">AUDIT_FILTER_PREPEND</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#list\">list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#audit_rules_list\">audit_rules_list</a>[<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#listnr\">listnr</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_rcu\">list_add_rcu</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#AUDIT_FILTER_PREPEND\">AUDIT_FILTER_PREPEND</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#list\">list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#audit_rules_list\">audit_rules_list</a>[<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#listnr\">listnr</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail_rcu\">list_add_tail_rcu</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_AUDITSYSCALL\">CONFIG_AUDITSYSCALL</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dont_count\">dont_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_n_rules\">audit_n_rules</a>++;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#audit_match_signal\">audit_match_signal</a>(<a class=\"id\" href=\"#entry\">entry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_signals\">audit_signals</a>++;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#audit_filter_mutex\">audit_filter_mutex</a>);", 
"", 
" <span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#watch\">watch</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_put_watch\">audit_put_watch</a>(<a class=\"id\" href=\"#watch\">watch</a>); <span class=\"comment\">/* tmp watch, matches initial get */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Remove an existing rule from filterlist. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#audit_del_rule\">audit_del_rule</a>(struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_entry\">audit_entry</a>  *<a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_watch\">audit_watch</a> *<a class=\"id\" href=\"#watch\">watch</a> = <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#watch\">watch</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_tree\">audit_tree</a> *<a class=\"id\" href=\"#tree\">tree</a> = <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#tree\">tree</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_AUDITSYSCALL\">CONFIG_AUDITSYSCALL</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#dont_count\">dont_count</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If either of these, don't count towards total */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#listnr\">listnr</a> == <a class=\"id\" href=\"#AUDIT_FILTER_USER\">AUDIT_FILTER_USER</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#listnr\">listnr</a> == <a class=\"id\" href=\"#AUDIT_FILTER_TYPE\">AUDIT_FILTER_TYPE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dont_count\">dont_count</a> = 1;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#audit_filter_mutex\">audit_filter_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#audit_find_rule\">audit_find_rule</a>(<a class=\"id\" href=\"#entry\">entry</a>, &amp;<a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#e\">e</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#audit_filter_mutex\">audit_filter_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#watch\">watch</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_remove_watch_rule\">audit_remove_watch_rule</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#rule\">rule</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#tree\">tree</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_remove_tree_rule\">audit_remove_tree_rule</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#rule\">rule</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del_rcu\">list_del_rcu</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#rule\">rule</a>.<a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call_rcu\">call_rcu</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#rcu\">rcu</a>, <a class=\"id\" href=\"#audit_free_rule_rcu\">audit_free_rule_rcu</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_AUDITSYSCALL\">CONFIG_AUDITSYSCALL</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dont_count\">dont_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_n_rules\">audit_n_rules</a>--;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#audit_match_signal\">audit_match_signal</a>(<a class=\"id\" href=\"#entry\">entry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_signals\">audit_signals</a>--;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#audit_filter_mutex\">audit_filter_mutex</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#watch\">watch</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_put_watch\">audit_put_watch</a>(<a class=\"id\" href=\"#watch\">watch</a>); <span class=\"comment\">/* match initial get */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tree\">tree</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_put_tree\">audit_put_tree</a>(<a class=\"id\" href=\"#tree\">tree</a>);<span class=\"ts\"/><span class=\"comment\">/* that's the temporary one */</span>", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/* List rules using struct audit_rule.  Exists for backward</span>", 
"<span class=\"comment\"> * compatibility with userspace. */</span>", 
"static void <a class=\"id\" href=\"#audit_list\">audit_list</a>(int <a class=\"id\" href=\"#pid\">pid</a>, int <a class=\"id\" href=\"#seq\">seq</a>, struct <a class=\"id\" href=\"#sk_buff_head\">sk_buff_head</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_krule\">audit_krule</a> *<a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This is a blocking read, so use audit_filter_mutex instead of rcu</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * iterator to sync with list writers. */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=0; <a class=\"id\" href=\"#i\">i</a>&lt;<a class=\"id\" href=\"#AUDIT_NR_FILTERS\">AUDIT_NR_FILTERS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#r\">r</a>, &amp;<a class=\"id\" href=\"#audit_rules_list\">audit_rules_list</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_rule\">audit_rule</a> *<a class=\"id\" href=\"#rule\">rule</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rule\">rule</a> = <a class=\"id\" href=\"#audit_krule_to_rule\">audit_krule_to_rule</a>(<a class=\"id\" href=\"#r\">r</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#rule\">rule</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#audit_make_reply\">audit_make_reply</a>(<a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#AUDIT_LIST\">AUDIT_LIST</a>, 0, 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#rule\">rule</a>, sizeof(*<a class=\"id\" href=\"#rule\">rule</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_tail\">skb_queue_tail</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#rule\">rule</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#audit_make_reply\">audit_make_reply</a>(<a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#AUDIT_LIST\">AUDIT_LIST</a>, 1, 1, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_tail\">skb_queue_tail</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"<span class=\"comment\">/* List rules using struct audit_rule_data. */</span>", 
"static void <a class=\"id\" href=\"#audit_list_rules\">audit_list_rules</a>(int <a class=\"id\" href=\"#pid\">pid</a>, int <a class=\"id\" href=\"#seq\">seq</a>, struct <a class=\"id\" href=\"#sk_buff_head\">sk_buff_head</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_krule\">audit_krule</a> *<a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This is a blocking read, so use audit_filter_mutex instead of rcu</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * iterator to sync with list writers. */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=0; <a class=\"id\" href=\"#i\">i</a>&lt;<a class=\"id\" href=\"#AUDIT_NR_FILTERS\">AUDIT_NR_FILTERS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#r\">r</a>, &amp;<a class=\"id\" href=\"#audit_rules_list\">audit_rules_list</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_rule_data\">audit_rule_data</a> *<a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#audit_krule_to_data\">audit_krule_to_data</a>(<a class=\"id\" href=\"#r\">r</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#data\">data</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#audit_make_reply\">audit_make_reply</a>(<a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#AUDIT_LIST_RULES\">AUDIT_LIST_RULES</a>, 0, 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#data\">data</a>, sizeof(*<a class=\"id\" href=\"#data\">data</a>) + <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#buflen\">buflen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_tail\">skb_queue_tail</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#data\">data</a>);", 
];
xr_frag_insert('l/df/5031980bf1630571a374e1abad306dd23c7c5e.xr', __xr_tmp);
