var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>connector.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * 2004+ Copyright (c) Evgeniy Polyakov &lt;zbr@ioremap.net&gt;</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netlink\">netlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#moduleparam\">moduleparam</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#connector\">connector</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"Evgeniy Polyakov <zbr@ioremap.net>\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"Generic userspace <-> kernelspace connector.\");", 
"", 
"static struct <a class=\"id\" href=\"#cn_dev\">cn_dev</a> <a class=\"id\" href=\"#cdev\">cdev</a>;", 
"", 
"static int <a class=\"id\" href=\"#cn_already_initialized\">cn_already_initialized</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * msg-&gt;seq and msg-&gt;ack are used to determine message genealogy.</span>", 
"<span class=\"comment\"> * When someone sends message it puts there locally unique sequence</span>", 
"<span class=\"comment\"> * and random acknowledge numbers.  Sequence number may be copied into</span>", 
"<span class=\"comment\"> * nlmsghdr-&gt;nlmsg_seq too.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Sequence number is incremented with each message to be sent.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If we expect reply to our message then the sequence number in</span>", 
"<span class=\"comment\"> * received message MUST be the same as in original message, and</span>", 
"<span class=\"comment\"> * acknowledge number MUST be the same + 1.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If we receive a message and its sequence number is not equal to the</span>", 
"<span class=\"comment\"> * one we are expecting then it is a new message.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If we receive a message and its sequence number is the same as one</span>", 
"<span class=\"comment\"> * we are expecting but it's acknowledgement number is not equal to</span>", 
"<span class=\"comment\"> * the acknowledgement number in the original message + 1, then it is</span>", 
"<span class=\"comment\"> * a new message.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#cn_netlink_send\">cn_netlink_send</a>(struct <a class=\"id\" href=\"#cn_msg\">cn_msg</a> *<a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__group\">__group</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cn_callback_entry\">cn_callback_entry</a> *<a class=\"id\" href=\"#__cbq\">__cbq</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cn_msg\">cn_msg</a> *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cn_dev\">cn_dev</a> *<a class=\"id\" href=\"#dev\">dev</a> = &amp;<a class=\"id\" href=\"#cdev\">cdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#group\">group</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#found\">found</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#__group\">__group</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cbdev\">cbdev</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#__cbq\">__cbq</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cbdev\">cbdev</a>-><a class=\"id\" href=\"#queue_list\">queue_list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#callback_entry\">callback_entry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cn_cb_equal\">cn_cb_equal</a>(&amp;<a class=\"id\" href=\"#__cbq\">__cbq</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#id\">id</a>, &amp;<a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#id\">id</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#__cbq\">__cbq</a>-><a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cbdev\">cbdev</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#found\">found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#__group\">__group</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#netlink_has_listeners\">netlink_has_listeners</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#nls\">nls</a>, <a class=\"id\" href=\"#group\">group</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#NLMSG_SPACE\">NLMSG_SPACE</a>(sizeof(*<a class=\"id\" href=\"#msg\">msg</a>) + <a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#alloc_skb\">alloc_skb</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a> = <a class=\"id\" href=\"#NLMSG_PUT\">NLMSG_PUT</a>(<a class=\"id\" href=\"#skb\">skb</a>, 0, <a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#NLMSG_DONE\">NLMSG_DONE</a>, <a class=\"id\" href=\"#size\">size</a> - sizeof(*<a class=\"id\" href=\"#nlh\">nlh</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#NLMSG_DATA\">NLMSG_DATA</a>(<a class=\"id\" href=\"#nlh\">nlh</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#msg\">msg</a>, sizeof(*<a class=\"id\" href=\"#data\">data</a>) + <a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NETLINK_CB\">NETLINK_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>).<a class=\"id\" href=\"#dst_group\">dst_group</a> = <a class=\"id\" href=\"#group\">group</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#netlink_broadcast\">netlink_broadcast</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#nls\">nls</a>, <a class=\"id\" href=\"#skb\">skb</a>, 0, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"", 
"<a class=\"id\" href=\"#nlmsg_failure\">nlmsg_failure</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#cn_netlink_send\">cn_netlink_send</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Callback helper - queues work and setup destructor for given data.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#cn_call_callback\">cn_call_callback</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cn_callback_entry\">cn_callback_entry</a> *<a class=\"id\" href=\"#__cbq\">__cbq</a>, *<a class=\"id\" href=\"#__new_cbq\">__new_cbq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cn_dev\">cn_dev</a> *<a class=\"id\" href=\"#dev\">dev</a> = &amp;<a class=\"id\" href=\"#cdev\">cdev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cn_msg\">cn_msg</a> *<a class=\"id\" href=\"#msg\">msg</a> = <a class=\"id\" href=\"#NLMSG_DATA\">NLMSG_DATA</a>(<a class=\"id\" href=\"#nlmsg_hdr\">nlmsg_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cbdev\">cbdev</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#__cbq\">__cbq</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cbdev\">cbdev</a>-><a class=\"id\" href=\"#queue_list\">queue_list</a>, <a class=\"id\" href=\"#callback_entry\">callback_entry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cn_cb_equal\">cn_cb_equal</a>(&amp;<a class=\"id\" href=\"#__cbq\">__cbq</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#id\">id</a>, &amp;<a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#id\">id</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(!<a class=\"id\" href=\"#work_pending\">work_pending</a>(&amp;<a class=\"id\" href=\"#__cbq\">__cbq</a>-><a class=\"id\" href=\"#work\">work</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cbq\">__cbq</a>-><a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#skb\">skb</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cbq\">__cbq</a>-><a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb\">skb</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#queue_cn_work\">queue_cn_work</a>(<a class=\"id\" href=\"#__cbq\">__cbq</a>, &amp;<a class=\"id\" href=\"#__cbq\">__cbq</a>-><a class=\"id\" href=\"#work\">work</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cn_callback_data\">cn_callback_data</a> *<a class=\"id\" href=\"#d\">d</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__new_cbq\">__new_cbq</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#cn_callback_entry\">cn_callback_entry</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__new_cbq\">__new_cbq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a> = &amp;<a class=\"id\" href=\"#__new_cbq\">__new_cbq</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a>-><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a>-><a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#__cbq\">__cbq</a>-><a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#callback\">callback</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a>-><a class=\"id\" href=\"#free\">free</a> = <a class=\"id\" href=\"#__new_cbq\">__new_cbq</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__new_cbq\">__new_cbq</a>-><a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#__cbq\">__cbq</a>-><a class=\"id\" href=\"#pdev\">pdev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#__new_cbq\">__new_cbq</a>-><a class=\"id\" href=\"#work\">work</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#cn_queue_wrapper\">cn_queue_wrapper</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#queue_cn_work\">queue_cn_work</a>(<a class=\"id\" href=\"#__new_cbq\">__new_cbq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#__new_cbq\">__new_cbq</a>-><a class=\"id\" href=\"#work\">work</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#__new_cbq\">__new_cbq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cbdev\">cbdev</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Main netlink receiving function.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * It checks skb, netlink header and msg sizes, and calls callback helper.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#cn_rx_skb\">cn_rx_skb</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#__skb\">__skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_get\">skb_get</a>(<a class=\"id\" href=\"#__skb\">__skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> >= <a class=\"id\" href=\"#NLMSG_SPACE\">NLMSG_SPACE</a>(0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a> = <a class=\"id\" href=\"#nlmsg_hdr\">nlmsg_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_len\">nlmsg_len</a> &lt; sizeof(struct <a class=\"id\" href=\"#cn_msg\">cn_msg</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_len\">nlmsg_len</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_len\">nlmsg_len</a> &gt; <a class=\"id\" href=\"#CONNECTOR_MAX_MSG_SIZE\">CONNECTOR_MAX_MSG_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#cn_call_callback\">cn_call_callback</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Callback add routing - adds callback with given ID and name.</span>", 
"<span class=\"comment\"> * If there is registered callback with the same ID it will not be added.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * May sleep.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#cn_add_callback\">cn_add_callback</a>(struct <a class=\"id\" href=\"#cb_id\">cb_id</a> *<a class=\"id\" href=\"#id\">id</a>, char *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    void (*<a class=\"id\" href=\"#callback\">callback</a>)(struct <a class=\"id\" href=\"#cn_msg\">cn_msg</a> *, struct <a class=\"id\" href=\"#netlink_skb_parms\">netlink_skb_parms</a> *))", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cn_dev\">cn_dev</a> *<a class=\"id\" href=\"#dev\">dev</a> = &amp;<a class=\"id\" href=\"#cdev\">cdev</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cn_already_initialized\">cn_already_initialized</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#cn_queue_add_callback\">cn_queue_add_callback</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cbdev\">cbdev</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#callback\">callback</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#cn_add_callback\">cn_add_callback</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Callback remove routing - removes callback</span>", 
"<span class=\"comment\"> * with given ID.</span>", 
"<span class=\"comment\"> * If there is no registered callback with given</span>", 
"<span class=\"comment\"> * ID nothing happens.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * May sleep while waiting for reference counter to become zero.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#cn_del_callback\">cn_del_callback</a>(struct <a class=\"id\" href=\"#cb_id\">cb_id</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cn_dev\">cn_dev</a> *<a class=\"id\" href=\"#dev\">dev</a> = &amp;<a class=\"id\" href=\"#cdev\">cdev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cn_queue_del_callback\">cn_queue_del_callback</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cbdev\">cbdev</a>, <a class=\"id\" href=\"#id\">id</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#cn_del_callback\">cn_del_callback</a>);", 
"", 
"static int <a class=\"id\" href=\"#cn_proc_show\">cn_proc_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cn_queue_dev\">cn_queue_dev</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#cdev\">cdev</a>.<a class=\"id\" href=\"#cbdev\">cbdev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cn_callback_entry\">cn_callback_entry</a> *<a class=\"id\" href=\"#cbq\">cbq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"Name            ID\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#cbq\">cbq</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#queue_list\">queue_list</a>, <a class=\"id\" href=\"#callback_entry\">callback_entry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%-15s %u:%u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#cbq\">cbq</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#cbq\">cbq</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#idx\">idx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#cbq\">cbq</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cn_proc_open\">cn_proc_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#single_open\">single_open</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#cn_proc_show\">cn_proc_show</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#cn_file_ops\">cn_file_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a>   = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a>    = <a class=\"id\" href=\"#cn_proc_open\">cn_proc_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a>    = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a>  = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#single_release\">single_release</a>", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__devinit\">__devinit</a> <a class=\"id\" href=\"#cn_init\">cn_init</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cn_dev\">cn_dev</a> *<a class=\"id\" href=\"#dev\">dev</a> = &amp;<a class=\"id\" href=\"#cdev\">cdev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#input\">input</a> = <a class=\"id\" href=\"#cn_rx_skb\">cn_rx_skb</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#nls\">nls</a> = <a class=\"id\" href=\"#netlink_kernel_create\">netlink_kernel_create</a>(&amp;<a class=\"id\" href=\"#init_net\">init_net</a>, <a class=\"id\" href=\"#NETLINK_CONNECTOR\">NETLINK_CONNECTOR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#CN_NETLINK_USERS\">CN_NETLINK_USERS</a> + 0xf,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#input\">input</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#nls\">nls</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cbdev\">cbdev</a> = <a class=\"id\" href=\"#cn_queue_alloc_dev\">cn_queue_alloc_dev</a>(\"cqueue\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#nls\">nls</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cbdev\">cbdev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlink_kernel_release\">netlink_kernel_release</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#nls\">nls</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cn_already_initialized\">cn_already_initialized</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_net_fops_create\">proc_net_fops_create</a>(&amp;<a class=\"id\" href=\"#init_net\">init_net</a>, \"connector\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, &amp;<a class=\"id\" href=\"#cn_file_ops\">cn_file_ops</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__devexit\">__devexit</a> <a class=\"id\" href=\"#cn_fini\">cn_fini</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cn_dev\">cn_dev</a> *<a class=\"id\" href=\"#dev\">dev</a> = &amp;<a class=\"id\" href=\"#cdev\">cdev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cn_already_initialized\">cn_already_initialized</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_net_remove\">proc_net_remove</a>(&amp;<a class=\"id\" href=\"#init_net\">init_net</a>, \"connector\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cn_queue_free_dev\">cn_queue_free_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cbdev\">cbdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_kernel_release\">netlink_kernel_release</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#nls\">nls</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#subsys_initcall\">subsys_initcall</a>(<a class=\"id\" href=\"#cn_init\">cn_init</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#cn_fini\">cn_fini</a>);", 
];
xr_frag_insert('l/df/61c44004ce8de6582bcececa199c1bcd7a94d4.xr', __xr_tmp);
