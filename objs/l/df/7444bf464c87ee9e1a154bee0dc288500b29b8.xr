var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Implementation of the policy database.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Author : Stephen Smalley, &lt;sds@epoch.ncsc.mil&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Updated: Trusted Computer Solutions, Inc. &lt;dgoeddel@trustedcs.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Support for enhanced MLS infrastructure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Updated: Frank Mayer &lt;mayerf@tresys.com&gt; and Karl MacMillan &lt;kmacmillan@tresys.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Added conditional policy language extensions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Updated: Hewlett-Packard &lt;paul.moore@hp.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *      Added support for the policy capability bitmap</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2007 Hewlett-Packard Development Company, L.P.</span>", 
"<span class=\"comment\"> * Copyright (C) 2004-2005 Trusted Computer Solutions, Inc.</span>", 
"<span class=\"comment\"> * Copyright (C) 2003 - 2004 Tresys Technology, LLC</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the Free Software Foundation, version 2.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#audit\">audit</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#flex_array\">flex_array</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"security.h\"", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"policydb.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"conditional.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"mls.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_DEBUG_HASHES\">_DEBUG_HASHES</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#DEBUG_HASHES\">DEBUG_HASHES</a>", 
"static const char *<a class=\"id\" href=\"#symtab_name\">symtab_name</a>[<a class=\"id\" href=\"#SYM_NUM\">SYM_NUM</a>] = {", 
"<span class=\"ts\"/>\"common prefixes\",", 
"<span class=\"ts\"/>\"classes\",", 
"<span class=\"ts\"/>\"roles\",", 
"<span class=\"ts\"/>\"types\",", 
"<span class=\"ts\"/>\"users\",", 
"<span class=\"ts\"/>\"bools\",", 
"<span class=\"ts\"/>\"levels\",", 
"<span class=\"ts\"/>\"categories\",", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static unsigned int <a class=\"id\" href=\"#symtab_sizes\">symtab_sizes</a>[<a class=\"id\" href=\"#SYM_NUM\">SYM_NUM</a>] = {", 
"<span class=\"ts\"/>2,", 
"<span class=\"ts\"/>32,", 
"<span class=\"ts\"/>16,", 
"<span class=\"ts\"/>512,", 
"<span class=\"ts\"/>128,", 
"<span class=\"ts\"/>16,", 
"<span class=\"ts\"/>16,", 
"<span class=\"ts\"/>16,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#policydb_compat_info\">policydb_compat_info</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#version\">version</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#sym_num\">sym_num</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ocon_num\">ocon_num</a>;", 
"};", 
"", 
"<span class=\"comment\">/* These need to be updated if SYM_NUM or OCON_NUM changes */</span>", 
"static struct <a class=\"id\" href=\"#policydb_compat_info\">policydb_compat_info</a> <a class=\"id\" href=\"#policydb_compat\">policydb_compat</a>[] = {", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#version\">version</a><span class=\"ts\"/>= <a class=\"id\" href=\"#POLICYDB_VERSION_BASE\">POLICYDB_VERSION_BASE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#sym_num\">sym_num</a><span class=\"ts\"/>= <a class=\"id\" href=\"#SYM_NUM\">SYM_NUM</a> - 3,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ocon_num\">ocon_num</a><span class=\"ts\"/>= <a class=\"id\" href=\"#OCON_NUM\">OCON_NUM</a> - 1,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#version\">version</a><span class=\"ts\"/>= <a class=\"id\" href=\"#POLICYDB_VERSION_BOOL\">POLICYDB_VERSION_BOOL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#sym_num\">sym_num</a><span class=\"ts\"/>= <a class=\"id\" href=\"#SYM_NUM\">SYM_NUM</a> - 2,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ocon_num\">ocon_num</a><span class=\"ts\"/>= <a class=\"id\" href=\"#OCON_NUM\">OCON_NUM</a> - 1,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#version\">version</a><span class=\"ts\"/>= <a class=\"id\" href=\"#POLICYDB_VERSION_IPV6\">POLICYDB_VERSION_IPV6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#sym_num\">sym_num</a><span class=\"ts\"/>= <a class=\"id\" href=\"#SYM_NUM\">SYM_NUM</a> - 2,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ocon_num\">ocon_num</a><span class=\"ts\"/>= <a class=\"id\" href=\"#OCON_NUM\">OCON_NUM</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#version\">version</a><span class=\"ts\"/>= <a class=\"id\" href=\"#POLICYDB_VERSION_NLCLASS\">POLICYDB_VERSION_NLCLASS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#sym_num\">sym_num</a><span class=\"ts\"/>= <a class=\"id\" href=\"#SYM_NUM\">SYM_NUM</a> - 2,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ocon_num\">ocon_num</a><span class=\"ts\"/>= <a class=\"id\" href=\"#OCON_NUM\">OCON_NUM</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#version\">version</a><span class=\"ts\"/>= <a class=\"id\" href=\"#POLICYDB_VERSION_MLS\">POLICYDB_VERSION_MLS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#sym_num\">sym_num</a><span class=\"ts\"/>= <a class=\"id\" href=\"#SYM_NUM\">SYM_NUM</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ocon_num\">ocon_num</a><span class=\"ts\"/>= <a class=\"id\" href=\"#OCON_NUM\">OCON_NUM</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#version\">version</a><span class=\"ts\"/>= <a class=\"id\" href=\"#POLICYDB_VERSION_AVTAB\">POLICYDB_VERSION_AVTAB</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#sym_num\">sym_num</a><span class=\"ts\"/>= <a class=\"id\" href=\"#SYM_NUM\">SYM_NUM</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ocon_num\">ocon_num</a><span class=\"ts\"/>= <a class=\"id\" href=\"#OCON_NUM\">OCON_NUM</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#version\">version</a><span class=\"ts\"/>= <a class=\"id\" href=\"#POLICYDB_VERSION_RANGETRANS\">POLICYDB_VERSION_RANGETRANS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#sym_num\">sym_num</a><span class=\"ts\"/>= <a class=\"id\" href=\"#SYM_NUM\">SYM_NUM</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ocon_num\">ocon_num</a><span class=\"ts\"/>= <a class=\"id\" href=\"#OCON_NUM\">OCON_NUM</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#version\">version</a><span class=\"ts\"/>= <a class=\"id\" href=\"#POLICYDB_VERSION_POLCAP\">POLICYDB_VERSION_POLCAP</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#sym_num\">sym_num</a><span class=\"ts\"/>= <a class=\"id\" href=\"#SYM_NUM\">SYM_NUM</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ocon_num\">ocon_num</a><span class=\"ts\"/>= <a class=\"id\" href=\"#OCON_NUM\">OCON_NUM</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#version\">version</a><span class=\"ts\"/>= <a class=\"id\" href=\"#POLICYDB_VERSION_PERMISSIVE\">POLICYDB_VERSION_PERMISSIVE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#sym_num\">sym_num</a><span class=\"ts\"/>= <a class=\"id\" href=\"#SYM_NUM\">SYM_NUM</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ocon_num\">ocon_num</a><span class=\"ts\"/>= <a class=\"id\" href=\"#OCON_NUM\">OCON_NUM</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#version\">version</a><span class=\"ts\"/>= <a class=\"id\" href=\"#POLICYDB_VERSION_BOUNDARY\">POLICYDB_VERSION_BOUNDARY</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#sym_num\">sym_num</a><span class=\"ts\"/>= <a class=\"id\" href=\"#SYM_NUM\">SYM_NUM</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ocon_num\">ocon_num</a><span class=\"ts\"/>= <a class=\"id\" href=\"#OCON_NUM\">OCON_NUM</a>,", 
"<span class=\"ts\"/>},", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#policydb_compat_info\">policydb_compat_info</a> *<a class=\"id\" href=\"#policydb_lookup_compat\">policydb_lookup_compat</a>(int <a class=\"id\" href=\"#version\">version</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#policydb_compat_info\">policydb_compat_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#policydb_compat\">policydb_compat</a>); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#policydb_compat\">policydb_compat</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#version\">version</a> == <a class=\"id\" href=\"#version\">version</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = &amp;<a class=\"id\" href=\"#policydb_compat\">policydb_compat</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#info\">info</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Initialize the role table.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#roles_init\">roles_init</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#role_datum\">role_datum</a> *<a class=\"id\" href=\"#role\">role</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#role\">role</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#role\">role</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#role\">role</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#role\">role</a>-><a class=\"id\" href=\"#value\">value</a> = ++<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_roles\">p_roles</a>.<a class=\"id\" href=\"#nprim\">nprim</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#role\">role</a>-><a class=\"id\" href=\"#value\">value</a> != <a class=\"id\" href=\"#OBJECT_R_VAL\">OBJECT_R_VAL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_role\">out_free_role</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#OBJECT_R\">OBJECT_R</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#key\">key</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_role\">out_free_role</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#hashtab_insert\">hashtab_insert</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_roles\">p_roles</a>.<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#role\">role</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_key\">out_free_key</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<a class=\"id\" href=\"#out_free_key\">out_free_key</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"<a class=\"id\" href=\"#out_free_role\">out_free_role</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#role\">role</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#rangetr_hash\">rangetr_hash</a>(struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#h\">h</a>, const void *<a class=\"id\" href=\"#k\">k</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#range_trans\">range_trans</a> *<a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#k\">k</a>;", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#source_type\">source_type</a> + (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#target_type\">target_type</a> << 3) +", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#target_class\">target_class</a> << 5)) &amp; (<a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#size\">size</a> - 1);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#rangetr_cmp\">rangetr_cmp</a>(struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#h\">h</a>, const void *<a class=\"id\" href=\"#k1\">k1</a>, const void *<a class=\"id\" href=\"#k2\">k2</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#range_trans\">range_trans</a> *<a class=\"id\" href=\"#key1\">key1</a> = <a class=\"id\" href=\"#k1\">k1</a>, *<a class=\"id\" href=\"#key2\">key2</a> = <a class=\"id\" href=\"#k2\">k2</a>;", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#key1\">key1</a>-><a class=\"id\" href=\"#source_type\">source_type</a> != <a class=\"id\" href=\"#key2\">key2</a>-><a class=\"id\" href=\"#source_type\">source_type</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key1\">key1</a>-><a class=\"id\" href=\"#target_type\">target_type</a> != <a class=\"id\" href=\"#key2\">key2</a>-><a class=\"id\" href=\"#target_type\">target_type</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key1\">key1</a>-><a class=\"id\" href=\"#target_class\">target_class</a> != <a class=\"id\" href=\"#key2\">key2</a>-><a class=\"id\" href=\"#target_class\">target_class</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Initialize a policy database structure.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#policydb_init\">policydb_init</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#p\">p</a>, 0, sizeof(*<a class=\"id\" href=\"#p\">p</a>));", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#SYM_NUM\">SYM_NUM</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#symtab_init\">symtab_init</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#symtab\">symtab</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#symtab_sizes\">symtab_sizes</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_symtab\">out_free_symtab</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#avtab_init\">avtab_init</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#te_avtab\">te_avtab</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_symtab\">out_free_symtab</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#roles_init\">roles_init</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_symtab\">out_free_symtab</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#cond_policydb_init\">cond_policydb_init</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_symtab\">out_free_symtab</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#range_tr\">range_tr</a> = <a class=\"id\" href=\"#hashtab_create\">hashtab_create</a>(<a class=\"id\" href=\"#rangetr_hash\">rangetr_hash</a>, <a class=\"id\" href=\"#rangetr_cmp\">rangetr_cmp</a>, 256);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#range_tr\">range_tr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_symtab\">out_free_symtab</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_init\">ebitmap_init</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policycaps\">policycaps</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_init\">ebitmap_init</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#permissive_map\">permissive_map</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<a class=\"id\" href=\"#out_free_symtab\">out_free_symtab</a>:", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#SYM_NUM\">SYM_NUM</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hashtab_destroy\">hashtab_destroy</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#symtab\">symtab</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The following *_index functions are used to</span>", 
"<span class=\"comment\"> * define the val_to_name and val_to_struct arrays</span>", 
"<span class=\"comment\"> * in a policy database structure.  The val_to_name</span>", 
"<span class=\"comment\"> * arrays are used when converting security context</span>", 
"<span class=\"comment\"> * structures into string representations.  The</span>", 
"<span class=\"comment\"> * val_to_struct arrays are used when the attributes</span>", 
"<span class=\"comment\"> * of a class, role, or user are needed.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#common_index\">common_index</a>(void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#datap\">datap</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#common_datum\">common_datum</a> *<a class=\"id\" href=\"#comdatum\">comdatum</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#comdatum\">comdatum</a> = <a class=\"id\" href=\"#datum\">datum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#datap\">datap</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#comdatum\">comdatum</a>-><a class=\"id\" href=\"#value\">value</a> || <a class=\"id\" href=\"#comdatum\">comdatum</a>-><a class=\"id\" href=\"#value\">value</a> &gt; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_commons\">p_commons</a>.<a class=\"id\" href=\"#nprim\">nprim</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_common_val_to_name\">p_common_val_to_name</a>[<a class=\"id\" href=\"#comdatum\">comdatum</a>-><a class=\"id\" href=\"#value\">value</a> - 1] = <a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#class_index\">class_index</a>(void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#datap\">datap</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#class_datum\">class_datum</a> *<a class=\"id\" href=\"#cladatum\">cladatum</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cladatum\">cladatum</a> = <a class=\"id\" href=\"#datum\">datum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#datap\">datap</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#value\">value</a> || <a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#value\">value</a> &gt; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_classes\">p_classes</a>.<a class=\"id\" href=\"#nprim\">nprim</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_class_val_to_name\">p_class_val_to_name</a>[<a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#value\">value</a> - 1] = <a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_val_to_struct\">class_val_to_struct</a>[<a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#value\">value</a> - 1] = <a class=\"id\" href=\"#cladatum\">cladatum</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#role_index\">role_index</a>(void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#datap\">datap</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#role_datum\">role_datum</a> *<a class=\"id\" href=\"#role\">role</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#role\">role</a> = <a class=\"id\" href=\"#datum\">datum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#datap\">datap</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#role\">role</a>-><a class=\"id\" href=\"#value\">value</a>", 
"<span class=\"ts\"/>    || <a class=\"id\" href=\"#role\">role</a>-><a class=\"id\" href=\"#value\">value</a> &gt; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_roles\">p_roles</a>.<a class=\"id\" href=\"#nprim\">nprim</a>", 
"<span class=\"ts\"/>    || <a class=\"id\" href=\"#role\">role</a>-><a class=\"id\" href=\"#bounds\">bounds</a> &gt; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_roles\">p_roles</a>.<a class=\"id\" href=\"#nprim\">nprim</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_role_val_to_name\">p_role_val_to_name</a>[<a class=\"id\" href=\"#role\">role</a>-><a class=\"id\" href=\"#value\">value</a> - 1] = <a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#role_val_to_struct\">role_val_to_struct</a>[<a class=\"id\" href=\"#role\">role</a>-><a class=\"id\" href=\"#value\">value</a> - 1] = <a class=\"id\" href=\"#role\">role</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#type_index\">type_index</a>(void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#datap\">datap</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#type_datum\">type_datum</a> *<a class=\"id\" href=\"#typdatum\">typdatum</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#typdatum\">typdatum</a> = <a class=\"id\" href=\"#datum\">datum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#datap\">datap</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#typdatum\">typdatum</a>-><a class=\"id\" href=\"#primary\">primary</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#typdatum\">typdatum</a>-><a class=\"id\" href=\"#value\">value</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    || <a class=\"id\" href=\"#typdatum\">typdatum</a>-><a class=\"id\" href=\"#value\">value</a> &gt; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_types\">p_types</a>.<a class=\"id\" href=\"#nprim\">nprim</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    || <a class=\"id\" href=\"#typdatum\">typdatum</a>-><a class=\"id\" href=\"#bounds\">bounds</a> &gt; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_types\">p_types</a>.<a class=\"id\" href=\"#nprim\">nprim</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_type_val_to_name\">p_type_val_to_name</a>[<a class=\"id\" href=\"#typdatum\">typdatum</a>-><a class=\"id\" href=\"#value\">value</a> - 1] = <a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#type_val_to_struct\">type_val_to_struct</a>[<a class=\"id\" href=\"#typdatum\">typdatum</a>-><a class=\"id\" href=\"#value\">value</a> - 1] = <a class=\"id\" href=\"#typdatum\">typdatum</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#user_index\">user_index</a>(void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#datap\">datap</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_datum\">user_datum</a> *<a class=\"id\" href=\"#usrdatum\">usrdatum</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#usrdatum\">usrdatum</a> = <a class=\"id\" href=\"#datum\">datum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#datap\">datap</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#usrdatum\">usrdatum</a>-><a class=\"id\" href=\"#value\">value</a>", 
"<span class=\"ts\"/>    || <a class=\"id\" href=\"#usrdatum\">usrdatum</a>-><a class=\"id\" href=\"#value\">value</a> &gt; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_users\">p_users</a>.<a class=\"id\" href=\"#nprim\">nprim</a>", 
"<span class=\"ts\"/>    || <a class=\"id\" href=\"#usrdatum\">usrdatum</a>-><a class=\"id\" href=\"#bounds\">bounds</a> &gt; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_users\">p_users</a>.<a class=\"id\" href=\"#nprim\">nprim</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_user_val_to_name\">p_user_val_to_name</a>[<a class=\"id\" href=\"#usrdatum\">usrdatum</a>-><a class=\"id\" href=\"#value\">value</a> - 1] = <a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#user_val_to_struct\">user_val_to_struct</a>[<a class=\"id\" href=\"#usrdatum\">usrdatum</a>-><a class=\"id\" href=\"#value\">value</a> - 1] = <a class=\"id\" href=\"#usrdatum\">usrdatum</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sens_index\">sens_index</a>(void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#datap\">datap</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#level_datum\">level_datum</a> *<a class=\"id\" href=\"#levdatum\">levdatum</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#levdatum\">levdatum</a> = <a class=\"id\" href=\"#datum\">datum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#datap\">datap</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#levdatum\">levdatum</a>-><a class=\"id\" href=\"#isalias\">isalias</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#levdatum\">levdatum</a>-><a class=\"id\" href=\"#level\">level</a>-><a class=\"id\" href=\"#sens\">sens</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#levdatum\">levdatum</a>-><a class=\"id\" href=\"#level\">level</a>-><a class=\"id\" href=\"#sens\">sens</a> &gt; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_levels\">p_levels</a>.<a class=\"id\" href=\"#nprim\">nprim</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_sens_val_to_name\">p_sens_val_to_name</a>[<a class=\"id\" href=\"#levdatum\">levdatum</a>-><a class=\"id\" href=\"#level\">level</a>-><a class=\"id\" href=\"#sens\">sens</a> - 1] = <a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cat_index\">cat_index</a>(void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#datap\">datap</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cat_datum\">cat_datum</a> *<a class=\"id\" href=\"#catdatum\">catdatum</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#catdatum\">catdatum</a> = <a class=\"id\" href=\"#datum\">datum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#datap\">datap</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#catdatum\">catdatum</a>-><a class=\"id\" href=\"#isalias\">isalias</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#catdatum\">catdatum</a>-><a class=\"id\" href=\"#value\">value</a> || <a class=\"id\" href=\"#catdatum\">catdatum</a>-><a class=\"id\" href=\"#value\">value</a> &gt; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_cats\">p_cats</a>.<a class=\"id\" href=\"#nprim\">nprim</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_cat_val_to_name\">p_cat_val_to_name</a>[<a class=\"id\" href=\"#catdatum\">catdatum</a>-><a class=\"id\" href=\"#value\">value</a> - 1] = <a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int (*<a class=\"id\" href=\"#index_f\">index_f</a>[<a class=\"id\" href=\"#SYM_NUM\">SYM_NUM</a>]) (void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#datap\">datap</a>) =", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#common_index\">common_index</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#class_index\">class_index</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#role_index\">role_index</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#type_index\">type_index</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#user_index\">user_index</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cond_index_bool\">cond_index_bool</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sens_index\">sens_index</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cat_index\">cat_index</a>,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Define the common val_to_name array and the class</span>", 
"<span class=\"comment\"> * val_to_name and val_to_struct arrays in a policy</span>", 
"<span class=\"comment\"> * database structure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller must clean up upon failure.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#policydb_index_classes\">policydb_index_classes</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_common_val_to_name\">p_common_val_to_name</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_commons\">p_commons</a>.<a class=\"id\" href=\"#nprim\">nprim</a> * sizeof(char *), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_common_val_to_name\">p_common_val_to_name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#hashtab_map\">hashtab_map</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_commons\">p_commons</a>.<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#common_index\">common_index</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_val_to_struct\">class_val_to_struct</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_classes\">p_classes</a>.<a class=\"id\" href=\"#nprim\">nprim</a> * sizeof(*(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_val_to_struct\">class_val_to_struct</a>)), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_val_to_struct\">class_val_to_struct</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_class_val_to_name\">p_class_val_to_name</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_classes\">p_classes</a>.<a class=\"id\" href=\"#nprim\">nprim</a> * sizeof(char *), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_class_val_to_name\">p_class_val_to_name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#hashtab_map\">hashtab_map</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_classes\">p_classes</a>.<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#class_index\">class_index</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#DEBUG_HASHES\">DEBUG_HASHES</a>", 
"static void <a class=\"id\" href=\"#symtab_hash_eval\">symtab_hash_eval</a>(struct <a class=\"id\" href=\"#symtab\">symtab</a> *<a class=\"id\" href=\"#s\">s</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#SYM_NUM\">SYM_NUM</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#s\">s</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hashtab_info\">hashtab_info</a> <a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hashtab_stat\">hashtab_stat</a>(<a class=\"id\" href=\"#h\">h</a>, &amp;<a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"SELinux: %s:  %d entries and %d/%d buckets used, \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"longest chain length %d\\n\", <a class=\"id\" href=\"#symtab_name\">symtab_name</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#nel\">nel</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#slots_used\">slots_used</a>, <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#max_chain_len\">max_chain_len</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#rangetr_hash_eval\">rangetr_hash_eval</a>(struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#h\">h</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hashtab_info\">hashtab_info</a> <a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hashtab_stat\">hashtab_stat</a>(<a class=\"id\" href=\"#h\">h</a>, &amp;<a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"SELinux: rangetr:  %d entries and %d/%d buckets used, \"", 
"<span class=\"ts\"/>       \"longest chain length %d\\n\", <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#nel\">nel</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#slots_used\">slots_used</a>, <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#max_chain_len\">max_chain_len</a>);", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#rangetr_hash_eval\">rangetr_hash_eval</a>(struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#h\">h</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Define the other val_to_name and val_to_struct arrays</span>", 
"<span class=\"comment\"> * in a policy database structure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller must clean up on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#policydb_index_others\">policydb_index_others</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"SELinux:  %d users, %d roles, %d types, %d bools\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_users\">p_users</a>.<a class=\"id\" href=\"#nprim\">nprim</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_roles\">p_roles</a>.<a class=\"id\" href=\"#nprim\">nprim</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_types\">p_types</a>.<a class=\"id\" href=\"#nprim\">nprim</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_bools\">p_bools</a>.<a class=\"id\" href=\"#nprim\">nprim</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#mls_enabled\">mls_enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\", %d sens, %d cats\", <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_levels\">p_levels</a>.<a class=\"id\" href=\"#nprim\">nprim</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_cats\">p_cats</a>.<a class=\"id\" href=\"#nprim\">nprim</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"SELinux:  %d classes, %d rules\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_classes\">p_classes</a>.<a class=\"id\" href=\"#nprim\">nprim</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#te_avtab\">te_avtab</a>.<a class=\"id\" href=\"#nel\">nel</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#DEBUG_HASHES\">DEBUG_HASHES</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avtab_hash_eval\">avtab_hash_eval</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#te_avtab\">te_avtab</a>, \"rules\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#symtab_hash_eval\">symtab_hash_eval</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#symtab\">symtab</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#role_val_to_struct\">role_val_to_struct</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_roles\">p_roles</a>.<a class=\"id\" href=\"#nprim\">nprim</a> * sizeof(*(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#role_val_to_struct\">role_val_to_struct</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#role_val_to_struct\">role_val_to_struct</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#user_val_to_struct\">user_val_to_struct</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_users\">p_users</a>.<a class=\"id\" href=\"#nprim\">nprim</a> * sizeof(*(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#user_val_to_struct\">user_val_to_struct</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#user_val_to_struct\">user_val_to_struct</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#type_val_to_struct\">type_val_to_struct</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_types\">p_types</a>.<a class=\"id\" href=\"#nprim\">nprim</a> * sizeof(*(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#type_val_to_struct\">type_val_to_struct</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#type_val_to_struct\">type_val_to_struct</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cond_init_bool_indexes\">cond_init_bool_indexes</a>(<a class=\"id\" href=\"#p\">p</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#SYM_ROLES\">SYM_ROLES</a>; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#SYM_NUM\">SYM_NUM</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sym_val_to_name\">sym_val_to_name</a>[<a class=\"id\" href=\"#i\">i</a>] =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#symtab\">symtab</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#nprim\">nprim</a> * sizeof(char *), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sym_val_to_name\">sym_val_to_name</a>[<a class=\"id\" href=\"#i\">i</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#hashtab_map\">hashtab_map</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#symtab\">symtab</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#index_f\">index_f</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The following *_destroy functions are used to</span>", 
"<span class=\"comment\"> * free any memory allocated for each kind of</span>", 
"<span class=\"comment\"> * symbol data in the policy database.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#perm_destroy\">perm_destroy</a>(void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#datum\">datum</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#common_destroy\">common_destroy</a>(void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#common_datum\">common_datum</a> *<a class=\"id\" href=\"#comdatum\">comdatum</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#comdatum\">comdatum</a> = <a class=\"id\" href=\"#datum\">datum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hashtab_map\">hashtab_map</a>(<a class=\"id\" href=\"#comdatum\">comdatum</a>-><a class=\"id\" href=\"#permissions\">permissions</a>.<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#perm_destroy\">perm_destroy</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hashtab_destroy\">hashtab_destroy</a>(<a class=\"id\" href=\"#comdatum\">comdatum</a>-><a class=\"id\" href=\"#permissions\">permissions</a>.<a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#datum\">datum</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cls_destroy\">cls_destroy</a>(void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#class_datum\">class_datum</a> *<a class=\"id\" href=\"#cladatum\">cladatum</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#constraint_node\">constraint_node</a> *<a class=\"id\" href=\"#constraint\">constraint</a>, *<a class=\"id\" href=\"#ctemp\">ctemp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#constraint_expr\">constraint_expr</a> *<a class=\"id\" href=\"#e\">e</a>, *<a class=\"id\" href=\"#etmp\">etmp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cladatum\">cladatum</a> = <a class=\"id\" href=\"#datum\">datum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hashtab_map\">hashtab_map</a>(<a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#permissions\">permissions</a>.<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#perm_destroy\">perm_destroy</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hashtab_destroy\">hashtab_destroy</a>(<a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#permissions\">permissions</a>.<a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#constraint\">constraint</a> = <a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#constraints\">constraints</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#constraint\">constraint</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#constraint\">constraint</a>-><a class=\"id\" href=\"#expr\">expr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#e\">e</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_destroy\">ebitmap_destroy</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#names\">names</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#etmp\">etmp</a> = <a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#etmp\">etmp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctemp\">ctemp</a> = <a class=\"id\" href=\"#constraint\">constraint</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#constraint\">constraint</a> = <a class=\"id\" href=\"#constraint\">constraint</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ctemp\">ctemp</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#constraint\">constraint</a> = <a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#validatetrans\">validatetrans</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#constraint\">constraint</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#constraint\">constraint</a>-><a class=\"id\" href=\"#expr\">expr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#e\">e</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_destroy\">ebitmap_destroy</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#names\">names</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#etmp\">etmp</a> = <a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#etmp\">etmp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctemp\">ctemp</a> = <a class=\"id\" href=\"#constraint\">constraint</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#constraint\">constraint</a> = <a class=\"id\" href=\"#constraint\">constraint</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ctemp\">ctemp</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#comkey\">comkey</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#datum\">datum</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#role_destroy\">role_destroy</a>(void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#role_datum\">role_datum</a> *<a class=\"id\" href=\"#role\">role</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#role\">role</a> = <a class=\"id\" href=\"#datum\">datum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_destroy\">ebitmap_destroy</a>(&amp;<a class=\"id\" href=\"#role\">role</a>-><a class=\"id\" href=\"#dominates\">dominates</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_destroy\">ebitmap_destroy</a>(&amp;<a class=\"id\" href=\"#role\">role</a>-><a class=\"id\" href=\"#types\">types</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#datum\">datum</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#type_destroy\">type_destroy</a>(void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#datum\">datum</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#user_destroy\">user_destroy</a>(void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_datum\">user_datum</a> *<a class=\"id\" href=\"#usrdatum\">usrdatum</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#usrdatum\">usrdatum</a> = <a class=\"id\" href=\"#datum\">datum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_destroy\">ebitmap_destroy</a>(&amp;<a class=\"id\" href=\"#usrdatum\">usrdatum</a>-><a class=\"id\" href=\"#roles\">roles</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_destroy\">ebitmap_destroy</a>(&amp;<a class=\"id\" href=\"#usrdatum\">usrdatum</a>-><a class=\"id\" href=\"#range\">range</a>.<a class=\"id\" href=\"#level\">level</a>[0].<a class=\"id\" href=\"#cat\">cat</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_destroy\">ebitmap_destroy</a>(&amp;<a class=\"id\" href=\"#usrdatum\">usrdatum</a>-><a class=\"id\" href=\"#range\">range</a>.<a class=\"id\" href=\"#level\">level</a>[1].<a class=\"id\" href=\"#cat\">cat</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_destroy\">ebitmap_destroy</a>(&amp;<a class=\"id\" href=\"#usrdatum\">usrdatum</a>-><a class=\"id\" href=\"#dfltlevel\">dfltlevel</a>.<a class=\"id\" href=\"#cat\">cat</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#datum\">datum</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sens_destroy\">sens_destroy</a>(void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#level_datum\">level_datum</a> *<a class=\"id\" href=\"#levdatum\">levdatum</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#levdatum\">levdatum</a> = <a class=\"id\" href=\"#datum\">datum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_destroy\">ebitmap_destroy</a>(&amp;<a class=\"id\" href=\"#levdatum\">levdatum</a>-><a class=\"id\" href=\"#level\">level</a>-><a class=\"id\" href=\"#cat\">cat</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#levdatum\">levdatum</a>-><a class=\"id\" href=\"#level\">level</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#datum\">datum</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cat_destroy\">cat_destroy</a>(void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#datum\">datum</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int (*<a class=\"id\" href=\"#destroy_f\">destroy_f</a>[<a class=\"id\" href=\"#SYM_NUM\">SYM_NUM</a>]) (void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#datap\">datap</a>) =", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#common_destroy\">common_destroy</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cls_destroy\">cls_destroy</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#role_destroy\">role_destroy</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#type_destroy\">type_destroy</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#user_destroy\">user_destroy</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cond_destroy_bool\">cond_destroy_bool</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sens_destroy\">sens_destroy</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cat_destroy\">cat_destroy</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#range_tr_destroy\">range_tr_destroy</a>(void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mls_range\">mls_range</a> *<a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#datum\">datum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_destroy\">ebitmap_destroy</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#level\">level</a>[0].<a class=\"id\" href=\"#cat\">cat</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_destroy\">ebitmap_destroy</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#level\">level</a>[1].<a class=\"id\" href=\"#cat\">cat</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#datum\">datum</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ocontext_destroy\">ocontext_destroy</a>(struct <a class=\"id\" href=\"#ocontext\">ocontext</a> *<a class=\"id\" href=\"#c\">c</a>, int <a class=\"id\" href=\"#i\">i</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#c\">c</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context_destroy\">context_destroy</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#context\">context</a>[0]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context_destroy\">context_destroy</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#context\">context</a>[1]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#OCON_ISID\">OCON_ISID</a> || <a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#OCON_FS\">OCON_FS</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#OCON_NETIF\">OCON_NETIF</a> || <a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#OCON_FSUSE\">OCON_FSUSE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Free any memory allocated by a policy database structure.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#policydb_destroy\">policydb_destroy</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ocontext\">ocontext</a> *<a class=\"id\" href=\"#c\">c</a>, *<a class=\"id\" href=\"#ctmp\">ctmp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#genfs\">genfs</a> *<a class=\"id\" href=\"#g\">g</a>, *<a class=\"id\" href=\"#gtmp\">gtmp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#role_allow\">role_allow</a> *<a class=\"id\" href=\"#ra\">ra</a>, *<a class=\"id\" href=\"#lra\">lra</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#role_trans\">role_trans</a> *<a class=\"id\" href=\"#tr\">tr</a>, *<a class=\"id\" href=\"#ltr\">ltr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#SYM_NUM\">SYM_NUM</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hashtab_map\">hashtab_map</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#symtab\">symtab</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#destroy_f\">destroy_f</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hashtab_destroy\">hashtab_destroy</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#symtab\">symtab</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#SYM_NUM\">SYM_NUM</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sym_val_to_name\">sym_val_to_name</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_val_to_struct\">class_val_to_struct</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#role_val_to_struct\">role_val_to_struct</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#user_val_to_struct\">user_val_to_struct</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#type_val_to_struct\">type_val_to_struct</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avtab_destroy\">avtab_destroy</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#te_avtab\">te_avtab</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#OCON_NUM\">OCON_NUM</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#ocontexts\">ocontexts</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#c\">c</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctmp\">ctmp</a> = <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ocontext_destroy\">ocontext_destroy</a>(<a class=\"id\" href=\"#ctmp\">ctmp</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#ocontexts\">ocontexts</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#g\">g</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#genfs\">genfs</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#g\">g</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#g\">g</a>-><a class=\"id\" href=\"#fstype\">fstype</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#g\">g</a>-><a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#c\">c</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctmp\">ctmp</a> = <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ocontext_destroy\">ocontext_destroy</a>(<a class=\"id\" href=\"#ctmp\">ctmp</a>, <a class=\"id\" href=\"#OCON_FSUSE\">OCON_FSUSE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gtmp\">gtmp</a> = <a class=\"id\" href=\"#g\">g</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#g\">g</a> = <a class=\"id\" href=\"#g\">g</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#gtmp\">gtmp</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#genfs\">genfs</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cond_policydb_destroy\">cond_policydb_destroy</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#tr\">tr</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#role_tr\">role_tr</a>; <a class=\"id\" href=\"#tr\">tr</a>; <a class=\"id\" href=\"#tr\">tr</a> = <a class=\"id\" href=\"#tr\">tr</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ltr\">ltr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ltr\">ltr</a> = <a class=\"id\" href=\"#tr\">tr</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ltr\">ltr</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#ra\">ra</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#role_allow\">role_allow</a>; <a class=\"id\" href=\"#ra\">ra</a>; <a class=\"id\" href=\"#ra\">ra</a> = <a class=\"id\" href=\"#ra\">ra</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#lra\">lra</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lra\">lra</a> = <a class=\"id\" href=\"#ra\">ra</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#lra\">lra</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hashtab_map\">hashtab_map</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#range_tr\">range_tr</a>, <a class=\"id\" href=\"#range_tr_destroy\">range_tr_destroy</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hashtab_destroy\">hashtab_destroy</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#range_tr\">range_tr</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#type_attr_map_array\">type_attr_map_array</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_types\">p_types</a>.<a class=\"id\" href=\"#nprim\">nprim</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ebitmap\">ebitmap</a> *<a class=\"id\" href=\"#e\">e</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#flex_array_get\">flex_array_get</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#type_attr_map_array\">type_attr_map_array</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#e\">e</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_destroy\">ebitmap_destroy</a>(<a class=\"id\" href=\"#e\">e</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flex_array_free\">flex_array_free</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#type_attr_map_array\">type_attr_map_array</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_destroy\">ebitmap_destroy</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policycaps\">policycaps</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_destroy\">ebitmap_destroy</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#permissive_map\">permissive_map</a>);", 
"", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Load the initial SIDs specified in a policy database</span>", 
"<span class=\"comment\"> * structure into a SID table.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#policydb_load_isids\">policydb_load_isids</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, struct <a class=\"id\" href=\"#sidtab\">sidtab</a> *<a class=\"id\" href=\"#s\">s</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ocontext\">ocontext</a> *<a class=\"id\" href=\"#head\">head</a>, *<a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sidtab_init\">sidtab_init</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux:  out of memory on SID table init\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#ocontexts\">ocontexts</a>[<a class=\"id\" href=\"#OCON_ISID\">OCON_ISID</a>];", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#head\">head</a>; <a class=\"id\" href=\"#c\">c</a>; <a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#context\">context</a>[0].<a class=\"id\" href=\"#user\">user</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux:  SID %s was never \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"defined.\\n\", <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sidtab_insert\">sidtab_insert</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#sid\">sid</a>[0], &amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#context\">context</a>[0])) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux:  unable to load initial \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"SID %s.\\n\", <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#policydb_class_isvalid\">policydb_class_isvalid</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, unsigned int <a class=\"id\" href=\"#class\">class</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#class\">class</a> || <a class=\"id\" href=\"#class\">class</a> &gt; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_classes\">p_classes</a>.<a class=\"id\" href=\"#nprim\">nprim</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"int <a class=\"id\" href=\"#policydb_role_isvalid\">policydb_role_isvalid</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, unsigned int <a class=\"id\" href=\"#role\">role</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#role\">role</a> || <a class=\"id\" href=\"#role\">role</a> &gt; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_roles\">p_roles</a>.<a class=\"id\" href=\"#nprim\">nprim</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"int <a class=\"id\" href=\"#policydb_type_isvalid\">policydb_type_isvalid</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, unsigned int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#type\">type</a> || <a class=\"id\" href=\"#type\">type</a> &gt; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_types\">p_types</a>.<a class=\"id\" href=\"#nprim\">nprim</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Return 1 if the fields in the security context</span>", 
"<span class=\"comment\"> * structure `c' are valid.  Return 0 otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#policydb_context_isvalid\">policydb_context_isvalid</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#role_datum\">role_datum</a> *<a class=\"id\" href=\"#role\">role</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_datum\">user_datum</a> *<a class=\"id\" href=\"#usrdatum\">usrdatum</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#role\">role</a> || <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#role\">role</a> &gt; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_roles\">p_roles</a>.<a class=\"id\" href=\"#nprim\">nprim</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#user\">user</a> || <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#user\">user</a> &gt; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_users\">p_users</a>.<a class=\"id\" href=\"#nprim\">nprim</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#type\">type</a> || <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#type\">type</a> &gt; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_types\">p_types</a>.<a class=\"id\" href=\"#nprim\">nprim</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#role\">role</a> != <a class=\"id\" href=\"#OBJECT_R_VAL\">OBJECT_R_VAL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Role must be authorized for the type.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#role\">role</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#role_val_to_struct\">role_val_to_struct</a>[<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#role\">role</a> - 1];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ebitmap_get_bit\">ebitmap_get_bit</a>(&amp;<a class=\"id\" href=\"#role\">role</a>-><a class=\"id\" href=\"#types\">types</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#type\">type</a> - 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* role may not be associated with type */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * User must be authorized for the role.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#usrdatum\">usrdatum</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#user_val_to_struct\">user_val_to_struct</a>[<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#user\">user</a> - 1];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#usrdatum\">usrdatum</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ebitmap_get_bit\">ebitmap_get_bit</a>(&amp;<a class=\"id\" href=\"#usrdatum\">usrdatum</a>-><a class=\"id\" href=\"#roles\">roles</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#role\">role</a> - 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* user may not be associated with role */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mls_context_isvalid\">mls_context_isvalid</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#c\">c</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Read a MLS range structure from a policydb binary</span>", 
"<span class=\"comment\"> * representation file.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#mls_read_range_helper\">mls_read_range_helper</a>(struct <a class=\"id\" href=\"#mls_range\">mls_range</a> *<a class=\"id\" href=\"#r\">r</a>, void *<a class=\"id\" href=\"#fp\">fp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#buf\">buf</a>[2];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#items\">items</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#items\">items</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#items\">items</a> &gt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#buf\">buf</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: mls:  range overflow\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>) * <a class=\"id\" href=\"#items\">items</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: mls:  truncated range\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#level\">level</a>[0].<a class=\"id\" href=\"#sens\">sens</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#items\">items</a> &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#level\">level</a>[1].<a class=\"id\" href=\"#sens\">sens</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#level\">level</a>[1].<a class=\"id\" href=\"#sens\">sens</a> = <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#level\">level</a>[0].<a class=\"id\" href=\"#sens\">sens</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ebitmap_read\">ebitmap_read</a>(&amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#level\">level</a>[0].<a class=\"id\" href=\"#cat\">cat</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: mls:  error reading low \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"categories\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#items\">items</a> &gt; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ebitmap_read\">ebitmap_read</a>(&amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#level\">level</a>[1].<a class=\"id\" href=\"#cat\">cat</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: mls:  error reading high \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"categories\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_high\">bad_high</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ebitmap_cpy\">ebitmap_cpy</a>(&amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#level\">level</a>[1].<a class=\"id\" href=\"#cat\">cat</a>, &amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#level\">level</a>[0].<a class=\"id\" href=\"#cat\">cat</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: mls:  out of memory\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_high\">bad_high</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<a class=\"id\" href=\"#bad_high\">bad_high</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_destroy\">ebitmap_destroy</a>(&amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#level\">level</a>[0].<a class=\"id\" href=\"#cat\">cat</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Read and validate a security context structure</span>", 
"<span class=\"comment\"> * from a policydb binary representation file.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#context_read_and_validate\">context_read_and_validate</a>(struct <a class=\"id\" href=\"#context\">context</a> *<a class=\"id\" href=\"#c\">c</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     void *<a class=\"id\" href=\"#fp\">fp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#buf\">buf</a>[3];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: context truncated\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#user\">user</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#role\">role</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[2]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a> >= <a class=\"id\" href=\"#POLICYDB_VERSION_MLS\">POLICYDB_VERSION_MLS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mls_read_range_helper\">mls_read_range_helper</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#range\">range</a>, <a class=\"id\" href=\"#fp\">fp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: error reading MLS range of \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"context\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#policydb_context_isvalid\">policydb_context_isvalid</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#c\">c</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux:  invalid security context\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context_destroy\">context_destroy</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The following *_read functions are used to</span>", 
"<span class=\"comment\"> * read the symbol data from a policy database</span>", 
"<span class=\"comment\"> * binary representation file.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#perm_read\">perm_read</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#h\">h</a>, void *<a class=\"id\" href=\"#fp\">fp</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#perm_datum\">perm_datum</a> *<a class=\"id\" href=\"#perdatum\">perdatum</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#buf\">buf</a>[2];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#perdatum\">perdatum</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#perdatum\">perdatum</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#perdatum\">perdatum</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#perdatum\">perdatum</a>-><a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#len\">len</a> + 1, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#key\">key</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#fp\">fp</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>[<a class=\"id\" href=\"#len\">len</a>] = '\\0';", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#hashtab_insert\">hashtab_insert</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#perdatum\">perdatum</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<a class=\"id\" href=\"#bad\">bad</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#perm_destroy\">perm_destroy</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#perdatum\">perdatum</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#common_read\">common_read</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#h\">h</a>, void *<a class=\"id\" href=\"#fp\">fp</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#common_datum\">common_datum</a> *<a class=\"id\" href=\"#comdatum\">comdatum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#buf\">buf</a>[4];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#nel\">nel</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#comdatum\">comdatum</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#comdatum\">comdatum</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#comdatum\">comdatum</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#comdatum\">comdatum</a>-><a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#symtab_init\">symtab_init</a>(&amp;<a class=\"id\" href=\"#comdatum\">comdatum</a>-><a class=\"id\" href=\"#permissions\">permissions</a>, <a class=\"id\" href=\"#PERM_SYMTAB_SIZE\">PERM_SYMTAB_SIZE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#comdatum\">comdatum</a>-><a class=\"id\" href=\"#permissions\">permissions</a>.<a class=\"id\" href=\"#nprim\">nprim</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[2]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nel\">nel</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[3]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#len\">len</a> + 1, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#key\">key</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#fp\">fp</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>[<a class=\"id\" href=\"#len\">len</a>] = '\\0';", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nel\">nel</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#perm_read\">perm_read</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#comdatum\">comdatum</a>-><a class=\"id\" href=\"#permissions\">permissions</a>.<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#hashtab_insert\">hashtab_insert</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#comdatum\">comdatum</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<a class=\"id\" href=\"#bad\">bad</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#common_destroy\">common_destroy</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#comdatum\">comdatum</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#read_cons_helper\">read_cons_helper</a>(struct <a class=\"id\" href=\"#constraint_node\">constraint_node</a> **<a class=\"id\" href=\"#nodep\">nodep</a>, int <a class=\"id\" href=\"#ncons\">ncons</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#allowxtarget\">allowxtarget</a>, void *<a class=\"id\" href=\"#fp\">fp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#constraint_node\">constraint_node</a> *<a class=\"id\" href=\"#c\">c</a>, *<a class=\"id\" href=\"#lc\">lc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#constraint_expr\">constraint_expr</a> *<a class=\"id\" href=\"#e\">e</a>, *<a class=\"id\" href=\"#le\">le</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#buf\">buf</a>[3];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#nexpr\">nexpr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#depth\">depth</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lc\">lc</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ncons\">ncons</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#c\">c</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#c\">c</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#lc\">lc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lc\">lc</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#nodep\">nodep</a> = <a class=\"id\" href=\"#c\">c</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, (sizeof(<a class=\"id\" href=\"#u32\">u32</a>) * 2));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#permissions\">permissions</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nexpr\">nexpr</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le\">le</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#nexpr\">nexpr</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#e\">e</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#e\">e</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le\">le</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le\">le</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#expr\">expr</a> = <a class=\"id\" href=\"#e\">e</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, (sizeof(<a class=\"id\" href=\"#u32\">u32</a>) * 3));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#expr_type\">expr_type</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#attr\">attr</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[2]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#expr_type\">expr_type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_NOT\">CEXPR_NOT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#depth\">depth</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_AND\">CEXPR_AND</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_OR\">CEXPR_OR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#depth\">depth</a> &lt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_ATTR\">CEXPR_ATTR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#depth\">depth</a> == (<a class=\"id\" href=\"#CEXPR_MAXDEPTH\">CEXPR_MAXDEPTH</a> - 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CEXPR_NAMES\">CEXPR_NAMES</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#allowxtarget\">allowxtarget</a> && (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#attr\">attr</a> &amp; <a class=\"id\" href=\"#CEXPR_XTARGET\">CEXPR_XTARGET</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#depth\">depth</a> == (<a class=\"id\" href=\"#CEXPR_MAXDEPTH\">CEXPR_MAXDEPTH</a> - 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ebitmap_read\">ebitmap_read</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#names\">names</a>, <a class=\"id\" href=\"#fp\">fp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le\">le</a> = <a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#depth\">depth</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lc\">lc</a> = <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#class_read\">class_read</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#h\">h</a>, void *<a class=\"id\" href=\"#fp\">fp</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#class_datum\">class_datum</a> *<a class=\"id\" href=\"#cladatum\">cladatum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#buf\">buf</a>[6];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#len2\">len2</a>, <a class=\"id\" href=\"#ncons\">ncons</a>, <a class=\"id\" href=\"#nel\">nel</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cladatum\">cladatum</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#cladatum\">cladatum</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cladatum\">cladatum</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>)*6);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len2\">len2</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[2]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#symtab_init\">symtab_init</a>(&amp;<a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#permissions\">permissions</a>, <a class=\"id\" href=\"#PERM_SYMTAB_SIZE\">PERM_SYMTAB_SIZE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#permissions\">permissions</a>.<a class=\"id\" href=\"#nprim\">nprim</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[3]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nel\">nel</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[4]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ncons\">ncons</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[5]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#len\">len</a> + 1, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#key\">key</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#fp\">fp</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>[<a class=\"id\" href=\"#len\">len</a>] = '\\0';", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len2\">len2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#comkey\">comkey</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#len2\">len2</a> + 1, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#comkey\">comkey</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#comkey\">comkey</a>, <a class=\"id\" href=\"#fp\">fp</a>, <a class=\"id\" href=\"#len2\">len2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#comkey\">comkey</a>[<a class=\"id\" href=\"#len2\">len2</a>] = '\\0';", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#comdatum\">comdatum</a> = <a class=\"id\" href=\"#hashtab_search\">hashtab_search</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_commons\">p_commons</a>.<a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#comkey\">comkey</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#comdatum\">comdatum</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux:  unknown common %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#comkey\">comkey</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nel\">nel</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#perm_read\">perm_read</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#permissions\">permissions</a>.<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#read_cons_helper\">read_cons_helper</a>(&amp;<a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#constraints\">constraints</a>, <a class=\"id\" href=\"#ncons\">ncons</a>, 0, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a> >= <a class=\"id\" href=\"#POLICYDB_VERSION_VALIDATETRANS\">POLICYDB_VERSION_VALIDATETRANS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* grab the validatetrans rules */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ncons\">ncons</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#read_cons_helper\">read_cons_helper</a>(&amp;<a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#validatetrans\">validatetrans</a>, <a class=\"id\" href=\"#ncons\">ncons</a>, 1, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#hashtab_insert\">hashtab_insert</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#cladatum\">cladatum</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<a class=\"id\" href=\"#bad\">bad</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cls_destroy\">cls_destroy</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#cladatum\">cladatum</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#role_read\">role_read</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#h\">h</a>, void *<a class=\"id\" href=\"#fp\">fp</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#role_datum\">role_datum</a> *<a class=\"id\" href=\"#role\">role</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>, <a class=\"id\" href=\"#to_read\">to_read</a> = 2;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#buf\">buf</a>[3];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#role\">role</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#role\">role</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#role\">role</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a> >= <a class=\"id\" href=\"#POLICYDB_VERSION_BOUNDARY\">POLICYDB_VERSION_BOUNDARY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to_read\">to_read</a> = 3;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>[0]) * <a class=\"id\" href=\"#to_read\">to_read</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#role\">role</a>-><a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a> >= <a class=\"id\" href=\"#POLICYDB_VERSION_BOUNDARY\">POLICYDB_VERSION_BOUNDARY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#role\">role</a>-><a class=\"id\" href=\"#bounds\">bounds</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[2]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#len\">len</a> + 1, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#key\">key</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#fp\">fp</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>[<a class=\"id\" href=\"#len\">len</a>] = '\\0';", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ebitmap_read\">ebitmap_read</a>(&amp;<a class=\"id\" href=\"#role\">role</a>-><a class=\"id\" href=\"#dominates\">dominates</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ebitmap_read\">ebitmap_read</a>(&amp;<a class=\"id\" href=\"#role\">role</a>-><a class=\"id\" href=\"#types\">types</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#OBJECT_R\">OBJECT_R</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#role\">role</a>-><a class=\"id\" href=\"#value\">value</a> != <a class=\"id\" href=\"#OBJECT_R_VAL\">OBJECT_R_VAL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: Role %s has wrong value %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#OBJECT_R\">OBJECT_R</a>, <a class=\"id\" href=\"#role\">role</a>-><a class=\"id\" href=\"#value\">value</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#hashtab_insert\">hashtab_insert</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#role\">role</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<a class=\"id\" href=\"#bad\">bad</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#role_destroy\">role_destroy</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#role\">role</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#type_read\">type_read</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#h\">h</a>, void *<a class=\"id\" href=\"#fp\">fp</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#type_datum\">type_datum</a> *<a class=\"id\" href=\"#typdatum\">typdatum</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>, <a class=\"id\" href=\"#to_read\">to_read</a> = 3;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#buf\">buf</a>[4];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#typdatum\">typdatum</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#typdatum\">typdatum</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#typdatum\">typdatum</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a> >= <a class=\"id\" href=\"#POLICYDB_VERSION_BOUNDARY\">POLICYDB_VERSION_BOUNDARY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to_read\">to_read</a> = 4;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>[0]) * <a class=\"id\" href=\"#to_read\">to_read</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#typdatum\">typdatum</a>-><a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a> >= <a class=\"id\" href=\"#POLICYDB_VERSION_BOUNDARY\">POLICYDB_VERSION_BOUNDARY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#prop\">prop</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[2]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#prop\">prop</a> &amp; <a class=\"id\" href=\"#TYPEDATUM_PROPERTY_PRIMARY\">TYPEDATUM_PROPERTY_PRIMARY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#typdatum\">typdatum</a>-><a class=\"id\" href=\"#primary\">primary</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#prop\">prop</a> &amp; <a class=\"id\" href=\"#TYPEDATUM_PROPERTY_ATTRIBUTE\">TYPEDATUM_PROPERTY_ATTRIBUTE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#typdatum\">typdatum</a>-><a class=\"id\" href=\"#attribute\">attribute</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#typdatum\">typdatum</a>-><a class=\"id\" href=\"#bounds\">bounds</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[3]);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#typdatum\">typdatum</a>-><a class=\"id\" href=\"#primary\">primary</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[2]);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#len\">len</a> + 1, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#key\">key</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#fp\">fp</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>[<a class=\"id\" href=\"#len\">len</a>] = '\\0';", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#hashtab_insert\">hashtab_insert</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#typdatum\">typdatum</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<a class=\"id\" href=\"#bad\">bad</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#type_destroy\">type_destroy</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#typdatum\">typdatum</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Read a MLS level structure from a policydb binary</span>", 
"<span class=\"comment\"> * representation file.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#mls_read_level\">mls_read_level</a>(struct <a class=\"id\" href=\"#mls_level\">mls_level</a> *<a class=\"id\" href=\"#lp\">lp</a>, void *<a class=\"id\" href=\"#fp\">fp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#buf\">buf</a>[1];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#lp\">lp</a>, 0, sizeof(*<a class=\"id\" href=\"#lp\">lp</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: mls: truncated level\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lp\">lp</a>-><a class=\"id\" href=\"#sens\">sens</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ebitmap_read\">ebitmap_read</a>(&amp;<a class=\"id\" href=\"#lp\">lp</a>-><a class=\"id\" href=\"#cat\">cat</a>, <a class=\"id\" href=\"#fp\">fp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: mls:  error reading level \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"categories\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#bad\">bad</a>:", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#user_read\">user_read</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#h\">h</a>, void *<a class=\"id\" href=\"#fp\">fp</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_datum\">user_datum</a> *<a class=\"id\" href=\"#usrdatum\">usrdatum</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>, <a class=\"id\" href=\"#to_read\">to_read</a> = 2;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#buf\">buf</a>[3];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#usrdatum\">usrdatum</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#usrdatum\">usrdatum</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#usrdatum\">usrdatum</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a> >= <a class=\"id\" href=\"#POLICYDB_VERSION_BOUNDARY\">POLICYDB_VERSION_BOUNDARY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to_read\">to_read</a> = 3;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>[0]) * <a class=\"id\" href=\"#to_read\">to_read</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#usrdatum\">usrdatum</a>-><a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a> >= <a class=\"id\" href=\"#POLICYDB_VERSION_BOUNDARY\">POLICYDB_VERSION_BOUNDARY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#usrdatum\">usrdatum</a>-><a class=\"id\" href=\"#bounds\">bounds</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[2]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#len\">len</a> + 1, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#key\">key</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#fp\">fp</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>[<a class=\"id\" href=\"#len\">len</a>] = '\\0';", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ebitmap_read\">ebitmap_read</a>(&amp;<a class=\"id\" href=\"#usrdatum\">usrdatum</a>-><a class=\"id\" href=\"#roles\">roles</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a> >= <a class=\"id\" href=\"#POLICYDB_VERSION_MLS\">POLICYDB_VERSION_MLS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#mls_read_range_helper\">mls_read_range_helper</a>(&amp;<a class=\"id\" href=\"#usrdatum\">usrdatum</a>-><a class=\"id\" href=\"#range\">range</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#mls_read_level\">mls_read_level</a>(&amp;<a class=\"id\" href=\"#usrdatum\">usrdatum</a>-><a class=\"id\" href=\"#dfltlevel\">dfltlevel</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#hashtab_insert\">hashtab_insert</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#usrdatum\">usrdatum</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<a class=\"id\" href=\"#bad\">bad</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#user_destroy\">user_destroy</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#usrdatum\">usrdatum</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sens_read\">sens_read</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#h\">h</a>, void *<a class=\"id\" href=\"#fp\">fp</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#level_datum\">level_datum</a> *<a class=\"id\" href=\"#levdatum\">levdatum</a>;", 
];
xr_frag_insert('l/df/7444bf464c87ee9e1a154bee0dc288500b29b8.xr', __xr_tmp);
