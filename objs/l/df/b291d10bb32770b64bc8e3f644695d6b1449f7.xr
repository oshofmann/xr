var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_CPUSET_H\">_LINUX_CPUSET_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_CPUSET_H\">_LINUX_CPUSET_H</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  cpuset interface</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 2003 BULL SA</span>", 
"<span class=\"comment\"> *  Copyright (C) 2004-2006 Silicon Graphics, Inc.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpumask\">cpumask</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#nodemask\">nodemask</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cgroup\">cgroup</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CPUSETS\">CONFIG_CPUSETS</a>", 
"", 
"extern int <a class=\"id\" href=\"#number_of_cpusets\">number_of_cpusets</a>;<span class=\"ts\"/><span class=\"comment\">/* How many cpusets are defined in system? */</span>", 
"", 
"extern int <a class=\"id\" href=\"#cpuset_init\">cpuset_init</a>(void);", 
"extern void <a class=\"id\" href=\"#cpuset_init_smp\">cpuset_init_smp</a>(void);", 
"extern void <a class=\"id\" href=\"#cpuset_update_active_cpus\">cpuset_update_active_cpus</a>(void);", 
"extern void <a class=\"id\" href=\"#cpuset_cpus_allowed\">cpuset_cpus_allowed</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>, struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#mask\">mask</a>);", 
"extern int <a class=\"id\" href=\"#cpuset_cpus_allowed_fallback\">cpuset_cpus_allowed_fallback</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"extern <a class=\"id\" href=\"#nodemask_t\">nodemask_t</a> <a class=\"id\" href=\"#cpuset_mems_allowed\">cpuset_mems_allowed</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cpuset_current_mems_allowed\">cpuset_current_mems_allowed</a> (<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mems_allowed\">mems_allowed</a>)", 
"void <a class=\"id\" href=\"#cpuset_init_current_mems_allowed\">cpuset_init_current_mems_allowed</a>(void);", 
"int <a class=\"id\" href=\"#cpuset_nodemask_valid_mems_allowed\">cpuset_nodemask_valid_mems_allowed</a>(<a class=\"id\" href=\"#nodemask_t\">nodemask_t</a> *<a class=\"id\" href=\"#nodemask\">nodemask</a>);", 
"", 
"extern int <a class=\"id\" href=\"#__cpuset_node_allowed_softwall\">__cpuset_node_allowed_softwall</a>(int <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"extern int <a class=\"id\" href=\"#__cpuset_node_allowed_hardwall\">__cpuset_node_allowed_hardwall</a>(int <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#cpuset_node_allowed_softwall\">cpuset_node_allowed_softwall</a>(int <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#number_of_cpusets\">number_of_cpusets</a> <= 1 ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cpuset_node_allowed_softwall\">__cpuset_node_allowed_softwall</a>(<a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#cpuset_node_allowed_hardwall\">cpuset_node_allowed_hardwall</a>(int <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#number_of_cpusets\">number_of_cpusets</a> <= 1 ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cpuset_node_allowed_hardwall\">__cpuset_node_allowed_hardwall</a>(<a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#cpuset_zone_allowed_softwall\">cpuset_zone_allowed_softwall</a>(struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#z\">z</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpuset_node_allowed_softwall\">cpuset_node_allowed_softwall</a>(<a class=\"id\" href=\"#zone_to_nid\">zone_to_nid</a>(<a class=\"id\" href=\"#z\">z</a>), <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#cpuset_zone_allowed_hardwall\">cpuset_zone_allowed_hardwall</a>(struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#z\">z</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpuset_node_allowed_hardwall\">cpuset_node_allowed_hardwall</a>(<a class=\"id\" href=\"#zone_to_nid\">zone_to_nid</a>(<a class=\"id\" href=\"#z\">z</a>), <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"}", 
"", 
"extern int <a class=\"id\" href=\"#cpuset_mems_allowed_intersects\">cpuset_mems_allowed_intersects</a>(const struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk1\">tsk1</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk2\">tsk2</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cpuset_memory_pressure_bump\">cpuset_memory_pressure_bump</a>() <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpuset_memory_pressure_enabled\">cpuset_memory_pressure_enabled</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cpuset_memory_pressure_bump\">__cpuset_memory_pressure_bump</a>();<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>} while (0)", 
"extern int <a class=\"id\" href=\"#cpuset_memory_pressure_enabled\">cpuset_memory_pressure_enabled</a>;", 
"extern void <a class=\"id\" href=\"#__cpuset_memory_pressure_bump\">__cpuset_memory_pressure_bump</a>(void);", 
"", 
"extern const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_cpuset_operations\">proc_cpuset_operations</a>;", 
"struct <a class=\"id\" href=\"#seq_file\">seq_file</a>;", 
"extern void <a class=\"id\" href=\"#cpuset_task_status_allowed\">cpuset_task_status_allowed</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"", 
"extern int <a class=\"id\" href=\"#cpuset_mem_spread_node\">cpuset_mem_spread_node</a>(void);", 
"extern int <a class=\"id\" href=\"#cpuset_slab_spread_node\">cpuset_slab_spread_node</a>(void);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#cpuset_do_page_mem_spread\">cpuset_do_page_mem_spread</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#PF_SPREAD_PAGE\">PF_SPREAD_PAGE</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#cpuset_do_slab_mem_spread\">cpuset_do_slab_mem_spread</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#PF_SPREAD_SLAB\">PF_SPREAD_SLAB</a>;", 
"}", 
"", 
"extern int <a class=\"id\" href=\"#current_cpuset_is_being_rebound\">current_cpuset_is_being_rebound</a>(void);", 
"", 
"extern void <a class=\"id\" href=\"#rebuild_sched_domains\">rebuild_sched_domains</a>(void);", 
"", 
"extern void <a class=\"id\" href=\"#cpuset_print_task_mems_allowed\">cpuset_print_task_mems_allowed</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * reading current mems_allowed and mempolicy in the fastpath must protected</span>", 
"<span class=\"comment\"> * by get_mems_allowed()</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#get_mems_allowed\">get_mems_allowed</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mems_allowed_change_disable\">mems_allowed_change_disable</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ensure that reading mems_allowed and mempolicy happens after the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * update of -&gt;mems_allowed_change_disable.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the write-side task finds -&gt;mems_allowed_change_disable is not 0,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and knows the read-side task is reading mems_allowed or mempolicy,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so it will clear old bits lazily.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_mb\">smp_mb</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#put_mems_allowed\">put_mems_allowed</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ensure that reading mems_allowed and mempolicy before reducing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mems_allowed_change_disable.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the write-side task will know that the read-side task is still</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * reading mems_allowed or mempolicy, don't clears old bits in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * nodemask.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_mb\">smp_mb</a>();", 
"<span class=\"ts\"/>--<a class=\"id\" href=\"#ACCESS_ONCE\">ACCESS_ONCE</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mems_allowed_change_disable\">mems_allowed_change_disable</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_mems_allowed\">set_mems_allowed</a>(<a class=\"id\" href=\"#nodemask_t\">nodemask_t</a> <a class=\"id\" href=\"#nodemask\">nodemask</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_lock\">task_lock</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mems_allowed\">mems_allowed</a> = <a class=\"id\" href=\"#nodemask\">nodemask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_unlock\">task_unlock</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"}", 
"", 
"#else <span class=\"comment\">/* !CONFIG_CPUSETS */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#cpuset_init\">cpuset_init</a>(void) { return 0; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cpuset_init_smp\">cpuset_init_smp</a>(void) {}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cpuset_update_active_cpus\">cpuset_update_active_cpus</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#partition_sched_domains\">partition_sched_domains</a>(1, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cpuset_cpus_allowed\">cpuset_cpus_allowed</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_copy\">cpumask_copy</a>(<a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#cpu_possible_mask\">cpu_possible_mask</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#cpuset_cpus_allowed_fallback\">cpuset_cpus_allowed_fallback</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_copy\">cpumask_copy</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#cpus_allowed\">cpus_allowed</a>, <a class=\"id\" href=\"#cpu_possible_mask\">cpu_possible_mask</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpumask_any\">cpumask_any</a>(<a class=\"id\" href=\"#cpu_active_mask\">cpu_active_mask</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#nodemask_t\">nodemask_t</a> <a class=\"id\" href=\"#cpuset_mems_allowed\">cpuset_mems_allowed</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#node_possible_map\">node_possible_map</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cpuset_current_mems_allowed\">cpuset_current_mems_allowed</a> (<a class=\"id\" href=\"#node_states\">node_states</a>[<a class=\"id\" href=\"#N_HIGH_MEMORY\">N_HIGH_MEMORY</a>])", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cpuset_init_current_mems_allowed\">cpuset_init_current_mems_allowed</a>(void) {}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#cpuset_nodemask_valid_mems_allowed\">cpuset_nodemask_valid_mems_allowed</a>(<a class=\"id\" href=\"#nodemask_t\">nodemask_t</a> *<a class=\"id\" href=\"#nodemask\">nodemask</a>)", 
"{", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#cpuset_node_allowed_softwall\">cpuset_node_allowed_softwall</a>(int <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#cpuset_node_allowed_hardwall\">cpuset_node_allowed_hardwall</a>(int <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#cpuset_zone_allowed_softwall\">cpuset_zone_allowed_softwall</a>(struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#z\">z</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#cpuset_zone_allowed_hardwall\">cpuset_zone_allowed_hardwall</a>(struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#z\">z</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#cpuset_mems_allowed_intersects\">cpuset_mems_allowed_intersects</a>(const struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk1\">tsk1</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk2\">tsk2</a>)", 
"{", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cpuset_memory_pressure_bump\">cpuset_memory_pressure_bump</a>(void) {}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cpuset_task_status_allowed\">cpuset_task_status_allowed</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#cpuset_mem_spread_node\">cpuset_mem_spread_node</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#cpuset_slab_spread_node\">cpuset_slab_spread_node</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#cpuset_do_page_mem_spread\">cpuset_do_page_mem_spread</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#cpuset_do_slab_mem_spread\">cpuset_do_slab_mem_spread</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#current_cpuset_is_being_rebound\">current_cpuset_is_being_rebound</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#rebuild_sched_domains\">rebuild_sched_domains</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#partition_sched_domains\">partition_sched_domains</a>(1, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cpuset_print_task_mems_allowed\">cpuset_print_task_mems_allowed</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_mems_allowed\">set_mems_allowed</a>(<a class=\"id\" href=\"#nodemask_t\">nodemask_t</a> <a class=\"id\" href=\"#nodemask\">nodemask</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#get_mems_allowed\">get_mems_allowed</a>(void)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#put_mems_allowed\">put_mems_allowed</a>(void)", 
"{", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* !CONFIG_CPUSETS */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_CPUSET_H */</span>", 
];
xr_frag_insert('l/df/b291d10bb32770b64bc8e3f644695d6b1449f7.xr', __xr_tmp);
