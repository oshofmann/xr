var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\">  File: linux/ext2_xattr.h</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">  On-disk format of extended attributes for the ext2 filesystem.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">  (C) 2001 Andreas Gruenbacher, &lt;a.gruenbacher@computer.org&gt;</span>", 
"<span class=\"comment\">*/</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#xattr\">xattr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Magic value in attribute blocks */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT2_XATTR_MAGIC\">EXT2_XATTR_MAGIC</a><span class=\"ts\"/><span class=\"ts\"/>0xEA020000", 
"", 
"<span class=\"comment\">/* Maximum number of references to one attribute block */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT2_XATTR_REFCOUNT_MAX\">EXT2_XATTR_REFCOUNT_MAX</a><span class=\"ts\"/><span class=\"ts\"/>1024", 
"", 
"<span class=\"comment\">/* Name indexes */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT2_XATTR_INDEX_USER\">EXT2_XATTR_INDEX_USER</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT2_XATTR_INDEX_POSIX_ACL_ACCESS\">EXT2_XATTR_INDEX_POSIX_ACL_ACCESS</a><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT2_XATTR_INDEX_POSIX_ACL_DEFAULT\">EXT2_XATTR_INDEX_POSIX_ACL_DEFAULT</a><span class=\"ts\"/>3", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT2_XATTR_INDEX_TRUSTED\">EXT2_XATTR_INDEX_TRUSTED</a><span class=\"ts\"/><span class=\"ts\"/>4", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT2_XATTR_INDEX_LUSTRE\">EXT2_XATTR_INDEX_LUSTRE</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>5", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT2_XATTR_INDEX_SECURITY\">EXT2_XATTR_INDEX_SECURITY</a><span class=\"ts\"/>        6", 
"", 
"struct <a class=\"id\" href=\"#ext2_xattr_header\">ext2_xattr_header</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#h_magic\">h_magic</a>;<span class=\"ts\"/><span class=\"comment\">/* magic number for identification */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#h_refcount\">h_refcount</a>;<span class=\"ts\"/><span class=\"comment\">/* reference count */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#h_blocks\">h_blocks</a>;<span class=\"ts\"/><span class=\"comment\">/* number of disk blocks used */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#h_hash\">h_hash</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* hash value of all attributes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#h_reserved\">h_reserved</a>[4];<span class=\"ts\"/><span class=\"comment\">/* zero right now */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ext2_xattr_entry\">ext2_xattr_entry</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#e_name_len\">e_name_len</a>;<span class=\"ts\"/><span class=\"comment\">/* length of name */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#e_name_index\">e_name_index</a>;<span class=\"ts\"/><span class=\"comment\">/* attribute name index */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>;<span class=\"ts\"/><span class=\"comment\">/* offset in disk block of value */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#e_value_block\">e_value_block</a>;<span class=\"ts\"/><span class=\"comment\">/* disk block attribute is stored on (n/i) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#e_value_size\">e_value_size</a>;<span class=\"ts\"/><span class=\"comment\">/* size of attribute value */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#e_hash\">e_hash</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* hash value of name and value */</span>", 
"<span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#e_name\">e_name</a>[0];<span class=\"ts\"/><span class=\"comment\">/* attribute name */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT2_XATTR_PAD_BITS\">EXT2_XATTR_PAD_BITS</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT2_XATTR_PAD\">EXT2_XATTR_PAD</a><span class=\"ts\"/><span class=\"ts\"/>(1<<<a class=\"id\" href=\"#EXT2_XATTR_PAD_BITS\">EXT2_XATTR_PAD_BITS</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT2_XATTR_ROUND\">EXT2_XATTR_ROUND</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT2_XATTR_PAD\">EXT2_XATTR_PAD</a>-1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT2_XATTR_LEN\">EXT2_XATTR_LEN</a>(<a class=\"id\" href=\"#name_len\">name_len</a>) \\", 
"<span class=\"ts\"/>(((<a class=\"id\" href=\"#name_len\">name_len</a>) + <a class=\"id\" href=\"#EXT2_XATTR_ROUND\">EXT2_XATTR_ROUND</a> + \\", 
"<span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#ext2_xattr_entry\">ext2_xattr_entry</a>)) &amp; ~<a class=\"id\" href=\"#EXT2_XATTR_ROUND\">EXT2_XATTR_ROUND</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT2_XATTR_NEXT\">EXT2_XATTR_NEXT</a>(<a class=\"id\" href=\"#entry\">entry</a>) \\", 
"<span class=\"ts\"/>( (struct <a class=\"id\" href=\"#ext2_xattr_entry\">ext2_xattr_entry</a> *)( \\", 
"<span class=\"ts\"/>  (char *)(<a class=\"id\" href=\"#entry\">entry</a>) + <a class=\"id\" href=\"#EXT2_XATTR_LEN\">EXT2_XATTR_LEN</a>((<a class=\"id\" href=\"#entry\">entry</a>)-><a class=\"id\" href=\"#e_name_len\">e_name_len</a>)) )", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT2_XATTR_SIZE\">EXT2_XATTR_SIZE</a>(<a class=\"id\" href=\"#size\">size</a>) \\", 
"<span class=\"ts\"/>(((<a class=\"id\" href=\"#size\">size</a>) + <a class=\"id\" href=\"#EXT2_XATTR_ROUND\">EXT2_XATTR_ROUND</a>) &amp; ~<a class=\"id\" href=\"#EXT2_XATTR_ROUND\">EXT2_XATTR_ROUND</a>)", 
"", 
"# <a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT2_FS_XATTR\">CONFIG_EXT2_FS_XATTR</a>", 
"", 
"extern const struct <a class=\"id\" href=\"#xattr_handler\">xattr_handler</a> <a class=\"id\" href=\"#ext2_xattr_user_handler\">ext2_xattr_user_handler</a>;", 
"extern const struct <a class=\"id\" href=\"#xattr_handler\">xattr_handler</a> <a class=\"id\" href=\"#ext2_xattr_trusted_handler\">ext2_xattr_trusted_handler</a>;", 
"extern const struct <a class=\"id\" href=\"#xattr_handler\">xattr_handler</a> <a class=\"id\" href=\"#ext2_xattr_acl_access_handler\">ext2_xattr_acl_access_handler</a>;", 
"extern const struct <a class=\"id\" href=\"#xattr_handler\">xattr_handler</a> <a class=\"id\" href=\"#ext2_xattr_acl_default_handler\">ext2_xattr_acl_default_handler</a>;", 
"extern const struct <a class=\"id\" href=\"#xattr_handler\">xattr_handler</a> <a class=\"id\" href=\"#ext2_xattr_security_handler\">ext2_xattr_security_handler</a>;", 
"", 
"extern <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ext2_listxattr\">ext2_listxattr</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *, char *, <a class=\"id\" href=\"#size_t\">size_t</a>);", 
"", 
"extern int <a class=\"id\" href=\"#ext2_xattr_get\">ext2_xattr_get</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, int, const char *, void *, <a class=\"id\" href=\"#size_t\">size_t</a>);", 
"extern int <a class=\"id\" href=\"#ext2_xattr_set\">ext2_xattr_set</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, int, const char *, const void *, <a class=\"id\" href=\"#size_t\">size_t</a>, int);", 
"", 
"extern void <a class=\"id\" href=\"#ext2_xattr_delete_inode\">ext2_xattr_delete_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern void <a class=\"id\" href=\"#ext2_xattr_put_super\">ext2_xattr_put_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *);", 
"", 
"extern int <a class=\"id\" href=\"#init_ext2_xattr\">init_ext2_xattr</a>(void);", 
"extern void <a class=\"id\" href=\"#exit_ext2_xattr\">exit_ext2_xattr</a>(void);", 
"", 
"extern const struct <a class=\"id\" href=\"#xattr_handler\">xattr_handler</a> *<a class=\"id\" href=\"#ext2_xattr_handlers\">ext2_xattr_handlers</a>[];", 
"", 
"# else  <span class=\"comment\">/* CONFIG_EXT2_FS_XATTR */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#ext2_xattr_get\">ext2_xattr_get</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#name_index\">name_index</a>,", 
"<span class=\"ts\"/>       const char *<a class=\"id\" href=\"#name\">name</a>, void *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#ext2_xattr_set\">ext2_xattr_set</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#name_index\">name_index</a>, const char *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/>       const void *<a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#ext2_xattr_delete_inode\">ext2_xattr_delete_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#ext2_xattr_put_super\">ext2_xattr_put_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#init_ext2_xattr\">init_ext2_xattr</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#exit_ext2_xattr\">exit_ext2_xattr</a>(void)", 
"{", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext2_xattr_handlers\">ext2_xattr_handlers</a> <a class=\"id\" href=\"#NULL\">NULL</a>", 
"", 
"# <a class=\"id\" href=\"#endif\">endif</a>  <span class=\"comment\">/* CONFIG_EXT2_FS_XATTR */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT2_FS_SECURITY\">CONFIG_EXT2_FS_SECURITY</a>", 
"extern int <a class=\"id\" href=\"#ext2_init_security\">ext2_init_security</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ext2_init_security\">ext2_init_security</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/e0/ec6d8e992547c5c4275af04dfd561f5a7cc9b9.xr', __xr_tmp);
