var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#exit_code\">exit_code</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p_code\">p_code</a> = <a class=\"id\" href=\"#task_stopped_code\">task_stopped_code</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#ptrace\">ptrace</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#p_code\">p_code</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock_sig\">unlock_sig</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#exit_code\">exit_code</a> = *<a class=\"id\" href=\"#p_code\">p_code</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#exit_code\">exit_code</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock_sig\">unlock_sig</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#wo_flags\">wo_flags</a> &amp; <a class=\"id\" href=\"#WNOWAIT\">WNOWAIT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#p_code\">p_code</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uid\">uid</a> = <a class=\"id\" href=\"#task_uid\">task_uid</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<a class=\"id\" href=\"#unlock_sig\">unlock_sig</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#exit_code\">exit_code</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Now we are pretty sure this task is interesting.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Make sure it doesn't get reaped out from under us while we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * give up the lock and then examine it below.  We don't want to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * keep holding onto the tasklist_lock while we call getrusage and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * possibly take page faults for user memory.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_task_struct\">get_task_struct</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#task_pid_vnr\">task_pid_vnr</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#why\">why</a> = <a class=\"id\" href=\"#ptrace\">ptrace</a> ? <a class=\"id\" href=\"#CLD_TRAPPED\">CLD_TRAPPED</a> : <a class=\"id\" href=\"#CLD_STOPPED\">CLD_STOPPED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#wo_flags\">wo_flags</a> &amp; <a class=\"id\" href=\"#WNOWAIT\">WNOWAIT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#wait_noreap_copyout\">wait_noreap_copyout</a>(<a class=\"id\" href=\"#wo\">wo</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#uid\">uid</a>, <a class=\"id\" href=\"#why\">why</a>, <a class=\"id\" href=\"#exit_code\">exit_code</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#wo_rusage\">wo_rusage</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>? <a class=\"id\" href=\"#getrusage\">getrusage</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#RUSAGE_BOTH\">RUSAGE_BOTH</a>, <a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#wo_rusage\">wo_rusage</a>) : 0;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#retval\">retval</a> && <a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#wo_stat\">wo_stat</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#put_user\">put_user</a>((<a class=\"id\" href=\"#exit_code\">exit_code</a> << 8) | 0x7f, <a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#wo_stat\">wo_stat</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#infop\">infop</a> = <a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#wo_info\">wo_info</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#retval\">retval</a> && <a class=\"id\" href=\"#infop\">infop</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#SIGCHLD\">SIGCHLD</a>, &amp;<a class=\"id\" href=\"#infop\">infop</a>-><a class=\"id\" href=\"#si_signo\">si_signo</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#retval\">retval</a> && <a class=\"id\" href=\"#infop\">infop</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#put_user\">put_user</a>(0, &amp;<a class=\"id\" href=\"#infop\">infop</a>-><a class=\"id\" href=\"#si_errno\">si_errno</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#retval\">retval</a> && <a class=\"id\" href=\"#infop\">infop</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#put_user\">put_user</a>((short)<a class=\"id\" href=\"#why\">why</a>, &amp;<a class=\"id\" href=\"#infop\">infop</a>-><a class=\"id\" href=\"#si_code\">si_code</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#retval\">retval</a> && <a class=\"id\" href=\"#infop\">infop</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#exit_code\">exit_code</a>, &amp;<a class=\"id\" href=\"#infop\">infop</a>-><a class=\"id\" href=\"#si_status\">si_status</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#retval\">retval</a> && <a class=\"id\" href=\"#infop\">infop</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#pid\">pid</a>, &amp;<a class=\"id\" href=\"#infop\">infop</a>-><a class=\"id\" href=\"#si_pid\">si_pid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#retval\">retval</a> && <a class=\"id\" href=\"#infop\">infop</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#uid\">uid</a>, &amp;<a class=\"id\" href=\"#infop\">infop</a>-><a class=\"id\" href=\"#si_uid\">si_uid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#retval\">retval</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Handle do_wait work for one task in a live, non-stopped state.</span>", 
"<span class=\"comment\"> * read_lock(&amp;tasklist_lock) on entry.  If we return zero, we still hold</span>", 
"<span class=\"comment\"> * the lock and this task is uninteresting.  If we return nonzero, we have</span>", 
"<span class=\"comment\"> * released the lock and the system call should return.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#wait_task_continued\">wait_task_continued</a>(struct <a class=\"id\" href=\"#wait_opts\">wait_opts</a> *<a class=\"id\" href=\"#wo\">wo</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pid_t\">pid_t</a> <a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a> <a class=\"id\" href=\"#uid\">uid</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#wo_flags\">wo_flags</a> &amp; <a class=\"id\" href=\"#WCONTINUED\">WCONTINUED</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SIGNAL_STOP_CONTINUED\">SIGNAL_STOP_CONTINUED</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Re-check with the lock held.  */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SIGNAL_STOP_CONTINUED\">SIGNAL_STOP_CONTINUED</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#wo_flags\">wo_flags</a> &amp; <a class=\"id\" href=\"#WNOWAIT\">WNOWAIT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#SIGNAL_STOP_CONTINUED\">SIGNAL_STOP_CONTINUED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uid\">uid</a> = <a class=\"id\" href=\"#task_uid\">task_uid</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#task_pid_vnr\">task_pid_vnr</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_task_struct\">get_task_struct</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#wo_info\">wo_info</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#wo_rusage\">wo_rusage</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>? <a class=\"id\" href=\"#getrusage\">getrusage</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#RUSAGE_BOTH\">RUSAGE_BOTH</a>, <a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#wo_rusage\">wo_rusage</a>) : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#retval\">retval</a> && <a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#wo_stat\">wo_stat</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#put_user\">put_user</a>(0xffff, <a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#wo_stat\">wo_stat</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#wait_noreap_copyout\">wait_noreap_copyout</a>(<a class=\"id\" href=\"#wo\">wo</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#uid\">uid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#CLD_CONTINUED\">CLD_CONTINUED</a>, <a class=\"id\" href=\"#SIGCONT\">SIGCONT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#retval\">retval</a> == 0);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Consider @p for a wait by @parent.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * -ECHILD should be in -&gt;notask_error before the first call.</span>", 
"<span class=\"comment\"> * Returns nonzero for a final return, when we have unlocked tasklist_lock.</span>", 
"<span class=\"comment\"> * Returns zero if the search for a child should continue;</span>", 
"<span class=\"comment\"> * then -&gt;notask_error is 0 if @p is an eligible child,</span>", 
"<span class=\"comment\"> * or another error from security_task_wait(), or still -ECHILD.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#wait_consider_task\">wait_consider_task</a>(struct <a class=\"id\" href=\"#wait_opts\">wait_opts</a> *<a class=\"id\" href=\"#wo\">wo</a>, int <a class=\"id\" href=\"#ptrace\">ptrace</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#eligible_child\">eligible_child</a>(<a class=\"id\" href=\"#wo\">wo</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#security_task_wait\">security_task_wait</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If we have not yet seen any eligible child,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * then let this error code replace -ECHILD.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * A permission error will give the user a clue</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to look for security policy problems, rather</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * than for mysterious wait bugs.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#notask_error\">notask_error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#notask_error\">notask_error</a> = <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(!<a class=\"id\" href=\"#ptrace\">ptrace</a>) && <a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#task_ptrace\">task_ptrace</a>(<a class=\"id\" href=\"#p\">p</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * This child is hidden by ptrace.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We aren't allowed to see it now, but eventually we will.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#notask_error\">notask_error</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#exit_state\">exit_state</a> == <a class=\"id\" href=\"#EXIT_DEAD\">EXIT_DEAD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We don't reap group leaders with subthreads.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#exit_state\">exit_state</a> == <a class=\"id\" href=\"#EXIT_ZOMBIE\">EXIT_ZOMBIE</a> && !<a class=\"id\" href=\"#delay_group_leader\">delay_group_leader</a>(<a class=\"id\" href=\"#p\">p</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#wait_task_zombie\">wait_task_zombie</a>(<a class=\"id\" href=\"#wo\">wo</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It's stopped or running now, so it might</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * later continue, exit, or stop again.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#notask_error\">notask_error</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task_stopped_code\">task_stopped_code</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#ptrace\">ptrace</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#wait_task_stopped\">wait_task_stopped</a>(<a class=\"id\" href=\"#wo\">wo</a>, <a class=\"id\" href=\"#ptrace\">ptrace</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#wait_task_continued\">wait_task_continued</a>(<a class=\"id\" href=\"#wo\">wo</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Do the work of do_wait() for one thread in the group, @tsk.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * -ECHILD should be in -&gt;notask_error before the first call.</span>", 
"<span class=\"comment\"> * Returns nonzero for a final return, when we have unlocked tasklist_lock.</span>", 
"<span class=\"comment\"> * Returns zero if the search for a child should continue; then</span>", 
"<span class=\"comment\"> * -&gt;notask_error is 0 if there were any eligible children,</span>", 
"<span class=\"comment\"> * or another error from security_task_wait(), or still -ECHILD.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#do_wait_thread\">do_wait_thread</a>(struct <a class=\"id\" href=\"#wait_opts\">wait_opts</a> *<a class=\"id\" href=\"#wo\">wo</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#children\">children</a>, <a class=\"id\" href=\"#sibling\">sibling</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#wait_consider_task\">wait_consider_task</a>(<a class=\"id\" href=\"#wo\">wo</a>, 0, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ptrace_do_wait\">ptrace_do_wait</a>(struct <a class=\"id\" href=\"#wait_opts\">wait_opts</a> *<a class=\"id\" href=\"#wo\">wo</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#ptraced\">ptraced</a>, <a class=\"id\" href=\"#ptrace_entry\">ptrace_entry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#wait_consider_task\">wait_consider_task</a>(<a class=\"id\" href=\"#wo\">wo</a>, 1, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#child_wait_callback\">child_wait_callback</a>(<a class=\"id\" href=\"#wait_queue_t\">wait_queue_t</a> *<a class=\"id\" href=\"#wait\">wait</a>, unsigned <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#sync\">sync</a>, void *<a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#wait_opts\">wait_opts</a> *<a class=\"id\" href=\"#wo\">wo</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#wait\">wait</a>, struct <a class=\"id\" href=\"#wait_opts\">wait_opts</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child_wait\">child_wait</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#key\">key</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#eligible_pid\">eligible_pid</a>(<a class=\"id\" href=\"#wo\">wo</a>, <a class=\"id\" href=\"#p\">p</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#wo_flags\">wo_flags</a> &amp; <a class=\"id\" href=\"#__WNOTHREAD\">__WNOTHREAD</a>) && <a class=\"id\" href=\"#wait\">wait</a>-><a class=\"id\" href=\"#private\">private</a> != <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#default_wake_function\">default_wake_function</a>(<a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#sync\">sync</a>, <a class=\"id\" href=\"#key\">key</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#__wake_up_parent\">__wake_up_parent</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#parent\">parent</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__wake_up_sync_key\">__wake_up_sync_key</a>(&amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#wait_chldexit\">wait_chldexit</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>, 1, <a class=\"id\" href=\"#p\">p</a>);", 
"}", 
"", 
"static long <a class=\"id\" href=\"#do_wait\">do_wait</a>(struct <a class=\"id\" href=\"#wait_opts\">wait_opts</a> *<a class=\"id\" href=\"#wo\">wo</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_sched_process_wait\">trace_sched_process_wait</a>(<a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#wo_pid\">wo_pid</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_func_entry\">init_waitqueue_func_entry</a>(&amp;<a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#child_wait\">child_wait</a>, <a class=\"id\" href=\"#child_wait_callback\">child_wait_callback</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#child_wait\">child_wait</a>.<a class=\"id\" href=\"#private\">private</a> = <a class=\"id\" href=\"#current\">current</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_wait_queue\">add_wait_queue</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#wait_chldexit\">wait_chldexit</a>, &amp;<a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#child_wait\">child_wait</a>);", 
"<a class=\"id\" href=\"#repeat\">repeat</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If there is nothing that can match our critiera just get out.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We will clear -&gt;notask_error to zero if we see any child that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * might later match our criteria, even if we are not able to reap</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it yet.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#notask_error\">notask_error</a> = -<a class=\"id\" href=\"#ECHILD\">ECHILD</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#wo_type\">wo_type</a> &lt; <a class=\"id\" href=\"#PIDTYPE_MAX\">PIDTYPE_MAX</a>) &&", 
"<span class=\"ts\"/>   (!<a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#wo_pid\">wo_pid</a> || <a class=\"id\" href=\"#hlist_empty\">hlist_empty</a>(&amp;<a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#wo_pid\">wo_pid</a>-><a class=\"id\" href=\"#tasks\">tasks</a>[<a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#wo_type\">wo_type</a>])))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#notask\">notask</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_current_state\">set_current_state</a>(<a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tsk\">tsk</a> = <a class=\"id\" href=\"#current\">current</a>;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#do_wait_thread\">do_wait_thread</a>(<a class=\"id\" href=\"#wo\">wo</a>, <a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#ptrace_do_wait\">ptrace_do_wait</a>(<a class=\"id\" href=\"#wo\">wo</a>, <a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#wo_flags\">wo_flags</a> &amp; <a class=\"id\" href=\"#__WNOTHREAD\">__WNOTHREAD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#while_each_thread\">while_each_thread</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"", 
"<a class=\"id\" href=\"#notask\">notask</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#notask_error\">notask_error</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#retval\">retval</a> && !(<a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#wo_flags\">wo_flags</a> &amp; <a class=\"id\" href=\"#WNOHANG\">WNOHANG</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ERESTARTSYS\">ERESTARTSYS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#repeat\">repeat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#end\">end</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__set_current_state\">__set_current_state</a>(<a class=\"id\" href=\"#TASK_RUNNING\">TASK_RUNNING</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remove_wait_queue\">remove_wait_queue</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#wait_chldexit\">wait_chldexit</a>, &amp;<a class=\"id\" href=\"#wo\">wo</a>-><a class=\"id\" href=\"#child_wait\">child_wait</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE5\">SYSCALL_DEFINE5</a>(<a class=\"id\" href=\"#waitid\">waitid</a>, int, <a class=\"id\" href=\"#which\">which</a>, <a class=\"id\" href=\"#pid_t\">pid_t</a>, <a class=\"id\" href=\"#upid\">upid</a>, struct <a class=\"id\" href=\"#siginfo\">siginfo</a> <a class=\"id\" href=\"#__user\">__user</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#infop\">infop</a>, int, <a class=\"id\" href=\"#options\">options</a>, struct <a class=\"id\" href=\"#rusage\">rusage</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#ru\">ru</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#wait_opts\">wait_opts</a> <a class=\"id\" href=\"#wo\">wo</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#pid_type\">pid_type</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#options\">options</a> &amp; ~(<a class=\"id\" href=\"#WNOHANG\">WNOHANG</a>|<a class=\"id\" href=\"#WNOWAIT\">WNOWAIT</a>|<a class=\"id\" href=\"#WEXITED\">WEXITED</a>|<a class=\"id\" href=\"#WSTOPPED\">WSTOPPED</a>|<a class=\"id\" href=\"#WCONTINUED\">WCONTINUED</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#options\">options</a> &amp; (<a class=\"id\" href=\"#WEXITED\">WEXITED</a>|<a class=\"id\" href=\"#WSTOPPED\">WSTOPPED</a>|<a class=\"id\" href=\"#WCONTINUED\">WCONTINUED</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#which\">which</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#P_ALL\">P_ALL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#PIDTYPE_MAX\">PIDTYPE_MAX</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#P_PID\">P_PID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#PIDTYPE_PID\">PIDTYPE_PID</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#upid\">upid</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#P_PGID\">P_PGID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#PIDTYPE_PGID\">PIDTYPE_PGID</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#upid\">upid</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> &lt; <a class=\"id\" href=\"#PIDTYPE_MAX\">PIDTYPE_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#find_get_pid\">find_get_pid</a>(<a class=\"id\" href=\"#upid\">upid</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wo\">wo</a>.<a class=\"id\" href=\"#wo_type\">wo_type</a><span class=\"ts\"/>= <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wo\">wo</a>.<a class=\"id\" href=\"#wo_pid\">wo_pid</a><span class=\"ts\"/>= <a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wo\">wo</a>.<a class=\"id\" href=\"#wo_flags\">wo_flags</a><span class=\"ts\"/>= <a class=\"id\" href=\"#options\">options</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wo\">wo</a>.<a class=\"id\" href=\"#wo_info\">wo_info</a><span class=\"ts\"/>= <a class=\"id\" href=\"#infop\">infop</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wo\">wo</a>.<a class=\"id\" href=\"#wo_stat\">wo_stat</a><span class=\"ts\"/>= <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wo\">wo</a>.<a class=\"id\" href=\"#wo_rusage\">wo_rusage</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ru\">ru</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_wait\">do_wait</a>(&amp;<a class=\"id\" href=\"#wo\">wo</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#infop\">infop</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * For a WNOHANG return, clear out all the fields</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we would set so the user can easily tell the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * difference.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#put_user\">put_user</a>(0, &amp;<a class=\"id\" href=\"#infop\">infop</a>-><a class=\"id\" href=\"#si_signo\">si_signo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#put_user\">put_user</a>(0, &amp;<a class=\"id\" href=\"#infop\">infop</a>-><a class=\"id\" href=\"#si_errno\">si_errno</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#put_user\">put_user</a>(0, &amp;<a class=\"id\" href=\"#infop\">infop</a>-><a class=\"id\" href=\"#si_code\">si_code</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#put_user\">put_user</a>(0, &amp;<a class=\"id\" href=\"#infop\">infop</a>-><a class=\"id\" href=\"#si_pid\">si_pid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#put_user\">put_user</a>(0, &amp;<a class=\"id\" href=\"#infop\">infop</a>-><a class=\"id\" href=\"#si_uid\">si_uid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#put_user\">put_user</a>(0, &amp;<a class=\"id\" href=\"#infop\">infop</a>-><a class=\"id\" href=\"#si_status\">si_status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#pid\">pid</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* avoid REGPARM breakage on x86: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asmlinkage_protect\">asmlinkage_protect</a>(5, <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#which\">which</a>, <a class=\"id\" href=\"#upid\">upid</a>, <a class=\"id\" href=\"#infop\">infop</a>, <a class=\"id\" href=\"#options\">options</a>, <a class=\"id\" href=\"#ru\">ru</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE4\">SYSCALL_DEFINE4</a>(<a class=\"id\" href=\"#wait4\">wait4</a>, <a class=\"id\" href=\"#pid_t\">pid_t</a>, <a class=\"id\" href=\"#upid\">upid</a>, int <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#stat_addr\">stat_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int, <a class=\"id\" href=\"#options\">options</a>, struct <a class=\"id\" href=\"#rusage\">rusage</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#ru\">ru</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#wait_opts\">wait_opts</a> <a class=\"id\" href=\"#wo\">wo</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#pid_type\">pid_type</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#options\">options</a> &amp; ~(<a class=\"id\" href=\"#WNOHANG\">WNOHANG</a>|<a class=\"id\" href=\"#WUNTRACED\">WUNTRACED</a>|<a class=\"id\" href=\"#WCONTINUED\">WCONTINUED</a>|", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__WNOTHREAD\">__WNOTHREAD</a>|<a class=\"id\" href=\"#__WCLONE\">__WCLONE</a>|<a class=\"id\" href=\"#__WALL\">__WALL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#upid\">upid</a> == -1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#PIDTYPE_MAX\">PIDTYPE_MAX</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#upid\">upid</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#PIDTYPE_PGID\">PIDTYPE_PGID</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#find_get_pid\">find_get_pid</a>(-<a class=\"id\" href=\"#upid\">upid</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#upid\">upid</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#PIDTYPE_PGID\">PIDTYPE_PGID</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#get_task_pid\">get_task_pid</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#PIDTYPE_PGID\">PIDTYPE_PGID</a>);", 
"<span class=\"ts\"/>} else <span class=\"comment\">/* upid &gt; 0 */</span> {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#PIDTYPE_PID\">PIDTYPE_PID</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#find_get_pid\">find_get_pid</a>(<a class=\"id\" href=\"#upid\">upid</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wo\">wo</a>.<a class=\"id\" href=\"#wo_type\">wo_type</a><span class=\"ts\"/>= <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wo\">wo</a>.<a class=\"id\" href=\"#wo_pid\">wo_pid</a><span class=\"ts\"/>= <a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wo\">wo</a>.<a class=\"id\" href=\"#wo_flags\">wo_flags</a><span class=\"ts\"/>= <a class=\"id\" href=\"#options\">options</a> | <a class=\"id\" href=\"#WEXITED\">WEXITED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wo\">wo</a>.<a class=\"id\" href=\"#wo_info\">wo_info</a><span class=\"ts\"/>= <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wo\">wo</a>.<a class=\"id\" href=\"#wo_stat\">wo_stat</a><span class=\"ts\"/>= <a class=\"id\" href=\"#stat_addr\">stat_addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wo\">wo</a>.<a class=\"id\" href=\"#wo_rusage\">wo_rusage</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ru\">ru</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_wait\">do_wait</a>(&amp;<a class=\"id\" href=\"#wo\">wo</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#pid\">pid</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* avoid REGPARM breakage on x86: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asmlinkage_protect\">asmlinkage_protect</a>(4, <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#upid\">upid</a>, <a class=\"id\" href=\"#stat_addr\">stat_addr</a>, <a class=\"id\" href=\"#options\">options</a>, <a class=\"id\" href=\"#ru\">ru</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__ARCH_WANT_SYS_WAITPID\">__ARCH_WANT_SYS_WAITPID</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * sys_waitpid() remains for compatibility. waitpid() should be</span>", 
"<span class=\"comment\"> * implemented by calling sys_wait4() from libc.a.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#waitpid\">waitpid</a>, <a class=\"id\" href=\"#pid_t\">pid_t</a>, <a class=\"id\" href=\"#pid\">pid</a>, int <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#stat_addr\">stat_addr</a>, int, <a class=\"id\" href=\"#options\">options</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sys_wait4\">sys_wait4</a>(<a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#stat_addr\">stat_addr</a>, <a class=\"id\" href=\"#options\">options</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/e1/315fb73871fc58401613d4dccd9531bb03f027.xr', __xr_tmp);
