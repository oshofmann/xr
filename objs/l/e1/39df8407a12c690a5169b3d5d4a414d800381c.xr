var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Common hypervisor code</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2008, VMware, Inc.</span>", 
"<span class=\"comment\"> * Author : Alok N Kataria &lt;akataria@vmware.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful, but</span>", 
"<span class=\"comment\"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, GOOD TITLE or</span>", 
"<span class=\"comment\"> * NON INFRINGEMENT.  See the GNU General Public License for more</span>", 
"<span class=\"comment\"> * details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#hypervisor\">hypervisor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Hypervisor detect order.  This is specified explicitly here because</span>", 
"<span class=\"comment\"> * some hypervisors might implement compatibility modes for other</span>", 
"<span class=\"comment\"> * hypervisors and therefore need to be detected in specific sequence.</span>", 
"<span class=\"comment\"> */</span>", 
"static const <a class=\"id\" href=\"#__initconst\">__initconst</a> struct <a class=\"id\" href=\"#hypervisor_x86\">hypervisor_x86</a> * const <a class=\"id\" href=\"#hypervisors\">hypervisors</a>[] =", 
"{", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#x86_hyper_vmware\">x86_hyper_vmware</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#x86_hyper_ms_hyperv\">x86_hyper_ms_hyperv</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_XEN_PVHVM\">CONFIG_XEN_PVHVM</a>", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#x86_hyper_xen_hvm\">x86_hyper_xen_hvm</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"const struct <a class=\"id\" href=\"#hypervisor_x86\">hypervisor_x86</a> *<a class=\"id\" href=\"#x86_hyper\">x86_hyper</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#x86_hyper\">x86_hyper</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#detect_hypervisor_vendor\">detect_hypervisor_vendor</a>(void)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#hypervisor_x86\">hypervisor_x86</a> *<a class=\"id\" href=\"#h\">h</a>, * const *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#hypervisors\">hypervisors</a>; <a class=\"id\" href=\"#p\">p</a> &lt; <a class=\"id\" href=\"#hypervisors\">hypervisors</a> + <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#hypervisors\">hypervisors</a>); <a class=\"id\" href=\"#p\">p</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a> = *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#detect\">detect</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_hyper\">x86_hyper</a> = <a class=\"id\" href=\"#h\">h</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Hypervisor detected: %s\\n\", <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#init_hypervisor\">init_hypervisor</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#x86_hyper\">x86_hyper</a> && <a class=\"id\" href=\"#x86_hyper\">x86_hyper</a>-><a class=\"id\" href=\"#set_cpu_features\">set_cpu_features</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_hyper\">x86_hyper</a>-><a class=\"id\" href=\"#set_cpu_features\">set_cpu_features</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_hypervisor_platform\">init_hypervisor_platform</a>(void)", 
"{", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#detect_hypervisor_vendor\">detect_hypervisor_vendor</a>();", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#x86_hyper\">x86_hyper</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_hypervisor\">init_hypervisor</a>(&amp;<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#x86_hyper\">x86_hyper</a>-><a class=\"id\" href=\"#init_platform\">init_platform</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_hyper\">x86_hyper</a>-><a class=\"id\" href=\"#init_platform\">init_platform</a>();", 
"}", 
];
xr_frag_insert('l/e1/39df8407a12c690a5169b3d5d4a414d800381c.xr', __xr_tmp);
