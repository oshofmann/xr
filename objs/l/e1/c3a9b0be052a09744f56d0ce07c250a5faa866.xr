var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  acpi_fan.c - ACPI Fan Driver ($Revision: 29 $)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 2001, 2002 Andy Grover &lt;andrew.grover@intel.com&gt;</span>", 
"<span class=\"comment\"> *  Copyright (C) 2001, 2002 Paul Diefenbaugh &lt;paul.s.diefenbaugh@intel.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *  it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> *  the Free Software Foundation; either version 2 of the License, or (at</span>", 
"<span class=\"comment\"> *  your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is distributed in the hope that it will be useful, but</span>", 
"<span class=\"comment\"> *  WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>", 
"<span class=\"comment\"> *  General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  You should have received a copy of the GNU General Public License along</span>", 
"<span class=\"comment\"> *  with this program; if not, write to the Free Software Foundation, Inc.,</span>", 
"<span class=\"comment\"> *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#thermal\">thermal</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi_bus\">acpi_bus</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi_drivers\">acpi_drivers</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"ACPI: \"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_FAN_CLASS\">ACPI_FAN_CLASS</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"fan\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_FAN_FILE_STATE\">ACPI_FAN_FILE_STATE</a><span class=\"ts\"/><span class=\"ts\"/>\"state\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_COMPONENT\">_COMPONENT</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FAN_COMPONENT\">ACPI_FAN_COMPONENT</a>", 
"<a class=\"id\" href=\"#ACPI_MODULE_NAME\">ACPI_MODULE_NAME</a>(\"fan\");", 
"", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"Paul Diefenbaugh\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"ACPI Fan Driver\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"", 
"static int <a class=\"id\" href=\"#acpi_fan_add\">acpi_fan_add</a>(struct <a class=\"id\" href=\"#acpi_device\">acpi_device</a> *<a class=\"id\" href=\"#device\">device</a>);", 
"static int <a class=\"id\" href=\"#acpi_fan_remove\">acpi_fan_remove</a>(struct <a class=\"id\" href=\"#acpi_device\">acpi_device</a> *<a class=\"id\" href=\"#device\">device</a>, int <a class=\"id\" href=\"#type\">type</a>);", 
"static int <a class=\"id\" href=\"#acpi_fan_suspend\">acpi_fan_suspend</a>(struct <a class=\"id\" href=\"#acpi_device\">acpi_device</a> *<a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#pm_message_t\">pm_message_t</a> <a class=\"id\" href=\"#state\">state</a>);", 
"static int <a class=\"id\" href=\"#acpi_fan_resume\">acpi_fan_resume</a>(struct <a class=\"id\" href=\"#acpi_device\">acpi_device</a> *<a class=\"id\" href=\"#device\">device</a>);", 
"", 
"static const struct <a class=\"id\" href=\"#acpi_device_id\">acpi_device_id</a> <a class=\"id\" href=\"#fan_device_ids\">fan_device_ids</a>[] = {", 
"<span class=\"ts\"/>{\"PNP0C0B\", 0},", 
"<span class=\"ts\"/>{\"\", 0},", 
"};", 
"<a class=\"id\" href=\"#MODULE_DEVICE_TABLE\">MODULE_DEVICE_TABLE</a>(<a class=\"id\" href=\"#acpi\">acpi</a>, <a class=\"id\" href=\"#fan_device_ids\">fan_device_ids</a>);", 
"", 
"static struct <a class=\"id\" href=\"#acpi_driver\">acpi_driver</a> <a class=\"id\" href=\"#acpi_fan_driver\">acpi_fan_driver</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> = \"fan\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#class\">class</a> = <a class=\"id\" href=\"#ACPI_FAN_CLASS\">ACPI_FAN_CLASS</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ids\">ids</a> = <a class=\"id\" href=\"#fan_device_ids\">fan_device_ids</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ops\">ops</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#add\">add</a> = <a class=\"id\" href=\"#acpi_fan_add\">acpi_fan_add</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#remove\">remove</a> = <a class=\"id\" href=\"#acpi_fan_remove\">acpi_fan_remove</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#suspend\">suspend</a> = <a class=\"id\" href=\"#acpi_fan_suspend\">acpi_fan_suspend</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#resume\">resume</a> = <a class=\"id\" href=\"#acpi_fan_resume\">acpi_fan_resume</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"};", 
"", 
"<span class=\"comment\">/* thermal cooling device callbacks */</span>", 
"static int <a class=\"id\" href=\"#fan_get_max_state\">fan_get_max_state</a>(struct <a class=\"id\" href=\"#thermal_cooling_device\">thermal_cooling_device</a> *<a class=\"id\" href=\"#cdev\">cdev</a>, unsigned long", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     *<a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* ACPI fan device only support two states: ON/OFF */</span>", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#state\">state</a> = 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#fan_get_cur_state\">fan_get_cur_state</a>(struct <a class=\"id\" href=\"#thermal_cooling_device\">thermal_cooling_device</a> *<a class=\"id\" href=\"#cdev\">cdev</a>, unsigned long", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     *<a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_device\">acpi_device</a> *<a class=\"id\" href=\"#device\">device</a> = <a class=\"id\" href=\"#cdev\">cdev</a>-><a class=\"id\" href=\"#devdata\">devdata</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#acpi_state\">acpi_state</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#device\">device</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#acpi_bus_get_power\">acpi_bus_get_power</a>(<a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#handle\">handle</a>, &amp;<a class=\"id\" href=\"#acpi_state\">acpi_state</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#state\">state</a> = (<a class=\"id\" href=\"#acpi_state\">acpi_state</a> == <a class=\"id\" href=\"#ACPI_STATE_D3\">ACPI_STATE_D3</a> ? 0 :", 
"<span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#acpi_state\">acpi_state</a> == <a class=\"id\" href=\"#ACPI_STATE_D0\">ACPI_STATE_D0</a> ? 1 : -1));", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#fan_set_cur_state\">fan_set_cur_state</a>(struct <a class=\"id\" href=\"#thermal_cooling_device\">thermal_cooling_device</a> *<a class=\"id\" href=\"#cdev\">cdev</a>, unsigned long <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_device\">acpi_device</a> *<a class=\"id\" href=\"#device\">device</a> = <a class=\"id\" href=\"#cdev\">cdev</a>-><a class=\"id\" href=\"#devdata\">devdata</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#device\">device</a> || (<a class=\"id\" href=\"#state\">state</a> != 0 && <a class=\"id\" href=\"#state\">state</a> != 1))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#acpi_bus_set_power\">acpi_bus_set_power</a>(<a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> ? <a class=\"id\" href=\"#ACPI_STATE_D0\">ACPI_STATE_D0</a> : <a class=\"id\" href=\"#ACPI_STATE_D3\">ACPI_STATE_D3</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#thermal_cooling_device_ops\">thermal_cooling_device_ops</a> <a class=\"id\" href=\"#fan_cooling_ops\">fan_cooling_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_max_state\">get_max_state</a> = <a class=\"id\" href=\"#fan_get_max_state\">fan_get_max_state</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_cur_state\">get_cur_state</a> = <a class=\"id\" href=\"#fan_get_cur_state\">fan_get_cur_state</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_cur_state\">set_cur_state</a> = <a class=\"id\" href=\"#fan_set_cur_state\">fan_set_cur_state</a>,", 
"};", 
"", 
"<span class=\"comment\">/* --------------------------------------------------------------------------</span>", 
"<span class=\"comment\">                              FS Interface (/proc)</span>", 
"<span class=\"comment\">   -------------------------------------------------------------------------- */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ACPI_PROCFS\">CONFIG_ACPI_PROCFS</a>", 
"", 
"static struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#acpi_fan_dir\">acpi_fan_dir</a>;", 
"", 
"static int <a class=\"id\" href=\"#acpi_fan_read_state\">acpi_fan_read_state</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_device\">acpi_device</a> *<a class=\"id\" href=\"#device\">device</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#state\">state</a> = 0;", 
"", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#device\">device</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_bus_get_power\">acpi_bus_get_power</a>(<a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#handle\">handle</a>, &amp;<a class=\"id\" href=\"#state\">state</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"status:                  ERROR\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"status:                  %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   !<a class=\"id\" href=\"#state\">state</a> ? \"on\" : \"off\");", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_fan_state_open_fs\">acpi_fan_state_open_fs</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
];
xr_frag_insert('l/e1/c3a9b0be052a09744f56d0ce07c250a5faa866.xr', __xr_tmp);
