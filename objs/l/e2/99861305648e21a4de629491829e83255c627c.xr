var __xr_tmp = [
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Stopped broadcast source route explosions.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Can disable source routing</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Takeshi Sone    :<span class=\"ts\"/>Masquerading didn't work.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Dave Bonn,Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Faster IP forwarding whenever possible.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Memory leaks, tramples, misc debugging.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Fixed multicast (by popular demand 8))</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Fixed forwarding (by even more popular demand 8))</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Fixed SNMP statistics [I think]</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Gerhard Koerting<span class=\"ts\"/>:<span class=\"ts\"/>IP fragmentation forwarding fix</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Device lock against page fault.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>IP_HDRINCL facility.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Werner Almesberger<span class=\"ts\"/>:<span class=\"ts\"/>Zero fragment bug</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>RAW IP frame length bug</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Outgoing firewall on build_xmit</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>A.N.Kuznetsov<span class=\"ts\"/>:<span class=\"ts\"/>IP_OPTIONS support throughout the kernel</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Multicast routing hooks</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Jos Vos<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>Do accounting *before* call_in_firewall</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Willy Konynenberg<span class=\"ts\"/>:<span class=\"ts\"/>Transparent proxying support</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * To Fix:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>IP fragmentation wants rewriting cleanly. The RFC815 algorithm is much more efficient</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>and could be made very efficient with the addition of some virtual memory hacks to permit</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>the allocation of a buffer that can then be 'grown' by twiddling page tables.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Output fragmentation wants updating along with the buffer management to use a single</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interleaved copy algorithm so that fragmenting has a one copy overhead. Actual packet</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>output should probably do its own fragmentation at the UDP/RAW layer. TCP shouldn't cause</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>fragmentation anyway.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sockios\">sockios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in\">in</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inet\">inet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inetdevice\">inetdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#etherdevice\">etherdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#snmp\">snmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#route\">route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#arp\">arp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#icmp\">icmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#raw\">raw</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#checksum\">checksum</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter_ipv4\">netfilter_ipv4</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mroute\">mroute</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netlink\">netlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Process Router Attention IP option (RFC 2113)</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ip_call_ra_chain\">ip_call_ra_chain</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_ra_chain\">ip_ra_chain</a> *<a class=\"id\" href=\"#ra\">ra</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#protocol\">protocol</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#ra\">ra</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#ip_ra_chain\">ip_ra_chain</a>); <a class=\"id\" href=\"#ra\">ra</a>; <a class=\"id\" href=\"#ra\">ra</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#ra\">ra</a>-><a class=\"id\" href=\"#next\">next</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#ra\">ra</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If socket is bound to an interface, only report</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the packet if it came  from that interface.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a> && <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#inet_num\">inet_num</a> == <a class=\"id\" href=\"#protocol\">protocol</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (!<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a> == <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frag_off\">frag_off</a> &amp; <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#IP_MF\">IP_MF</a> | <a class=\"id\" href=\"#IP_OFFSET\">IP_OFFSET</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_defrag\">ip_defrag</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#IP_DEFRAG_CALL_RA_CHAIN\">IP_DEFRAG_CALL_RA_CHAIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#last\">last</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb2\">skb2</a> = <a class=\"id\" href=\"#skb_clone\">skb_clone</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb2\">skb2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_rcv\">raw_rcv</a>(<a class=\"id\" href=\"#last\">last</a>, <a class=\"id\" href=\"#skb2\">skb2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#last\">last</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_rcv\">raw_rcv</a>(<a class=\"id\" href=\"#last\">last</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ip_local_deliver_finish\">ip_local_deliver_finish</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__skb_pull\">__skb_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ip_hdrlen\">ip_hdrlen</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Point into the IP datagram, just past the header. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_transport_header\">skb_reset_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#protocol\">protocol</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#raw\">raw</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#net_protocol\">net_protocol</a> *<a class=\"id\" href=\"#ipprot\">ipprot</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#resubmit\">resubmit</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw\">raw</a> = <a class=\"id\" href=\"#raw_local_deliver\">raw_local_deliver</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#protocol\">protocol</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#protocol\">protocol</a> &amp; (<a class=\"id\" href=\"#MAX_INET_PROTOS\">MAX_INET_PROTOS</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipprot\">ipprot</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#inet_protos\">inet_protos</a>[<a class=\"id\" href=\"#hash\">hash</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipprot\">ipprot</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#init_net\">init_net</a>) && !<a class=\"id\" href=\"#ipprot\">ipprot</a>-><a class=\"id\" href=\"#netns_ok\">netns_ok</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%s: proto %d isn't netns-ready\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#protocol\">protocol</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipprot\">ipprot</a>-><a class=\"id\" href=\"#no_policy\">no_policy</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#xfrm4_policy_check\">xfrm4_policy_check</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#XFRM_POLICY_IN\">XFRM_POLICY_IN</a>, <a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nf_reset\">nf_reset</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ipprot\">ipprot</a>-><a class=\"id\" href=\"#handler\">handler</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#protocol\">protocol</a> = -<a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#resubmit\">resubmit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS_BH\">IP_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#IPSTATS_MIB_INDELIVERS\">IPSTATS_MIB_INDELIVERS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#raw\">raw</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#xfrm4_policy_check\">xfrm4_policy_check</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#XFRM_POLICY_IN\">XFRM_POLICY_IN</a>, <a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS_BH\">IP_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#IPSTATS_MIB_INUNKNOWNPROTOS\">IPSTATS_MIB_INUNKNOWNPROTOS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmp_send\">icmp_send</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ICMP_DEST_UNREACH\">ICMP_DEST_UNREACH</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ICMP_PROT_UNREACH\">ICMP_PROT_UNREACH</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS_BH\">IP_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#IPSTATS_MIB_INDELIVERS\">IPSTATS_MIB_INDELIVERS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Deliver IP Packets to the higher protocol layers.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ip_local_deliver\">ip_local_deliver</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Reassemble IP fragments.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frag_off\">frag_off</a> &amp; <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#IP_MF\">IP_MF</a> | <a class=\"id\" href=\"#IP_OFFSET\">IP_OFFSET</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_defrag\">ip_defrag</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#IP_DEFRAG_LOCAL_DELIVER\">IP_DEFRAG_LOCAL_DELIVER</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NF_HOOK\">NF_HOOK</a>(<a class=\"id\" href=\"#NFPROTO_IPV4\">NFPROTO_IPV4</a>, <a class=\"id\" href=\"#NF_INET_LOCAL_IN\">NF_INET_LOCAL_IN</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ip_local_deliver_finish\">ip_local_deliver_finish</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ip_rcv_options\">ip_rcv_options</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_options\">ip_options</a> *<a class=\"id\" href=\"#opt\">opt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* It looks as overkill, because not all</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   IP options require packet mangling.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   But it is the easiest for now, especially taking</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   into account that combination of IP options</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   and running sniffer is extremely rare condition.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      --ANK (980813)</span>", 
"<span class=\"comment\"><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_cow\">skb_cow</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#skb_headroom\">skb_headroom</a>(<a class=\"id\" href=\"#skb\">skb</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS_BH\">IP_INC_STATS_BH</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_INDISCARDS\">IPSTATS_MIB_INDISCARDS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a> = &amp;(<a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#opt\">opt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#optlen\">optlen</a> = <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a>*4 - sizeof(struct <a class=\"id\" href=\"#iphdr\">iphdr</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_options_compile\">ip_options_compile</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#opt\">opt</a>, <a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS_BH\">IP_INC_STATS_BH</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_INHDRERRORS\">IPSTATS_MIB_INHDRERRORS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srr\">srr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#__in_dev_get_rcu\">__in_dev_get_rcu</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in_dev\">in_dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#IN_DEV_SOURCE_ROUTE\">IN_DEV_SOURCE_ROUTE</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IN_DEV_LOG_MARTIANS\">IN_DEV_LOG_MARTIANS</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"source route option %pI4 -> %pI4\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>, &amp;<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_options_rcv_srr\">ip_options_rcv_srr</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#drop\">drop</a>:", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ip_rcv_finish\">ip_rcv_finish</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Initialise the virtual path cache for the packet. It describes</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>how the packet travels inside Linux networking.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>) == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip_route_input_noref\">ip_route_input_noref</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#tos\">tos</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#err\">err</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EHOSTUNREACH\">EHOSTUNREACH</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS_BH\">IP_INC_STATS_BH</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IPSTATS_MIB_INADDRERRORS\">IPSTATS_MIB_INADDRERRORS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#ENETUNREACH\">ENETUNREACH</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS_BH\">IP_INC_STATS_BH</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IPSTATS_MIB_INNOROUTES\">IPSTATS_MIB_INNOROUTES</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EXDEV\">EXDEV</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#LINUX_MIB_IPRPFILTER\">LINUX_MIB_IPRPFILTER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_CLS_ROUTE\">CONFIG_NET_CLS_ROUTE</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#tclassid\">tclassid</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_rt_acct\">ip_rt_acct</a> *<a class=\"id\" href=\"#st\">st</a> = <a class=\"id\" href=\"#this_cpu_ptr\">this_cpu_ptr</a>(<a class=\"id\" href=\"#ip_rt_acct\">ip_rt_acct</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#idx\">idx</a> = <a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#tclassid\">tclassid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>[<a class=\"id\" href=\"#idx\">idx</a>&amp;0xFF].<a class=\"id\" href=\"#o_packets\">o_packets</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>[<a class=\"id\" href=\"#idx\">idx</a>&amp;0xFF].<a class=\"id\" href=\"#o_bytes\">o_bytes</a> += <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>[(<a class=\"id\" href=\"#idx\">idx</a>>>16)&amp;0xFF].<a class=\"id\" href=\"#i_packets\">i_packets</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>[(<a class=\"id\" href=\"#idx\">idx</a>>>16)&amp;0xFF].<a class=\"id\" href=\"#i_bytes\">i_bytes</a> += <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a> &gt; 5 && <a class=\"id\" href=\"#ip_rcv_options\">ip_rcv_options</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#skb_rtable\">skb_rtable</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_type\">rt_type</a> == <a class=\"id\" href=\"#RTN_MULTICAST\">RTN_MULTICAST</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP_UPD_PO_STATS_BH\">IP_UPD_PO_STATS_BH</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_INMCAST\">IPSTATS_MIB_INMCAST</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_type\">rt_type</a> == <a class=\"id\" href=\"#RTN_BROADCAST\">RTN_BROADCAST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP_UPD_PO_STATS_BH\">IP_UPD_PO_STATS_BH</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_INBCAST\">IPSTATS_MIB_INBCAST</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dst_input\">dst_input</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<a class=\"id\" href=\"#drop\">drop</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NET_RX_DROP\">NET_RX_DROP</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Main IP Receive routine.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ip_rcv\">ip_rcv</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#packet_type\">packet_type</a> *<a class=\"id\" href=\"#pt\">pt</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#orig_dev\">orig_dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* When the interface is in promisc. mode, drop all the crap</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that it receives, do not try to analyse it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#pkt_type\">pkt_type</a> == <a class=\"id\" href=\"#PACKET_OTHERHOST\">PACKET_OTHERHOST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP_UPD_PO_STATS_BH\">IP_UPD_PO_STATS_BH</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_IN\">IPSTATS_MIB_IN</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_share_check\">skb_share_check</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS_BH\">IP_INC_STATS_BH</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_INDISCARDS\">IPSTATS_MIB_INDISCARDS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#iphdr\">iphdr</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#inhdr_error\">inhdr_error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>RFC1122: 3.2.1.2 MUST silently discard any IP frame that fails the checksum.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Is the datagram acceptable?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>1.<span class=\"ts\"/>Length at least the size of an ip header</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>2.<span class=\"ts\"/>Version of 4</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>3.<span class=\"ts\"/>Checksums correctly. [Speed optimisation for later, skip loopback checksums]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>4.<span class=\"ts\"/>Doesn't have a bogus length</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a> &lt; 5 || <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#version\">version</a> != 4)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#inhdr_error\">inhdr_error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a>*4))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#inhdr_error\">inhdr_error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ip_fast_csum\">ip_fast_csum</a>((<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#iph\">iph</a>, <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#inhdr_error\">inhdr_error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#tot_len\">tot_len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS_BH\">IP_INC_STATS_BH</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_INTRUNCATEDPKTS\">IPSTATS_MIB_INTRUNCATEDPKTS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#len\">len</a> &lt; (<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a>*4))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#inhdr_error\">inhdr_error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Our transport medium may have padded the buffer out. Now we know it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is IP we can trim to the true length of the frame.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note this now means skb-&gt;len holds ntohs(iph-&gt;tot_len).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pskb_trim_rcsum\">pskb_trim_rcsum</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#len\">len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS_BH\">IP_INC_STATS_BH</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_INDISCARDS\">IPSTATS_MIB_INDISCARDS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Remove any debris in the socket control block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>), 0, sizeof(struct <a class=\"id\" href=\"#inet_skb_parm\">inet_skb_parm</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Must drop socket now because of tproxy. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_orphan\">skb_orphan</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NF_HOOK\">NF_HOOK</a>(<a class=\"id\" href=\"#NFPROTO_IPV4\">NFPROTO_IPV4</a>, <a class=\"id\" href=\"#NF_INET_PRE_ROUTING\">NF_INET_PRE_ROUTING</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ip_rcv_finish\">ip_rcv_finish</a>);", 
"", 
"<a class=\"id\" href=\"#inhdr_error\">inhdr_error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS_BH\">IP_INC_STATS_BH</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_INHDRERRORS\">IPSTATS_MIB_INHDRERRORS</a>);", 
"<a class=\"id\" href=\"#drop\">drop</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NET_RX_DROP\">NET_RX_DROP</a>;", 
"}", 
];
xr_frag_insert('l/e2/99861305648e21a4de629491829e83255c627c.xr', __xr_tmp);
