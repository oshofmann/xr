var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out2\">out2</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * See if request is beyond maximum number of blocks we can have in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a single extent. For an initialized extent this limit is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * EXT_INIT_MAX_LEN and for an uninitialized extent this limit is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * EXT_UNINIT_MAX_LEN.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a> &gt; <a class=\"id\" href=\"#EXT_INIT_MAX_LEN\">EXT_INIT_MAX_LEN</a> &&", 
"<span class=\"ts\"/>    !(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#EXT4_GET_BLOCKS_UNINIT_EXT\">EXT4_GET_BLOCKS_UNINIT_EXT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a> = <a class=\"id\" href=\"#EXT_INIT_MAX_LEN\">EXT_INIT_MAX_LEN</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a> &gt; <a class=\"id\" href=\"#EXT_UNINIT_MAX_LEN\">EXT_UNINIT_MAX_LEN</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#EXT4_GET_BLOCKS_UNINIT_EXT\">EXT4_GET_BLOCKS_UNINIT_EXT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a> = <a class=\"id\" href=\"#EXT_UNINIT_MAX_LEN\">EXT_UNINIT_MAX_LEN</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check if we can really insert (m_lblk)::(m_lblk + m_len) extent */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newex\">newex</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newex\">newex</a>.<a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_check_overlap\">ext4_ext_check_overlap</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#newex\">newex</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#allocated\">allocated</a> = <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(&amp;<a class=\"id\" href=\"#newex\">newex</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#allocated\">allocated</a> = <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* allocate new block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ar\">ar</a>.<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ar\">ar</a>.<a class=\"id\" href=\"#goal\">goal</a> = <a class=\"id\" href=\"#ext4_ext_find_goal\">ext4_ext_find_goal</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ar\">ar</a>.<a class=\"id\" href=\"#logical\">logical</a> = <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ar\">ar</a>.<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#allocated\">allocated</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISREG\">S_ISREG</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ar\">ar</a>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#EXT4_MB_HINT_DATA\">EXT4_MB_HINT_DATA</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* disable in-core preallocation for non-regular files */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ar\">ar</a>.<a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newblock\">newblock</a> = <a class=\"id\" href=\"#ext4_mb_new_blocks\">ext4_mb_new_blocks</a>(<a class=\"id\" href=\"#handle\">handle</a>, &amp;<a class=\"id\" href=\"#ar\">ar</a>, &amp;<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#newblock\">newblock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out2\">out2</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"allocate new block: goal %llu, found %llu/%u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ar\">ar</a>.<a class=\"id\" href=\"#goal\">goal</a>, <a class=\"id\" href=\"#newblock\">newblock</a>, <a class=\"id\" href=\"#allocated\">allocated</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* try to insert new extent into found leaf and return */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(&amp;<a class=\"id\" href=\"#newex\">newex</a>, <a class=\"id\" href=\"#newblock\">newblock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newex\">newex</a>.<a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#ar\">ar</a>.<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Mark uninitialized */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#EXT4_GET_BLOCKS_UNINIT_EXT\">EXT4_GET_BLOCKS_UNINIT_EXT</a>){", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_mark_uninitialized\">ext4_ext_mark_uninitialized</a>(&amp;<a class=\"id\" href=\"#newex\">newex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * io_end structure was created for every IO write to an</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * uninitialized extent. To avoid unecessary conversion,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * here we flag the IO that really needs the conversion.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * For non asycn direct IO case, flag the inode state</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * that we need to perform convertion when IO is done.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#EXT4_GET_BLOCKS_PRE_IO\">EXT4_GET_BLOCKS_PRE_IO</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#io\">io</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#flag\">flag</a> = <a class=\"id\" href=\"#EXT4_IO_UNWRITTEN\">EXT4_IO_UNWRITTEN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_set_inode_state\">ext4_set_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#EXT4_STATE_DIO_UNWRITTEN\">EXT4_STATE_DIO_UNWRITTEN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_should_dioread_nolock\">ext4_should_dioread_nolock</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_flags\">m_flags</a> |= <a class=\"id\" href=\"#EXT4_MAP_UNINIT\">EXT4_MAP_UNINIT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ext4_test_inode_flag\">ext4_test_inode_flag</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_INODE_EOFBLOCKS\">EXT4_INODE_EOFBLOCKS</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"eh->eh_entries == 0 and \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"EOFBLOCKS_FL set\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out2\">out2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_ex\">last_ex</a> = <a class=\"id\" href=\"#EXT_LAST_EXTENT\">EXT_LAST_EXTENT</a>(<a class=\"id\" href=\"#eh\">eh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If the current leaf block was reached by looking at</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the last index block all the way down the tree, and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we are extending the inode beyond the last extent</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * in the current leaf block, then clear the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * EOFBLOCKS_FL flag.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#depth\">depth</a>-1; <a class=\"id\" href=\"#i\">i</a> >= 0; <a class=\"id\" href=\"#i\">i</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a> != <a class=\"id\" href=\"#EXT_LAST_INDEX\">EXT_LAST_INDEX</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#i\">i</a> &lt; 0) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a> + <a class=\"id\" href=\"#ar\">ar</a>.<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#last_ex\">last_ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#last_ex\">last_ex</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_clear_inode_flag\">ext4_clear_inode_flag</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_INODE_EOFBLOCKS\">EXT4_INODE_EOFBLOCKS</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_insert_extent\">ext4_ext_insert_extent</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>, &amp;<a class=\"id\" href=\"#newex\">newex</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* free data blocks we just allocated */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* not a good idea to call discard here directly,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * but otherwise we'd need to call it every free() */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_discard_preallocations\">ext4_discard_preallocations</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_free_blocks\">ext4_free_blocks</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, 0, <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(&amp;<a class=\"id\" href=\"#newex\">newex</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(&amp;<a class=\"id\" href=\"#newex\">newex</a>), 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out2\">out2</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* previous routine could use block we allocated */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newblock\">newblock</a> = <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(&amp;<a class=\"id\" href=\"#newex\">newex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#allocated\">allocated</a> = <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(&amp;<a class=\"id\" href=\"#newex\">newex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#allocated\">allocated</a> &gt; <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#allocated\">allocated</a> = <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_flags\">m_flags</a> |= <a class=\"id\" href=\"#EXT4_MAP_NEW\">EXT4_MAP_NEW</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Update reserved blocks/metadata blocks after successful</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * block allocation which had been deferred till now.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#EXT4_GET_BLOCKS_DELALLOC_RESERVE\">EXT4_GET_BLOCKS_DELALLOC_RESERVE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_da_update_reserve_space\">ext4_da_update_reserve_space</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#allocated\">allocated</a>, 1);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Cache the extent and update transaction to commit on fdatasync only</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * when it is _not_ an uninitialized extent.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#EXT4_GET_BLOCKS_UNINIT_EXT\">EXT4_GET_BLOCKS_UNINIT_EXT</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_put_in_cache\">ext4_ext_put_in_cache</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a>, <a class=\"id\" href=\"#allocated\">allocated</a>, <a class=\"id\" href=\"#newblock\">newblock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_EXT_CACHE_EXTENT\">EXT4_EXT_CACHE_EXTENT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_update_inode_fsync_trans\">ext4_update_inode_fsync_trans</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, 1);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_update_inode_fsync_trans\">ext4_update_inode_fsync_trans</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, 0);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#allocated\">allocated</a> &gt; <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#allocated\">allocated</a> = <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_show_leaf\">ext4_ext_show_leaf</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_flags\">m_flags</a> |= <a class=\"id\" href=\"#EXT4_MAP_MAPPED\">EXT4_MAP_MAPPED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_pblk\">m_pblk</a> = <a class=\"id\" href=\"#newblock\">newblock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a> = <a class=\"id\" href=\"#allocated\">allocated</a>;", 
"<a class=\"id\" href=\"#out2\">out2</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_drop_refs\">ext4_ext_drop_refs</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a> ? <a class=\"id\" href=\"#err\">err</a> : <a class=\"id\" href=\"#allocated\">allocated</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#ext4_ext_truncate\">ext4_ext_truncate</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#last_block\">last_block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * probably first extent we're gonna free will be last in block</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_writepage_trans_blocks\">ext4_writepage_trans_blocks</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext4_journal_start\">ext4_journal_start</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> &amp; (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_block_truncate_page\">ext4_block_truncate_page</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_orphan_add\">ext4_orphan_add</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_stop\">out_stop</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_data_sem\">i_data_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_invalidate_cache\">ext4_ext_invalidate_cache</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_discard_preallocations\">ext4_discard_preallocations</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * TODO: optimization is possible here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Probably we need not scan at all,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * because page truncation is enough.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we have to know where to truncate from in crash case */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_disksize\">i_disksize</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_mark_inode_dirty\">ext4_mark_inode_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last_block\">last_block</a> = (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> + <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>>> <a class=\"id\" href=\"#EXT4_BLOCK_SIZE_BITS\">EXT4_BLOCK_SIZE_BITS</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_remove_space\">ext4_ext_remove_space</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#last_block\">last_block</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* In a multi-transaction truncate, we only make the final</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * transaction synchronous.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_SYNC\">IS_SYNC</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_handle_sync\">ext4_handle_sync</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"", 
"<a class=\"id\" href=\"#out_stop\">out_stop</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_data_sem\">i_data_sem</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If this was a simple ftruncate() and the file will remain alive,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * then we need to clear up the orphan record which we created above.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * However, if this was a real unlink then we were called by</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ext4_delete_inode(), and we allow that function to clean up the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * orphan info for us.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_nlink\">i_nlink</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_orphan_del\">ext4_orphan_del</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#ext4_current_time\">ext4_current_time</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_mark_inode_dirty\">ext4_mark_inode_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ext4_falloc_update_inode\">ext4_falloc_update_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#new_size\">new_size</a>, int <a class=\"id\" href=\"#update_ctime\">update_ctime</a>)", 
];
xr_frag_insert('l/e3/3de7e087b1e94e6a4319e4113c7b266464e47f.xr', __xr_tmp);
