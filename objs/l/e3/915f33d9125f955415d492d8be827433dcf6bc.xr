var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fs/sysfs/symlink.c - operations for initializing and mounting sysfs</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (c) 2001-3 Patrick Mochel</span>", 
"<span class=\"comment\"> * Copyright (c) 2007 SUSE Linux Products GmbH</span>", 
"<span class=\"comment\"> * Copyright (c) 2007 Tejun Heo &lt;teheo@suse.de&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is released under the GPLv2.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Please see Documentation/filesystems/sysfs.txt for more information.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEBUG\">DEBUG</a> ", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mount\">mount</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pagemap\">pagemap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#magic\">magic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"sysfs.h\"", 
"", 
"", 
"static struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#sysfs_mount\">sysfs_mount</a>;", 
"struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#sysfs_dir_cachep\">sysfs_dir_cachep</a>;", 
"", 
"static const struct <a class=\"id\" href=\"#super_operations\">super_operations</a> <a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#statfs\">statfs</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#simple_statfs\">simple_statfs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#drop_inode\">drop_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_delete_inode\">generic_delete_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#evict_inode\">evict_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#sysfs_evict_inode\">sysfs_evict_inode</a>,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#sysfs_dirent\">sysfs_dirent</a> <a class=\"id\" href=\"#sysfs_root\">sysfs_root</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#s_name\">s_name</a><span class=\"ts\"/><span class=\"ts\"/>= \"\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#s_count\">s_count</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATOMIC_INIT\">ATOMIC_INIT</a>(1),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#s_flags\">s_flags</a><span class=\"ts\"/>= <a class=\"id\" href=\"#SYSFS_DIR\">SYSFS_DIR</a> | (<a class=\"id\" href=\"#KOBJ_NS_TYPE_NONE\">KOBJ_NS_TYPE_NONE</a> << <a class=\"id\" href=\"#SYSFS_NS_TYPE_SHIFT\">SYSFS_NS_TYPE_SHIFT</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#s_mode\">s_mode</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#S_IFDIR\">S_IFDIR</a> | <a class=\"id\" href=\"#S_IRWXU\">S_IRWXU</a> | <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a> | <a class=\"id\" href=\"#S_IXUGO\">S_IXUGO</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#s_ino\">s_ino</a><span class=\"ts\"/><span class=\"ts\"/>= 1,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#sysfs_fill_super\">sysfs_fill_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, void *<a class=\"id\" href=\"#data\">data</a>, int <a class=\"id\" href=\"#silent\">silent</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#root\">root</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> = <a class=\"id\" href=\"#PAGE_CACHE_SIZE\">PAGE_CACHE_SIZE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a> = <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a> = <a class=\"id\" href=\"#SYSFS_MAGIC\">SYSFS_MAGIC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_op\">s_op</a> = &amp;<a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_time_gran\">s_time_gran</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* get root inode, initialize and unlock it */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#sysfs_mutex\">sysfs_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#sysfs_get_inode\">sysfs_get_inode</a>(<a class=\"id\" href=\"#sb\">sb</a>, &amp;<a class=\"id\" href=\"#sysfs_root\">sysfs_root</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#sysfs_mutex\">sysfs_mutex</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"sysfs: could not get root inode\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* instantiate and link root dentry */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#d_alloc_root\">d_alloc_root</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#root\">root</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"%s: could not get root dentry!\\n\",<a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#d_fsdata\">d_fsdata</a> = &amp;<a class=\"id\" href=\"#sysfs_root\">sysfs_root</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_root\">s_root</a> = <a class=\"id\" href=\"#root\">root</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sysfs_test_super\">sysfs_test_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_super_info\">sysfs_super_info</a> *<a class=\"id\" href=\"#sb_info\">sb_info</a> = <a class=\"id\" href=\"#sysfs_info\">sysfs_info</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_super_info\">sysfs_super_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#kobj_ns_type\">kobj_ns_type</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#found\">found</a> = 1;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#KOBJ_NS_TYPE_NONE\">KOBJ_NS_TYPE_NONE</a>; <a class=\"id\" href=\"#type\">type</a> &lt; <a class=\"id\" href=\"#KOBJ_NS_TYPES\">KOBJ_NS_TYPES</a>; <a class=\"id\" href=\"#type\">type</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sb_info\">sb_info</a>-><a class=\"id\" href=\"#ns\">ns</a>[<a class=\"id\" href=\"#type\">type</a>] != <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#ns\">ns</a>[<a class=\"id\" href=\"#type\">type</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#found\">found</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sysfs_set_super\">sysfs_set_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#set_anon_super\">set_anon_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_fs_info\">s_fs_info</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sysfs_get_sb\">sysfs_get_sb</a>(struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> *<a class=\"id\" href=\"#fs_type\">fs_type</a>,", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flags\">flags</a>, const char *<a class=\"id\" href=\"#dev_name\">dev_name</a>, void *<a class=\"id\" href=\"#data\">data</a>, struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_super_info\">sysfs_super_info</a> *<a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#kobj_ns_type\">kobj_ns_type</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#info\">info</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#KOBJ_NS_TYPE_NONE\">KOBJ_NS_TYPE_NONE</a>; <a class=\"id\" href=\"#type\">type</a> &lt; <a class=\"id\" href=\"#KOBJ_NS_TYPES\">KOBJ_NS_TYPES</a>; <a class=\"id\" href=\"#type\">type</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#ns\">ns</a>[<a class=\"id\" href=\"#type\">type</a>] = <a class=\"id\" href=\"#kobj_ns_current\">kobj_ns_current</a>(<a class=\"id\" href=\"#type\">type</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#sget\">sget</a>(<a class=\"id\" href=\"#fs_type\">fs_type</a>, <a class=\"id\" href=\"#sysfs_test_super\">sysfs_test_super</a>, <a class=\"id\" href=\"#sysfs_set_super\">sysfs_set_super</a>, <a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#sb\">sb</a>) || <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_fs_info\">s_fs_info</a> != <a class=\"id\" href=\"#info\">info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#sb\">sb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_root\">s_root</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> = <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysfs_fill_super\">sysfs_fill_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MS_SILENT\">MS_SILENT</a> ? 1 : 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#deactivate_locked_super\">deactivate_locked_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> |= <a class=\"id\" href=\"#MS_ACTIVE\">MS_ACTIVE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#simple_set_mnt\">simple_set_mnt</a>(<a class=\"id\" href=\"#mnt\">mnt</a>, <a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#sysfs_kill_sb\">sysfs_kill_sb</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_super_info\">sysfs_super_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#sysfs_info\">sysfs_info</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Remove the superblock from fs_supers/s_instances</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so we can't find it, before freeing sysfs_super_info.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kill_anon_super\">kill_anon_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#info\">info</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> <a class=\"id\" href=\"#sysfs_fs_type\">sysfs_fs_type</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"sysfs\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_sb\">get_sb</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sysfs_get_sb\">sysfs_get_sb</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#kill_sb\">kill_sb</a><span class=\"ts\"/>= <a class=\"id\" href=\"#sysfs_kill_sb\">sysfs_kill_sb</a>,", 
"};", 
"", 
"void <a class=\"id\" href=\"#sysfs_exit_ns\">sysfs_exit_ns</a>(enum <a class=\"id\" href=\"#kobj_ns_type\">kobj_ns_type</a> <a class=\"id\" href=\"#type\">type</a>, const void *<a class=\"id\" href=\"#ns\">ns</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#sysfs_mutex\">sysfs_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#sb_lock\">sb_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#sb\">sb</a>, &amp;<a class=\"id\" href=\"#sysfs_fs_type\">sysfs_fs_type</a>.<a class=\"id\" href=\"#fs_supers\">fs_supers</a>, <a class=\"id\" href=\"#s_instances\">s_instances</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_super_info\">sysfs_super_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#sysfs_info\">sysfs_info</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If we see a superblock on the fs_supers/s_instances</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * list the unmount has not completed and sb-&gt;s_fs_info</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * points to a valid struct sysfs_super_info.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Ignore superblocks with the wrong ns */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#ns\">ns</a>[<a class=\"id\" href=\"#type\">type</a>] != <a class=\"id\" href=\"#ns\">ns</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#ns\">ns</a>[<a class=\"id\" href=\"#type\">type</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sb_lock\">sb_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#sysfs_mutex\">sysfs_mutex</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#sysfs_init\">sysfs_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_dir_cachep\">sysfs_dir_cachep</a> = <a class=\"id\" href=\"#kmem_cache_create\">kmem_cache_create</a>(\"sysfs_dir_cache\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      sizeof(struct <a class=\"id\" href=\"#sysfs_dirent\">sysfs_dirent</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      0, 0, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sysfs_dir_cachep\">sysfs_dir_cachep</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sysfs_inode_init\">sysfs_inode_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_err\">out_err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#register_filesystem\">register_filesystem</a>(&amp;<a class=\"id\" href=\"#sysfs_fs_type\">sysfs_fs_type</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_mount\">sysfs_mount</a> = <a class=\"id\" href=\"#kern_mount\">kern_mount</a>(&amp;<a class=\"id\" href=\"#sysfs_fs_type\">sysfs_fs_type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#sysfs_mount\">sysfs_mount</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"sysfs: could not mount!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#sysfs_mount\">sysfs_mount</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_mount\">sysfs_mount</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unregister_filesystem\">unregister_filesystem</a>(&amp;<a class=\"id\" href=\"#sysfs_fs_type\">sysfs_fs_type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_err\">out_err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_err\">out_err</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<a class=\"id\" href=\"#out_err\">out_err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_destroy\">kmem_cache_destroy</a>(<a class=\"id\" href=\"#sysfs_dir_cachep\">sysfs_dir_cachep</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_dir_cachep\">sysfs_dir_cachep</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#sysfs_get\">sysfs_get</a>", 
"struct <a class=\"id\" href=\"#sysfs_dirent\">sysfs_dirent</a> *<a class=\"id\" href=\"#sysfs_get\">sysfs_get</a>(struct <a class=\"id\" href=\"#sysfs_dirent\">sysfs_dirent</a> *<a class=\"id\" href=\"#sd\">sd</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__sysfs_get\">__sysfs_get</a>(<a class=\"id\" href=\"#sd\">sd</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#sysfs_get\">sysfs_get</a>);", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#sysfs_put\">sysfs_put</a>", 
"void <a class=\"id\" href=\"#sysfs_put\">sysfs_put</a>(struct <a class=\"id\" href=\"#sysfs_dirent\">sysfs_dirent</a> *<a class=\"id\" href=\"#sd\">sd</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__sysfs_put\">__sysfs_put</a>(<a class=\"id\" href=\"#sd\">sd</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#sysfs_put\">sysfs_put</a>);", 
];
xr_frag_insert('l/e3/915f33d9125f955415d492d8be827433dcf6bc.xr', __xr_tmp);
