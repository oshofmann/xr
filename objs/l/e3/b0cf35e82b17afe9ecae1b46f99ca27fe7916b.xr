var __xr_tmp = [
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#raw_init\">raw_init</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#raw_init\">raw_init</a>(<a class=\"id\" href=\"#call\">call</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"Could not initialize trace events/%s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_events\">d_events</a> = <a class=\"id\" href=\"#event_trace_events_dir\">event_trace_events_dir</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#d_events\">d_events</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#event_create_dir\">event_create_dir</a>(<a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#d_events\">d_events</a>, <a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#enable\">enable</a>, <a class=\"id\" href=\"#filter\">filter</a>, <a class=\"id\" href=\"#format\">format</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#ftrace_events\">ftrace_events</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#mod\">mod</a> = <a class=\"id\" href=\"#mod\">mod</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Add an additional event_call dynamically */</span>", 
"int <a class=\"id\" href=\"#trace_add_event_call\">trace_add_event_call</a>(struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__trace_add_event_call\">__trace_add_event_call</a>(<a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#ftrace_event_id_fops\">ftrace_event_id_fops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#ftrace_enable_fops\">ftrace_enable_fops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#ftrace_event_filter_fops\">ftrace_event_filter_fops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#ftrace_event_format_fops\">ftrace_event_format_fops</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#remove_subsystem_dir\">remove_subsystem_dir</a>(const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#event_subsystem\">event_subsystem</a> *<a class=\"id\" href=\"#system\">system</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#TRACE_SYSTEM\">TRACE_SYSTEM</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#system\">system</a>, &amp;<a class=\"id\" href=\"#event_subsystems\">event_subsystems</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#name\">name</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!--<a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#nr_events\">nr_events</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#event_filter\">event_filter</a> *<a class=\"id\" href=\"#filter\">filter</a> = <a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#filter\">filter</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#debugfs_remove_recursive\">debugfs_remove_recursive</a>(<a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#filter\">filter</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#filter_string\">filter_string</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#filter\">filter</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#system\">system</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Must be called under locking both of event_mutex and trace_event_mutex.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__trace_remove_event_call\">__trace_remove_event_call</a>(struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ftrace_event_enable_disable\">ftrace_event_enable_disable</a>(<a class=\"id\" href=\"#call\">call</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#event\">event</a>.<a class=\"id\" href=\"#funcs\">funcs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__unregister_ftrace_event\">__unregister_ftrace_event</a>(&amp;<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#event\">event</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_remove_recursive\">debugfs_remove_recursive</a>(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_destroy_fields\">trace_destroy_fields</a>(<a class=\"id\" href=\"#call\">call</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destroy_preds\">destroy_preds</a>(<a class=\"id\" href=\"#call\">call</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remove_subsystem_dir\">remove_subsystem_dir</a>(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#system\">system</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Remove an event_call */</span>", 
"void <a class=\"id\" href=\"#trace_remove_event_call\">trace_remove_event_call</a>(struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#trace_event_mutex\">trace_event_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__trace_remove_event_call\">__trace_remove_event_call</a>(<a class=\"id\" href=\"#call\">call</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#trace_event_mutex\">trace_event_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#for_each_event\">for_each_event</a>(<a class=\"id\" href=\"#event\">event</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#event\">event</a> = <a class=\"id\" href=\"#start\">start</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>     (unsigned long)<a class=\"id\" href=\"#event\">event</a> &lt; (unsigned long)<a class=\"id\" href=\"#end\">end</a>;<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#event\">event</a>++)", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MODULES\">CONFIG_MODULES</a>", 
"", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#ftrace_module_file_list\">ftrace_module_file_list</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Modules must own their file_operations to keep up with</span>", 
"<span class=\"comment\"> * reference counting.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ftrace_module_file_ops\">ftrace_module_file_ops</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#mod\">mod</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file_operations\">file_operations</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file_operations\">file_operations</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#enable\">enable</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file_operations\">file_operations</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#format\">format</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file_operations\">file_operations</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filter\">filter</a>;", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#ftrace_module_file_ops\">ftrace_module_file_ops</a> *", 
"<a class=\"id\" href=\"#trace_create_file_ops\">trace_create_file_ops</a>(struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#mod\">mod</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_module_file_ops\">ftrace_module_file_ops</a> *<a class=\"id\" href=\"#file_ops\">file_ops</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This is a bit of a PITA. To allow for correct reference</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * counting, modules must \"own\" their file_operations.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * To do this, we allocate the file operations that will be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * used in the event directory.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file_ops\">file_ops</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#file_ops\">file_ops</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file_ops\">file_ops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file_ops\">file_ops</a>-><a class=\"id\" href=\"#mod\">mod</a> = <a class=\"id\" href=\"#mod\">mod</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file_ops\">file_ops</a>-><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#ftrace_event_id_fops\">ftrace_event_id_fops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file_ops\">file_ops</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#mod\">mod</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file_ops\">file_ops</a>-><a class=\"id\" href=\"#enable\">enable</a> = <a class=\"id\" href=\"#ftrace_enable_fops\">ftrace_enable_fops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file_ops\">file_ops</a>-><a class=\"id\" href=\"#enable\">enable</a>.<a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#mod\">mod</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file_ops\">file_ops</a>-><a class=\"id\" href=\"#filter\">filter</a> = <a class=\"id\" href=\"#ftrace_event_filter_fops\">ftrace_event_filter_fops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file_ops\">file_ops</a>-><a class=\"id\" href=\"#filter\">filter</a>.<a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#mod\">mod</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file_ops\">file_ops</a>-><a class=\"id\" href=\"#format\">format</a> = <a class=\"id\" href=\"#ftrace_event_format_fops\">ftrace_event_format_fops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file_ops\">file_ops</a>-><a class=\"id\" href=\"#format\">format</a>.<a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#mod\">mod</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#file_ops\">file_ops</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#ftrace_module_file_list\">ftrace_module_file_list</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#file_ops\">file_ops</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#trace_module_add_events\">trace_module_add_events</a>(struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#mod\">mod</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_module_file_ops\">ftrace_module_file_ops</a> *<a class=\"id\" href=\"#file_ops\">file_ops</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>, *<a class=\"id\" href=\"#start\">start</a>, *<a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#mod\">mod</a>-><a class=\"id\" href=\"#trace_events\">trace_events</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#mod\">mod</a>-><a class=\"id\" href=\"#trace_events\">trace_events</a> + <a class=\"id\" href=\"#mod\">mod</a>-><a class=\"id\" href=\"#num_trace_events\">num_trace_events</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#start\">start</a> == <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file_ops\">file_ops</a> = <a class=\"id\" href=\"#trace_create_file_ops\">trace_create_file_ops</a>(<a class=\"id\" href=\"#mod\">mod</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file_ops\">file_ops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_event\">for_each_event</a>(<a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__trace_add_event_call\">__trace_add_event_call</a>(<a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#mod\">mod</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#file_ops\">file_ops</a>-><a class=\"id\" href=\"#id\">id</a>, &amp;<a class=\"id\" href=\"#file_ops\">file_ops</a>-><a class=\"id\" href=\"#enable\">enable</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#file_ops\">file_ops</a>-><a class=\"id\" href=\"#filter\">filter</a>, &amp;<a class=\"id\" href=\"#file_ops\">file_ops</a>-><a class=\"id\" href=\"#format\">format</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#trace_module_remove_events\">trace_module_remove_events</a>(struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#mod\">mod</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_module_file_ops\">ftrace_module_file_ops</a> *<a class=\"id\" href=\"#file_ops\">file_ops</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>, *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#trace_event_mutex\">trace_event_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#ftrace_events\">ftrace_events</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#mod\">mod</a> == <a class=\"id\" href=\"#mod\">mod</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__trace_remove_event_call\">__trace_remove_event_call</a>(<a class=\"id\" href=\"#call\">call</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Now free the file_operations */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#file_ops\">file_ops</a>, &amp;<a class=\"id\" href=\"#ftrace_module_file_list\">ftrace_module_file_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#file_ops\">file_ops</a>-><a class=\"id\" href=\"#mod\">mod</a> == <a class=\"id\" href=\"#mod\">mod</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (&amp;<a class=\"id\" href=\"#file_ops\">file_ops</a>-><a class=\"id\" href=\"#list\">list</a> != &amp;<a class=\"id\" href=\"#ftrace_module_file_list\">ftrace_module_file_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#file_ops\">file_ops</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#file_ops\">file_ops</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It is safest to reset the ring buffer if the module being unloaded</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * registered any events.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#found\">found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tracing_reset_current_online_cpus\">tracing_reset_current_online_cpus</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#trace_event_mutex\">trace_event_mutex</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#trace_module_notify\">trace_module_notify</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#self\">self</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#val\">val</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#mod\">mod</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#val\">val</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MODULE_STATE_COMING\">MODULE_STATE_COMING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_module_add_events\">trace_module_add_events</a>(<a class=\"id\" href=\"#mod\">mod</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MODULE_STATE_GOING\">MODULE_STATE_GOING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_module_remove_events\">trace_module_remove_events</a>(<a class=\"id\" href=\"#mod\">mod</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#else", 
"static int <a class=\"id\" href=\"#trace_module_notify\">trace_module_notify</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#self\">self</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#val\">val</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_MODULES */</span>", 
"", 
"static struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> <a class=\"id\" href=\"#trace_module_nb\">trace_module_nb</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#notifier_call\">notifier_call</a> = <a class=\"id\" href=\"#trace_module_notify\">trace_module_notify</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#priority\">priority</a> = 0,", 
"};", 
"", 
"extern struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> <a class=\"id\" href=\"#__start_ftrace_events\">__start_ftrace_events</a>[];", 
"extern struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> <a class=\"id\" href=\"#__stop_ftrace_events\">__stop_ftrace_events</a>[];", 
"", 
"static char <a class=\"id\" href=\"#bootup_event_buf\">bootup_event_buf</a>[<a class=\"id\" href=\"#COMMAND_LINE_SIZE\">COMMAND_LINE_SIZE</a>] <a class=\"id\" href=\"#__initdata\">__initdata</a>;", 
"", 
"static <a class=\"id\" href=\"#__init\">__init</a> int <a class=\"id\" href=\"#setup_trace_event\">setup_trace_event</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strlcpy\">strlcpy</a>(<a class=\"id\" href=\"#bootup_event_buf\">bootup_event_buf</a>, <a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#COMMAND_LINE_SIZE\">COMMAND_LINE_SIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ring_buffer_expanded\">ring_buffer_expanded</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tracing_selftest_disabled\">tracing_selftest_disabled</a> = 1;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"trace_event=\", <a class=\"id\" href=\"#setup_trace_event\">setup_trace_event</a>);", 
"", 
"static <a class=\"id\" href=\"#__init\">__init</a> int <a class=\"id\" href=\"#event_trace_init\">event_trace_init</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#d_tracer\">d_tracer</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#d_events\">d_events</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#bootup_event_buf\">bootup_event_buf</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#token\">token</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_tracer\">d_tracer</a> = <a class=\"id\" href=\"#tracing_init_dentry\">tracing_init_dentry</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#d_tracer\">d_tracer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#debugfs_create_file\">debugfs_create_file</a>(\"available_events\", 0444, <a class=\"id\" href=\"#d_tracer\">d_tracer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (void *)&amp;<a class=\"id\" href=\"#show_event_seq_ops\">show_event_seq_ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#ftrace_avail_fops\">ftrace_avail_fops</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#entry\">entry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"Could not create debugfs \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"'available_events' entry\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#debugfs_create_file\">debugfs_create_file</a>(\"set_event\", 0644, <a class=\"id\" href=\"#d_tracer\">d_tracer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (void *)&amp;<a class=\"id\" href=\"#show_set_event_seq_ops\">show_set_event_seq_ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#ftrace_set_event_fops\">ftrace_set_event_fops</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#entry\">entry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"Could not create debugfs \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"'set_event' entry\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_events\">d_events</a> = <a class=\"id\" href=\"#event_trace_events_dir\">event_trace_events_dir</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#d_events\">d_events</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ring buffer internal formats */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"header_page\", 0444, <a class=\"id\" href=\"#d_events\">d_events</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ring_buffer_print_page_header\">ring_buffer_print_page_header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#ftrace_show_header_fops\">ftrace_show_header_fops</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"header_event\", 0444, <a class=\"id\" href=\"#d_events\">d_events</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ring_buffer_print_entry_header\">ring_buffer_print_entry_header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#ftrace_show_header_fops\">ftrace_show_header_fops</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"enable\", 0644, <a class=\"id\" href=\"#d_events\">d_events</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#ftrace_system_enable_fops\">ftrace_system_enable_fops</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#trace_define_common_fields\">trace_define_common_fields</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"tracing: Failed to allocate common fields\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_event\">for_each_event</a>(<a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#__start_ftrace_events\">__start_ftrace_events</a>, <a class=\"id\" href=\"#__stop_ftrace_events\">__stop_ftrace_events</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__trace_add_event_call\">__trace_add_event_call</a>(<a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#ftrace_event_id_fops\">ftrace_event_id_fops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#ftrace_enable_fops\">ftrace_enable_fops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#ftrace_event_filter_fops\">ftrace_event_filter_fops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#ftrace_event_format_fops\">ftrace_event_format_fops</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#true\">true</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#token\">token</a> = <a class=\"id\" href=\"#strsep\">strsep</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>, \",\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#token\">token</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!*<a class=\"id\" href=\"#token\">token</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ftrace_set_clr_event\">ftrace_set_clr_event</a>(<a class=\"id\" href=\"#token\">token</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"Failed to enable trace event: %s\\n\", <a class=\"id\" href=\"#token\">token</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#register_module_notifier\">register_module_notifier</a>(&amp;<a class=\"id\" href=\"#trace_module_nb\">trace_module_nb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"Failed to register trace events module notifier\\n\");", 
];
xr_frag_insert('l/e3/b0cf35e82b17afe9ecae1b46f99ca27fe7916b.xr', __xr_tmp);
