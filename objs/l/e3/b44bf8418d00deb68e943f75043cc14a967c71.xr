var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_PERSONALITY_H\">_LINUX_PERSONALITY_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_PERSONALITY_H\">_LINUX_PERSONALITY_H</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Handling of different ABIs (personalities).</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#exec_domain\">exec_domain</a>;", 
"struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a>;", 
"", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#register_exec_domain\">register_exec_domain</a>(struct <a class=\"id\" href=\"#exec_domain\">exec_domain</a> *);", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unregister_exec_domain\">unregister_exec_domain</a>(struct <a class=\"id\" href=\"#exec_domain\">exec_domain</a> *);", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__set_personality\">__set_personality</a>(unsigned int);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL__ */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Flags for bug emulation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * These occupy the top three bytes.</span>", 
"<span class=\"comment\"> */</span>", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ADDR_NO_RANDOMIZE\">ADDR_NO_RANDOMIZE</a> = <span class=\"ts\"/>0x0040000,<span class=\"ts\"/><span class=\"comment\">/* disable randomization of VA space */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FDPIC_FUNCPTRS\">FDPIC_FUNCPTRS</a> =<span class=\"ts\"/>0x0080000,<span class=\"ts\"/><span class=\"comment\">/* userspace function ptrs point to descriptors</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * (signal handling)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MMAP_PAGE_ZERO\">MMAP_PAGE_ZERO</a> =<span class=\"ts\"/>0x0100000,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ADDR_COMPAT_LAYOUT\">ADDR_COMPAT_LAYOUT</a> =<span class=\"ts\"/>0x0200000,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#READ_IMPLIES_EXEC\">READ_IMPLIES_EXEC</a> =<span class=\"ts\"/>0x0400000,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ADDR_LIMIT_32BIT\">ADDR_LIMIT_32BIT</a> =<span class=\"ts\"/>0x0800000,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SHORT_INODE\">SHORT_INODE</a> =<span class=\"ts\"/><span class=\"ts\"/>0x1000000,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WHOLE_SECONDS\">WHOLE_SECONDS</a> =<span class=\"ts\"/><span class=\"ts\"/>0x2000000,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#STICKY_TIMEOUTS\">STICKY_TIMEOUTS</a><span class=\"ts\"/>=<span class=\"ts\"/>0x4000000,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ADDR_LIMIT_3GB\">ADDR_LIMIT_3GB</a> = <span class=\"ts\"/>0x8000000,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Security-relevant compatibility flags that must be</span>", 
"<span class=\"comment\"> * cleared upon setuid or setgid exec:</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PER_CLEAR_ON_SETID\">PER_CLEAR_ON_SETID</a> (<a class=\"id\" href=\"#READ_IMPLIES_EXEC\">READ_IMPLIES_EXEC</a>  | \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ADDR_NO_RANDOMIZE\">ADDR_NO_RANDOMIZE</a>  | \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ADDR_COMPAT_LAYOUT\">ADDR_COMPAT_LAYOUT</a> | \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#MMAP_PAGE_ZERO\">MMAP_PAGE_ZERO</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Personality types.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * These go in the low byte.  Avoid using the top bit, it will</span>", 
"<span class=\"comment\"> * conflict with error returns.</span>", 
"<span class=\"comment\"> */</span>", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_LINUX\">PER_LINUX</a> =<span class=\"ts\"/><span class=\"ts\"/>0x0000,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_LINUX_32BIT\">PER_LINUX_32BIT</a> =<span class=\"ts\"/>0x0000 | <a class=\"id\" href=\"#ADDR_LIMIT_32BIT\">ADDR_LIMIT_32BIT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_LINUX_FDPIC\">PER_LINUX_FDPIC</a> =<span class=\"ts\"/>0x0000 | <a class=\"id\" href=\"#FDPIC_FUNCPTRS\">FDPIC_FUNCPTRS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_SVR4\">PER_SVR4</a> =<span class=\"ts\"/><span class=\"ts\"/>0x0001 | <a class=\"id\" href=\"#STICKY_TIMEOUTS\">STICKY_TIMEOUTS</a> | <a class=\"id\" href=\"#MMAP_PAGE_ZERO\">MMAP_PAGE_ZERO</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_SVR3\">PER_SVR3</a> =<span class=\"ts\"/><span class=\"ts\"/>0x0002 | <a class=\"id\" href=\"#STICKY_TIMEOUTS\">STICKY_TIMEOUTS</a> | <a class=\"id\" href=\"#SHORT_INODE\">SHORT_INODE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_SCOSVR3\">PER_SCOSVR3</a> =<span class=\"ts\"/><span class=\"ts\"/>0x0003 | <a class=\"id\" href=\"#STICKY_TIMEOUTS\">STICKY_TIMEOUTS</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#WHOLE_SECONDS\">WHOLE_SECONDS</a> | <a class=\"id\" href=\"#SHORT_INODE\">SHORT_INODE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_OSR5\">PER_OSR5</a> =<span class=\"ts\"/><span class=\"ts\"/>0x0003 | <a class=\"id\" href=\"#STICKY_TIMEOUTS\">STICKY_TIMEOUTS</a> | <a class=\"id\" href=\"#WHOLE_SECONDS\">WHOLE_SECONDS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_WYSEV386\">PER_WYSEV386</a> =<span class=\"ts\"/><span class=\"ts\"/>0x0004 | <a class=\"id\" href=\"#STICKY_TIMEOUTS\">STICKY_TIMEOUTS</a> | <a class=\"id\" href=\"#SHORT_INODE\">SHORT_INODE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_ISCR4\">PER_ISCR4</a> =<span class=\"ts\"/><span class=\"ts\"/>0x0005 | <a class=\"id\" href=\"#STICKY_TIMEOUTS\">STICKY_TIMEOUTS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_BSD\">PER_BSD</a> =<span class=\"ts\"/><span class=\"ts\"/>0x0006,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_SUNOS\">PER_SUNOS</a> =<span class=\"ts\"/><span class=\"ts\"/>0x0006 | <a class=\"id\" href=\"#STICKY_TIMEOUTS\">STICKY_TIMEOUTS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_XENIX\">PER_XENIX</a> =<span class=\"ts\"/><span class=\"ts\"/>0x0007 | <a class=\"id\" href=\"#STICKY_TIMEOUTS\">STICKY_TIMEOUTS</a> | <a class=\"id\" href=\"#SHORT_INODE\">SHORT_INODE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_LINUX32\">PER_LINUX32</a> =<span class=\"ts\"/><span class=\"ts\"/>0x0008,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_LINUX32_3GB\">PER_LINUX32_3GB</a> =<span class=\"ts\"/>0x0008 | <a class=\"id\" href=\"#ADDR_LIMIT_3GB\">ADDR_LIMIT_3GB</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_IRIX32\">PER_IRIX32</a> =<span class=\"ts\"/><span class=\"ts\"/>0x0009 | <a class=\"id\" href=\"#STICKY_TIMEOUTS\">STICKY_TIMEOUTS</a>,<span class=\"comment\">/* IRIX5 32-bit */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_IRIXN32\">PER_IRIXN32</a> =<span class=\"ts\"/><span class=\"ts\"/>0x000a | <a class=\"id\" href=\"#STICKY_TIMEOUTS\">STICKY_TIMEOUTS</a>,<span class=\"comment\">/* IRIX6 new 32-bit */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_IRIX64\">PER_IRIX64</a> =<span class=\"ts\"/><span class=\"ts\"/>0x000b | <a class=\"id\" href=\"#STICKY_TIMEOUTS\">STICKY_TIMEOUTS</a>,<span class=\"comment\">/* IRIX6 64-bit */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_RISCOS\">PER_RISCOS</a> =<span class=\"ts\"/><span class=\"ts\"/>0x000c,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_SOLARIS\">PER_SOLARIS</a> =<span class=\"ts\"/><span class=\"ts\"/>0x000d | <a class=\"id\" href=\"#STICKY_TIMEOUTS\">STICKY_TIMEOUTS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_UW7\">PER_UW7</a> =<span class=\"ts\"/><span class=\"ts\"/>0x000e | <a class=\"id\" href=\"#STICKY_TIMEOUTS\">STICKY_TIMEOUTS</a> | <a class=\"id\" href=\"#MMAP_PAGE_ZERO\">MMAP_PAGE_ZERO</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_OSF4\">PER_OSF4</a> =<span class=\"ts\"/><span class=\"ts\"/>0x000f,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <span class=\"comment\">/* OSF/1 v4 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_HPUX\">PER_HPUX</a> =<span class=\"ts\"/><span class=\"ts\"/>0x0010,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_MASK\">PER_MASK</a> =<span class=\"ts\"/><span class=\"ts\"/>0x00ff,", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Description of an execution domain.</span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> * The first two members are refernced from assembly source</span>", 
"<span class=\"comment\"> * and should stay where they are unless explicitly needed.</span>", 
"<span class=\"comment\"> */</span>", 
"typedef void (*<a class=\"id\" href=\"#handler_t\">handler_t</a>)(int, struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *);", 
"", 
"struct <a class=\"id\" href=\"#exec_domain\">exec_domain</a> {", 
"<span class=\"ts\"/>const char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#name\">name</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* name of the execdomain */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handler_t\">handler_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handler\">handler</a>;<span class=\"ts\"/><span class=\"comment\">/* handler for syscalls */</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pers_low\">pers_low</a>;<span class=\"ts\"/><span class=\"comment\">/* lowest personality */</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pers_high\">pers_high</a>;<span class=\"ts\"/><span class=\"comment\">/* highest personality */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#signal_map\">signal_map</a>;<span class=\"ts\"/><span class=\"comment\">/* signal mapping */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#signal_invmap\">signal_invmap</a>;<span class=\"ts\"/><span class=\"comment\">/* reverse signal mapping */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#map_segment\">map_segment</a><span class=\"ts\"/>*<a class=\"id\" href=\"#err_map\">err_map</a>;<span class=\"ts\"/><span class=\"comment\">/* error mapping */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#map_segment\">map_segment</a><span class=\"ts\"/>*<a class=\"id\" href=\"#socktype_map\">socktype_map</a>;<span class=\"ts\"/><span class=\"comment\">/* socket type mapping */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#map_segment\">map_segment</a><span class=\"ts\"/>*<a class=\"id\" href=\"#sockopt_map\">sockopt_map</a>;<span class=\"ts\"/><span class=\"comment\">/* socket option mapping */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#map_segment\">map_segment</a><span class=\"ts\"/>*<a class=\"id\" href=\"#af_map\">af_map</a>;<span class=\"ts\"/><span class=\"comment\">/* address family mapping */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#module\">module</a>;<span class=\"ts\"/><span class=\"comment\">/* module context of the ed. */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#exec_domain\">exec_domain</a><span class=\"ts\"/>*<a class=\"id\" href=\"#next\">next</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* linked list (internal) */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Return the base personality without flags.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#personality\">personality</a>(<a class=\"id\" href=\"#pers\">pers</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#pers\">pers</a> &amp; <a class=\"id\" href=\"#PER_MASK\">PER_MASK</a>)", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Change personality of the currently running process.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#set_personality\">set_personality</a>(<a class=\"id\" href=\"#pers\">pers</a>) \\", 
"<span class=\"ts\"/>((<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#personality\">personality</a> == (<a class=\"id\" href=\"#pers\">pers</a>)) ? 0 : <a class=\"id\" href=\"#__set_personality\">__set_personality</a>(<a class=\"id\" href=\"#pers\">pers</a>))", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL__ */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_PERSONALITY_H */</span>", 
];
xr_frag_insert('l/e3/b44bf8418d00deb68e943f75043cc14a967c71.xr', __xr_tmp);
