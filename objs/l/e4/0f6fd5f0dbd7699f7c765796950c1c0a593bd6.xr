var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_X86_KEXEC_H\">_ASM_X86_KEXEC_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_X86_KEXEC_H\">_ASM_X86_KEXEC_H</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PA_CONTROL_PAGE\">PA_CONTROL_PAGE</a><span class=\"ts\"/>0", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VA_CONTROL_PAGE\">VA_CONTROL_PAGE</a><span class=\"ts\"/>1", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PA_PGD\">PA_PGD</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>2", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PA_SWAP_PAGE\">PA_SWAP_PAGE</a><span class=\"ts\"/><span class=\"ts\"/>3", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PAGES_NR\">PAGES_NR</a><span class=\"ts\"/><span class=\"ts\"/>4", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PA_CONTROL_PAGE\">PA_CONTROL_PAGE</a><span class=\"ts\"/>0", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VA_CONTROL_PAGE\">VA_CONTROL_PAGE</a><span class=\"ts\"/>1", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PA_TABLE_PAGE\">PA_TABLE_PAGE</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PA_SWAP_PAGE\">PA_SWAP_PAGE</a><span class=\"ts\"/><span class=\"ts\"/>3", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PAGES_NR\">PAGES_NR</a><span class=\"ts\"/><span class=\"ts\"/>4", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KEXEC_CONTROL_CODE_MAX_SIZE\">KEXEC_CONTROL_CODE_MAX_SIZE</a><span class=\"ts\"/>2048", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ASSEMBLY__\">__ASSEMBLY__</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#page\">page</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#ptrace\">ptrace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * KEXEC_SOURCE_MEMORY_LIMIT maximum page get_free_page can return.</span>", 
"<span class=\"comment\"> * I.e. Maximum page that is mapped directly into kernel memory,</span>", 
"<span class=\"comment\"> * and kmap is not required.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * So far x86_64 is limited to 40 physical address bits.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"comment\">/* Maximum physical address we can use pages from */</span>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KEXEC_SOURCE_MEMORY_LIMIT\">KEXEC_SOURCE_MEMORY_LIMIT</a> (-1UL)", 
"<span class=\"comment\">/* Maximum address we can reach in physical address mode */</span>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KEXEC_DESTINATION_MEMORY_LIMIT\">KEXEC_DESTINATION_MEMORY_LIMIT</a> (-1UL)", 
"<span class=\"comment\">/* Maximum address we can use for the control code buffer */</span>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KEXEC_CONTROL_MEMORY_LIMIT\">KEXEC_CONTROL_MEMORY_LIMIT</a> <a class=\"id\" href=\"#TASK_SIZE\">TASK_SIZE</a>", 
"", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KEXEC_CONTROL_PAGE_SIZE\">KEXEC_CONTROL_PAGE_SIZE</a><span class=\"ts\"/>4096", 
"", 
"<span class=\"comment\">/* The native architecture */</span>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KEXEC_ARCH\">KEXEC_ARCH</a> <a class=\"id\" href=\"#KEXEC_ARCH_386\">KEXEC_ARCH_386</a>", 
"", 
"<span class=\"comment\">/* We can also handle crash dumps from 64 bit kernel. */</span>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#vmcore_elf_check_arch_cross\">vmcore_elf_check_arch_cross</a>(<a class=\"id\" href=\"#x\">x</a>) ((<a class=\"id\" href=\"#x\">x</a>)-><a class=\"id\" href=\"#e_machine\">e_machine</a> == <a class=\"id\" href=\"#EM_X86_64\">EM_X86_64</a>)", 
"#else", 
"<span class=\"comment\">/* Maximum physical address we can use pages from */</span>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KEXEC_SOURCE_MEMORY_LIMIT\">KEXEC_SOURCE_MEMORY_LIMIT</a>      (0xFFFFFFFFFFUL)", 
"<span class=\"comment\">/* Maximum address we can reach in physical address mode */</span>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KEXEC_DESTINATION_MEMORY_LIMIT\">KEXEC_DESTINATION_MEMORY_LIMIT</a> (0xFFFFFFFFFFUL)", 
"<span class=\"comment\">/* Maximum address we can use for the control pages */</span>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KEXEC_CONTROL_MEMORY_LIMIT\">KEXEC_CONTROL_MEMORY_LIMIT</a>     (0xFFFFFFFFFFUL)", 
"", 
"<span class=\"comment\">/* Allocate one page for the pdp and the second for the code */</span>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KEXEC_CONTROL_PAGE_SIZE\">KEXEC_CONTROL_PAGE_SIZE</a>  (4096UL + 4096UL)", 
"", 
"<span class=\"comment\">/* The native architecture */</span>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KEXEC_ARCH\">KEXEC_ARCH</a> <a class=\"id\" href=\"#KEXEC_ARCH_X86_64\">KEXEC_ARCH_X86_64</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * CPU does not save ss and sp on stack if execution is already</span>", 
"<span class=\"comment\"> * running in kernel mode at the time of NMI occurrence. This code</span>", 
"<span class=\"comment\"> * fixes it.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#crash_fixup_ss_esp\">crash_fixup_ss_esp</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#newregs\">newregs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#oldregs\">oldregs</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#sp\">sp</a> = (unsigned long)&amp;(<a class=\"id\" href=\"#oldregs\">oldregs</a>-><a class=\"id\" href=\"#sp\">sp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"xorl %%eax, %%eax\\n\\t\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     \"movw %%ss, %%ax\\n\\t\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     :\"=a\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#ss\">ss</a>));", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function is responsible for capturing register states if coming</span>", 
"<span class=\"comment\"> * via panic otherwise just fix up the ss and sp if coming via kernel</span>", 
"<span class=\"comment\"> * mode exception.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#crash_setup_regs\">crash_setup_regs</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#newregs\">newregs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#oldregs\">oldregs</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#oldregs\">oldregs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#newregs\">newregs</a>, <a class=\"id\" href=\"#oldregs\">oldregs</a>, sizeof(*<a class=\"id\" href=\"#newregs\">newregs</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crash_fixup_ss_esp\">crash_fixup_ss_esp</a>(<a class=\"id\" href=\"#newregs\">newregs</a>, <a class=\"id\" href=\"#oldregs\">oldregs</a>);", 
"<span class=\"ts\"/>} else {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movl %%ebx,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#bx\">bx</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movl %%ecx,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#cx\">cx</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movl %%edx,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#dx\">dx</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movl %%esi,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#si\">si</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movl %%edi,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#di\">di</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movl %%ebp,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#bp\">bp</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movl %%eax,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#ax\">ax</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movl %%esp,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#sp\">sp</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movl %%ss, %%eax;\" :\"=a\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#ss\">ss</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movl %%cs, %%eax;\" :\"=a\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#cs\">cs</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movl %%ds, %%eax;\" :\"=a\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#ds\">ds</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movl %%es, %%eax;\" :\"=a\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#es\">es</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"pushfl; popl %0\" :\"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#flags\">flags</a>));", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movq %%rbx,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#bx\">bx</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movq %%rcx,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#cx\">cx</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movq %%rdx,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#dx\">dx</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movq %%rsi,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#si\">si</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movq %%rdi,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#di\">di</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movq %%rbp,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#bp\">bp</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movq %%rax,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#ax\">ax</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movq %%rsp,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#sp\">sp</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movq %%r8,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#r8\">r8</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movq %%r9,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#r9\">r9</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movq %%r10,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#r10\">r10</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movq %%r11,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#r11\">r11</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movq %%r12,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#r12\">r12</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movq %%r13,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#r13\">r13</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movq %%r14,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#r14\">r14</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movq %%r15,%0\" : \"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#r15\">r15</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movl %%ss, %%eax;\" :\"=a\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#ss\">ss</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movl %%cs, %%eax;\" :\"=a\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#cs\">cs</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"pushfq; popq %0\" :\"=m\"(<a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#flags\">flags</a>));", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newregs\">newregs</a>-><a class=\"id\" href=\"#ip\">ip</a> = (unsigned long)<a class=\"id\" href=\"#current_text_addr\">current_text_addr</a>();", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> unsigned long", 
"<a class=\"id\" href=\"#relocate_kernel\">relocate_kernel</a>(unsigned long <a class=\"id\" href=\"#indirection_page\">indirection_page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#control_page\">control_page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start_address\">start_address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#has_pae\">has_pae</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#preserve_context\">preserve_context</a>);", 
"#else", 
"unsigned long", 
"<a class=\"id\" href=\"#relocate_kernel\">relocate_kernel</a>(unsigned long <a class=\"id\" href=\"#indirection_page\">indirection_page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#page_list\">page_list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start_address\">start_address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#preserve_context\">preserve_context</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARCH_HAS_KIMAGE_ARCH\">ARCH_HAS_KIMAGE_ARCH</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"struct <a class=\"id\" href=\"#kimage_arch\">kimage_arch</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_PAE\">CONFIG_X86_PAE</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd0\">pmd0</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd1\">pmd1</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#pte0\">pte0</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#pte1\">pte1</a>;", 
"};", 
"#else", 
"struct <a class=\"id\" href=\"#kimage_arch\">kimage_arch</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#pte\">pte</a>;", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __ASSEMBLY__ */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_X86_KEXEC_H */</span>", 
];
xr_frag_insert('l/e4/0f6fd5f0dbd7699f7c765796950c1c0a593bd6.xr', __xr_tmp);
