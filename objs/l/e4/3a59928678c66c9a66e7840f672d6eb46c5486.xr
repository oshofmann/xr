var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/fs/proc/array.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 1992  by Linus Torvalds</span>", 
"<span class=\"comment\"> *  based on ideas by Darren Senn</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Fixes:</span>", 
"<span class=\"comment\"> * Michael. K. Johnson: stat,statm extensions.</span>", 
"<span class=\"comment\"> *                      &lt;johnsonm@stolaf.edu&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Pauline Middelink :  Made cmdline,envline only break at '\\0's, to</span>", 
"<span class=\"comment\"> *                      make sure SET_PROCTITLE works. Also removed</span>", 
"<span class=\"comment\"> *                      bad '!' which forced address recalculation for</span>", 
"<span class=\"comment\"> *                      EVERY character on the current page.</span>", 
"<span class=\"comment\"> *                      &lt;middelin@polyware.iaf.nl&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Danny ter Haar    :<span class=\"ts\"/>added cpuinfo</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&lt;dth@cistron.nl&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Alessandro Rubini :  profile extension.</span>", 
"<span class=\"comment\"> *                      &lt;rubini@ipvvis.unipv.it&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Jeff Tranter      :  added BogoMips field to cpuinfo</span>", 
"<span class=\"comment\"> *                      &lt;Jeff_Tranter@Mitel.COM&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Bruno Haible      :  remove 4K limit for the maps file</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&lt;haible@ma2s2.mathematik.uni-karlsruhe.de&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Yves Arrouye      :  remove removal of trailing spaces in get_array.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&lt;Yves.Arrouye@marin.fdn.fr&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Jerome Forissier  :  added per-CPU time information to /proc/stat</span>", 
"<span class=\"comment\"> *                      and /proc/&lt;pid&gt;/cpu extension</span>", 
"<span class=\"comment\"> *                      &lt;forissier@isia.cma.fr&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>- Incorporation and non-SMP safe operation</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>of forissier patch in 2.1.78 by</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Hans Marcus &lt;crowbar@concepts.nl&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * aeb@cwi.nl        :  /proc/partitions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Alan Cox<span class=\"ts\"/>     :  security fixes.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&lt;alan@lxorguk.ukuu.org.uk&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Al Viro           :  safe handling of mm_struct</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Gerhard Wichert   :  added BIGMEM support</span>", 
"<span class=\"comment\"> * Siemens AG           &lt;Gerhard.Wichert@pdb.siemens.de&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Al Viro &amp; Jeff Garzik :  moved most of the thing into base.c and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> :  proc_misc.c. The rest may eventually go into</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> :  base.c too.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel_stat\">kernel_stat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tty\">tty</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mman\">mman</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ioport\">ioport</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hugetlb\">hugetlb</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pagemap\">pagemap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#signal\">signal</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#highmem\">highmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#file\">file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fdtable\">fdtable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#times\">times</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpuset\">cpuset</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rcupdate\">rcupdate</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delayacct\">delayacct</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pid_namespace\">pid_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ptrace\">ptrace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tracehook\">tracehook</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pgtable\">pgtable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"internal.h\"", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#task_name\">task_name</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>, *<a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#tcomm\">tcomm</a>[sizeof(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#comm\">comm</a>)];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_task_comm\">get_task_comm</a>(<a class=\"id\" href=\"#tcomm\">tcomm</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"Name:\\t\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#tcomm\">tcomm</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = sizeof(<a class=\"id\" href=\"#tcomm\">tcomm</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#i\">i</a> && (<a class=\"id\" href=\"#buf\">buf</a> &lt; <a class=\"id\" href=\"#end\">end</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#c\">c</a> = *<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#c\">c</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == '\\\\') {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buf\">buf</a> &lt; <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#buf\">buf</a>++ = <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == '\\n') {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#buf\">buf</a>++ = '\\\\';", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buf\">buf</a> &lt; <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#buf\">buf</a>++ = 'n';", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#buf\">buf</a> - <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\n\");", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The task state array is a strange \"bitmap\" of</span>", 
"<span class=\"comment\"> * reasons to sleep. Thus \"running\" is zero, and</span>", 
"<span class=\"comment\"> * you can test for combinations of others with</span>", 
"<span class=\"comment\"> * simple bit tests.</span>", 
"<span class=\"comment\"> */</span>", 
"static const char *<a class=\"id\" href=\"#task_state_array\">task_state_array</a>[] = {", 
"<span class=\"ts\"/>\"R (running)\",<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*   0 */</span>", 
"<span class=\"ts\"/>\"S (sleeping)\",<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*   1 */</span>", 
"<span class=\"ts\"/>\"D (disk sleep)\",<span class=\"ts\"/><span class=\"comment\">/*   2 */</span>", 
"<span class=\"ts\"/>\"T (stopped)\",<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*   4 */</span>", 
"<span class=\"ts\"/>\"t (tracing stop)\",<span class=\"ts\"/><span class=\"comment\">/*   8 */</span>", 
"<span class=\"ts\"/>\"Z (zombie)\",<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*  16 */</span>", 
"<span class=\"ts\"/>\"X (dead)\",<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*  32 */</span>", 
"<span class=\"ts\"/>\"x (dead)\",<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*  64 */</span>", 
"<span class=\"ts\"/>\"K (wakekill)\",<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 128 */</span>", 
"<span class=\"ts\"/>\"W (waking)\",<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 256 */</span>", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> const char *<a class=\"id\" href=\"#get_task_state\">get_task_state</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#state\">state</a> = (<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#TASK_REPORT\">TASK_REPORT</a>) | <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#exit_state\">exit_state</a>;", 
"<span class=\"ts\"/>const char **<a class=\"id\" href=\"#p\">p</a> = &amp;<a class=\"id\" href=\"#task_state_array\">task_state_array</a>[0];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(1 + <a class=\"id\" href=\"#ilog2\">ilog2</a>(<a class=\"id\" href=\"#TASK_STATE_MAX\">TASK_STATE_MAX</a>) != <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#task_state_array\">task_state_array</a>));", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#state\">state</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> >>= 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return *<a class=\"id\" href=\"#p\">p</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#task_state\">task_state</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#pid\">pid</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#group_info\">group_info</a> *<a class=\"id\" href=\"#group_info\">group_info</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#g\">g</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fdtable\">fdtable</a> *<a class=\"id\" href=\"#fdt\">fdt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pid_t\">pid_t</a> <a class=\"id\" href=\"#ppid\">ppid</a>, <a class=\"id\" href=\"#tpid\">tpid</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ppid\">ppid</a> = <a class=\"id\" href=\"#pid_alive\">pid_alive</a>(<a class=\"id\" href=\"#p\">p</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task_tgid_nr_ns\">task_tgid_nr_ns</a>(<a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#real_parent\">real_parent</a>), <a class=\"id\" href=\"#ns\">ns</a>) : 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tpid\">tpid</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pid_alive\">pid_alive</a>(<a class=\"id\" href=\"#p\">p</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tracer\">tracer</a> = <a class=\"id\" href=\"#tracehook_tracer_task\">tracehook_tracer_task</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tracer\">tracer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tpid\">tpid</a> = <a class=\"id\" href=\"#task_pid_nr_ns\">task_pid_nr_ns</a>(<a class=\"id\" href=\"#tracer\">tracer</a>, <a class=\"id\" href=\"#ns\">ns</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#get_task_cred\">get_task_cred</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>\"State:\\t%s\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"Tgid:\\t%d\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"Pid:\\t%d\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"PPid:\\t%d\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"TracerPid:\\t%d\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"Uid:\\t%d\\t%d\\t%d\\t%d\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"Gid:\\t%d\\t%d\\t%d\\t%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_task_state\">get_task_state</a>(<a class=\"id\" href=\"#p\">p</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task_tgid_nr_ns\">task_tgid_nr_ns</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#ns\">ns</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pid_nr_ns\">pid_nr_ns</a>(<a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#ns\">ns</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ppid\">ppid</a>, <a class=\"id\" href=\"#tpid\">tpid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#uid\">uid</a>, <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#euid\">euid</a>, <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#suid\">suid</a>, <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#fsuid\">fsuid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#gid\">gid</a>, <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#egid\">egid</a>, <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#sgid\">sgid</a>, <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#fsgid\">fsgid</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_lock\">task_lock</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#files\">files</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fdt\">fdt</a> = <a class=\"id\" href=\"#files_fdtable\">files_fdtable</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#files\">files</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>\"FDSize:\\t%d\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"Groups:\\t\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fdt\">fdt</a> ? <a class=\"id\" href=\"#fdt\">fdt</a>-><a class=\"id\" href=\"#max_fds\">max_fds</a> : 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group_info\">group_info</a> = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#group_info\">group_info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_unlock\">task_unlock</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#g\">g</a> = 0; <a class=\"id\" href=\"#g\">g</a> &lt; <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#group_info\">group_info</a>-><a class=\"id\" href=\"#ngroups\">ngroups</a>, <a class=\"id\" href=\"#NGROUPS_SMALL\">NGROUPS_SMALL</a>); <a class=\"id\" href=\"#g\">g</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%d \", <a class=\"id\" href=\"#GROUP_AT\">GROUP_AT</a>(<a class=\"id\" href=\"#group_info\">group_info</a>, <a class=\"id\" href=\"#g\">g</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_cred\">put_cred</a>(<a class=\"id\" href=\"#cred\">cred</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\n\");", 
"}", 
"", 
"static void <a class=\"id\" href=\"#render_sigset_t\">render_sigset_t</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, const char *<a class=\"id\" href=\"#header\">header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> *<a class=\"id\" href=\"#set\">set</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%s\", <a class=\"id\" href=\"#header\">header</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#_NSIG\">_NSIG</a>;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#x\">x</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> -= 4;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sigismember\">sigismember</a>(<a class=\"id\" href=\"#set\">set</a>, <a class=\"id\" href=\"#i\">i</a>+1)) <a class=\"id\" href=\"#x\">x</a> |= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sigismember\">sigismember</a>(<a class=\"id\" href=\"#set\">set</a>, <a class=\"id\" href=\"#i\">i</a>+2)) <a class=\"id\" href=\"#x\">x</a> |= 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sigismember\">sigismember</a>(<a class=\"id\" href=\"#set\">set</a>, <a class=\"id\" href=\"#i\">i</a>+3)) <a class=\"id\" href=\"#x\">x</a> |= 4;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sigismember\">sigismember</a>(<a class=\"id\" href=\"#set\">set</a>, <a class=\"id\" href=\"#i\">i</a>+4)) <a class=\"id\" href=\"#x\">x</a> |= 8;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%x\", <a class=\"id\" href=\"#x\">x</a>);", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#i\">i</a> >= 4);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\n\");", 
"}", 
"", 
"static void <a class=\"id\" href=\"#collect_sigign_sigcatch\">collect_sigign_sigcatch</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#sigset_t\">sigset_t</a> *<a class=\"id\" href=\"#ign\">ign</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sigset_t\">sigset_t</a> *<a class=\"id\" href=\"#catch\">catch</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#k_sigaction\">k_sigaction</a> *<a class=\"id\" href=\"#k\">k</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#k\">k</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#action\">action</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 1; <a class=\"id\" href=\"#i\">i</a> <= <a class=\"id\" href=\"#_NSIG\">_NSIG</a>; ++<a class=\"id\" href=\"#i\">i</a>, ++<a class=\"id\" href=\"#k\">k</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#k\">k</a>-><a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_handler\">sa_handler</a> == <a class=\"id\" href=\"#SIG_IGN\">SIG_IGN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigaddset\">sigaddset</a>(<a class=\"id\" href=\"#ign\">ign</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#k\">k</a>-><a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_handler\">sa_handler</a> != <a class=\"id\" href=\"#SIG_DFL\">SIG_DFL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigaddset\">sigaddset</a>(<a class=\"id\" href=\"#catch\">catch</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#task_sig\">task_sig</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#pending\">pending</a>, <a class=\"id\" href=\"#shpending\">shpending</a>, <a class=\"id\" href=\"#blocked\">blocked</a>, <a class=\"id\" href=\"#ignored\">ignored</a>, <a class=\"id\" href=\"#caught\">caught</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#num_threads\">num_threads</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#qsize\">qsize</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#qlim\">qlim</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigemptyset\">sigemptyset</a>(&amp;<a class=\"id\" href=\"#pending\">pending</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigemptyset\">sigemptyset</a>(&amp;<a class=\"id\" href=\"#shpending\">shpending</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigemptyset\">sigemptyset</a>(&amp;<a class=\"id\" href=\"#blocked\">blocked</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigemptyset\">sigemptyset</a>(&amp;<a class=\"id\" href=\"#ignored\">ignored</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigemptyset\">sigemptyset</a>(&amp;<a class=\"id\" href=\"#caught\">caught</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lock_task_sighand\">lock_task_sighand</a>(<a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pending\">pending</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#pending\">pending</a>.<a class=\"id\" href=\"#signal\">signal</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shpending\">shpending</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#shared_pending\">shared_pending</a>.<a class=\"id\" href=\"#signal\">signal</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocked\">blocked</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#blocked\">blocked</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#collect_sigign_sigcatch\">collect_sigign_sigcatch</a>(<a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#ignored\">ignored</a>, &amp;<a class=\"id\" href=\"#caught\">caught</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_threads\">num_threads</a> = <a class=\"id\" href=\"#get_nr_threads\">get_nr_threads</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();  <span class=\"comment\">/* FIXME: is this correct? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qsize\">qsize</a> = <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#__task_cred\">__task_cred</a>(<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#sigpending\">sigpending</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qlim\">qlim</a> = <a class=\"id\" href=\"#task_rlimit\">task_rlimit</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#RLIMIT_SIGPENDING\">RLIMIT_SIGPENDING</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_task_sighand\">unlock_task_sighand</a>(<a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"Threads:\\t%d\\n\", <a class=\"id\" href=\"#num_threads\">num_threads</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"SigQ:\\t%lu/%lu\\n\", <a class=\"id\" href=\"#qsize\">qsize</a>, <a class=\"id\" href=\"#qlim\">qlim</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* render them all */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#render_sigset_t\">render_sigset_t</a>(<a class=\"id\" href=\"#m\">m</a>, \"SigPnd:\\t\", &amp;<a class=\"id\" href=\"#pending\">pending</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#render_sigset_t\">render_sigset_t</a>(<a class=\"id\" href=\"#m\">m</a>, \"ShdPnd:\\t\", &amp;<a class=\"id\" href=\"#shpending\">shpending</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#render_sigset_t\">render_sigset_t</a>(<a class=\"id\" href=\"#m\">m</a>, \"SigBlk:\\t\", &amp;<a class=\"id\" href=\"#blocked\">blocked</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#render_sigset_t\">render_sigset_t</a>(<a class=\"id\" href=\"#m\">m</a>, \"SigIgn:\\t\", &amp;<a class=\"id\" href=\"#ignored\">ignored</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#render_sigset_t\">render_sigset_t</a>(<a class=\"id\" href=\"#m\">m</a>, \"SigCgt:\\t\", &amp;<a class=\"id\" href=\"#caught\">caught</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#render_cap_t\">render_cap_t</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, const char *<a class=\"id\" href=\"#header\">header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a> *<a class=\"id\" href=\"#a\">a</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#__capi\">__capi</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%s\", <a class=\"id\" href=\"#header\">header</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CAP_FOR_EACH_U32\">CAP_FOR_EACH_U32</a>(<a class=\"id\" href=\"#__capi\">__capi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%08x\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#cap\">cap</a>[(<a class=\"id\" href=\"#_KERNEL_CAPABILITY_U32S\">_KERNEL_CAPABILITY_U32S</a>-1) - <a class=\"id\" href=\"#__capi\">__capi</a>]);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\n\");", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#task_cap\">task_cap</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a> <a class=\"id\" href=\"#cap_inheritable\">cap_inheritable</a>, <a class=\"id\" href=\"#cap_permitted\">cap_permitted</a>, <a class=\"id\" href=\"#cap_effective\">cap_effective</a>, <a class=\"id\" href=\"#cap_bset\">cap_bset</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#__task_cred\">__task_cred</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cap_inheritable\">cap_inheritable</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#cap_inheritable\">cap_inheritable</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cap_permitted\">cap_permitted</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#cap_permitted\">cap_permitted</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cap_effective\">cap_effective</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#cap_effective\">cap_effective</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cap_bset\">cap_bset</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#cap_bset\">cap_bset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#render_cap_t\">render_cap_t</a>(<a class=\"id\" href=\"#m\">m</a>, \"CapInh:\\t\", &amp;<a class=\"id\" href=\"#cap_inheritable\">cap_inheritable</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#render_cap_t\">render_cap_t</a>(<a class=\"id\" href=\"#m\">m</a>, \"CapPrm:\\t\", &amp;<a class=\"id\" href=\"#cap_permitted\">cap_permitted</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#render_cap_t\">render_cap_t</a>(<a class=\"id\" href=\"#m\">m</a>, \"CapEff:\\t\", &amp;<a class=\"id\" href=\"#cap_effective\">cap_effective</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#render_cap_t\">render_cap_t</a>(<a class=\"id\" href=\"#m\">m</a>, \"CapBnd:\\t\", &amp;<a class=\"id\" href=\"#cap_bset\">cap_bset</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#task_context_switch_counts\">task_context_switch_counts</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>,<span class=\"ts\"/>\"voluntary_ctxt_switches:\\t%lu\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"nonvoluntary_ctxt_switches:\\t%lu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#nvcsw\">nvcsw</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#nivcsw\">nivcsw</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#task_cpus_allowed\">task_cpus_allowed</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"Cpus_allowed:\\t\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_cpumask\">seq_cpumask</a>(<a class=\"id\" href=\"#m\">m</a>, &amp;<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#cpus_allowed\">cpus_allowed</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"Cpus_allowed_list:\\t\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_cpumask_list\">seq_cpumask_list</a>(<a class=\"id\" href=\"#m\">m</a>, &amp;<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#cpus_allowed\">cpus_allowed</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\n\");", 
"}", 
"", 
"int <a class=\"id\" href=\"#proc_pid_status\">proc_pid_status</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#pid\">pid</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#get_task_mm\">get_task_mm</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_name\">task_name</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_state\">task_state</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#ns\">ns</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task_mem\">task_mem</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#mm\">mm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mmput\">mmput</a>(<a class=\"id\" href=\"#mm\">mm</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_sig\">task_sig</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_cap\">task_cap</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_cpus_allowed\">task_cpus_allowed</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpuset_task_status_allowed\">cpuset_task_status_allowed</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#task\">task</a>);", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_S390\">CONFIG_S390</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_show_regs\">task_show_regs</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#task\">task</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_context_switch_counts\">task_context_switch_counts</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#do_task_stat\">do_task_stat</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#pid\">pid</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, int <a class=\"id\" href=\"#whole\">whole</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#vsize\">vsize</a>, <a class=\"id\" href=\"#eip\">eip</a>, <a class=\"id\" href=\"#esp\">esp</a>, <a class=\"id\" href=\"#wchan\">wchan</a> = ~0UL;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#priority\">priority</a>, <a class=\"id\" href=\"#nice\">nice</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tty_pgrp\">tty_pgrp</a> = -1, <a class=\"id\" href=\"#tty_nr\">tty_nr</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#sigign\">sigign</a>, <a class=\"id\" href=\"#sigcatch\">sigcatch</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pid_t\">pid_t</a> <a class=\"id\" href=\"#ppid\">ppid</a> = 0, <a class=\"id\" href=\"#pgid\">pgid</a> = -1, <a class=\"id\" href=\"#sid\">sid</a> = -1;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#num_threads\">num_threads</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#permitted\">permitted</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#start_time\">start_time</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#cmin_flt\">cmin_flt</a> = 0, <a class=\"id\" href=\"#cmaj_flt\">cmaj_flt</a> = 0;", 
"<span class=\"ts\"/>unsigned long  <a class=\"id\" href=\"#min_flt\">min_flt</a> = 0,  <a class=\"id\" href=\"#maj_flt\">maj_flt</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cputime_t\">cputime_t</a> <a class=\"id\" href=\"#cutime\">cutime</a>, <a class=\"id\" href=\"#cstime\">cstime</a>, <a class=\"id\" href=\"#utime\">utime</a>, <a class=\"id\" href=\"#stime\">stime</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cputime_t\">cputime_t</a> <a class=\"id\" href=\"#cgtime\">cgtime</a>, <a class=\"id\" href=\"#gtime\">gtime</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#rsslim\">rsslim</a> = 0;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#tcomm\">tcomm</a>[sizeof(<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#comm\">comm</a>)];", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = *<a class=\"id\" href=\"#get_task_state\">get_task_state</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vsize\">vsize</a> = <a class=\"id\" href=\"#eip\">eip</a> = <a class=\"id\" href=\"#esp\">esp</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#permitted\">permitted</a> = <a class=\"id\" href=\"#ptrace_may_access\">ptrace_may_access</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#PTRACE_MODE_READ\">PTRACE_MODE_READ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#get_task_mm\">get_task_mm</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vsize\">vsize</a> = <a class=\"id\" href=\"#task_vsize\">task_vsize</a>(<a class=\"id\" href=\"#mm\">mm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#permitted\">permitted</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eip\">eip</a> = <a class=\"id\" href=\"#KSTK_EIP\">KSTK_EIP</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#esp\">esp</a> = <a class=\"id\" href=\"#KSTK_ESP\">KSTK_ESP</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_task_comm\">get_task_comm</a>(<a class=\"id\" href=\"#tcomm\">tcomm</a>, <a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigemptyset\">sigemptyset</a>(&amp;<a class=\"id\" href=\"#sigign\">sigign</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigemptyset\">sigemptyset</a>(&amp;<a class=\"id\" href=\"#sigcatch\">sigcatch</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cutime\">cutime</a> = <a class=\"id\" href=\"#cstime\">cstime</a> = <a class=\"id\" href=\"#utime\">utime</a> = <a class=\"id\" href=\"#stime\">stime</a> = <a class=\"id\" href=\"#cputime_zero\">cputime_zero</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgtime\">cgtime</a> = <a class=\"id\" href=\"#gtime\">gtime</a> = <a class=\"id\" href=\"#cputime_zero\">cputime_zero</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lock_task_sighand\">lock_task_sighand</a>(<a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#signal_struct\">signal_struct</a> *<a class=\"id\" href=\"#sig\">sig</a> = <a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#signal\">signal</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#tty\">tty</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#pgrp\">pgrp</a> = <a class=\"id\" href=\"#tty_get_pgrp\">tty_get_pgrp</a>(<a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_pgrp\">tty_pgrp</a> = <a class=\"id\" href=\"#pid_nr_ns\">pid_nr_ns</a>(<a class=\"id\" href=\"#pgrp\">pgrp</a>, <a class=\"id\" href=\"#ns\">ns</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#pgrp\">pgrp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_nr\">tty_nr</a> = <a class=\"id\" href=\"#new_encode_dev\">new_encode_dev</a>(<a class=\"id\" href=\"#tty_devnum\">tty_devnum</a>(<a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#tty\">tty</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_threads\">num_threads</a> = <a class=\"id\" href=\"#get_nr_threads\">get_nr_threads</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#collect_sigign_sigcatch\">collect_sigign_sigcatch</a>(<a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#sigign\">sigign</a>, &amp;<a class=\"id\" href=\"#sigcatch\">sigcatch</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmin_flt\">cmin_flt</a> = <a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#cmin_flt\">cmin_flt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmaj_flt\">cmaj_flt</a> = <a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#cmaj_flt\">cmaj_flt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cutime\">cutime</a> = <a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#cutime\">cutime</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cstime\">cstime</a> = <a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#cstime\">cstime</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgtime\">cgtime</a> = <a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#cgtime\">cgtime</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rsslim\">rsslim</a> = <a class=\"id\" href=\"#ACCESS_ONCE\">ACCESS_ONCE</a>(<a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#rlim\">rlim</a>[<a class=\"id\" href=\"#RLIMIT_RSS\">RLIMIT_RSS</a>].<a class=\"id\" href=\"#rlim_cur\">rlim_cur</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* add up live thread stats at the group level */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#whole\">whole</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_flt\">min_flt</a> += <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#min_flt\">min_flt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#maj_flt\">maj_flt</a> += <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#maj_flt\">maj_flt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gtime\">gtime</a> = <a class=\"id\" href=\"#cputime_add\">cputime_add</a>(<a class=\"id\" href=\"#gtime\">gtime</a>, <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#gtime\">gtime</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#next_thread\">next_thread</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} while (<a class=\"id\" href=\"#t\">t</a> != <a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_flt\">min_flt</a> += <a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#min_flt\">min_flt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#maj_flt\">maj_flt</a> += <a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#maj_flt\">maj_flt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#thread_group_times\">thread_group_times</a>(<a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#utime\">utime</a>, &amp;<a class=\"id\" href=\"#stime\">stime</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gtime\">gtime</a> = <a class=\"id\" href=\"#cputime_add\">cputime_add</a>(<a class=\"id\" href=\"#gtime\">gtime</a>, <a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#gtime\">gtime</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#task_session_nr_ns\">task_session_nr_ns</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#ns\">ns</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ppid\">ppid</a> = <a class=\"id\" href=\"#task_tgid_nr_ns\">task_tgid_nr_ns</a>(<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#real_parent\">real_parent</a>, <a class=\"id\" href=\"#ns\">ns</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgid\">pgid</a> = <a class=\"id\" href=\"#task_pgrp_nr_ns\">task_pgrp_nr_ns</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#ns\">ns</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_task_sighand\">unlock_task_sighand</a>(<a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#permitted\">permitted</a> && (!<a class=\"id\" href=\"#whole\">whole</a> || <a class=\"id\" href=\"#num_threads\">num_threads</a> &lt; 2))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wchan\">wchan</a> = <a class=\"id\" href=\"#get_wchan\">get_wchan</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#whole\">whole</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_flt\">min_flt</a> = <a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#min_flt\">min_flt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#maj_flt\">maj_flt</a> = <a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#maj_flt\">maj_flt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task_times\">task_times</a>(<a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#utime\">utime</a>, &amp;<a class=\"id\" href=\"#stime\">stime</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gtime\">gtime</a> = <a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#gtime\">gtime</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* scale priority and nice values from timeslices to -20..20 */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* to make it look like a \"normal\" Unix priority/nice value  */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#priority\">priority</a> = <a class=\"id\" href=\"#task_prio\">task_prio</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nice\">nice</a> = <a class=\"id\" href=\"#task_nice\">task_nice</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Temporary variable needed for gcc-2.96 */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* convert timespec -&gt; nsec*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start_time\">start_time</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#real_start_time\">real_start_time</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> * <a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#real_start_time\">real_start_time</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* convert nsec -&gt; ticks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start_time\">start_time</a> = <a class=\"id\" href=\"#nsec_to_clock_t\">nsec_to_clock_t</a>(<a class=\"id\" href=\"#start_time\">start_time</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%d (%s) %c %d %d %d %d %d %u %lu \\", 
"%lu %lu %lu %lu %lu %ld %ld %ld %ld %d 0 %llu %lu %ld %lu %lu %lu %lu %lu \\", 
"%lu %lu %lu %lu %lu %lu %lu %lu %d %d %u %u %llu %lu %ld\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pid_nr_ns\">pid_nr_ns</a>(<a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#ns\">ns</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcomm\">tcomm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ppid\">ppid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgid\">pgid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sid\">sid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_nr\">tty_nr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_pgrp\">tty_pgrp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_flt\">min_flt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmin_flt\">cmin_flt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#maj_flt\">maj_flt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmaj_flt\">cmaj_flt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cputime_to_clock_t\">cputime_to_clock_t</a>(<a class=\"id\" href=\"#utime\">utime</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cputime_to_clock_t\">cputime_to_clock_t</a>(<a class=\"id\" href=\"#stime\">stime</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cputime_to_clock_t\">cputime_to_clock_t</a>(<a class=\"id\" href=\"#cutime\">cutime</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cputime_to_clock_t\">cputime_to_clock_t</a>(<a class=\"id\" href=\"#cstime\">cstime</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#priority\">priority</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nice\">nice</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_threads\">num_threads</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_time\">start_time</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vsize\">vsize</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a> ? <a class=\"id\" href=\"#get_mm_rss\">get_mm_rss</a>(<a class=\"id\" href=\"#mm\">mm</a>) : 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rsslim\">rsslim</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a> ? <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#start_code\">start_code</a> : 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a> ? <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#end_code\">end_code</a> : 0,", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#permitted\">permitted</a> && <a class=\"id\" href=\"#mm\">mm</a>) ? <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#start_stack\">start_stack</a> : 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#esp\">esp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eip\">eip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The signal information here is obsolete.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * It must be decimal for Linux 2.0 compatibility.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Use /proc/#/status for real-time signals.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#pending\">pending</a>.<a class=\"id\" href=\"#signal\">signal</a>.<a class=\"id\" href=\"#sig\">sig</a>[0] &amp; 0x7fffffffUL,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#blocked\">blocked</a>.<a class=\"id\" href=\"#sig\">sig</a>[0] &amp; 0x7fffffffUL,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigign\">sigign</a>      .<a class=\"id\" href=\"#sig\">sig</a>[0] &amp; 0x7fffffffUL,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigcatch\">sigcatch</a>    .<a class=\"id\" href=\"#sig\">sig</a>[0] &amp; 0x7fffffffUL,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wchan\">wchan</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>0UL,", 
"<span class=\"ts\"/><span class=\"ts\"/>0UL,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#exit_signal\">exit_signal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task_cpu\">task_cpu</a>(<a class=\"id\" href=\"#task\">task</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#rt_priority\">rt_priority</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#delayacct_blkio_ticks\">delayacct_blkio_ticks</a>(<a class=\"id\" href=\"#task\">task</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cputime_to_clock_t\">cputime_to_clock_t</a>(<a class=\"id\" href=\"#gtime\">gtime</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cputime_to_clock_t\">cputime_to_clock_t</a>(<a class=\"id\" href=\"#cgtime\">cgtime</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mmput\">mmput</a>(<a class=\"id\" href=\"#mm\">mm</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#proc_tid_stat\">proc_tid_stat</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#pid\">pid</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_task_stat\">do_task_stat</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#ns\">ns</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#task\">task</a>, 0);", 
"}", 
"", 
"int <a class=\"id\" href=\"#proc_tgid_stat\">proc_tgid_stat</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#pid\">pid</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_task_stat\">do_task_stat</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#ns\">ns</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#task\">task</a>, 1);", 
"}", 
"", 
"int <a class=\"id\" href=\"#proc_pid_statm\">proc_pid_statm</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#pid\">pid</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#size\">size</a> = 0, <a class=\"id\" href=\"#resident\">resident</a> = 0, <a class=\"id\" href=\"#shared\">shared</a> = 0, <a class=\"id\" href=\"#text\">text</a> = 0, <a class=\"id\" href=\"#lib\">lib</a> = 0, <a class=\"id\" href=\"#data\">data</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#get_task_mm\">get_task_mm</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#task_statm\">task_statm</a>(<a class=\"id\" href=\"#mm\">mm</a>, &amp;<a class=\"id\" href=\"#shared\">shared</a>, &amp;<a class=\"id\" href=\"#text\">text</a>, &amp;<a class=\"id\" href=\"#data\">data</a>, &amp;<a class=\"id\" href=\"#resident\">resident</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mmput\">mmput</a>(<a class=\"id\" href=\"#mm\">mm</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%d %d %d %d %d %d %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#resident\">resident</a>, <a class=\"id\" href=\"#shared\">shared</a>, <a class=\"id\" href=\"#text\">text</a>, <a class=\"id\" href=\"#lib\">lib</a>, <a class=\"id\" href=\"#data\">data</a>, 0);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
];
xr_frag_insert('l/e4/3a59928678c66c9a66e7840f672d6eb46c5486.xr', __xr_tmp);
