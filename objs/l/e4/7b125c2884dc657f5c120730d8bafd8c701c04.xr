var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Scatterlist Cryptographic API.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (c) 2002 James Morris &lt;jmorris@intercode.com.au&gt;</span>", 
"<span class=\"comment\"> * Copyright (c) 2002 David S. Miller (davem@redhat.com)</span>", 
"<span class=\"comment\"> * Copyright (c) 2005 Herbert Xu &lt;herbert@gondor.apana.org.au&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Portions derived from Cryptoapi, by Alexander Kjeldaas &lt;astor@fast.no&gt;</span>", 
"<span class=\"comment\"> * and Nettle, by Niels MÃ¶ller.</span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify it</span>", 
"<span class=\"comment\"> * under the terms of the GNU General Public License as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation; either version 2 of the License, or (at your option) </span>", 
"<span class=\"comment\"> * any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_CRYPTO_H\">_LINUX_CRYPTO_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_CRYPTO_H\">_LINUX_CRYPTO_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Algorithm masks and types.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_MASK\">CRYPTO_ALG_TYPE_MASK</a><span class=\"ts\"/><span class=\"ts\"/>0x0000000f", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_CIPHER\">CRYPTO_ALG_TYPE_CIPHER</a><span class=\"ts\"/><span class=\"ts\"/>0x00000001", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_COMPRESS\">CRYPTO_ALG_TYPE_COMPRESS</a><span class=\"ts\"/>0x00000002", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_AEAD\">CRYPTO_ALG_TYPE_AEAD</a><span class=\"ts\"/><span class=\"ts\"/>0x00000003", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_BLKCIPHER\">CRYPTO_ALG_TYPE_BLKCIPHER</a><span class=\"ts\"/>0x00000004", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_ABLKCIPHER\">CRYPTO_ALG_TYPE_ABLKCIPHER</a><span class=\"ts\"/>0x00000005", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_GIVCIPHER\">CRYPTO_ALG_TYPE_GIVCIPHER</a><span class=\"ts\"/>0x00000006", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_DIGEST\">CRYPTO_ALG_TYPE_DIGEST</a><span class=\"ts\"/><span class=\"ts\"/>0x00000008", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_HASH\">CRYPTO_ALG_TYPE_HASH</a><span class=\"ts\"/><span class=\"ts\"/>0x00000008", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_SHASH\">CRYPTO_ALG_TYPE_SHASH</a><span class=\"ts\"/><span class=\"ts\"/>0x00000009", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_AHASH\">CRYPTO_ALG_TYPE_AHASH</a><span class=\"ts\"/><span class=\"ts\"/>0x0000000a", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_RNG\">CRYPTO_ALG_TYPE_RNG</a><span class=\"ts\"/><span class=\"ts\"/>0x0000000c", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_PCOMPRESS\">CRYPTO_ALG_TYPE_PCOMPRESS</a><span class=\"ts\"/>0x0000000f", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_HASH_MASK\">CRYPTO_ALG_TYPE_HASH_MASK</a><span class=\"ts\"/>0x0000000e", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_AHASH_MASK\">CRYPTO_ALG_TYPE_AHASH_MASK</a><span class=\"ts\"/>0x0000000c", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_BLKCIPHER_MASK\">CRYPTO_ALG_TYPE_BLKCIPHER_MASK</a><span class=\"ts\"/>0x0000000c", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_LARVAL\">CRYPTO_ALG_LARVAL</a><span class=\"ts\"/><span class=\"ts\"/>0x00000010", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_DEAD\">CRYPTO_ALG_DEAD</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x00000020", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_DYING\">CRYPTO_ALG_DYING</a><span class=\"ts\"/><span class=\"ts\"/>0x00000040", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_ASYNC\">CRYPTO_ALG_ASYNC</a><span class=\"ts\"/><span class=\"ts\"/>0x00000080", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Set this bit if and only if the algorithm requires another algorithm of</span>", 
"<span class=\"comment\"> * the same type to handle corner cases.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_NEED_FALLBACK\">CRYPTO_ALG_NEED_FALLBACK</a><span class=\"ts\"/>0x00000100", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This bit is set for symmetric key ciphers that have already been wrapped</span>", 
"<span class=\"comment\"> * with a generic IV generator to prevent them from being wrapped again.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_GENIV\">CRYPTO_ALG_GENIV</a><span class=\"ts\"/><span class=\"ts\"/>0x00000200", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Set if the algorithm has passed automated run-time testing.  Note that</span>", 
"<span class=\"comment\"> * if there is no run-time testing for a given algorithm it is considered</span>", 
"<span class=\"comment\"> * to have passed.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_ALG_TESTED\">CRYPTO_ALG_TESTED</a><span class=\"ts\"/><span class=\"ts\"/>0x00000400", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Transform masks and values (for crt_flags).</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_TFM_REQ_MASK\">CRYPTO_TFM_REQ_MASK</a><span class=\"ts\"/><span class=\"ts\"/>0x000fff00", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_TFM_RES_MASK\">CRYPTO_TFM_RES_MASK</a><span class=\"ts\"/><span class=\"ts\"/>0xfff00000", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_TFM_REQ_WEAK_KEY\">CRYPTO_TFM_REQ_WEAK_KEY</a><span class=\"ts\"/><span class=\"ts\"/>0x00000100", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_TFM_REQ_MAY_SLEEP\">CRYPTO_TFM_REQ_MAY_SLEEP</a><span class=\"ts\"/>0x00000200", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_TFM_REQ_MAY_BACKLOG\">CRYPTO_TFM_REQ_MAY_BACKLOG</a><span class=\"ts\"/>0x00000400", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_TFM_RES_WEAK_KEY\">CRYPTO_TFM_RES_WEAK_KEY</a><span class=\"ts\"/><span class=\"ts\"/>0x00100000", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_TFM_RES_BAD_KEY_LEN\">CRYPTO_TFM_RES_BAD_KEY_LEN</a>   <span class=\"ts\"/>0x00200000", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_TFM_RES_BAD_KEY_SCHED\">CRYPTO_TFM_RES_BAD_KEY_SCHED</a> <span class=\"ts\"/>0x00400000", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_TFM_RES_BAD_BLOCK_LEN\">CRYPTO_TFM_RES_BAD_BLOCK_LEN</a> <span class=\"ts\"/>0x00800000", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_TFM_RES_BAD_FLAGS\">CRYPTO_TFM_RES_BAD_FLAGS</a> <span class=\"ts\"/>0x01000000", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Miscellaneous stuff.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_MAX_ALG_NAME\">CRYPTO_MAX_ALG_NAME</a><span class=\"ts\"/><span class=\"ts\"/>64", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The macro CRYPTO_MINALIGN_ATTR (along with the void * type in the actual</span>", 
"<span class=\"comment\"> * declaration) is used to ensure that the crypto_tfm context structure is</span>", 
"<span class=\"comment\"> * aligned correctly for the given architecture so that there are no alignment</span>", 
"<span class=\"comment\"> * faults for C data types.  In particular, this is required on platforms such</span>", 
"<span class=\"comment\"> * as arm where pointers are 32-bit aligned but there are data types such as</span>", 
"<span class=\"comment\"> * u64 which require 64-bit alignment.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_MINALIGN\">CRYPTO_MINALIGN</a> <a class=\"id\" href=\"#ARCH_KMALLOC_MINALIGN\">ARCH_KMALLOC_MINALIGN</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_MINALIGN_ATTR\">CRYPTO_MINALIGN_ATTR</a> <a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#__aligned__\">__aligned__</a>(<a class=\"id\" href=\"#CRYPTO_MINALIGN\">CRYPTO_MINALIGN</a>)))", 
"", 
"struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a>;", 
"struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a>;", 
"struct <a class=\"id\" href=\"#crypto_async_request\">crypto_async_request</a>;", 
"struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a>;", 
"struct <a class=\"id\" href=\"#crypto_blkcipher\">crypto_blkcipher</a>;", 
"struct <a class=\"id\" href=\"#crypto_hash\">crypto_hash</a>;", 
"struct <a class=\"id\" href=\"#crypto_rng\">crypto_rng</a>;", 
"struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a>;", 
"struct <a class=\"id\" href=\"#crypto_type\">crypto_type</a>;", 
"struct <a class=\"id\" href=\"#aead_givcrypt_request\">aead_givcrypt_request</a>;", 
"struct <a class=\"id\" href=\"#skcipher_givcrypt_request\">skcipher_givcrypt_request</a>;", 
"", 
"typedef void (*<a class=\"id\" href=\"#crypto_completion_t\">crypto_completion_t</a>)(struct <a class=\"id\" href=\"#crypto_async_request\">crypto_async_request</a> *<a class=\"id\" href=\"#req\">req</a>, int <a class=\"id\" href=\"#err\">err</a>);", 
"", 
"struct <a class=\"id\" href=\"#crypto_async_request\">crypto_async_request</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_completion_t\">crypto_completion_t</a> <a class=\"id\" href=\"#complete\">complete</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ablkcipher_request\">ablkcipher_request</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_async_request\">crypto_async_request</a> <a class=\"id\" href=\"#base\">base</a>;", 
"", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#nbytes\">nbytes</a>;", 
"", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#src\">src</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#dst\">dst</a>;", 
"", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#__ctx\">__ctx</a>[] <a class=\"id\" href=\"#CRYPTO_MINALIGN_ATTR\">CRYPTO_MINALIGN_ATTR</a>;", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>struct aead_request - AEAD request</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@base: Common attributes for async crypto requests</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@assoclen: Length in bytes of associated data for authentication</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@cryptlen: Length of data to be encrypted or decrypted</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@iv: Initialisation vector</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@assoc: Associated data</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@src: Source data</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dst: Destination data</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@__ctx: Start of private context data</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#aead_request\">aead_request</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_async_request\">crypto_async_request</a> <a class=\"id\" href=\"#base\">base</a>;", 
"", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#assoclen\">assoclen</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cryptlen\">cryptlen</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#iv\">iv</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#assoc\">assoc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#src\">src</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#dst\">dst</a>;", 
"", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#__ctx\">__ctx</a>[] <a class=\"id\" href=\"#CRYPTO_MINALIGN_ATTR\">CRYPTO_MINALIGN_ATTR</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#blkcipher_desc\">blkcipher_desc</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_blkcipher\">crypto_blkcipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#cipher_desc\">cipher_desc</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>;", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#crfn\">crfn</a>)(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#dst\">dst</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#src\">src</a>);", 
"<span class=\"ts\"/>unsigned int (*<a class=\"id\" href=\"#prfn\">prfn</a>)(const struct <a class=\"id\" href=\"#cipher_desc\">cipher_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#src\">src</a>, unsigned int <a class=\"id\" href=\"#nbytes\">nbytes</a>);", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#info\">info</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#hash_desc\">hash_desc</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_hash\">crypto_hash</a> *<a class=\"id\" href=\"#tfm\">tfm</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Algorithms: modular crypto algorithm implementations, managed</span>", 
"<span class=\"comment\"> * via crypto_register_alg() and crypto_unregister_alg().</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ablkcipher_alg\">ablkcipher_alg</a> {", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#setkey\">setkey</a>)(struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/>              unsigned int <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#encrypt\">encrypt</a>)(struct <a class=\"id\" href=\"#ablkcipher_request\">ablkcipher_request</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#decrypt\">decrypt</a>)(struct <a class=\"id\" href=\"#ablkcipher_request\">ablkcipher_request</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#givencrypt\">givencrypt</a>)(struct <a class=\"id\" href=\"#skcipher_givcrypt_request\">skcipher_givcrypt_request</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#givdecrypt\">givdecrypt</a>)(struct <a class=\"id\" href=\"#skcipher_givcrypt_request\">skcipher_givcrypt_request</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#geniv\">geniv</a>;", 
"", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#min_keysize\">min_keysize</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#max_keysize\">max_keysize</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ivsize\">ivsize</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#aead_alg\">aead_alg</a> {", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#setkey\">setkey</a>)(struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/>              unsigned int <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#setauthsize\">setauthsize</a>)(struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, unsigned int <a class=\"id\" href=\"#authsize\">authsize</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#encrypt\">encrypt</a>)(struct <a class=\"id\" href=\"#aead_request\">aead_request</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#decrypt\">decrypt</a>)(struct <a class=\"id\" href=\"#aead_request\">aead_request</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#givencrypt\">givencrypt</a>)(struct <a class=\"id\" href=\"#aead_givcrypt_request\">aead_givcrypt_request</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#givdecrypt\">givdecrypt</a>)(struct <a class=\"id\" href=\"#aead_givcrypt_request\">aead_givcrypt_request</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#geniv\">geniv</a>;", 
"", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ivsize\">ivsize</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#maxauthsize\">maxauthsize</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#blkcipher_alg\">blkcipher_alg</a> {", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#setkey\">setkey</a>)(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/>              unsigned int <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#encrypt\">encrypt</a>)(struct <a class=\"id\" href=\"#blkcipher_desc\">blkcipher_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#dst\">dst</a>, struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#src\">src</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#nbytes\">nbytes</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#decrypt\">decrypt</a>)(struct <a class=\"id\" href=\"#blkcipher_desc\">blkcipher_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#dst\">dst</a>, struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#src\">src</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#nbytes\">nbytes</a>);", 
"", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#geniv\">geniv</a>;", 
"", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#min_keysize\">min_keysize</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#max_keysize\">max_keysize</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ivsize\">ivsize</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#cipher_alg\">cipher_alg</a> {", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cia_min_keysize\">cia_min_keysize</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cia_max_keysize\">cia_max_keysize</a>;", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#cia_setkey\">cia_setkey</a>)(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/>                  unsigned int <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#cia_encrypt\">cia_encrypt</a>)(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#dst\">dst</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#src\">src</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#cia_decrypt\">cia_decrypt</a>)(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#dst\">dst</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#src\">src</a>);", 
"};", 
"", 
"struct <a class=\"id\" href=\"#compress_alg\">compress_alg</a> {", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#coa_compress\">coa_compress</a>)(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#src\">src</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#slen\">slen</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#dst\">dst</a>, unsigned int *<a class=\"id\" href=\"#dlen\">dlen</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#coa_decompress\">coa_decompress</a>)(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#src\">src</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#slen\">slen</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#dst\">dst</a>, unsigned int *<a class=\"id\" href=\"#dlen\">dlen</a>);", 
"};", 
"", 
"struct <a class=\"id\" href=\"#rng_alg\">rng_alg</a> {", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#rng_make_random\">rng_make_random</a>)(struct <a class=\"id\" href=\"#crypto_rng\">crypto_rng</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#rdata\">rdata</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#dlen\">dlen</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#rng_reset\">rng_reset</a>)(struct <a class=\"id\" href=\"#crypto_rng\">crypto_rng</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#seed\">seed</a>, unsigned int <a class=\"id\" href=\"#slen\">slen</a>);", 
"", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#seedsize\">seedsize</a>;", 
"};", 
"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cra_ablkcipher\">cra_ablkcipher</a><span class=\"ts\"/><a class=\"id\" href=\"#cra_u\">cra_u</a>.<a class=\"id\" href=\"#ablkcipher\">ablkcipher</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cra_aead\">cra_aead</a><span class=\"ts\"/><a class=\"id\" href=\"#cra_u\">cra_u</a>.<a class=\"id\" href=\"#aead\">aead</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cra_blkcipher\">cra_blkcipher</a><span class=\"ts\"/><a class=\"id\" href=\"#cra_u\">cra_u</a>.<a class=\"id\" href=\"#blkcipher\">blkcipher</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cra_cipher\">cra_cipher</a><span class=\"ts\"/><a class=\"id\" href=\"#cra_u\">cra_u</a>.<a class=\"id\" href=\"#cipher\">cipher</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cra_compress\">cra_compress</a><span class=\"ts\"/><a class=\"id\" href=\"#cra_u\">cra_u</a>.<a class=\"id\" href=\"#compress\">compress</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cra_rng\">cra_rng</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cra_u\">cra_u</a>.<a class=\"id\" href=\"#rng\">rng</a>", 
"", 
"struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#cra_list\">cra_list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#cra_users\">cra_users</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cra_flags\">cra_flags</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cra_blocksize\">cra_blocksize</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cra_ctxsize\">cra_ctxsize</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cra_alignmask\">cra_alignmask</a>;", 
"", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cra_priority\">cra_priority</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#cra_refcnt\">cra_refcnt</a>;", 
"", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#cra_name\">cra_name</a>[<a class=\"id\" href=\"#CRYPTO_MAX_ALG_NAME\">CRYPTO_MAX_ALG_NAME</a>];", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#cra_driver_name\">cra_driver_name</a>[<a class=\"id\" href=\"#CRYPTO_MAX_ALG_NAME\">CRYPTO_MAX_ALG_NAME</a>];", 
"", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#crypto_type\">crypto_type</a> *<a class=\"id\" href=\"#cra_type\">cra_type</a>;", 
"", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ablkcipher_alg\">ablkcipher_alg</a> <a class=\"id\" href=\"#ablkcipher\">ablkcipher</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#aead_alg\">aead_alg</a> <a class=\"id\" href=\"#aead\">aead</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#blkcipher_alg\">blkcipher_alg</a> <a class=\"id\" href=\"#blkcipher\">blkcipher</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cipher_alg\">cipher_alg</a> <a class=\"id\" href=\"#cipher\">cipher</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#compress_alg\">compress_alg</a> <a class=\"id\" href=\"#compress\">compress</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rng_alg\">rng_alg</a> <a class=\"id\" href=\"#rng\">rng</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#cra_u\">cra_u</a>;", 
"", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#cra_init\">cra_init</a>)(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#cra_exit\">cra_exit</a>)(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#cra_destroy\">cra_destroy</a>)(struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#alg\">alg</a>);", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#cra_module\">cra_module</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Algorithm registration interface.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#crypto_register_alg\">crypto_register_alg</a>(struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#alg\">alg</a>);", 
"int <a class=\"id\" href=\"#crypto_unregister_alg\">crypto_unregister_alg</a>(struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#alg\">alg</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Algorithm query interface.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#crypto_has_alg\">crypto_has_alg</a>(const char *<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Transforms: user-instantiated objects which encapsulate algorithms</span>", 
"<span class=\"comment\"> * and core processing logic.  Managed via crypto_alloc_*() and</span>", 
"<span class=\"comment\"> * crypto_free_*(), as well as the various helpers below.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#ablkcipher_tfm\">ablkcipher_tfm</a> {", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#setkey\">setkey</a>)(struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/>              unsigned int <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#encrypt\">encrypt</a>)(struct <a class=\"id\" href=\"#ablkcipher_request\">ablkcipher_request</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#decrypt\">decrypt</a>)(struct <a class=\"id\" href=\"#ablkcipher_request\">ablkcipher_request</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#givencrypt\">givencrypt</a>)(struct <a class=\"id\" href=\"#skcipher_givcrypt_request\">skcipher_givcrypt_request</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#givdecrypt\">givdecrypt</a>)(struct <a class=\"id\" href=\"#skcipher_givcrypt_request\">skcipher_givcrypt_request</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> *<a class=\"id\" href=\"#base\">base</a>;", 
"", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ivsize\">ivsize</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#reqsize\">reqsize</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#aead_tfm\">aead_tfm</a> {", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#setkey\">setkey</a>)(struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/>              unsigned int <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#encrypt\">encrypt</a>)(struct <a class=\"id\" href=\"#aead_request\">aead_request</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#decrypt\">decrypt</a>)(struct <a class=\"id\" href=\"#aead_request\">aead_request</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#givencrypt\">givencrypt</a>)(struct <a class=\"id\" href=\"#aead_givcrypt_request\">aead_givcrypt_request</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#givdecrypt\">givdecrypt</a>)(struct <a class=\"id\" href=\"#aead_givcrypt_request\">aead_givcrypt_request</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#base\">base</a>;", 
"", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ivsize\">ivsize</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#authsize\">authsize</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#reqsize\">reqsize</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#blkcipher_tfm\">blkcipher_tfm</a> {", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#iv\">iv</a>;", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#setkey\">setkey</a>)(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#encrypt\">encrypt</a>)(struct <a class=\"id\" href=\"#blkcipher_desc\">blkcipher_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#src\">src</a>, unsigned int <a class=\"id\" href=\"#nbytes\">nbytes</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#decrypt\">decrypt</a>)(struct <a class=\"id\" href=\"#blkcipher_desc\">blkcipher_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#src\">src</a>, unsigned int <a class=\"id\" href=\"#nbytes\">nbytes</a>);", 
"};", 
"", 
"struct <a class=\"id\" href=\"#cipher_tfm\">cipher_tfm</a> {", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#cit_setkey\">cit_setkey</a>)(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>,", 
"<span class=\"ts\"/>                  const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#key\">key</a>, unsigned int <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#cit_encrypt_one\">cit_encrypt_one</a>)(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#dst\">dst</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#src\">src</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#cit_decrypt_one\">cit_decrypt_one</a>)(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#dst\">dst</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#src\">src</a>);", 
"};", 
"", 
"struct <a class=\"id\" href=\"#hash_tfm\">hash_tfm</a> {", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#init\">init</a>)(struct <a class=\"id\" href=\"#hash_desc\">hash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#update\">update</a>)(struct <a class=\"id\" href=\"#hash_desc\">hash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sg\">sg</a>, unsigned int <a class=\"id\" href=\"#nsg\">nsg</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#final\">final</a>)(struct <a class=\"id\" href=\"#hash_desc\">hash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#out\">out</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#digest\">digest</a>)(struct <a class=\"id\" href=\"#hash_desc\">hash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sg\">sg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#nsg\">nsg</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#out\">out</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#setkey\">setkey</a>)(struct <a class=\"id\" href=\"#crypto_hash\">crypto_hash</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#digestsize\">digestsize</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#compress_tfm\">compress_tfm</a> {", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#cot_compress\">cot_compress</a>)(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>,", 
"<span class=\"ts\"/>                    const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#src\">src</a>, unsigned int <a class=\"id\" href=\"#slen\">slen</a>,", 
"<span class=\"ts\"/>                    <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#dst\">dst</a>, unsigned int *<a class=\"id\" href=\"#dlen\">dlen</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#cot_decompress\">cot_decompress</a>)(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>,", 
"<span class=\"ts\"/>                      const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#src\">src</a>, unsigned int <a class=\"id\" href=\"#slen\">slen</a>,", 
"<span class=\"ts\"/>                      <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#dst\">dst</a>, unsigned int *<a class=\"id\" href=\"#dlen\">dlen</a>);", 
"};", 
"", 
"struct <a class=\"id\" href=\"#rng_tfm\">rng_tfm</a> {", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#rng_gen_random\">rng_gen_random</a>)(struct <a class=\"id\" href=\"#crypto_rng\">crypto_rng</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#rdata\">rdata</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#dlen\">dlen</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#rng_reset\">rng_reset</a>)(struct <a class=\"id\" href=\"#crypto_rng\">crypto_rng</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#seed\">seed</a>, unsigned int <a class=\"id\" href=\"#slen\">slen</a>);", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#crt_ablkcipher\">crt_ablkcipher</a><span class=\"ts\"/><a class=\"id\" href=\"#crt_u\">crt_u</a>.<a class=\"id\" href=\"#ablkcipher\">ablkcipher</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#crt_aead\">crt_aead</a><span class=\"ts\"/><a class=\"id\" href=\"#crt_u\">crt_u</a>.<a class=\"id\" href=\"#aead\">aead</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#crt_blkcipher\">crt_blkcipher</a><span class=\"ts\"/><a class=\"id\" href=\"#crt_u\">crt_u</a>.<a class=\"id\" href=\"#blkcipher\">blkcipher</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#crt_cipher\">crt_cipher</a><span class=\"ts\"/><a class=\"id\" href=\"#crt_u\">crt_u</a>.<a class=\"id\" href=\"#cipher\">cipher</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#crt_hash\">crt_hash</a><span class=\"ts\"/><a class=\"id\" href=\"#crt_u\">crt_u</a>.<a class=\"id\" href=\"#hash\">hash</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#crt_compress\">crt_compress</a><span class=\"ts\"/><a class=\"id\" href=\"#crt_u\">crt_u</a>.<a class=\"id\" href=\"#compress\">compress</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#crt_rng\">crt_rng</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crt_u\">crt_u</a>.<a class=\"id\" href=\"#rng\">rng</a>", 
"", 
"struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> {", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#crt_flags\">crt_flags</a>;", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ablkcipher_tfm\">ablkcipher_tfm</a> <a class=\"id\" href=\"#ablkcipher\">ablkcipher</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#aead_tfm\">aead_tfm</a> <a class=\"id\" href=\"#aead\">aead</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#blkcipher_tfm\">blkcipher_tfm</a> <a class=\"id\" href=\"#blkcipher\">blkcipher</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cipher_tfm\">cipher_tfm</a> <a class=\"id\" href=\"#cipher\">cipher</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hash_tfm\">hash_tfm</a> <a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#compress_tfm\">compress_tfm</a> <a class=\"id\" href=\"#compress\">compress</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rng_tfm\">rng_tfm</a> <a class=\"id\" href=\"#rng\">rng</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#crt_u\">crt_u</a>;", 
"", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#exit\">exit</a>)(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#__crt_alg\">__crt_alg</a>;", 
"", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#__crt_ctx\">__crt_ctx</a>[] <a class=\"id\" href=\"#CRYPTO_MINALIGN_ATTR\">CRYPTO_MINALIGN_ATTR</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> <a class=\"id\" href=\"#base\">base</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> <a class=\"id\" href=\"#base\">base</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#crypto_blkcipher\">crypto_blkcipher</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> <a class=\"id\" href=\"#base\">base</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#crypto_cipher\">crypto_cipher</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> <a class=\"id\" href=\"#base\">base</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#crypto_comp\">crypto_comp</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> <a class=\"id\" href=\"#base\">base</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#crypto_hash\">crypto_hash</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> <a class=\"id\" href=\"#base\">base</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#crypto_rng\">crypto_rng</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> <a class=\"id\" href=\"#base\">base</a>;", 
"};", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CRYPTOA_UNSPEC\">CRYPTOA_UNSPEC</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CRYPTOA_ALG\">CRYPTOA_ALG</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CRYPTOA_TYPE\">CRYPTOA_TYPE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CRYPTOA_U32\">CRYPTOA_U32</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__CRYPTOA_MAX\">__CRYPTOA_MAX</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTOA_MAX\">CRYPTOA_MAX</a> (<a class=\"id\" href=\"#__CRYPTOA_MAX\">__CRYPTOA_MAX</a> - 1)", 
"", 
"<span class=\"comment\">/* Maximum number of (rtattr) parameters for each template. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CRYPTO_MAX_ATTRS\">CRYPTO_MAX_ATTRS</a> 32", 
"", 
"struct <a class=\"id\" href=\"#crypto_attr_alg\">crypto_attr_alg</a> {", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#name\">name</a>[<a class=\"id\" href=\"#CRYPTO_MAX_ALG_NAME\">CRYPTO_MAX_ALG_NAME</a>];", 
"};", 
"", 
"struct <a class=\"id\" href=\"#crypto_attr_type\">crypto_attr_type</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#crypto_attr_u32\">crypto_attr_u32</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#num\">num</a>;", 
"};", 
"", 
"<span class=\"comment\">/* </span>", 
"<span class=\"comment\"> * Transform user interface.</span>", 
"<span class=\"comment\"> */</span>", 
" ", 
"struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#crypto_alloc_base\">crypto_alloc_base</a>(const char *<a class=\"id\" href=\"#alg_name\">alg_name</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>);", 
"void <a class=\"id\" href=\"#crypto_destroy_tfm\">crypto_destroy_tfm</a>(void *<a class=\"id\" href=\"#mem\">mem</a>, struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#crypto_free_tfm\">crypto_free_tfm</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_destroy_tfm\">crypto_destroy_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#tfm\">tfm</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#alg_test\">alg_test</a>(const char *<a class=\"id\" href=\"#driver\">driver</a>, const char *<a class=\"id\" href=\"#alg\">alg</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Transform helpers which query the underlying algorithm.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> const char *<a class=\"id\" href=\"#crypto_tfm_alg_name\">crypto_tfm_alg_name</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#__crt_alg\">__crt_alg</a>-><a class=\"id\" href=\"#cra_name\">cra_name</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> const char *<a class=\"id\" href=\"#crypto_tfm_alg_driver_name\">crypto_tfm_alg_driver_name</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#__crt_alg\">__crt_alg</a>-><a class=\"id\" href=\"#cra_driver_name\">cra_driver_name</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#crypto_tfm_alg_priority\">crypto_tfm_alg_priority</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#__crt_alg\">__crt_alg</a>-><a class=\"id\" href=\"#cra_priority\">cra_priority</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> const char *<a class=\"id\" href=\"#crypto_tfm_alg_modname\">crypto_tfm_alg_modname</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#module_name\">module_name</a>(<a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#__crt_alg\">__crt_alg</a>-><a class=\"id\" href=\"#cra_module\">cra_module</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#crypto_tfm_alg_type\">crypto_tfm_alg_type</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#__crt_alg\">__crt_alg</a>-><a class=\"id\" href=\"#cra_flags\">cra_flags</a> &amp; <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_MASK\">CRYPTO_ALG_TYPE_MASK</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#crypto_tfm_alg_blocksize\">crypto_tfm_alg_blocksize</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#__crt_alg\">__crt_alg</a>-><a class=\"id\" href=\"#cra_blocksize\">cra_blocksize</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#crypto_tfm_alg_alignmask\">crypto_tfm_alg_alignmask</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#__crt_alg\">__crt_alg</a>-><a class=\"id\" href=\"#cra_alignmask\">cra_alignmask</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#crypto_tfm_get_flags\">crypto_tfm_get_flags</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#crt_flags\">crt_flags</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#crypto_tfm_set_flags\">crypto_tfm_set_flags</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#crt_flags\">crt_flags</a> |= <a class=\"id\" href=\"#flags\">flags</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#crypto_tfm_clear_flags\">crypto_tfm_clear_flags</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#crt_flags\">crt_flags</a> &= ~<a class=\"id\" href=\"#flags\">flags</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void *<a class=\"id\" href=\"#crypto_tfm_ctx\">crypto_tfm_ctx</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#__crt_ctx\">__crt_ctx</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#crypto_tfm_ctx_alignment\">crypto_tfm_ctx_alignment</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__alignof__\">__alignof__</a>(<a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#__crt_ctx\">__crt_ctx</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * API wrappers.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> *<a class=\"id\" href=\"#__crypto_ablkcipher_cast\">__crypto_ablkcipher_cast</a>(", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> *)<a class=\"id\" href=\"#tfm\">tfm</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#crypto_skcipher_type\">crypto_skcipher_type</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> &= ~(<a class=\"id\" href=\"#CRYPTO_ALG_TYPE_MASK\">CRYPTO_ALG_TYPE_MASK</a> | <a class=\"id\" href=\"#CRYPTO_ALG_GENIV\">CRYPTO_ALG_GENIV</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> |= <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_BLKCIPHER\">CRYPTO_ALG_TYPE_BLKCIPHER</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#type\">type</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#crypto_skcipher_mask\">crypto_skcipher_mask</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> &= ~(<a class=\"id\" href=\"#CRYPTO_ALG_TYPE_MASK\">CRYPTO_ALG_TYPE_MASK</a> | <a class=\"id\" href=\"#CRYPTO_ALG_GENIV\">CRYPTO_ALG_GENIV</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_BLKCIPHER_MASK\">CRYPTO_ALG_TYPE_BLKCIPHER_MASK</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mask\">mask</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> *<a class=\"id\" href=\"#crypto_alloc_ablkcipher\">crypto_alloc_ablkcipher</a>(const char *<a class=\"id\" href=\"#alg_name\">alg_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#crypto_ablkcipher_tfm\">crypto_ablkcipher_tfm</a>(", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#base\">base</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#crypto_free_ablkcipher\">crypto_free_ablkcipher</a>(struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_free_tfm\">crypto_free_tfm</a>(<a class=\"id\" href=\"#crypto_ablkcipher_tfm\">crypto_ablkcipher_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#crypto_has_ablkcipher\">crypto_has_ablkcipher</a>(const char *<a class=\"id\" href=\"#alg_name\">alg_name</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_has_alg\">crypto_has_alg</a>(<a class=\"id\" href=\"#alg_name\">alg_name</a>, <a class=\"id\" href=\"#crypto_skcipher_type\">crypto_skcipher_type</a>(<a class=\"id\" href=\"#type\">type</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#crypto_skcipher_mask\">crypto_skcipher_mask</a>(<a class=\"id\" href=\"#mask\">mask</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#ablkcipher_tfm\">ablkcipher_tfm</a> *<a class=\"id\" href=\"#crypto_ablkcipher_crt\">crypto_ablkcipher_crt</a>(", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#crypto_ablkcipher_tfm\">crypto_ablkcipher_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)-><a class=\"id\" href=\"#crt_ablkcipher\">crt_ablkcipher</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#crypto_ablkcipher_ivsize\">crypto_ablkcipher_ivsize</a>(", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_ablkcipher_crt\">crypto_ablkcipher_crt</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)-><a class=\"id\" href=\"#ivsize\">ivsize</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#crypto_ablkcipher_blocksize\">crypto_ablkcipher_blocksize</a>(", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_tfm_alg_blocksize\">crypto_tfm_alg_blocksize</a>(<a class=\"id\" href=\"#crypto_ablkcipher_tfm\">crypto_ablkcipher_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#crypto_ablkcipher_alignmask\">crypto_ablkcipher_alignmask</a>(", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_tfm_alg_alignmask\">crypto_tfm_alg_alignmask</a>(<a class=\"id\" href=\"#crypto_ablkcipher_tfm\">crypto_ablkcipher_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#crypto_ablkcipher_get_flags\">crypto_ablkcipher_get_flags</a>(struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_tfm_get_flags\">crypto_tfm_get_flags</a>(<a class=\"id\" href=\"#crypto_ablkcipher_tfm\">crypto_ablkcipher_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#crypto_ablkcipher_set_flags\">crypto_ablkcipher_set_flags</a>(struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_tfm_set_flags\">crypto_tfm_set_flags</a>(<a class=\"id\" href=\"#crypto_ablkcipher_tfm\">crypto_ablkcipher_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>), <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#crypto_ablkcipher_clear_flags\">crypto_ablkcipher_clear_flags</a>(struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_tfm_clear_flags\">crypto_tfm_clear_flags</a>(<a class=\"id\" href=\"#crypto_ablkcipher_tfm\">crypto_ablkcipher_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>), <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#crypto_ablkcipher_setkey\">crypto_ablkcipher_setkey</a>(struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#key\">key</a>, unsigned int <a class=\"id\" href=\"#keylen\">keylen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ablkcipher_tfm\">ablkcipher_tfm</a> *<a class=\"id\" href=\"#crt\">crt</a> = <a class=\"id\" href=\"#crypto_ablkcipher_crt\">crypto_ablkcipher_crt</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crt\">crt</a>-><a class=\"id\" href=\"#setkey\">setkey</a>(<a class=\"id\" href=\"#crt\">crt</a>-><a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> *<a class=\"id\" href=\"#crypto_ablkcipher_reqtfm\">crypto_ablkcipher_reqtfm</a>(", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ablkcipher_request\">ablkcipher_request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__crypto_ablkcipher_cast\">__crypto_ablkcipher_cast</a>(<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#crypto_ablkcipher_encrypt\">crypto_ablkcipher_encrypt</a>(struct <a class=\"id\" href=\"#ablkcipher_request\">ablkcipher_request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ablkcipher_tfm\">ablkcipher_tfm</a> *<a class=\"id\" href=\"#crt\">crt</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_ablkcipher_crt\">crypto_ablkcipher_crt</a>(<a class=\"id\" href=\"#crypto_ablkcipher_reqtfm\">crypto_ablkcipher_reqtfm</a>(<a class=\"id\" href=\"#req\">req</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crt\">crt</a>-><a class=\"id\" href=\"#encrypt\">encrypt</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#crypto_ablkcipher_decrypt\">crypto_ablkcipher_decrypt</a>(struct <a class=\"id\" href=\"#ablkcipher_request\">ablkcipher_request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ablkcipher_tfm\">ablkcipher_tfm</a> *<a class=\"id\" href=\"#crt\">crt</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_ablkcipher_crt\">crypto_ablkcipher_crt</a>(<a class=\"id\" href=\"#crypto_ablkcipher_reqtfm\">crypto_ablkcipher_reqtfm</a>(<a class=\"id\" href=\"#req\">req</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crt\">crt</a>-><a class=\"id\" href=\"#decrypt\">decrypt</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#crypto_ablkcipher_reqsize\">crypto_ablkcipher_reqsize</a>(", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_ablkcipher_crt\">crypto_ablkcipher_crt</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)-><a class=\"id\" href=\"#reqsize\">reqsize</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ablkcipher_request_set_tfm\">ablkcipher_request_set_tfm</a>(", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ablkcipher_request\">ablkcipher_request</a> *<a class=\"id\" href=\"#req\">req</a>, struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#tfm\">tfm</a> = <a class=\"id\" href=\"#crypto_ablkcipher_tfm\">crypto_ablkcipher_tfm</a>(<a class=\"id\" href=\"#crypto_ablkcipher_crt\">crypto_ablkcipher_crt</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)-><a class=\"id\" href=\"#base\">base</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#ablkcipher_request\">ablkcipher_request</a> *<a class=\"id\" href=\"#ablkcipher_request_cast\">ablkcipher_request_cast</a>(", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_async_request\">crypto_async_request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#req\">req</a>, struct <a class=\"id\" href=\"#ablkcipher_request\">ablkcipher_request</a>, <a class=\"id\" href=\"#base\">base</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#ablkcipher_request\">ablkcipher_request</a> *<a class=\"id\" href=\"#ablkcipher_request_alloc\">ablkcipher_request_alloc</a>(", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ablkcipher_request\">ablkcipher_request</a> *<a class=\"id\" href=\"#req\">req</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(struct <a class=\"id\" href=\"#ablkcipher_request\">ablkcipher_request</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#crypto_ablkcipher_reqsize\">crypto_ablkcipher_reqsize</a>(<a class=\"id\" href=\"#tfm\">tfm</a>), <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#req\">req</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ablkcipher_request_set_tfm\">ablkcipher_request_set_tfm</a>(<a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#tfm\">tfm</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#req\">req</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ablkcipher_request_free\">ablkcipher_request_free</a>(struct <a class=\"id\" href=\"#ablkcipher_request\">ablkcipher_request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kzfree\">kzfree</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ablkcipher_request_set_callback\">ablkcipher_request_set_callback</a>(", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ablkcipher_request\">ablkcipher_request</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#crypto_completion_t\">crypto_completion_t</a> <a class=\"id\" href=\"#complete\">complete</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#complete\">complete</a> = <a class=\"id\" href=\"#complete\">complete</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#flags\">flags</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ablkcipher_request_set_crypt\">ablkcipher_request_set_crypt</a>(", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ablkcipher_request\">ablkcipher_request</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#src\">src</a>, struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#nbytes\">nbytes</a>, void *<a class=\"id\" href=\"#iv\">iv</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#src\">src</a> = <a class=\"id\" href=\"#src\">src</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#nbytes\">nbytes</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#iv\">iv</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#__crypto_aead_cast\">__crypto_aead_cast</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *)<a class=\"id\" href=\"#tfm\">tfm</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#crypto_alloc_aead\">crypto_alloc_aead</a>(const char *<a class=\"id\" href=\"#alg_name\">alg_name</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#crypto_aead_tfm\">crypto_aead_tfm</a>(struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#base\">base</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#crypto_free_aead\">crypto_free_aead</a>(struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_free_tfm\">crypto_free_tfm</a>(<a class=\"id\" href=\"#crypto_aead_tfm\">crypto_aead_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#aead_tfm\">aead_tfm</a> *<a class=\"id\" href=\"#crypto_aead_crt\">crypto_aead_crt</a>(struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#crypto_aead_tfm\">crypto_aead_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)-><a class=\"id\" href=\"#crt_aead\">crt_aead</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#crypto_aead_ivsize\">crypto_aead_ivsize</a>(struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_aead_crt\">crypto_aead_crt</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)-><a class=\"id\" href=\"#ivsize\">ivsize</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#crypto_aead_authsize\">crypto_aead_authsize</a>(struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_aead_crt\">crypto_aead_crt</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)-><a class=\"id\" href=\"#authsize\">authsize</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#crypto_aead_blocksize\">crypto_aead_blocksize</a>(struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_tfm_alg_blocksize\">crypto_tfm_alg_blocksize</a>(<a class=\"id\" href=\"#crypto_aead_tfm\">crypto_aead_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#crypto_aead_alignmask\">crypto_aead_alignmask</a>(struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_tfm_alg_alignmask\">crypto_tfm_alg_alignmask</a>(<a class=\"id\" href=\"#crypto_aead_tfm\">crypto_aead_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#crypto_aead_get_flags\">crypto_aead_get_flags</a>(struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_tfm_get_flags\">crypto_tfm_get_flags</a>(<a class=\"id\" href=\"#crypto_aead_tfm\">crypto_aead_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#crypto_aead_set_flags\">crypto_aead_set_flags</a>(struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_tfm_set_flags\">crypto_tfm_set_flags</a>(<a class=\"id\" href=\"#crypto_aead_tfm\">crypto_aead_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>), <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#crypto_aead_clear_flags\">crypto_aead_clear_flags</a>(struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_tfm_clear_flags\">crypto_tfm_clear_flags</a>(<a class=\"id\" href=\"#crypto_aead_tfm\">crypto_aead_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>), <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#crypto_aead_setkey\">crypto_aead_setkey</a>(struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned int <a class=\"id\" href=\"#keylen\">keylen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#aead_tfm\">aead_tfm</a> *<a class=\"id\" href=\"#crt\">crt</a> = <a class=\"id\" href=\"#crypto_aead_crt\">crypto_aead_crt</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crt\">crt</a>-><a class=\"id\" href=\"#setkey\">setkey</a>(<a class=\"id\" href=\"#crt\">crt</a>-><a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#crypto_aead_setauthsize\">crypto_aead_setauthsize</a>(struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, unsigned int <a class=\"id\" href=\"#authsize\">authsize</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#crypto_aead_reqtfm\">crypto_aead_reqtfm</a>(struct <a class=\"id\" href=\"#aead_request\">aead_request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__crypto_aead_cast\">__crypto_aead_cast</a>(<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#crypto_aead_encrypt\">crypto_aead_encrypt</a>(struct <a class=\"id\" href=\"#aead_request\">aead_request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_aead_crt\">crypto_aead_crt</a>(<a class=\"id\" href=\"#crypto_aead_reqtfm\">crypto_aead_reqtfm</a>(<a class=\"id\" href=\"#req\">req</a>))-><a class=\"id\" href=\"#encrypt\">encrypt</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#crypto_aead_decrypt\">crypto_aead_decrypt</a>(struct <a class=\"id\" href=\"#aead_request\">aead_request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_aead_crt\">crypto_aead_crt</a>(<a class=\"id\" href=\"#crypto_aead_reqtfm\">crypto_aead_reqtfm</a>(<a class=\"id\" href=\"#req\">req</a>))-><a class=\"id\" href=\"#decrypt\">decrypt</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#crypto_aead_reqsize\">crypto_aead_reqsize</a>(struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_aead_crt\">crypto_aead_crt</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)-><a class=\"id\" href=\"#reqsize\">reqsize</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#aead_request_set_tfm\">aead_request_set_tfm</a>(struct <a class=\"id\" href=\"#aead_request\">aead_request</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#tfm\">tfm</a> = <a class=\"id\" href=\"#crypto_aead_tfm\">crypto_aead_tfm</a>(<a class=\"id\" href=\"#crypto_aead_crt\">crypto_aead_crt</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)-><a class=\"id\" href=\"#base\">base</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#aead_request\">aead_request</a> *<a class=\"id\" href=\"#aead_request_alloc\">aead_request_alloc</a>(struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#tfm\">tfm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#aead_request\">aead_request</a> *<a class=\"id\" href=\"#req\">req</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#req\">req</a>) + <a class=\"id\" href=\"#crypto_aead_reqsize\">crypto_aead_reqsize</a>(<a class=\"id\" href=\"#tfm\">tfm</a>), <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#req\">req</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aead_request_set_tfm\">aead_request_set_tfm</a>(<a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#tfm\">tfm</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#req\">req</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#aead_request_free\">aead_request_free</a>(struct <a class=\"id\" href=\"#aead_request\">aead_request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kzfree\">kzfree</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#aead_request_set_callback\">aead_request_set_callback</a>(struct <a class=\"id\" href=\"#aead_request\">aead_request</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#crypto_completion_t\">crypto_completion_t</a> <a class=\"id\" href=\"#complete\">complete</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#complete\">complete</a> = <a class=\"id\" href=\"#complete\">complete</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#flags\">flags</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#aead_request_set_crypt\">aead_request_set_crypt</a>(struct <a class=\"id\" href=\"#aead_request\">aead_request</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#src\">src</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#cryptlen\">cryptlen</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#iv\">iv</a>)", 
"{", 
];
xr_frag_insert('l/e4/7b125c2884dc657f5c120730d8bafd8c701c04.xr', __xr_tmp);
