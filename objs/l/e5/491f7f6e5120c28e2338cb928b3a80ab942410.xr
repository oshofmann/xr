var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mode_switch\">mode_switch</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_is_gfx\">vga_is_gfx</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>default:<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* VESA blanking */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vga_video_type\">vga_video_type</a> == <a class=\"id\" href=\"#VIDEO_TYPE_VGAC\">VIDEO_TYPE_VGAC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_vesa_blank\">vga_vesa_blank</a>(&amp;<a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#blank\">blank</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_vesa_blanked\">vga_vesa_blanked</a> = <a class=\"id\" href=\"#blank\">blank</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * PIO_FONT support.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The font loading code goes back to the codepage package by</span>", 
"<span class=\"comment\"> * Joel Hoffman (joel@wam.umd.edu). (He reports that the original</span>", 
"<span class=\"comment\"> * reference is: \"From: p. 307 of _Programmer's Guide to PC &amp; PS/2</span>", 
"<span class=\"comment\"> * Video Systems_ by Richard Wilton. 1987.  Microsoft Press\".)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Change for certain monochrome monitors by Yury Shevchuck</span>", 
"<span class=\"comment\"> * (sizif@botik.yaroslavl.su).</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CAN_LOAD_EGA_FONTS\">CAN_LOAD_EGA_FONTS</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#colourmap\">colourmap</a> 0xa0000", 
"<span class=\"comment\">/* Pauline Middelink &lt;middelin@polyware.iaf.nl&gt; reports that we</span>", 
"<span class=\"comment\">   should use 0xA0000 for the bwmap as well.. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blackwmap\">blackwmap</a> 0xa0000", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cmapsz\">cmapsz</a> 8192", 
"", 
"static int <a class=\"id\" href=\"#vgacon_do_font_op\">vgacon_do_font_op</a>(struct <a class=\"id\" href=\"#vgastate\">vgastate</a> *<a class=\"id\" href=\"#state\">state</a>,char *<a class=\"id\" href=\"#arg\">arg</a>,int <a class=\"id\" href=\"#set\">set</a>,int <a class=\"id\" href=\"#ch512\">ch512</a>)", 
"{", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#video_port_status\">video_port_status</a> = <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a> + 6;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#font_select\">font_select</a> = 0x00, <a class=\"id\" href=\"#beg\">beg</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#charmap\">charmap</a>;", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vga_video_type\">vga_video_type</a> != <a class=\"id\" href=\"#VIDEO_TYPE_EGAM\">VIDEO_TYPE_EGAM</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#charmap\">charmap</a> = (char *) <a class=\"id\" href=\"#VGA_MAP_MEM\">VGA_MAP_MEM</a>(<a class=\"id\" href=\"#colourmap\">colourmap</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#beg\">beg</a> = 0x0e;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#VGA_CAN_DO_64KB\">VGA_CAN_DO_64KB</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vga_video_type\">vga_video_type</a> == <a class=\"id\" href=\"#VIDEO_TYPE_VGAC\">VIDEO_TYPE_VGAC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#beg\">beg</a> = 0x06;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#charmap\">charmap</a> = (char *) <a class=\"id\" href=\"#VGA_MAP_MEM\">VGA_MAP_MEM</a>(<a class=\"id\" href=\"#blackwmap\">blackwmap</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#beg\">beg</a> = 0x0a;", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#BROKEN_GRAPHICS_PROGRAMS\">BROKEN_GRAPHICS_PROGRAMS</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * All fonts are loaded in slot 0 (0:1 for 512 ch)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#arg\">arg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;<span class=\"ts\"/><span class=\"comment\">/* Return to default font not supported */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_font_is_default\">vga_font_is_default</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#font_select\">font_select</a> = <a class=\"id\" href=\"#ch512\">ch512</a> ? 0x04 : 0x00;", 
"#else", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The default font is kept in slot 0 and is never touched.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * A custom font is loaded in slot 2 (256 ch) or 2:3 (512 ch)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#set\">set</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_font_is_default\">vga_font_is_default</a> = !<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#arg\">arg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ch512\">ch512</a> = 0;<span class=\"ts\"/><span class=\"comment\">/* Default font is always 256 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#font_select\">font_select</a> = <a class=\"id\" href=\"#arg\">arg</a> ? (<a class=\"id\" href=\"#ch512\">ch512</a> ? 0x0e : 0x0a) : 0x00;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vga_font_is_default\">vga_font_is_default</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#charmap\">charmap</a> += 4 * <a class=\"id\" href=\"#cmapsz\">cmapsz</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#vga_lock\">vga_lock</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* First, the Sequencer */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_wseq\">vga_wseq</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_SEQ_RESET\">VGA_SEQ_RESET</a>, 0x1);", 
"<span class=\"ts\"/><span class=\"comment\">/* CPU writes only to map 2 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_wseq\">vga_wseq</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_SEQ_PLANE_WRITE\">VGA_SEQ_PLANE_WRITE</a>, 0x04);<span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"comment\">/* Sequential addressing */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_wseq\">vga_wseq</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_SEQ_MEMORY_MODE\">VGA_SEQ_MEMORY_MODE</a>, 0x07);<span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"comment\">/* Clear synchronous reset */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_wseq\">vga_wseq</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_SEQ_RESET\">VGA_SEQ_RESET</a>, 0x03);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Now, the graphics controller, select map 2 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_wgfx\">vga_wgfx</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_GFX_PLANE_READ\">VGA_GFX_PLANE_READ</a>, 0x02);<span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"comment\">/* disable odd-even addressing */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_wgfx\">vga_wgfx</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_GFX_MODE\">VGA_GFX_MODE</a>, 0x00);", 
"<span class=\"ts\"/><span class=\"comment\">/* map start at A000:0000 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_wgfx\">vga_wgfx</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_GFX_MISC\">VGA_GFX_MISC</a>, 0x00);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#vga_lock\">vga_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#arg\">arg</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#set\">set</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#cmapsz\">cmapsz</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_writeb\">vga_writeb</a>(<a class=\"id\" href=\"#arg\">arg</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#charmap\">charmap</a> + <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#cmapsz\">cmapsz</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#vga_readb\">vga_readb</a>(<a class=\"id\" href=\"#charmap\">charmap</a> + <a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * In 512-character mode, the character map is not contiguous if</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we want to remain EGA compatible -- which we do</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ch512\">ch512</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#charmap\">charmap</a> += 2 * <a class=\"id\" href=\"#cmapsz\">cmapsz</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a> += <a class=\"id\" href=\"#cmapsz\">cmapsz</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#set\">set</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#cmapsz\">cmapsz</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_writeb\">vga_writeb</a>(<a class=\"id\" href=\"#arg\">arg</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#charmap\">charmap</a> + <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#cmapsz\">cmapsz</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#vga_readb\">vga_readb</a>(<a class=\"id\" href=\"#charmap\">charmap</a> + <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#vga_lock\">vga_lock</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* First, the sequencer, Synchronous reset */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_wseq\">vga_wseq</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_SEQ_RESET\">VGA_SEQ_RESET</a>, 0x01);<span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"comment\">/* CPU writes to maps 0 and 1 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_wseq\">vga_wseq</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_SEQ_PLANE_WRITE\">VGA_SEQ_PLANE_WRITE</a>, 0x03);", 
"<span class=\"ts\"/><span class=\"comment\">/* odd-even addressing */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_wseq\">vga_wseq</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_SEQ_MEMORY_MODE\">VGA_SEQ_MEMORY_MODE</a>, 0x03);", 
"<span class=\"ts\"/><span class=\"comment\">/* Character Map Select */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#set\">set</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_wseq\">vga_wseq</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_SEQ_CHARACTER_MAP\">VGA_SEQ_CHARACTER_MAP</a>, <a class=\"id\" href=\"#font_select\">font_select</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* clear synchronous reset */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_wseq\">vga_wseq</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_SEQ_RESET\">VGA_SEQ_RESET</a>, 0x03);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Now, the graphics controller, select map 0 for CPU */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_wgfx\">vga_wgfx</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_GFX_PLANE_READ\">VGA_GFX_PLANE_READ</a>, 0x00);", 
"<span class=\"ts\"/><span class=\"comment\">/* enable even-odd addressing */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_wgfx\">vga_wgfx</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_GFX_MODE\">VGA_GFX_MODE</a>, 0x10);", 
"<span class=\"ts\"/><span class=\"comment\">/* map starts at b800:0 or b000:0 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_wgfx\">vga_wgfx</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_GFX_MISC\">VGA_GFX_MISC</a>, <a class=\"id\" href=\"#beg\">beg</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if 512 char mode is already enabled don't re-enable it. */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#set\">set</a>) && (<a class=\"id\" href=\"#ch512\">ch512</a> != <a class=\"id\" href=\"#vga_512_chars\">vga_512_chars</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* attribute controller */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAX_NR_CONSOLES\">MAX_NR_CONSOLES</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#vc_cons\">vc_cons</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#d\">d</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> && <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_sw\">vc_sw</a> == &amp;<a class=\"id\" href=\"#vga_con\">vga_con</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_hi_font_mask\">vc_hi_font_mask</a> = <a class=\"id\" href=\"#ch512\">ch512</a> ? 0x0800 : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_512_chars\">vga_512_chars</a> = <a class=\"id\" href=\"#ch512\">ch512</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 256-char: enable intensity bit</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   512-char: disable intensity bit */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inb_p\">inb_p</a>(<a class=\"id\" href=\"#video_port_status\">video_port_status</a>);<span class=\"ts\"/><span class=\"comment\">/* clear address flip-flop */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* color plane enable register */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_wattr\">vga_wattr</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_ATC_PLANE_ENABLE\">VGA_ATC_PLANE_ENABLE</a>, <a class=\"id\" href=\"#ch512\">ch512</a> ? 0x07 : 0x0f);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Wilton (1987) mentions the following; I don't know what</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   it means, but it works, and it appears necessary */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inb_p\">inb_p</a>(<a class=\"id\" href=\"#video_port_status\">video_port_status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_wattr\">vga_wattr</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_AR_ENABLE_DISPLAY\">VGA_AR_ENABLE_DISPLAY</a>, 0);<span class=\"ts\"/>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#vga_lock\">vga_lock</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Adjust the screen to fit a font of a certain height</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#vgacon_adjust_height\">vgacon_adjust_height</a>(struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#vc\">vc</a>, unsigned <a class=\"id\" href=\"#fontheight\">fontheight</a>)", 
"{", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#ovr\">ovr</a>, <a class=\"id\" href=\"#vde\">vde</a>, <a class=\"id\" href=\"#fsr\">fsr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rows\">rows</a>, <a class=\"id\" href=\"#maxscan\">maxscan</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rows\">rows</a> = <a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vc_scan_lines\">vc_scan_lines</a> / <a class=\"id\" href=\"#fontheight\">fontheight</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of video rows we end up with */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#maxscan\">maxscan</a> = <a class=\"id\" href=\"#rows\">rows</a> * <a class=\"id\" href=\"#fontheight\">fontheight</a> - 1;<span class=\"ts\"/><span class=\"comment\">/* Scan lines to actually display-1 */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Reprogram the CRTC for the new font size</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   Note: the attempt to read the overflow register will fail</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   on an EGA, but using 0xff for the previous value appears to</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   be OK for EGA text modes in the range 257-512 scan lines, so I</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   guess we don't need to worry about it.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/>   The same applies for the spill bits in the font size and cursor</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   registers; they are write-only on EGA, but it appears that they</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   are all don't care bits on EGA, so I guess it doesn't matter. */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#vga_lock\">vga_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x07, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* CRTC overflow register */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ovr\">ovr</a> = <a class=\"id\" href=\"#inb_p\">inb_p</a>(<a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x09, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* Font size register */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsr\">fsr</a> = <a class=\"id\" href=\"#inb_p\">inb_p</a>(<a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#vga_lock\">vga_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vde\">vde</a> = <a class=\"id\" href=\"#maxscan\">maxscan</a> &amp; 0xff;<span class=\"ts\"/><span class=\"comment\">/* Vertical display end reg */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ovr\">ovr</a> = (<a class=\"id\" href=\"#ovr\">ovr</a> &amp; 0xbd) +<span class=\"ts\"/><span class=\"comment\">/* Overflow register */</span>", 
"<span class=\"ts\"/>    ((<a class=\"id\" href=\"#maxscan\">maxscan</a> &amp; 0x100) >> 7) + ((<a class=\"id\" href=\"#maxscan\">maxscan</a> &amp; 0x200) >> 3);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsr\">fsr</a> = (<a class=\"id\" href=\"#fsr\">fsr</a> &amp; 0xe0) + (<a class=\"id\" href=\"#fontheight\">fontheight</a> - 1);<span class=\"ts\"/><span class=\"comment\">/*  Font size register */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#vga_lock\">vga_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x07, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* CRTC overflow register */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#ovr\">ovr</a>, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x09, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* Font size */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#fsr\">fsr</a>, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x12, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* Vertical display limit */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#vde\">vde</a>, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#vga_lock\">vga_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_video_font_height\">vga_video_font_height</a> = <a class=\"id\" href=\"#fontheight\">fontheight</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAX_NR_CONSOLES\">MAX_NR_CONSOLES</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#vc_cons\">vc_cons</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#d\">d</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> && <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_sw\">vc_sw</a> == &amp;<a class=\"id\" href=\"#vga_con\">vga_con</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#CON_IS_VISIBLE\">CON_IS_VISIBLE</a>(<a class=\"id\" href=\"#c\">c</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>        <span class=\"comment\">/* void size to cause regs to be rewritten */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cursor_size_lastfrom\">cursor_size_lastfrom</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cursor_size_lastto\">cursor_size_lastto</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_sw\">vc_sw</a>-><a class=\"id\" href=\"#con_cursor\">con_cursor</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#CM_DRAW\">CM_DRAW</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_font\">vc_font</a>.<a class=\"id\" href=\"#height\">height</a> = <a class=\"id\" href=\"#fontheight\">fontheight</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vc_resize\">vc_resize</a>(<a class=\"id\" href=\"#c\">c</a>, 0, <a class=\"id\" href=\"#rows\">rows</a>);<span class=\"ts\"/><span class=\"comment\">/* Adjust console size */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#vgacon_font_set\">vgacon_font_set</a>(struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#c\">c</a>, struct <a class=\"id\" href=\"#console_font\">console_font</a> *<a class=\"id\" href=\"#font\">font</a>, unsigned <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#charcount\">charcount</a> = <a class=\"id\" href=\"#font\">font</a>-><a class=\"id\" href=\"#charcount\">charcount</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vga_video_type\">vga_video_type</a> &lt; <a class=\"id\" href=\"#VIDEO_TYPE_EGAM\">VIDEO_TYPE_EGAM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#font\">font</a>-><a class=\"id\" href=\"#width\">width</a> != <a class=\"id\" href=\"#VGA_FONTWIDTH\">VGA_FONTWIDTH</a> ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#charcount\">charcount</a> != 256 && <a class=\"id\" href=\"#charcount\">charcount</a> != 512))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#vgacon_do_font_op\">vgacon_do_font_op</a>(&amp;<a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#font\">font</a>-><a class=\"id\" href=\"#data\">data</a>, 1, <a class=\"id\" href=\"#charcount\">charcount</a> == 512);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#KD_FONT_FLAG_DONT_RECALC\">KD_FONT_FLAG_DONT_RECALC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#vgacon_adjust_height\">vgacon_adjust_height</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#font\">font</a>-><a class=\"id\" href=\"#height\">height</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#vgacon_font_get\">vgacon_font_get</a>(struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#c\">c</a>, struct <a class=\"id\" href=\"#console_font\">console_font</a> *<a class=\"id\" href=\"#font\">font</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vga_video_type\">vga_video_type</a> &lt; <a class=\"id\" href=\"#VIDEO_TYPE_EGAM\">VIDEO_TYPE_EGAM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#font\">font</a>-><a class=\"id\" href=\"#width\">width</a> = <a class=\"id\" href=\"#VGA_FONTWIDTH\">VGA_FONTWIDTH</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#font\">font</a>-><a class=\"id\" href=\"#height\">height</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_font\">vc_font</a>.<a class=\"id\" href=\"#height\">height</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#font\">font</a>-><a class=\"id\" href=\"#charcount\">charcount</a> = <a class=\"id\" href=\"#vga_512_chars\">vga_512_chars</a> ? 512 : 256;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#font\">font</a>-><a class=\"id\" href=\"#data\">data</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#vgacon_do_font_op\">vgacon_do_font_op</a>(&amp;<a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#font\">font</a>-><a class=\"id\" href=\"#data\">data</a>, 0, <a class=\"id\" href=\"#vga_512_chars\">vga_512_chars</a>);", 
"}", 
"", 
"#else", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#vgacon_font_set\">vgacon_font_set</a> <a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#vgacon_font_get\">vgacon_font_get</a> <a class=\"id\" href=\"#NULL\">NULL</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#vgacon_resize\">vgacon_resize</a>(struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#c\">c</a>, unsigned int <a class=\"id\" href=\"#width\">width</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned int <a class=\"id\" href=\"#height\">height</a>, unsigned int <a class=\"id\" href=\"#user\">user</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#width\">width</a> % 2 || <a class=\"id\" href=\"#width\">width</a> &gt; <a class=\"id\" href=\"#screen_info\">screen_info</a>.<a class=\"id\" href=\"#orig_video_cols\">orig_video_cols</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#height\">height</a> &gt; (<a class=\"id\" href=\"#screen_info\">screen_info</a>.<a class=\"id\" href=\"#orig_video_lines\">orig_video_lines</a> * <a class=\"id\" href=\"#vga_default_font_height\">vga_default_font_height</a>)/", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_font\">vc_font</a>.<a class=\"id\" href=\"#height\">height</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* let svgatextmode tinker with video timings and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   return success */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#user\">user</a>) ? 0 : -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#CON_IS_VISIBLE\">CON_IS_VISIBLE</a>(<a class=\"id\" href=\"#c\">c</a>) && !<a class=\"id\" href=\"#vga_is_gfx\">vga_is_gfx</a>) <span class=\"comment\">/* who knows */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vgacon_doresize\">vgacon_doresize</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#width\">width</a>, <a class=\"id\" href=\"#height\">height</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#vgacon_set_origin\">vgacon_set_origin</a>(struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vga_is_gfx\">vga_is_gfx</a> ||<span class=\"ts\"/><span class=\"comment\">/* We don't play origin tricks in graphic modes */</span>", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#console_blanked\">console_blanked</a> && !<a class=\"id\" href=\"#vga_palette_blanked\">vga_palette_blanked</a>))<span class=\"ts\"/><span class=\"comment\">/* Nor we write to blanked screens */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_origin\">vc_origin</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_visible_origin\">vc_visible_origin</a> = <a class=\"id\" href=\"#vga_vram_base\">vga_vram_base</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_set_mem_top\">vga_set_mem_top</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_rolled_over\">vga_rolled_over</a> = 0;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#vgacon_save_screen\">vgacon_save_screen</a>(struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/>static int <a class=\"id\" href=\"#vga_bootup_console\">vga_bootup_console</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vga_bootup_console\">vga_bootup_console</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This is a gross hack, but here is the only place we can</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * set bootup console parameters without messing up generic</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * console initialization routines.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_bootup_console\">vga_bootup_console</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_x\">vc_x</a> = <a class=\"id\" href=\"#screen_info\">screen_info</a>.<a class=\"id\" href=\"#orig_x\">orig_x</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_y\">vc_y</a> = <a class=\"id\" href=\"#screen_info\">screen_info</a>.<a class=\"id\" href=\"#orig_y\">orig_y</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We can't copy in more than the size of the video buffer,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * or we'll be copying in VGA BIOS */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vga_is_gfx\">vga_is_gfx</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scr_memcpyw\">scr_memcpyw</a>((<a class=\"id\" href=\"#u16\">u16</a> *) <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_screenbuf\">vc_screenbuf</a>, (<a class=\"id\" href=\"#u16\">u16</a> *) <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_origin\">vc_origin</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_screenbuf_size\">vc_screenbuf_size</a> &gt; <a class=\"id\" href=\"#vga_vram_size\">vga_vram_size</a> ? <a class=\"id\" href=\"#vga_vram_size\">vga_vram_size</a> : <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_screenbuf_size\">vc_screenbuf_size</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#vgacon_scroll\">vgacon_scroll</a>(struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#c\">c</a>, int <a class=\"id\" href=\"#t\">t</a>, int <a class=\"id\" href=\"#b\">b</a>, int <a class=\"id\" href=\"#dir\">dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#lines\">lines</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#oldo\">oldo</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#delta\">delta</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#t\">t</a> || <a class=\"id\" href=\"#b\">b</a> != <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_rows\">vc_rows</a> || <a class=\"id\" href=\"#vga_is_gfx\">vga_is_gfx</a> || <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_mode\">vc_mode</a> != <a class=\"id\" href=\"#KD_TEXT\">KD_TEXT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vga_hardscroll_enabled\">vga_hardscroll_enabled</a> || <a class=\"id\" href=\"#lines\">lines</a> >= <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_rows\">vc_rows</a> / 2)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vgacon_restore_screen\">vgacon_restore_screen</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#oldo\">oldo</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_origin\">vc_origin</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#lines\">lines</a> * <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_size_row\">vc_size_row</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dir\">dir</a> == <a class=\"id\" href=\"#SM_UP\">SM_UP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vgacon_scrollback_update\">vgacon_scrollback_update</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#lines\">lines</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_scr_end\">vc_scr_end</a> + <a class=\"id\" href=\"#delta\">delta</a> >= <a class=\"id\" href=\"#vga_vram_end\">vga_vram_end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scr_memcpyw\">scr_memcpyw</a>((<a class=\"id\" href=\"#u16\">u16</a> *) <a class=\"id\" href=\"#vga_vram_base\">vga_vram_base</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#u16\">u16</a> *) (<a class=\"id\" href=\"#oldo\">oldo</a> + <a class=\"id\" href=\"#delta\">delta</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_screenbuf_size\">vc_screenbuf_size</a> - <a class=\"id\" href=\"#delta\">delta</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_origin\">vc_origin</a> = <a class=\"id\" href=\"#vga_vram_base\">vga_vram_base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_rolled_over\">vga_rolled_over</a> = <a class=\"id\" href=\"#oldo\">oldo</a> - <a class=\"id\" href=\"#vga_vram_base\">vga_vram_base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_origin\">vc_origin</a> += <a class=\"id\" href=\"#delta\">delta</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scr_memsetw\">scr_memsetw</a>((<a class=\"id\" href=\"#u16\">u16</a> *) (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_origin\">vc_origin</a> + <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_screenbuf_size\">vc_screenbuf_size</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#delta\">delta</a>), <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_video_erase_char\">vc_video_erase_char</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#delta\">delta</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#oldo\">oldo</a> - <a class=\"id\" href=\"#delta\">delta</a> &lt; <a class=\"id\" href=\"#vga_vram_base\">vga_vram_base</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scr_memmovew\">scr_memmovew</a>((<a class=\"id\" href=\"#u16\">u16</a> *) (<a class=\"id\" href=\"#vga_vram_end\">vga_vram_end</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_screenbuf_size\">vc_screenbuf_size</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#delta\">delta</a>), (<a class=\"id\" href=\"#u16\">u16</a> *) <a class=\"id\" href=\"#oldo\">oldo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_screenbuf_size\">vc_screenbuf_size</a> - <a class=\"id\" href=\"#delta\">delta</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_origin\">vc_origin</a> = <a class=\"id\" href=\"#vga_vram_end\">vga_vram_end</a> - <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_screenbuf_size\">vc_screenbuf_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_rolled_over\">vga_rolled_over</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_origin\">vc_origin</a> -= <a class=\"id\" href=\"#delta\">delta</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_scr_end\">vc_scr_end</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_origin\">vc_origin</a> + <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_screenbuf_size\">vc_screenbuf_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scr_memsetw\">scr_memsetw</a>((<a class=\"id\" href=\"#u16\">u16</a> *) (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_origin\">vc_origin</a>), <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_video_erase_char\">vc_video_erase_char</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#delta\">delta</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_scr_end\">vc_scr_end</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_origin\">vc_origin</a> + <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_screenbuf_size\">vc_screenbuf_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_visible_origin\">vc_visible_origin</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_origin\">vc_origin</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_set_mem_top\">vga_set_mem_top</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_pos\">vc_pos</a> = (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_pos\">vc_pos</a> - <a class=\"id\" href=\"#oldo\">oldo</a>) + <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_origin\">vc_origin</a>;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  The console `switch' structure for the VGA based console</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#vgacon_dummy\">vgacon_dummy</a>(struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DUMMY\">DUMMY</a> (void *) <a class=\"id\" href=\"#vgacon_dummy\">vgacon_dummy</a>", 
"", 
"const struct <a class=\"id\" href=\"#consw\">consw</a> <a class=\"id\" href=\"#vga_con\">vga_con</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#con_startup\">con_startup</a> = <a class=\"id\" href=\"#vgacon_startup\">vgacon_startup</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#con_init\">con_init</a> = <a class=\"id\" href=\"#vgacon_init\">vgacon_init</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#con_deinit\">con_deinit</a> = <a class=\"id\" href=\"#vgacon_deinit\">vgacon_deinit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#con_clear\">con_clear</a> = <a class=\"id\" href=\"#DUMMY\">DUMMY</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#con_putc\">con_putc</a> = <a class=\"id\" href=\"#DUMMY\">DUMMY</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#con_putcs\">con_putcs</a> = <a class=\"id\" href=\"#DUMMY\">DUMMY</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#con_cursor\">con_cursor</a> = <a class=\"id\" href=\"#vgacon_cursor\">vgacon_cursor</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#con_scroll\">con_scroll</a> = <a class=\"id\" href=\"#vgacon_scroll\">vgacon_scroll</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#con_bmove\">con_bmove</a> = <a class=\"id\" href=\"#DUMMY\">DUMMY</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#con_switch\">con_switch</a> = <a class=\"id\" href=\"#vgacon_switch\">vgacon_switch</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#con_blank\">con_blank</a> = <a class=\"id\" href=\"#vgacon_blank\">vgacon_blank</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#con_font_set\">con_font_set</a> = <a class=\"id\" href=\"#vgacon_font_set\">vgacon_font_set</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#con_font_get\">con_font_get</a> = <a class=\"id\" href=\"#vgacon_font_get\">vgacon_font_get</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#con_resize\">con_resize</a> = <a class=\"id\" href=\"#vgacon_resize\">vgacon_resize</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#con_set_palette\">con_set_palette</a> = <a class=\"id\" href=\"#vgacon_set_palette\">vgacon_set_palette</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#con_scrolldelta\">con_scrolldelta</a> = <a class=\"id\" href=\"#vgacon_scrolldelta\">vgacon_scrolldelta</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#con_set_origin\">con_set_origin</a> = <a class=\"id\" href=\"#vgacon_set_origin\">vgacon_set_origin</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#con_save_screen\">con_save_screen</a> = <a class=\"id\" href=\"#vgacon_save_screen\">vgacon_save_screen</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#con_build_attr\">con_build_attr</a> = <a class=\"id\" href=\"#vgacon_build_attr\">vgacon_build_attr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#con_invert_region\">con_invert_region</a> = <a class=\"id\" href=\"#vgacon_invert_region\">vgacon_invert_region</a>,", 
"};", 
"", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
];
xr_frag_insert('l/e5/491f7f6e5120c28e2338cb928b3a80ab942410.xr', __xr_tmp);
