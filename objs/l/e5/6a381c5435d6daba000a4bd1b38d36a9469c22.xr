var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Intel Multiprocessor Specification 1.1 and 1.4</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>compliant MP-table parsing routines.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(c) 1995 Alan Cox, Building #3 &lt;alan@lxorguk.ukuu.org.uk&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(c) 1998, 1999, 2000, 2009 Ingo Molnar &lt;mingo@redhat.com&gt;</span>", 
"<span class=\"comment\"> *      (c) 2008 Alexey Starikovskiy &lt;astarikovskiy@suse.de&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bootmem\">bootmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel_stat\">kernel_stat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mc146818rtc\">mc146818rtc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mtrr\">mtrr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mpspec\">mpspec</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pgalloc\">pgalloc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#io_apic\">io_apic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#proto\">proto</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#bios_ebda\">bios_ebda</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#trampoline\">trampoline</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#setup\">setup</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#apic\">apic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Checksum an MP configuration block.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#mpf_checksum\">mpf_checksum</a>(unsigned char *<a class=\"id\" href=\"#mp\">mp</a>, int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#sum\">sum</a> = 0;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#len\">len</a>--)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sum\">sum</a> += *<a class=\"id\" href=\"#mp\">mp</a>++;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sum\">sum</a> &amp; 0xFF;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#default_mpc_apic_id\">default_mpc_apic_id</a>(struct <a class=\"id\" href=\"#mpc_cpu\">mpc_cpu</a> *<a class=\"id\" href=\"#m\">m</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#apicid\">apicid</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#MP_processor_info\">MP_processor_info</a>(struct <a class=\"id\" href=\"#mpc_cpu\">mpc_cpu</a> *<a class=\"id\" href=\"#m\">m</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#apicid\">apicid</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#bootup_cpu\">bootup_cpu</a> = \"\";", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#cpuflag\">cpuflag</a> &amp; <a class=\"id\" href=\"#CPU_ENABLED\">CPU_ENABLED</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#disabled_cpus\">disabled_cpus</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apicid\">apicid</a> = <a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#mpparse\">mpparse</a>.<a class=\"id\" href=\"#mpc_apic_id\">mpc_apic_id</a>(<a class=\"id\" href=\"#m\">m</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#cpuflag\">cpuflag</a> &amp; <a class=\"id\" href=\"#CPU_BOOTPROCESSOR\">CPU_BOOTPROCESSOR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bootup_cpu\">bootup_cpu</a> = \" (Bootup-CPU)\";", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#boot_cpu_physical_apicid\">boot_cpu_physical_apicid</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#apicid\">apicid</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Processor #%d%s\\n\", <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#apicid\">apicid</a>, <a class=\"id\" href=\"#bootup_cpu\">bootup_cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#generic_processor_info\">generic_processor_info</a>(<a class=\"id\" href=\"#apicid\">apicid</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#apicver\">apicver</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_IO_APIC\">CONFIG_X86_IO_APIC</a>", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#default_mpc_oem_bus_info\">default_mpc_oem_bus_info</a>(struct <a class=\"id\" href=\"#mpc_bus\">mpc_bus</a> *<a class=\"id\" href=\"#m\">m</a>, char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#bustype\">bustype</a>, 6);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a>[6] = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_VERBOSE\">APIC_VERBOSE</a>, \"Bus #%d is %s\\n\", <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#busid\">busid</a>, <a class=\"id\" href=\"#str\">str</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#MP_bus_info\">MP_bus_info</a>(struct <a class=\"id\" href=\"#mpc_bus\">mpc_bus</a> *<a class=\"id\" href=\"#m\">m</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#str\">str</a>[7];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#mpparse\">mpparse</a>.<a class=\"id\" href=\"#mpc_oem_bus_info\">mpc_oem_bus_info</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#str\">str</a>);", 
"", 
"#if <a class=\"id\" href=\"#MAX_MP_BUSSES\">MAX_MP_BUSSES</a> &lt; 256", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#busid\">busid</a> >= <a class=\"id\" href=\"#MAX_MP_BUSSES\">MAX_MP_BUSSES</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"MP table busid value (%d) for bustype %s \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \" is too large, max. supported is %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#busid\">busid</a>, <a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#MAX_MP_BUSSES\">MAX_MP_BUSSES</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#BUSTYPE_ISA\">BUSTYPE_ISA</a>, sizeof(<a class=\"id\" href=\"#BUSTYPE_ISA\">BUSTYPE_ISA</a>) - 1) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#busid\">busid</a>, <a class=\"id\" href=\"#mp_bus_not_pci\">mp_bus_not_pci</a>);", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_EISA\">CONFIG_EISA</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_MCA\">CONFIG_MCA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mp_bus_id_to_type\">mp_bus_id_to_type</a>[<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#busid\">busid</a>] = <a class=\"id\" href=\"#MP_BUS_ISA\">MP_BUS_ISA</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#BUSTYPE_PCI\">BUSTYPE_PCI</a>, sizeof(<a class=\"id\" href=\"#BUSTYPE_PCI\">BUSTYPE_PCI</a>) - 1) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#mpparse\">mpparse</a>.<a class=\"id\" href=\"#mpc_oem_pci_bus\">mpc_oem_pci_bus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#mpparse\">mpparse</a>.<a class=\"id\" href=\"#mpc_oem_pci_bus\">mpc_oem_pci_bus</a>(<a class=\"id\" href=\"#m\">m</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#busid\">busid</a>, <a class=\"id\" href=\"#mp_bus_not_pci\">mp_bus_not_pci</a>);", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_EISA\">CONFIG_EISA</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_MCA\">CONFIG_MCA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mp_bus_id_to_type\">mp_bus_id_to_type</a>[<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#busid\">busid</a>] = <a class=\"id\" href=\"#MP_BUS_PCI\">MP_BUS_PCI</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#BUSTYPE_EISA\">BUSTYPE_EISA</a>, sizeof(<a class=\"id\" href=\"#BUSTYPE_EISA\">BUSTYPE_EISA</a>) - 1) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mp_bus_id_to_type\">mp_bus_id_to_type</a>[<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#busid\">busid</a>] = <a class=\"id\" href=\"#MP_BUS_EISA\">MP_BUS_EISA</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#BUSTYPE_MCA\">BUSTYPE_MCA</a>, sizeof(<a class=\"id\" href=\"#BUSTYPE_MCA\">BUSTYPE_MCA</a>) - 1) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mp_bus_id_to_type\">mp_bus_id_to_type</a>[<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#busid\">busid</a>] = <a class=\"id\" href=\"#MP_BUS_MCA\">MP_BUS_MCA</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"Unknown bustype %s - ignoring\\n\", <a class=\"id\" href=\"#str\">str</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#MP_ioapic_info\">MP_ioapic_info</a>(struct <a class=\"id\" href=\"#mpc_ioapic\">mpc_ioapic</a> *<a class=\"id\" href=\"#m\">m</a>)", 
"{", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MPC_APIC_USABLE\">MPC_APIC_USABLE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"I/O APIC #%d Version %d at 0x%X.\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#apicid\">apicid</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#apicver\">apicver</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#apicaddr\">apicaddr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_register_ioapic\">mp_register_ioapic</a>(<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#apicid\">apicid</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#apicaddr\">apicaddr</a>, <a class=\"id\" href=\"#gsi_top\">gsi_top</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#print_MP_intsrc_info\">print_MP_intsrc_info</a>(struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a> *<a class=\"id\" href=\"#m\">m</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_VERBOSE\">APIC_VERBOSE</a>, \"Int: type %d, pol %d, trig %d, bus %02x,\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\" IRQ %02x, APIC ID %x, APIC INT %02x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#irqtype\">irqtype</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#irqflag\">irqflag</a> &amp; 3, (<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#irqflag\">irqflag</a> >> 2) &amp; 3, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#srcbus\">srcbus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#srcbusirq\">srcbusirq</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#dstapic\">dstapic</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#dstirq\">dstirq</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#print_mp_irq_info\">print_mp_irq_info</a>(struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a> *<a class=\"id\" href=\"#mp_irq\">mp_irq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_VERBOSE\">APIC_VERBOSE</a>, \"Int: type %d, pol %d, trig %d, bus %02x,\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\" IRQ %02x, APIC ID %x, APIC INT %02x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#irqtype\">irqtype</a>, <a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#irqflag\">irqflag</a> &amp; 3,", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#irqflag\">irqflag</a> >> 2) &amp; 3, <a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#srcbus\">srcbus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#srcbusirq\">srcbusirq</a>, <a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#dstapic\">dstapic</a>, <a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#dstirq\">dstirq</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#assign_to_mp_irq\">assign_to_mp_irq</a>(struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a> *<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a> *<a class=\"id\" href=\"#mp_irq\">mp_irq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#dstapic\">dstapic</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#dstapic\">dstapic</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#irqtype\">irqtype</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#irqtype\">irqtype</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#irqflag\">irqflag</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#irqflag\">irqflag</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#srcbus\">srcbus</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#srcbus\">srcbus</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#srcbusirq\">srcbusirq</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#srcbusirq\">srcbusirq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#dstirq\">dstirq</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#dstirq\">dstirq</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#assign_to_mpc_intsrc\">assign_to_mpc_intsrc</a>(struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a> *<a class=\"id\" href=\"#mp_irq\">mp_irq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a> *<a class=\"id\" href=\"#m\">m</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#dstapic\">dstapic</a> = <a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#dstapic\">dstapic</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#irqtype\">irqtype</a> = <a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#irqtype\">irqtype</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#irqflag\">irqflag</a> = <a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#irqflag\">irqflag</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#srcbus\">srcbus</a> = <a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#srcbus\">srcbus</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#srcbusirq\">srcbusirq</a> = <a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#srcbusirq\">srcbusirq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#dstirq\">dstirq</a> = <a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#dstirq\">dstirq</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#mp_irq_mpc_intsrc_cmp\">mp_irq_mpc_intsrc_cmp</a>(struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a> *<a class=\"id\" href=\"#mp_irq\">mp_irq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a> *<a class=\"id\" href=\"#m\">m</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#dstapic\">dstapic</a> != <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#dstapic\">dstapic</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#type\">type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 2;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#irqtype\">irqtype</a> != <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#irqtype\">irqtype</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 3;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#irqflag\">irqflag</a> != <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#irqflag\">irqflag</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 4;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#srcbus\">srcbus</a> != <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#srcbus\">srcbus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 5;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#srcbusirq\">srcbusirq</a> != <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#srcbusirq\">srcbusirq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 6;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mp_irq\">mp_irq</a>-><a class=\"id\" href=\"#dstirq\">dstirq</a> != <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#dstirq\">dstirq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 7;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#MP_intsrc_info\">MP_intsrc_info</a>(struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a> *<a class=\"id\" href=\"#m\">m</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#print_MP_intsrc_info\">print_MP_intsrc_info</a>(<a class=\"id\" href=\"#m\">m</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#mp_irq_entries\">mp_irq_entries</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#mp_irq_mpc_intsrc_cmp\">mp_irq_mpc_intsrc_cmp</a>(&amp;<a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#m\">m</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#assign_to_mp_irq\">assign_to_mp_irq</a>(<a class=\"id\" href=\"#m\">m</a>, &amp;<a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#mp_irq_entries\">mp_irq_entries</a>]);", 
"<span class=\"ts\"/>if (++<a class=\"id\" href=\"#mp_irq_entries\">mp_irq_entries</a> == <a class=\"id\" href=\"#MAX_IRQ_SOURCES\">MAX_IRQ_SOURCES</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"Max # of irq sources exceeded!!\\n\");", 
"}", 
"#else <span class=\"comment\">/* CONFIG_X86_IO_APIC */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#MP_bus_info\">MP_bus_info</a>(struct <a class=\"id\" href=\"#mpc_bus\">mpc_bus</a> *<a class=\"id\" href=\"#m\">m</a>) {}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#MP_ioapic_info\">MP_ioapic_info</a>(struct <a class=\"id\" href=\"#mpc_ioapic\">mpc_ioapic</a> *<a class=\"id\" href=\"#m\">m</a>) {}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#MP_intsrc_info\">MP_intsrc_info</a>(struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a> *<a class=\"id\" href=\"#m\">m</a>) {}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_X86_IO_APIC */</span>", 
"", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#MP_lintsrc_info\">MP_lintsrc_info</a>(struct <a class=\"id\" href=\"#mpc_lintsrc\">mpc_lintsrc</a> *<a class=\"id\" href=\"#m\">m</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_VERBOSE\">APIC_VERBOSE</a>, \"Lint: type %d, pol %d, trig %d, bus %02x,\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\" IRQ %02x, APIC ID %x, APIC LINT %02x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#irqtype\">irqtype</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#irqflag\">irqflag</a> &amp; 3, (<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#irqflag\">irqflag</a> >> 2) &amp; 3, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#srcbusid\">srcbusid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#srcbusirq\">srcbusirq</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#destapic\">destapic</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#destapiclint\">destapiclint</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Read/parse the MPC</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#smp_check_mpc\">smp_check_mpc</a>(struct <a class=\"id\" href=\"#mpc_table\">mpc_table</a> *<a class=\"id\" href=\"#mpc\">mpc</a>, char *<a class=\"id\" href=\"#oem\">oem</a>, char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#mpc\">mpc</a>-><a class=\"id\" href=\"#signature\">signature</a>, <a class=\"id\" href=\"#MPC_SIGNATURE\">MPC_SIGNATURE</a>, 4)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"MPTABLE: bad signature [%c%c%c%c]!\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#mpc\">mpc</a>-><a class=\"id\" href=\"#signature\">signature</a>[0], <a class=\"id\" href=\"#mpc\">mpc</a>-><a class=\"id\" href=\"#signature\">signature</a>[1],", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#mpc\">mpc</a>-><a class=\"id\" href=\"#signature\">signature</a>[2], <a class=\"id\" href=\"#mpc\">mpc</a>-><a class=\"id\" href=\"#signature\">signature</a>[3]);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mpf_checksum\">mpf_checksum</a>((unsigned char *)<a class=\"id\" href=\"#mpc\">mpc</a>, <a class=\"id\" href=\"#mpc\">mpc</a>-><a class=\"id\" href=\"#length\">length</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"MPTABLE: checksum error!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mpc\">mpc</a>-><a class=\"id\" href=\"#spec\">spec</a> != 0x01 && <a class=\"id\" href=\"#mpc\">mpc</a>-><a class=\"id\" href=\"#spec\">spec</a> != 0x04) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"MPTABLE: bad table version (%d)!!\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#mpc\">mpc</a>-><a class=\"id\" href=\"#spec\">spec</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mpc\">mpc</a>-><a class=\"id\" href=\"#lapic\">lapic</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"MPTABLE: null local APIC address!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#oem\">oem</a>, <a class=\"id\" href=\"#mpc\">mpc</a>-><a class=\"id\" href=\"#oem\">oem</a>, 8);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#oem\">oem</a>[8] = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"MPTABLE: OEM ID: %s\\n\", <a class=\"id\" href=\"#oem\">oem</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#mpc\">mpc</a>-><a class=\"id\" href=\"#productid\">productid</a>, 12);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a>[12] = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"MPTABLE: Product ID: %s\\n\", <a class=\"id\" href=\"#str\">str</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"MPTABLE: APIC at: 0x%X\\n\", <a class=\"id\" href=\"#mpc\">mpc</a>-><a class=\"id\" href=\"#lapic\">lapic</a>);", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#skip_entry\">skip_entry</a>(unsigned char **<a class=\"id\" href=\"#ptr\">ptr</a>, int *<a class=\"id\" href=\"#count\">count</a>, int <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ptr\">ptr</a> += <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#count\">count</a> += <a class=\"id\" href=\"#size\">size</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#smp_dump_mptable\">smp_dump_mptable</a>(struct <a class=\"id\" href=\"#mpc_table\">mpc_table</a> *<a class=\"id\" href=\"#mpc\">mpc</a>, unsigned char *<a class=\"id\" href=\"#mpt\">mpt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"Your mptable is wrong, contact your HW vendor!\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"type %x\\n\", *<a class=\"id\" href=\"#mpt\">mpt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#print_hex_dump\">print_hex_dump</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"  \", <a class=\"id\" href=\"#DUMP_PREFIX_ADDRESS\">DUMP_PREFIX_ADDRESS</a>, 16,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>1, <a class=\"id\" href=\"#mpc\">mpc</a>, <a class=\"id\" href=\"#mpc\">mpc</a>-><a class=\"id\" href=\"#length\">length</a>, 1);", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#default_smp_read_mpc_oem\">default_smp_read_mpc_oem</a>(struct <a class=\"id\" href=\"#mpc_table\">mpc_table</a> *<a class=\"id\" href=\"#mpc\">mpc</a>) { }", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#smp_register_lapic_address\">smp_register_lapic_address</a>(unsigned long <a class=\"id\" href=\"#address\">address</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_lapic_addr\">mp_lapic_addr</a> = <a class=\"id\" href=\"#address\">address</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_fixmap_nocache\">set_fixmap_nocache</a>(<a class=\"id\" href=\"#FIX_APIC_BASE\">FIX_APIC_BASE</a>, <a class=\"id\" href=\"#address\">address</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_cpu_physical_apicid\">boot_cpu_physical_apicid</a> == -1U) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#boot_cpu_physical_apicid\">boot_cpu_physical_apicid</a>  = <a class=\"id\" href=\"#read_apic_id\">read_apic_id</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic_version\">apic_version</a>[<a class=\"id\" href=\"#boot_cpu_physical_apicid\">boot_cpu_physical_apicid</a>] =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#GET_APIC_VERSION\">GET_APIC_VERSION</a>(<a class=\"id\" href=\"#apic_read\">apic_read</a>(<a class=\"id\" href=\"#APIC_LVR\">APIC_LVR</a>));", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#smp_read_mpc\">smp_read_mpc</a>(struct <a class=\"id\" href=\"#mpc_table\">mpc_table</a> *<a class=\"id\" href=\"#mpc\">mpc</a>, unsigned <a class=\"id\" href=\"#early\">early</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#str\">str</a>[16];", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#oem\">oem</a>[10];", 
"", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#count\">count</a> = sizeof(*<a class=\"id\" href=\"#mpc\">mpc</a>);", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#mpt\">mpt</a> = ((unsigned char *)<a class=\"id\" href=\"#mpc\">mpc</a>) + <a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#smp_check_mpc\">smp_check_mpc</a>(<a class=\"id\" href=\"#mpc\">mpc</a>, <a class=\"id\" href=\"#oem\">oem</a>, <a class=\"id\" href=\"#str\">str</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#generic_mps_oem_check\">generic_mps_oem_check</a>(<a class=\"id\" href=\"#mpc\">mpc</a>, <a class=\"id\" href=\"#oem\">oem</a>, <a class=\"id\" href=\"#str\">str</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* save the local APIC address, it might be non-default */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_lapic\">acpi_lapic</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mp_lapic_addr\">mp_lapic_addr</a> = <a class=\"id\" href=\"#mpc\">mpc</a>-><a class=\"id\" href=\"#lapic\">lapic</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#early\">early</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Initialize the lapic mapping */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_lapic\">acpi_lapic</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_register_lapic_address\">smp_register_lapic_address</a>(<a class=\"id\" href=\"#mpc\">mpc</a>-><a class=\"id\" href=\"#lapic\">lapic</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mpc\">mpc</a>-><a class=\"id\" href=\"#oemptr\">oemptr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#mpparse\">mpparse</a>.<a class=\"id\" href=\"#smp_read_mpc_oem\">smp_read_mpc_oem</a>(<a class=\"id\" href=\"#mpc\">mpc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *      Now process the configuration blocks.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#mpparse\">mpparse</a>.<a class=\"id\" href=\"#mpc_record\">mpc_record</a>(0);", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#mpc\">mpc</a>-><a class=\"id\" href=\"#length\">length</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (*<a class=\"id\" href=\"#mpt\">mpt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#MP_PROCESSOR\">MP_PROCESSOR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ACPI may have already provided this data */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_lapic\">acpi_lapic</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MP_processor_info\">MP_processor_info</a>((struct <a class=\"id\" href=\"#mpc_cpu\">mpc_cpu</a> *)<a class=\"id\" href=\"#mpt\">mpt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skip_entry\">skip_entry</a>(&amp;<a class=\"id\" href=\"#mpt\">mpt</a>, &amp;<a class=\"id\" href=\"#count\">count</a>, sizeof(struct <a class=\"id\" href=\"#mpc_cpu\">mpc_cpu</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#MP_BUS\">MP_BUS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MP_bus_info\">MP_bus_info</a>((struct <a class=\"id\" href=\"#mpc_bus\">mpc_bus</a> *)<a class=\"id\" href=\"#mpt\">mpt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skip_entry\">skip_entry</a>(&amp;<a class=\"id\" href=\"#mpt\">mpt</a>, &amp;<a class=\"id\" href=\"#count\">count</a>, sizeof(struct <a class=\"id\" href=\"#mpc_bus\">mpc_bus</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#MP_IOAPIC\">MP_IOAPIC</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MP_ioapic_info\">MP_ioapic_info</a>((struct <a class=\"id\" href=\"#mpc_ioapic\">mpc_ioapic</a> *)<a class=\"id\" href=\"#mpt\">mpt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skip_entry\">skip_entry</a>(&amp;<a class=\"id\" href=\"#mpt\">mpt</a>, &amp;<a class=\"id\" href=\"#count\">count</a>, sizeof(struct <a class=\"id\" href=\"#mpc_ioapic\">mpc_ioapic</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#MP_INTSRC\">MP_INTSRC</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MP_intsrc_info\">MP_intsrc_info</a>((struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a> *)<a class=\"id\" href=\"#mpt\">mpt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skip_entry\">skip_entry</a>(&amp;<a class=\"id\" href=\"#mpt\">mpt</a>, &amp;<a class=\"id\" href=\"#count\">count</a>, sizeof(struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#MP_LINTSRC\">MP_LINTSRC</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MP_lintsrc_info\">MP_lintsrc_info</a>((struct <a class=\"id\" href=\"#mpc_lintsrc\">mpc_lintsrc</a> *)<a class=\"id\" href=\"#mpt\">mpt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skip_entry\">skip_entry</a>(&amp;<a class=\"id\" href=\"#mpt\">mpt</a>, &amp;<a class=\"id\" href=\"#count\">count</a>, sizeof(struct <a class=\"id\" href=\"#mpc_lintsrc\">mpc_lintsrc</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* wrong mptable */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_dump_mptable\">smp_dump_mptable</a>(<a class=\"id\" href=\"#mpc\">mpc</a>, <a class=\"id\" href=\"#mpt\">mpt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#mpc\">mpc</a>-><a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#mpparse\">mpparse</a>.<a class=\"id\" href=\"#mpc_record\">mpc_record</a>(1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#num_processors\">num_processors</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"MPTABLE: no processors registered!\\n\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#num_processors\">num_processors</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_IO_APIC\">CONFIG_X86_IO_APIC</a>", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#ELCR_trigger\">ELCR_trigger</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#port\">port</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a> = 0x4d0 + (<a class=\"id\" href=\"#irq\">irq</a> >> 3);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#inb\">inb</a>(<a class=\"id\" href=\"#port\">port</a>) >> (<a class=\"id\" href=\"#irq\">irq</a> &amp; 7)) &amp; 1;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#construct_default_ioirq_mptable\">construct_default_ioirq_mptable</a>(int <a class=\"id\" href=\"#mpc_default_type\">mpc_default_type</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a> <a class=\"id\" href=\"#intsrc\">intsrc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ELCR_fallback\">ELCR_fallback</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#intsrc\">intsrc</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#MP_INTSRC\">MP_INTSRC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#intsrc\">intsrc</a>.<a class=\"id\" href=\"#irqflag\">irqflag</a> = 0;<span class=\"ts\"/><span class=\"comment\">/* conforming */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#intsrc\">intsrc</a>.<a class=\"id\" href=\"#srcbus\">srcbus</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#intsrc\">intsrc</a>.<a class=\"id\" href=\"#dstapic\">dstapic</a> = <a class=\"id\" href=\"#mp_ioapics\">mp_ioapics</a>[0].<a class=\"id\" href=\"#apicid\">apicid</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#intsrc\">intsrc</a>.<a class=\"id\" href=\"#irqtype\">irqtype</a> = <a class=\"id\" href=\"#mp_INT\">mp_INT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  If true, we have an ISA/PCI system with no IRQ entries</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  in the MP table. To prevent the PCI interrupts from being set up</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  incorrectly, we try to use the ELCR. The sanity check to see if</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  there is good ELCR data is very simple - IRQ0, 1, 2 and 13 can</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  never be level sensitive, so we simply see if the ELCR agrees.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  If it does, we assume it's valid.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mpc_default_type\">mpc_default_type</a> == 5) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"ISA/PCI bus type with no IRQ information... \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"falling back to ELCR\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ELCR_trigger\">ELCR_trigger</a>(0) || <a class=\"id\" href=\"#ELCR_trigger\">ELCR_trigger</a>(1) || <a class=\"id\" href=\"#ELCR_trigger\">ELCR_trigger</a>(2) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ELCR_trigger\">ELCR_trigger</a>(13))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"ELCR contains invalid data... \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"not using ELCR\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"Using ELCR to identify PCI interrupts\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ELCR_fallback\">ELCR_fallback</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 16; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#mpc_default_type\">mpc_default_type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 2:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == 0 || <a class=\"id\" href=\"#i\">i</a> == 13)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;<span class=\"ts\"/><span class=\"comment\">/* IRQ0 &amp; IRQ13 not connected */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == 2)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;<span class=\"ts\"/><span class=\"comment\">/* IRQ2 is never connected */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ELCR_fallback\">ELCR_fallback</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  If the ELCR indicates a level-sensitive interrupt, we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  copy that information over to the MP table in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  irqflag field (level sensitive, active high polarity).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ELCR_trigger\">ELCR_trigger</a>(<a class=\"id\" href=\"#i\">i</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intsrc\">intsrc</a>.<a class=\"id\" href=\"#irqflag\">irqflag</a> = 13;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intsrc\">intsrc</a>.<a class=\"id\" href=\"#irqflag\">irqflag</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intsrc\">intsrc</a>.<a class=\"id\" href=\"#srcbusirq\">srcbusirq</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intsrc\">intsrc</a>.<a class=\"id\" href=\"#dstirq\">dstirq</a> = <a class=\"id\" href=\"#i\">i</a> ? <a class=\"id\" href=\"#i\">i</a> : 2;<span class=\"ts\"/><span class=\"comment\">/* IRQ0 to INTIN2 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MP_intsrc_info\">MP_intsrc_info</a>(&amp;<a class=\"id\" href=\"#intsrc\">intsrc</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#intsrc\">intsrc</a>.<a class=\"id\" href=\"#irqtype\">irqtype</a> = <a class=\"id\" href=\"#mp_ExtINT\">mp_ExtINT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#intsrc\">intsrc</a>.<a class=\"id\" href=\"#srcbusirq\">srcbusirq</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#intsrc\">intsrc</a>.<a class=\"id\" href=\"#dstirq\">dstirq</a> = 0;<span class=\"ts\"/><span class=\"comment\">/* 8259A to INTIN0 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MP_intsrc_info\">MP_intsrc_info</a>(&amp;<a class=\"id\" href=\"#intsrc\">intsrc</a>);", 
"}", 
"", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#construct_ioapic_table\">construct_ioapic_table</a>(int <a class=\"id\" href=\"#mpc_default_type\">mpc_default_type</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mpc_ioapic\">mpc_ioapic</a> <a class=\"id\" href=\"#ioapic\">ioapic</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mpc_bus\">mpc_bus</a> <a class=\"id\" href=\"#bus\">bus</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#MP_BUS\">MP_BUS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>.<a class=\"id\" href=\"#busid\">busid</a> = 0;", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#mpc_default_type\">mpc_default_type</a>) {", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"???\\nUnknown standard configuration %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#mpc_default_type\">mpc_default_type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"<span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/>case 5:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#bus\">bus</a>.<a class=\"id\" href=\"#bustype\">bustype</a>, \"ISA   \", 6);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 2:", 
"<span class=\"ts\"/>case 6:", 
"<span class=\"ts\"/>case 3:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#bus\">bus</a>.<a class=\"id\" href=\"#bustype\">bustype</a>, \"EISA  \", 6);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 4:", 
"<span class=\"ts\"/>case 7:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#bus\">bus</a>.<a class=\"id\" href=\"#bustype\">bustype</a>, \"MCA   \", 6);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MP_bus_info\">MP_bus_info</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mpc_default_type\">mpc_default_type</a> &gt; 4) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>.<a class=\"id\" href=\"#busid\">busid</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#bus\">bus</a>.<a class=\"id\" href=\"#bustype\">bustype</a>, \"PCI   \", 6);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MP_bus_info\">MP_bus_info</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ioapic\">ioapic</a>.<a class=\"id\" href=\"#type\">type</a><span class=\"ts\"/>= <a class=\"id\" href=\"#MP_IOAPIC\">MP_IOAPIC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ioapic\">ioapic</a>.<a class=\"id\" href=\"#apicid\">apicid</a><span class=\"ts\"/>= 2;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ioapic\">ioapic</a>.<a class=\"id\" href=\"#apicver\">apicver</a><span class=\"ts\"/>= <a class=\"id\" href=\"#mpc_default_type\">mpc_default_type</a> &gt; 4 ? 0x10 : 0x01;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ioapic\">ioapic</a>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/>= <a class=\"id\" href=\"#MPC_APIC_USABLE\">MPC_APIC_USABLE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ioapic\">ioapic</a>.<a class=\"id\" href=\"#apicaddr\">apicaddr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IO_APIC_DEFAULT_PHYS_BASE\">IO_APIC_DEFAULT_PHYS_BASE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MP_ioapic_info\">MP_ioapic_info</a>(&amp;<a class=\"id\" href=\"#ioapic\">ioapic</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We set up most of the low 16 IO-APIC pins according to MPS rules.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#construct_default_ioirq_mptable\">construct_default_ioirq_mptable</a>(<a class=\"id\" href=\"#mpc_default_type\">mpc_default_type</a>);", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#construct_ioapic_table\">construct_ioapic_table</a>(int <a class=\"id\" href=\"#mpc_default_type\">mpc_default_type</a>) { }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#construct_default_ISA_mptable\">construct_default_ISA_mptable</a>(int <a class=\"id\" href=\"#mpc_default_type\">mpc_default_type</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mpc_cpu\">mpc_cpu</a> <a class=\"id\" href=\"#processor\">processor</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mpc_lintsrc\">mpc_lintsrc</a> <a class=\"id\" href=\"#lintsrc\">lintsrc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#linttypes\">linttypes</a>[2] = { <a class=\"id\" href=\"#mp_ExtINT\">mp_ExtINT</a>, <a class=\"id\" href=\"#mp_NMI\">mp_NMI</a> };", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * local APIC has default address</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_lapic_addr\">mp_lapic_addr</a> = <a class=\"id\" href=\"#APIC_DEFAULT_PHYS_BASE\">APIC_DEFAULT_PHYS_BASE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 2 CPUs, numbered 0 &amp; 1.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#MP_PROCESSOR\">MP_PROCESSOR</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Either an integrated APIC or a discrete 82489DX. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#apicver\">apicver</a> = <a class=\"id\" href=\"#mpc_default_type\">mpc_default_type</a> &gt; 4 ? 0x10 : 0x01;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#cpuflag\">cpuflag</a> = <a class=\"id\" href=\"#CPU_ENABLED\">CPU_ENABLED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#cpufeature\">cpufeature</a> = (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a> << 8) |", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_model\">x86_model</a> << 4) | <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_mask\">x86_mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#featureflag\">featureflag</a> = <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_capability\">x86_capability</a>[0];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#reserved\">reserved</a>[0] = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#reserved\">reserved</a>[1] = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 2; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#apicid\">apicid</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MP_processor_info\">MP_processor_info</a>(&amp;<a class=\"id\" href=\"#processor\">processor</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#construct_ioapic_table\">construct_ioapic_table</a>(<a class=\"id\" href=\"#mpc_default_type\">mpc_default_type</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lintsrc\">lintsrc</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#MP_LINTSRC\">MP_LINTSRC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lintsrc\">lintsrc</a>.<a class=\"id\" href=\"#irqflag\">irqflag</a> = 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* conforming */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lintsrc\">lintsrc</a>.<a class=\"id\" href=\"#srcbusid\">srcbusid</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lintsrc\">lintsrc</a>.<a class=\"id\" href=\"#srcbusirq\">srcbusirq</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lintsrc\">lintsrc</a>.<a class=\"id\" href=\"#destapic\">destapic</a> = <a class=\"id\" href=\"#MP_APIC_ALL\">MP_APIC_ALL</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 2; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lintsrc\">lintsrc</a>.<a class=\"id\" href=\"#irqtype\">irqtype</a> = <a class=\"id\" href=\"#linttypes\">linttypes</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lintsrc\">lintsrc</a>.<a class=\"id\" href=\"#destapiclint\">destapiclint</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MP_lintsrc_info\">MP_lintsrc_info</a>(&amp;<a class=\"id\" href=\"#lintsrc\">lintsrc</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#mpf_intel\">mpf_intel</a> *<a class=\"id\" href=\"#mpf_found\">mpf_found</a>;", 
"", 
"static unsigned long <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#get_mpc_size\">get_mpc_size</a>(unsigned long <a class=\"id\" href=\"#physptr\">physptr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mpc_table\">mpc_table</a> *<a class=\"id\" href=\"#mpc\">mpc</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mpc\">mpc</a> = <a class=\"id\" href=\"#early_ioremap\">early_ioremap</a>(<a class=\"id\" href=\"#physptr\">physptr</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#mpc\">mpc</a>-><a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#early_iounmap\">early_iounmap</a>(<a class=\"id\" href=\"#mpc\">mpc</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_VERBOSE\">APIC_VERBOSE</a>, \"  mpc: %lx-%lx\\n\", <a class=\"id\" href=\"#physptr\">physptr</a>, <a class=\"id\" href=\"#physptr\">physptr</a> + <a class=\"id\" href=\"#size\">size</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#size\">size</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#check_physptr\">check_physptr</a>(struct <a class=\"id\" href=\"#mpf_intel\">mpf_intel</a> *<a class=\"id\" href=\"#mpf\">mpf</a>, unsigned int <a class=\"id\" href=\"#early\">early</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mpc_table\">mpc_table</a> *<a class=\"id\" href=\"#mpc\">mpc</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#get_mpc_size\">get_mpc_size</a>(<a class=\"id\" href=\"#mpf\">mpf</a>-><a class=\"id\" href=\"#physptr\">physptr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mpc\">mpc</a> = <a class=\"id\" href=\"#early_ioremap\">early_ioremap</a>(<a class=\"id\" href=\"#mpf\">mpf</a>-><a class=\"id\" href=\"#physptr\">physptr</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Read the physical hardware table.  Anything here will</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * override the defaults.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#smp_read_mpc\">smp_read_mpc</a>(<a class=\"id\" href=\"#mpc\">mpc</a>, <a class=\"id\" href=\"#early\">early</a>)) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_found_config\">smp_found_config</a> = 0;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"BIOS bug, MP table errors detected!...\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"... disabling SMP support. (tell your hw vendor)\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#early_iounmap\">early_iounmap</a>(<a class=\"id\" href=\"#mpc\">mpc</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#early_iounmap\">early_iounmap</a>(<a class=\"id\" href=\"#mpc\">mpc</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#early\">early</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_IO_APIC\">CONFIG_X86_IO_APIC</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If there are no explicit MP IRQ entries, then we are</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * broken.  We set up most of the low 16 IO-APIC pins to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ISA defaults and hope it will work.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mp_irq_entries\">mp_irq_entries</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mpc_bus\">mpc_bus</a> <a class=\"id\" href=\"#bus\">bus</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"BIOS bug, no explicit IRQ entries, \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"using default mptable. (tell your hw vendor)\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#MP_BUS\">MP_BUS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>.<a class=\"id\" href=\"#busid\">busid</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#bus\">bus</a>.<a class=\"id\" href=\"#bustype\">bustype</a>, \"ISA   \", 6);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MP_bus_info\">MP_bus_info</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#construct_default_ioirq_mptable\">construct_default_ioirq_mptable</a>(0);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Scan the memory blocks for an SMP configuration block.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#default_get_smp_config\">default_get_smp_config</a>(unsigned int <a class=\"id\" href=\"#early\">early</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mpf_intel\">mpf_intel</a> *<a class=\"id\" href=\"#mpf\">mpf</a> = <a class=\"id\" href=\"#mpf_found\">mpf_found</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mpf\">mpf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
];
xr_frag_insert('l/e5/6a381c5435d6daba000a4bd1b38d36a9469c22.xr', __xr_tmp);
