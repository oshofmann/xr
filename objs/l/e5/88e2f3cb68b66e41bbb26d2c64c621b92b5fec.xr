var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * handle transition of Linux booting another kernel</span>", 
"<span class=\"comment\"> * Copyright (C) 2002-2005 Eric Biederman  &lt;ebiederm@xmission.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This source code is licensed under the GNU General Public License,</span>", 
"<span class=\"comment\"> * Version 2.  See the file COPYING for more details.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kexec\">kexec</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#reboot\">reboot</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#numa\">numa</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ftrace\">ftrace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#suspend\">suspend</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pgtable\">pgtable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#tlbflush\">tlbflush</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mmu_context\">mmu_context</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#debugreg\">debugreg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static int <a class=\"id\" href=\"#init_one_level2_page\">init_one_level2_page</a>(struct <a class=\"id\" href=\"#kimage\">kimage</a> *<a class=\"id\" href=\"#image\">image</a>, <a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> &= <a class=\"id\" href=\"#PMD_MASK\">PMD_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd\">pgd</a> += <a class=\"id\" href=\"#pgd_index\">pgd_index</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pgd_present\">pgd_present</a>(*<a class=\"id\" href=\"#pgd\">pgd</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#kimage_alloc_control_pages\">kimage_alloc_control_pages</a>(<a class=\"id\" href=\"#image\">image</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pud\">pud</a> = (<a class=\"id\" href=\"#pud_t\">pud_t</a> *)<a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#pud\">pud</a>, 0, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pgd\">set_pgd</a>(<a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#__pgd\">__pgd</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#pud\">pud</a>) | <a class=\"id\" href=\"#_KERNPG_TABLE\">_KERNPG_TABLE</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud\">pud</a> = <a class=\"id\" href=\"#pud_offset\">pud_offset</a>(<a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pud_present\">pud_present</a>(*<a class=\"id\" href=\"#pud\">pud</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#kimage_alloc_control_pages\">kimage_alloc_control_pages</a>(<a class=\"id\" href=\"#image\">image</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmd\">pmd</a> = (<a class=\"id\" href=\"#pmd_t\">pmd_t</a> *)<a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, 0, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pud\">set_pud</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#__pud\">__pud</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#pmd\">pmd</a>) | <a class=\"id\" href=\"#_KERNPG_TABLE\">_KERNPG_TABLE</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd\">pmd</a> = <a class=\"id\" href=\"#pmd_offset\">pmd_offset</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pmd_present\">pmd_present</a>(*<a class=\"id\" href=\"#pmd\">pmd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pmd\">set_pmd</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#__pmd\">__pmd</a>(<a class=\"id\" href=\"#addr\">addr</a> | <a class=\"id\" href=\"#__PAGE_KERNEL_LARGE_EXEC\">__PAGE_KERNEL_LARGE_EXEC</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#init_level2_page\">init_level2_page</a>(<a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#level2p\">level2p</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end_addr\">end_addr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> &= <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end_addr\">end_addr</a> = <a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#PUD_SIZE\">PUD_SIZE</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#addr\">addr</a> &lt; <a class=\"id\" href=\"#end_addr\">end_addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pmd\">set_pmd</a>(<a class=\"id\" href=\"#level2p\">level2p</a>++, <a class=\"id\" href=\"#__pmd\">__pmd</a>(<a class=\"id\" href=\"#addr\">addr</a> | <a class=\"id\" href=\"#__PAGE_KERNEL_LARGE_EXEC\">__PAGE_KERNEL_LARGE_EXEC</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> += <a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#init_level3_page\">init_level3_page</a>(struct <a class=\"id\" href=\"#kimage\">kimage</a> *<a class=\"id\" href=\"#image\">image</a>, <a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#level3p\">level3p</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#last_addr\">last_addr</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end_addr\">end_addr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> &= <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end_addr\">end_addr</a> = <a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#PGDIR_SIZE\">PGDIR_SIZE</a>;", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#addr\">addr</a> &lt; <a class=\"id\" href=\"#last_addr\">last_addr</a>) && (<a class=\"id\" href=\"#addr\">addr</a> &lt; <a class=\"id\" href=\"#end_addr\">end_addr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#level2p\">level2p</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#kimage_alloc_control_pages\">kimage_alloc_control_pages</a>(<a class=\"id\" href=\"#image\">image</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#level2p\">level2p</a> = (<a class=\"id\" href=\"#pmd_t\">pmd_t</a> *)<a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_level2_page\">init_level2_page</a>(<a class=\"id\" href=\"#level2p\">level2p</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pud\">set_pud</a>(<a class=\"id\" href=\"#level3p\">level3p</a>++, <a class=\"id\" href=\"#__pud\">__pud</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#level2p\">level2p</a>) | <a class=\"id\" href=\"#_KERNPG_TABLE\">_KERNPG_TABLE</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> += <a class=\"id\" href=\"#PUD_SIZE\">PUD_SIZE</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* clear the unused entries */</span>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#addr\">addr</a> &lt; <a class=\"id\" href=\"#end_addr\">end_addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pud_clear\">pud_clear</a>(<a class=\"id\" href=\"#level3p\">level3p</a>++);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> += <a class=\"id\" href=\"#PUD_SIZE\">PUD_SIZE</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"", 
"static int <a class=\"id\" href=\"#init_level4_page\">init_level4_page</a>(struct <a class=\"id\" href=\"#kimage\">kimage</a> *<a class=\"id\" href=\"#image\">image</a>, <a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#level4p\">level4p</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#last_addr\">last_addr</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end_addr\">end_addr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> &= <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end_addr\">end_addr</a> = <a class=\"id\" href=\"#addr\">addr</a> + (<a class=\"id\" href=\"#PTRS_PER_PGD\">PTRS_PER_PGD</a> * <a class=\"id\" href=\"#PGDIR_SIZE\">PGDIR_SIZE</a>);", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#addr\">addr</a> &lt; <a class=\"id\" href=\"#last_addr\">last_addr</a>) && (<a class=\"id\" href=\"#addr\">addr</a> &lt; <a class=\"id\" href=\"#end_addr\">end_addr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#level3p\">level3p</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#kimage_alloc_control_pages\">kimage_alloc_control_pages</a>(<a class=\"id\" href=\"#image\">image</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#level3p\">level3p</a> = (<a class=\"id\" href=\"#pud_t\">pud_t</a> *)<a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#init_level3_page\">init_level3_page</a>(<a class=\"id\" href=\"#image\">image</a>, <a class=\"id\" href=\"#level3p\">level3p</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#last_addr\">last_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pgd\">set_pgd</a>(<a class=\"id\" href=\"#level4p\">level4p</a>++, <a class=\"id\" href=\"#__pgd\">__pgd</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#level3p\">level3p</a>) | <a class=\"id\" href=\"#_KERNPG_TABLE\">_KERNPG_TABLE</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> += <a class=\"id\" href=\"#PGDIR_SIZE\">PGDIR_SIZE</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* clear the unused entries */</span>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#addr\">addr</a> &lt; <a class=\"id\" href=\"#end_addr\">end_addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgd_clear\">pgd_clear</a>(<a class=\"id\" href=\"#level4p\">level4p</a>++);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> += <a class=\"id\" href=\"#PGDIR_SIZE\">PGDIR_SIZE</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#free_transition_pgtable\">free_transition_pgtable</a>(struct <a class=\"id\" href=\"#kimage\">kimage</a> *<a class=\"id\" href=\"#image\">image</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long)<a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#arch\">arch</a>.<a class=\"id\" href=\"#pud\">pud</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long)<a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#arch\">arch</a>.<a class=\"id\" href=\"#pmd\">pmd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long)<a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#arch\">arch</a>.<a class=\"id\" href=\"#pte\">pte</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#init_transition_pgtable\">init_transition_pgtable</a>(struct <a class=\"id\" href=\"#kimage\">kimage</a> *<a class=\"id\" href=\"#image\">image</a>, <a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#pte\">pte</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#vaddr\">vaddr</a>, <a class=\"id\" href=\"#paddr\">paddr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vaddr\">vaddr</a> = (unsigned long)<a class=\"id\" href=\"#relocate_kernel\">relocate_kernel</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#paddr\">paddr</a> = <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#control_code_page\">control_code_page</a>)+<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd\">pgd</a> += <a class=\"id\" href=\"#pgd_index\">pgd_index</a>(<a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pgd_present\">pgd_present</a>(*<a class=\"id\" href=\"#pgd\">pgd</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pud\">pud</a> = (<a class=\"id\" href=\"#pud_t\">pud_t</a> *)<a class=\"id\" href=\"#get_zeroed_page\">get_zeroed_page</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pud\">pud</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#arch\">arch</a>.<a class=\"id\" href=\"#pud\">pud</a> = <a class=\"id\" href=\"#pud\">pud</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pgd\">set_pgd</a>(<a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#__pgd\">__pgd</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#pud\">pud</a>) | <a class=\"id\" href=\"#_KERNPG_TABLE\">_KERNPG_TABLE</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud\">pud</a> = <a class=\"id\" href=\"#pud_offset\">pud_offset</a>(<a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pud_present\">pud_present</a>(*<a class=\"id\" href=\"#pud\">pud</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmd\">pmd</a> = (<a class=\"id\" href=\"#pmd_t\">pmd_t</a> *)<a class=\"id\" href=\"#get_zeroed_page\">get_zeroed_page</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pmd\">pmd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#arch\">arch</a>.<a class=\"id\" href=\"#pmd\">pmd</a> = <a class=\"id\" href=\"#pmd\">pmd</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pud\">set_pud</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#__pud\">__pud</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#pmd\">pmd</a>) | <a class=\"id\" href=\"#_KERNPG_TABLE\">_KERNPG_TABLE</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd\">pmd</a> = <a class=\"id\" href=\"#pmd_offset\">pmd_offset</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pmd_present\">pmd_present</a>(*<a class=\"id\" href=\"#pmd\">pmd</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = (<a class=\"id\" href=\"#pte_t\">pte_t</a> *)<a class=\"id\" href=\"#get_zeroed_page\">get_zeroed_page</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pte\">pte</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#arch\">arch</a>.<a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#pte\">pte</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pmd\">set_pmd</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#__pmd\">__pmd</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#pte\">pte</a>) | <a class=\"id\" href=\"#_KERNPG_TABLE\">_KERNPG_TABLE</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#pte_offset_kernel\">pte_offset_kernel</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_pte\">set_pte</a>(<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#pfn_pte\">pfn_pte</a>(<a class=\"id\" href=\"#paddr\">paddr</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>, <a class=\"id\" href=\"#PAGE_KERNEL_EXEC\">PAGE_KERNEL_EXEC</a>));", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_transition_pgtable\">free_transition_pgtable</a>(<a class=\"id\" href=\"#image\">image</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"", 
"static int <a class=\"id\" href=\"#init_pgtable\">init_pgtable</a>(struct <a class=\"id\" href=\"#kimage\">kimage</a> *<a class=\"id\" href=\"#image\">image</a>, unsigned long <a class=\"id\" href=\"#start_pgtable\">start_pgtable</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#level4p\">level4p</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#level4p\">level4p</a> = (<a class=\"id\" href=\"#pgd_t\">pgd_t</a> *)<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#start_pgtable\">start_pgtable</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#init_level4_page\">init_level4_page</a>(<a class=\"id\" href=\"#image\">image</a>, <a class=\"id\" href=\"#level4p\">level4p</a>, 0, <a class=\"id\" href=\"#max_pfn\">max_pfn</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * image-&gt;start may be outside 0 ~ max_pfn, for example when</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * jump back to original kernel from kexeced kernel</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#init_one_level2_page\">init_one_level2_page</a>(<a class=\"id\" href=\"#image\">image</a>, <a class=\"id\" href=\"#level4p\">level4p</a>, <a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#start\">start</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#init_transition_pgtable\">init_transition_pgtable</a>(<a class=\"id\" href=\"#image\">image</a>, <a class=\"id\" href=\"#level4p\">level4p</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#set_idt\">set_idt</a>(void *<a class=\"id\" href=\"#newidt\">newidt</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#limit\">limit</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#desc_ptr\">desc_ptr</a> <a class=\"id\" href=\"#curidt\">curidt</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* x86-64 supports unaliged loads &amp; stores */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#curidt\">curidt</a>.<a class=\"id\" href=\"#size\">size</a>    = <a class=\"id\" href=\"#limit\">limit</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#curidt\">curidt</a>.<a class=\"id\" href=\"#address\">address</a> = (unsigned long)<a class=\"id\" href=\"#newidt\">newidt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__asm__\">__asm__</a> <a class=\"id\" href=\"#__volatile__\">__volatile__</a> (", 
"<span class=\"ts\"/><span class=\"ts\"/>\"lidtq %0\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>: : \"m\" (<a class=\"id\" href=\"#curidt\">curidt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>);", 
"};", 
"", 
"", 
"static void <a class=\"id\" href=\"#set_gdt\">set_gdt</a>(void *<a class=\"id\" href=\"#newgdt\">newgdt</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#limit\">limit</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#desc_ptr\">desc_ptr</a> <a class=\"id\" href=\"#curgdt\">curgdt</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* x86-64 supports unaligned loads &amp; stores */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#curgdt\">curgdt</a>.<a class=\"id\" href=\"#size\">size</a>    = <a class=\"id\" href=\"#limit\">limit</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#curgdt\">curgdt</a>.<a class=\"id\" href=\"#address\">address</a> = (unsigned long)<a class=\"id\" href=\"#newgdt\">newgdt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__asm__\">__asm__</a> <a class=\"id\" href=\"#__volatile__\">__volatile__</a> (", 
"<span class=\"ts\"/><span class=\"ts\"/>\"lgdtq %0\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>: : \"m\" (<a class=\"id\" href=\"#curgdt\">curgdt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>);", 
"};", 
"", 
"static void <a class=\"id\" href=\"#load_segments\">load_segments</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__asm__\">__asm__</a> <a class=\"id\" href=\"#__volatile__\">__volatile__</a> (", 
"<span class=\"ts\"/><span class=\"ts\"/>\"\\tmovl %0,%%ds\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"\\tmovl %0,%%es\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"\\tmovl %0,%%ss\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"\\tmovl %0,%%fs\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"\\tmovl %0,%%gs\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>: : \"a\" (<a class=\"id\" href=\"#__KERNEL_DS\">__KERNEL_DS</a>) : \"memory\"", 
"<span class=\"ts\"/><span class=\"ts\"/>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#machine_kexec_prepare\">machine_kexec_prepare</a>(struct <a class=\"id\" href=\"#kimage\">kimage</a> *<a class=\"id\" href=\"#image\">image</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start_pgtable\">start_pgtable</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Calculate the offsets */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start_pgtable\">start_pgtable</a> = <a class=\"id\" href=\"#page_to_pfn\">page_to_pfn</a>(<a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#control_code_page\">control_code_page</a>) << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Setup the identity mapped 64bit page table */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#init_pgtable\">init_pgtable</a>(<a class=\"id\" href=\"#image\">image</a>, <a class=\"id\" href=\"#start_pgtable\">start_pgtable</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#machine_kexec_cleanup\">machine_kexec_cleanup</a>(struct <a class=\"id\" href=\"#kimage\">kimage</a> *<a class=\"id\" href=\"#image\">image</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_transition_pgtable\">free_transition_pgtable</a>(<a class=\"id\" href=\"#image\">image</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Do not allocate memory (or fail in any way) in machine_kexec().</span>", 
"<span class=\"comment\"> * We are past the point of no return, committed to rebooting now.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#machine_kexec\">machine_kexec</a>(struct <a class=\"id\" href=\"#kimage\">kimage</a> *<a class=\"id\" href=\"#image\">image</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#page_list\">page_list</a>[<a class=\"id\" href=\"#PAGES_NR\">PAGES_NR</a>];", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#control_page\">control_page</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#save_ftrace_enabled\">save_ftrace_enabled</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_KEXEC_JUMP\">CONFIG_KEXEC_JUMP</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#preserve_context\">preserve_context</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#save_processor_state\">save_processor_state</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#save_ftrace_enabled\">save_ftrace_enabled</a> = <a class=\"id\" href=\"#__ftrace_enabled_save\">__ftrace_enabled_save</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Interrupts aren't acceptable while we reboot */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_disable\">local_irq_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hw_breakpoint_disable\">hw_breakpoint_disable</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#preserve_context\">preserve_context</a>) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_IO_APIC\">CONFIG_X86_IO_APIC</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We need to put APICs in legacy mode so that we can</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * get timer interrupts in second kernel. kexec/kdump</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * paths already have calls to disable_IO_APIC() in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * one form or other. kexec jump path also need</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * one.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#disable_IO_APIC\">disable_IO_APIC</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#control_page\">control_page</a> = <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#control_code_page\">control_code_page</a>) + <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#control_page\">control_page</a>, <a class=\"id\" href=\"#relocate_kernel\">relocate_kernel</a>, <a class=\"id\" href=\"#KEXEC_CONTROL_CODE_MAX_SIZE\">KEXEC_CONTROL_CODE_MAX_SIZE</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page_list\">page_list</a>[<a class=\"id\" href=\"#PA_CONTROL_PAGE\">PA_CONTROL_PAGE</a>] = <a class=\"id\" href=\"#virt_to_phys\">virt_to_phys</a>(<a class=\"id\" href=\"#control_page\">control_page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page_list\">page_list</a>[<a class=\"id\" href=\"#VA_CONTROL_PAGE\">VA_CONTROL_PAGE</a>] = (unsigned long)<a class=\"id\" href=\"#control_page\">control_page</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page_list\">page_list</a>[<a class=\"id\" href=\"#PA_TABLE_PAGE\">PA_TABLE_PAGE</a>] =", 
"<span class=\"ts\"/>  (unsigned long)<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#control_code_page\">control_code_page</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#KEXEC_TYPE_DEFAULT\">KEXEC_TYPE_DEFAULT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_list\">page_list</a>[<a class=\"id\" href=\"#PA_SWAP_PAGE\">PA_SWAP_PAGE</a>] = (<a class=\"id\" href=\"#page_to_pfn\">page_to_pfn</a>(<a class=\"id\" href=\"#image\">image</a>-><a class=\"id\" href=\"#swap_page\">swap_page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><< <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The segment registers are funny things, they have both a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * visible and an invisible part.  Whenever the visible part is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * set to a specific selector, the invisible part is loaded</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * with from a table in memory.  At no other time is the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * descriptor table in memory accessed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * I take advantage of this here by force loading the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * segments, before I zap the gdt with an invalid value.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#load_segments\">load_segments</a>();", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The gdt &amp; idt are now invalid.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If you want to load them you must set up your own idt &amp; gdt.</span>", 
];
xr_frag_insert('l/e5/88e2f3cb68b66e41bbb26d2c64c621b92b5fec.xr', __xr_tmp);
