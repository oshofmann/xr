var __xr_tmp = [
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>That's all usermode folks</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pim\">pim</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_MROUTE\">CONFIG_IP_MROUTE</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ip_mroute_opt\">ip_mroute_opt</a>(int <a class=\"id\" href=\"#opt\">opt</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#opt\">opt</a> >= <a class=\"id\" href=\"#MRT_BASE\">MRT_BASE</a>) && (<a class=\"id\" href=\"#opt\">opt</a> <= <a class=\"id\" href=\"#MRT_BASE\">MRT_BASE</a> + 10);", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ip_mroute_opt\">ip_mroute_opt</a>(int <a class=\"id\" href=\"#opt\">opt</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_MROUTE\">CONFIG_IP_MROUTE</a>", 
"extern int <a class=\"id\" href=\"#ip_mroute_setsockopt\">ip_mroute_setsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *, int, char <a class=\"id\" href=\"#__user\">__user</a> *, unsigned int);", 
"extern int <a class=\"id\" href=\"#ip_mroute_getsockopt\">ip_mroute_getsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *, int, char <a class=\"id\" href=\"#__user\">__user</a> *, int <a class=\"id\" href=\"#__user\">__user</a> *);", 
"extern int <a class=\"id\" href=\"#ipmr_ioctl\">ipmr_ioctl</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#cmd\">cmd</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>);", 
"extern int <a class=\"id\" href=\"#ip_mr_init\">ip_mr_init</a>(void);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a>", 
"int <a class=\"id\" href=\"#ip_mroute_setsockopt\">ip_mroute_setsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sock\">sock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#optname\">optname</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, unsigned int <a class=\"id\" href=\"#optlen\">optlen</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOPROTOOPT\">ENOPROTOOPT</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a>", 
"int <a class=\"id\" href=\"#ip_mroute_getsockopt\">ip_mroute_getsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sock\">sock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#optname\">optname</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optlen\">optlen</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOPROTOOPT\">ENOPROTOOPT</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a>", 
"int <a class=\"id\" href=\"#ipmr_ioctl\">ipmr_ioctl</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#cmd\">cmd</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOIOCTLCMD\">ENOIOCTLCMD</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ip_mr_init\">ip_mr_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"struct <a class=\"id\" href=\"#vif_device\">vif_device</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> <span class=\"ts\"/>*<a class=\"id\" href=\"#dev\">dev</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Device we are using */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#bytes_in\">bytes_in</a>,<a class=\"id\" href=\"#bytes_out\">bytes_out</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#pkt_in\">pkt_in</a>,<a class=\"id\" href=\"#pkt_out\">pkt_out</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Statistics <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#rate_limit\">rate_limit</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Traffic shaping (NI) <span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#threshold\">threshold</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* TTL threshold <span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Control flags <span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local\">local</a>,<a class=\"id\" href=\"#remote\">remote</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Addresses(remote for tunnels)*/</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Physical interface index<span class=\"ts\"/>*/</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIFF_STATIC\">VIFF_STATIC</a> 0x8000", 
"", 
"struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#mfc_mcastgrp\">mfc_mcastgrp</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Group the entry belongs to <span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#mfc_origin\">mfc_origin</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Source of packet <span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vifi_t\">vifi_t</a> <a class=\"id\" href=\"#mfc_parent\">mfc_parent</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Source interface<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mfc_flags\">mfc_flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Flags on line<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#expires\">expires</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff_head\">sk_buff_head</a> <a class=\"id\" href=\"#unresolved\">unresolved</a>;<span class=\"ts\"/><span class=\"comment\">/* Unresolved buffers<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#unres\">unres</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#last_assert\">last_assert</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#minvif\">minvif</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#maxvif\">maxvif</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#bytes\">bytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pkt\">pkt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#wrong_if\">wrong_if</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#ttls\">ttls</a>[<a class=\"id\" href=\"#MAXVIFS\">MAXVIFS</a>];<span class=\"ts\"/><span class=\"comment\">/* TTL thresholds<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#mfc_un\">mfc_un</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MFC_STATIC\">MFC_STATIC</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MFC_NOTIFY\">MFC_NOTIFY</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MFC_LINES\">MFC_LINES</a><span class=\"ts\"/><span class=\"ts\"/>64", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__BIG_ENDIAN\">__BIG_ENDIAN</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MFC_HASH\">MFC_HASH</a>(<a class=\"id\" href=\"#a\">a</a>,<a class=\"id\" href=\"#b\">b</a>)<span class=\"ts\"/>(((((<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)(<a class=\"id\" href=\"#__be32\">__be32</a>)<a class=\"id\" href=\"#a\">a</a>)>>24)^(((<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)(<a class=\"id\" href=\"#__be32\">__be32</a>)<a class=\"id\" href=\"#b\">b</a>)>>26))&amp;(<a class=\"id\" href=\"#MFC_LINES\">MFC_LINES</a>-1))", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MFC_HASH\">MFC_HASH</a>(<a class=\"id\" href=\"#a\">a</a>,<a class=\"id\" href=\"#b\">b</a>)<span class=\"ts\"/>((((<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)(<a class=\"id\" href=\"#__be32\">__be32</a>)<a class=\"id\" href=\"#a\">a</a>)^(((<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)(<a class=\"id\" href=\"#__be32\">__be32</a>)<a class=\"id\" href=\"#b\">b</a>)>>2))&amp;(<a class=\"id\" href=\"#MFC_LINES\">MFC_LINES</a>-1))", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"ts\"/>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MFC_ASSERT_THRESH\">MFC_ASSERT_THRESH</a> (3*<a class=\"id\" href=\"#HZ\">HZ</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Maximal freq. of asserts */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pseudo messages used by mrouted</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IGMPMSG_NOCACHE\">IGMPMSG_NOCACHE</a><span class=\"ts\"/><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Kern cache fill request to mrouted */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IGMPMSG_WRONGVIF\">IGMPMSG_WRONGVIF</a><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* For PIM assert processing (unused) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IGMPMSG_WHOLEPKT\">IGMPMSG_WHOLEPKT</a><span class=\"ts\"/>3<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* For PIM Register processing */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"struct <a class=\"id\" href=\"#rtmsg\">rtmsg</a>;", 
"extern int <a class=\"id\" href=\"#ipmr_get_route\">ipmr_get_route</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#rtmsg\">rtmsg</a> *<a class=\"id\" href=\"#rtm\">rtm</a>, int <a class=\"id\" href=\"#nowait\">nowait</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/e5/9233f47cc0ae0f761bd8d7ab3717cd348faacc.xr', __xr_tmp);
