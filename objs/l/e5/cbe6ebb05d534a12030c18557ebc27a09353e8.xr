var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ioport\">ioport</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#wait\">wait</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"pci.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This interrupt-safe spinlock protects all accesses to PCI</span>", 
"<span class=\"comment\"> * configuration space.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#DEFINE_RAW_SPINLOCK\">DEFINE_RAW_SPINLOCK</a>(<a class=\"id\" href=\"#pci_lock\">pci_lock</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  Wrappers for all PCI configuration access functions.  They just check</span>", 
"<span class=\"comment\"> *  alignment, do locking and call the low-level functions pointed to</span>", 
"<span class=\"comment\"> *  by pci_dev-&gt;ops.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_byte_BAD\">PCI_byte_BAD</a> 0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_word_BAD\">PCI_word_BAD</a> (<a class=\"id\" href=\"#pos\">pos</a> &amp; 1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_dword_BAD\">PCI_dword_BAD</a> (<a class=\"id\" href=\"#pos\">pos</a> &amp; 3)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_OP_READ\">PCI_OP_READ</a>(<a class=\"id\" href=\"#size\">size</a>,<a class=\"id\" href=\"#type\">type</a>,<a class=\"id\" href=\"#len\">len</a>) \\", 
"int <a class=\"id\" href=\"#pci_bus_read_config_\">pci_bus_read_config_</a>##<a class=\"id\" href=\"#size\">size</a> \\", 
"<span class=\"ts\"/>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, unsigned int <a class=\"id\" href=\"#devfn\">devfn</a>, int <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#type\">type</a> *<a class=\"id\" href=\"#value\">value</a>)<span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#data\">data</a> = 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PCI_\">PCI_</a>##<a class=\"id\" href=\"#size\">size</a>##<a class=\"id\" href=\"#_BAD\">_BAD</a>) return <a class=\"id\" href=\"#PCIBIOS_BAD_REGISTER_NUMBER\">PCIBIOS_BAD_REGISTER_NUMBER</a>;<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#pci_lock\">pci_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#read\">read</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#devfn\">devfn</a>, <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#len\">len</a>, &amp;<a class=\"id\" href=\"#data\">data</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#value\">value</a> = (<a class=\"id\" href=\"#type\">type</a>)<a class=\"id\" href=\"#data\">data</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#pci_lock\">pci_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_OP_WRITE\">PCI_OP_WRITE</a>(<a class=\"id\" href=\"#size\">size</a>,<a class=\"id\" href=\"#type\">type</a>,<a class=\"id\" href=\"#len\">len</a>) \\", 
"int <a class=\"id\" href=\"#pci_bus_write_config_\">pci_bus_write_config_</a>##<a class=\"id\" href=\"#size\">size</a> \\", 
"<span class=\"ts\"/>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, unsigned int <a class=\"id\" href=\"#devfn\">devfn</a>, int <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#type\">type</a> <a class=\"id\" href=\"#value\">value</a>)<span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PCI_\">PCI_</a>##<a class=\"id\" href=\"#size\">size</a>##<a class=\"id\" href=\"#_BAD\">_BAD</a>) return <a class=\"id\" href=\"#PCIBIOS_BAD_REGISTER_NUMBER\">PCIBIOS_BAD_REGISTER_NUMBER</a>;<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#pci_lock\">pci_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#write\">write</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#devfn\">devfn</a>, <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#value\">value</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#pci_lock\">pci_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"}", 
"", 
"<a class=\"id\" href=\"#PCI_OP_READ\">PCI_OP_READ</a>(<a class=\"id\" href=\"#byte\">byte</a>, <a class=\"id\" href=\"#u8\">u8</a>, 1)", 
"<a class=\"id\" href=\"#PCI_OP_READ\">PCI_OP_READ</a>(<a class=\"id\" href=\"#word\">word</a>, <a class=\"id\" href=\"#u16\">u16</a>, 2)", 
"<a class=\"id\" href=\"#PCI_OP_READ\">PCI_OP_READ</a>(<a class=\"id\" href=\"#dword\">dword</a>, <a class=\"id\" href=\"#u32\">u32</a>, 4)", 
"<a class=\"id\" href=\"#PCI_OP_WRITE\">PCI_OP_WRITE</a>(<a class=\"id\" href=\"#byte\">byte</a>, <a class=\"id\" href=\"#u8\">u8</a>, 1)", 
"<a class=\"id\" href=\"#PCI_OP_WRITE\">PCI_OP_WRITE</a>(<a class=\"id\" href=\"#word\">word</a>, <a class=\"id\" href=\"#u16\">u16</a>, 2)", 
"<a class=\"id\" href=\"#PCI_OP_WRITE\">PCI_OP_WRITE</a>(<a class=\"id\" href=\"#dword\">dword</a>, <a class=\"id\" href=\"#u32\">u32</a>, 4)", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pci_bus_read_config_byte\">pci_bus_read_config_byte</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pci_bus_read_config_word\">pci_bus_read_config_word</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pci_bus_read_config_dword\">pci_bus_read_config_dword</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pci_bus_write_config_byte\">pci_bus_write_config_byte</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pci_bus_write_config_word\">pci_bus_write_config_word</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pci_bus_write_config_dword\">pci_bus_write_config_dword</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_bus_set_ops - Set raw operations of pci bus</span>", 
"<span class=\"comment\"> * @bus:<span class=\"ts\"/>pci bus struct</span>", 
"<span class=\"comment\"> * @ops:<span class=\"ts\"/>new raw operations</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return previous raw operations</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#pci_ops\">pci_ops</a> *<a class=\"id\" href=\"#pci_bus_set_ops\">pci_bus_set_ops</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, struct <a class=\"id\" href=\"#pci_ops\">pci_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_ops\">pci_ops</a> *<a class=\"id\" href=\"#old_ops\">old_ops</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#pci_lock\">pci_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_ops\">old_ops</a> = <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#pci_lock\">pci_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#old_ops\">old_ops</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pci_bus_set_ops\">pci_bus_set_ops</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_read_vpd - Read one entry from Vital Product Data</span>", 
"<span class=\"comment\"> * @dev:<span class=\"ts\"/>pci device struct</span>", 
"<span class=\"comment\"> * @pos:<span class=\"ts\"/>offset in vpd space</span>", 
"<span class=\"comment\"> * @count:<span class=\"ts\"/>number of bytes to read</span>", 
"<span class=\"comment\"> * @buf:<span class=\"ts\"/>pointer to where to store result</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#pci_read_vpd\">pci_read_vpd</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, void *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#vpd\">vpd</a> || !<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#ops\">ops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#read\">read</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pci_read_vpd\">pci_read_vpd</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_write_vpd - Write entry to Vital Product Data</span>", 
"<span class=\"comment\"> * @dev:<span class=\"ts\"/>pci device struct</span>", 
"<span class=\"comment\"> * @pos:<span class=\"ts\"/>offset in vpd space</span>", 
"<span class=\"comment\"> * @count:<span class=\"ts\"/>number of bytes to write</span>", 
"<span class=\"comment\"> * @buf:<span class=\"ts\"/>buffer containing write data</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#pci_write_vpd\">pci_write_vpd</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, const void *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#vpd\">vpd</a> || !<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#ops\">ops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#write\">write</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pci_write_vpd\">pci_write_vpd</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The following routines are to prevent the user from accessing PCI config</span>", 
"<span class=\"comment\"> * space when it's unsafe to do so.  Some devices require this during BIST and</span>", 
"<span class=\"comment\"> * we're required to prevent it during D-state transitions.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We have a bit per device to indicate it's blocked and a global wait queue</span>", 
"<span class=\"comment\"> * for callers to sleep on until devices are unblocked.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#DECLARE_WAIT_QUEUE_HEAD\">DECLARE_WAIT_QUEUE_HEAD</a>(<a class=\"id\" href=\"#pci_ucfg_wait\">pci_ucfg_wait</a>);", 
"", 
"static <a class=\"id\" href=\"#noinline\">noinline</a> void <a class=\"id\" href=\"#pci_wait_ucfg\">pci_wait_ucfg</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DECLARE_WAITQUEUE\">DECLARE_WAITQUEUE</a>(<a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#current\">current</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__add_wait_queue\">__add_wait_queue</a>(&amp;<a class=\"id\" href=\"#pci_ucfg_wait\">pci_ucfg_wait</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_current_state\">set_current_state</a>(<a class=\"id\" href=\"#TASK_UNINTERRUPTIBLE\">TASK_UNINTERRUPTIBLE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irq\">raw_spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#pci_lock\">pci_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irq\">raw_spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#pci_lock\">pci_lock</a>);", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#block_ucfg_access\">block_ucfg_access</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__remove_wait_queue\">__remove_wait_queue</a>(&amp;<a class=\"id\" href=\"#pci_ucfg_wait\">pci_ucfg_wait</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_USER_READ_CONFIG\">PCI_USER_READ_CONFIG</a>(<a class=\"id\" href=\"#size\">size</a>,<a class=\"id\" href=\"#type\">type</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"int <a class=\"id\" href=\"#pci_user_read_config_\">pci_user_read_config_</a>##<a class=\"id\" href=\"#size\">size</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#type\">type</a> *<a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#data\">data</a> = -1;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PCI_\">PCI_</a>##<a class=\"id\" href=\"#size\">size</a>##<a class=\"id\" href=\"#_BAD\">_BAD</a>) return <a class=\"id\" href=\"#PCIBIOS_BAD_REGISTER_NUMBER\">PCIBIOS_BAD_REGISTER_NUMBER</a>;<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irq\">raw_spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#pci_lock\">pci_lock</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#block_ucfg_access\">block_ucfg_access</a>)) <a class=\"id\" href=\"#pci_wait_ucfg\">pci_wait_ucfg</a>(<a class=\"id\" href=\"#dev\">dev</a>);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#read\">read</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devfn\">devfn</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a>, sizeof(<a class=\"id\" href=\"#type\">type</a>), &amp;<a class=\"id\" href=\"#data\">data</a>);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irq\">raw_spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#pci_lock\">pci_lock</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#val\">val</a> = (<a class=\"id\" href=\"#type\">type</a>)<a class=\"id\" href=\"#data\">data</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_USER_WRITE_CONFIG\">PCI_USER_WRITE_CONFIG</a>(<a class=\"id\" href=\"#size\">size</a>,<a class=\"id\" href=\"#type\">type</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"int <a class=\"id\" href=\"#pci_user_write_config_\">pci_user_write_config_</a>##<a class=\"id\" href=\"#size\">size</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#type\">type</a> <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PCI_\">PCI_</a>##<a class=\"id\" href=\"#size\">size</a>##<a class=\"id\" href=\"#_BAD\">_BAD</a>) return <a class=\"id\" href=\"#PCIBIOS_BAD_REGISTER_NUMBER\">PCIBIOS_BAD_REGISTER_NUMBER</a>;<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irq\">raw_spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#pci_lock\">pci_lock</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#block_ucfg_access\">block_ucfg_access</a>)) <a class=\"id\" href=\"#pci_wait_ucfg\">pci_wait_ucfg</a>(<a class=\"id\" href=\"#dev\">dev</a>);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#write\">write</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devfn\">devfn</a>,<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a>, sizeof(<a class=\"id\" href=\"#type\">type</a>), <a class=\"id\" href=\"#val\">val</a>);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irq\">raw_spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#pci_lock\">pci_lock</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"}", 
"", 
"<a class=\"id\" href=\"#PCI_USER_READ_CONFIG\">PCI_USER_READ_CONFIG</a>(<a class=\"id\" href=\"#byte\">byte</a>, <a class=\"id\" href=\"#u8\">u8</a>)", 
"<a class=\"id\" href=\"#PCI_USER_READ_CONFIG\">PCI_USER_READ_CONFIG</a>(<a class=\"id\" href=\"#word\">word</a>, <a class=\"id\" href=\"#u16\">u16</a>)", 
"<a class=\"id\" href=\"#PCI_USER_READ_CONFIG\">PCI_USER_READ_CONFIG</a>(<a class=\"id\" href=\"#dword\">dword</a>, <a class=\"id\" href=\"#u32\">u32</a>)", 
"<a class=\"id\" href=\"#PCI_USER_WRITE_CONFIG\">PCI_USER_WRITE_CONFIG</a>(<a class=\"id\" href=\"#byte\">byte</a>, <a class=\"id\" href=\"#u8\">u8</a>)", 
"<a class=\"id\" href=\"#PCI_USER_WRITE_CONFIG\">PCI_USER_WRITE_CONFIG</a>(<a class=\"id\" href=\"#word\">word</a>, <a class=\"id\" href=\"#u16\">u16</a>)", 
"<a class=\"id\" href=\"#PCI_USER_WRITE_CONFIG\">PCI_USER_WRITE_CONFIG</a>(<a class=\"id\" href=\"#dword\">dword</a>, <a class=\"id\" href=\"#u32\">u32</a>)", 
"", 
"<span class=\"comment\">/* VPD access through PCI 2.2+ VPD capability */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_VPD_PCI22_SIZE\">PCI_VPD_PCI22_SIZE</a> (<a class=\"id\" href=\"#PCI_VPD_ADDR_MASK\">PCI_VPD_ADDR_MASK</a> + 1)", 
"", 
"struct <a class=\"id\" href=\"#pci_vpd_pci22\">pci_vpd_pci22</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_vpd\">pci_vpd</a> <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a> <a class=\"id\" href=\"#lock\">lock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><a class=\"id\" href=\"#flag\">flag</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a><span class=\"ts\"/><a class=\"id\" href=\"#busy\">busy</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><a class=\"id\" href=\"#cap\">cap</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Wait for last operation to complete.</span>", 
"<span class=\"comment\"> * This code has to spin since there is no other notification from the PCI</span>", 
"<span class=\"comment\"> * hardware. Since the VPD is often implemented by serial attachment to an</span>", 
"<span class=\"comment\"> * EEPROM, it may take many milliseconds to complete.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#pci_vpd_pci22_wait\">pci_vpd_pci22_wait</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_vpd_pci22\">pci_vpd_pci22</a> *<a class=\"id\" href=\"#vpd\">vpd</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#vpd\">vpd</a>, struct <a class=\"id\" href=\"#pci_vpd_pci22\">pci_vpd_pci22</a>, <a class=\"id\" href=\"#base\">base</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#HZ\">HZ</a>/20 + 2;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#busy\">busy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pci_user_read_config_word\">pci_user_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#cap\">cap</a> + <a class=\"id\" href=\"#PCI_VPD_ADDR\">PCI_VPD_ADDR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#PCI_VPD_ADDR_F\">PCI_VPD_ADDR_F</a>) == <a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#flag\">flag</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#busy\">busy</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#timeout\">timeout</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"vpd r/w failed.  This is likely a firmware \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"bug on this device.  Contact the card \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"vendor for a firmware update.\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ETIMEDOUT\">ETIMEDOUT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fatal_signal_pending\">fatal_signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINTR\">EINTR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cond_resched\">cond_resched</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udelay\">udelay</a>(10);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#pci_vpd_pci22_read\">pci_vpd_pci22_read</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_vpd_pci22\">pci_vpd_pci22</a> *<a class=\"id\" href=\"#vpd\">vpd</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#vpd\">vpd</a>, struct <a class=\"id\" href=\"#pci_vpd_pci22\">pci_vpd_pci22</a>, <a class=\"id\" href=\"#base\">base</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#arg\">arg</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a> &lt; 0 || <a class=\"id\" href=\"#pos\">pos</a> &gt; <a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#len\">len</a> || <a class=\"id\" href=\"#end\">end</a> &gt; <a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mutex_lock_killable\">mutex_lock_killable</a>(&amp;<a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#lock\">lock</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINTR\">EINTR</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pci_vpd_pci22_wait\">pci_vpd_pci22_wait</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#pos\">pos</a> &lt; <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#skip\">skip</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pci_user_write_config_word\">pci_user_write_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#cap\">cap</a> + <a class=\"id\" href=\"#PCI_VPD_ADDR\">PCI_VPD_ADDR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#pos\">pos</a> &amp; ~3);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#busy\">busy</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#flag\">flag</a> = <a class=\"id\" href=\"#PCI_VPD_ADDR_F\">PCI_VPD_ADDR_F</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pci_vpd_pci22_wait\">pci_vpd_pci22_wait</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pci_user_read_config_dword\">pci_user_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#cap\">cap</a> + <a class=\"id\" href=\"#PCI_VPD_DATA\">PCI_VPD_DATA</a>, &amp;<a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skip\">skip</a> = <a class=\"id\" href=\"#pos\">pos</a> &amp; 3;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0;  <a class=\"id\" href=\"#i\">i</a> &lt; sizeof(<a class=\"id\" href=\"#u32\">u32</a>); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> >= <a class=\"id\" href=\"#skip\">skip</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#buf\">buf</a>++ = <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#pos\">pos</a> == <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> >>= 8;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a> ? <a class=\"id\" href=\"#ret\">ret</a> : <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#pci_vpd_pci22_write\">pci_vpd_pci22_write</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_vpd_pci22\">pci_vpd_pci22</a> *<a class=\"id\" href=\"#vpd\">vpd</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#vpd\">vpd</a>, struct <a class=\"id\" href=\"#pci_vpd_pci22\">pci_vpd_pci22</a>, <a class=\"id\" href=\"#base\">base</a>);", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a> &lt; 0 || (<a class=\"id\" href=\"#pos\">pos</a> &amp; 3) || (<a class=\"id\" href=\"#count\">count</a> &amp; 3) || <a class=\"id\" href=\"#end\">end</a> &gt; <a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mutex_lock_killable\">mutex_lock_killable</a>(&amp;<a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#lock\">lock</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINTR\">EINTR</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pci_vpd_pci22_wait\">pci_vpd_pci22_wait</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#pos\">pos</a> &lt; <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val\">val</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = *<a class=\"id\" href=\"#buf\">buf</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> |= *<a class=\"id\" href=\"#buf\">buf</a>++ << 8;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> |= *<a class=\"id\" href=\"#buf\">buf</a>++ << 16;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> |= *<a class=\"id\" href=\"#buf\">buf</a>++ << 24;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pci_user_write_config_dword\">pci_user_write_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#cap\">cap</a> + <a class=\"id\" href=\"#PCI_VPD_DATA\">PCI_VPD_DATA</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pci_user_write_config_word\">pci_user_write_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#cap\">cap</a> + <a class=\"id\" href=\"#PCI_VPD_ADDR\">PCI_VPD_ADDR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#pos\">pos</a> | <a class=\"id\" href=\"#PCI_VPD_ADDR_F\">PCI_VPD_ADDR_F</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#busy\">busy</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#flag\">flag</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pci_vpd_pci22_wait\">pci_vpd_pci22_wait</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> += sizeof(<a class=\"id\" href=\"#u32\">u32</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a> ? <a class=\"id\" href=\"#ret\">ret</a> : <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pci_vpd_pci22_release\">pci_vpd_pci22_release</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#vpd\">vpd</a>, struct <a class=\"id\" href=\"#pci_vpd_pci22\">pci_vpd_pci22</a>, <a class=\"id\" href=\"#base\">base</a>));", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#pci_vpd_ops\">pci_vpd_ops</a> <a class=\"id\" href=\"#pci_vpd_pci22_ops\">pci_vpd_pci22_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#pci_vpd_pci22_read\">pci_vpd_pci22_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a> = <a class=\"id\" href=\"#pci_vpd_pci22_write\">pci_vpd_pci22_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#pci_vpd_pci22_release\">pci_vpd_pci22_release</a>,", 
"};", 
"", 
"int <a class=\"id\" href=\"#pci_vpd_pci22_init\">pci_vpd_pci22_init</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_vpd_pci22\">pci_vpd_pci22</a> *<a class=\"id\" href=\"#vpd\">vpd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#cap\">cap</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cap\">cap</a> = <a class=\"id\" href=\"#pci_find_capability\">pci_find_capability</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_CAP_ID_VPD\">PCI_CAP_ID_VPD</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cap\">cap</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vpd\">vpd</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#vpd\">vpd</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vpd\">vpd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#PCI_VPD_PCI22_SIZE\">PCI_VPD_PCI22_SIZE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#ops\">ops</a> = &amp;<a class=\"id\" href=\"#pci_vpd_pci22_ops\">pci_vpd_pci22_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#cap\">cap</a> = <a class=\"id\" href=\"#cap\">cap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#busy\">busy</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#vpd\">vpd</a> = &amp;<a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_vpd_truncate - Set available Vital Product Data size</span>", 
"<span class=\"comment\"> * @dev:<span class=\"ts\"/>pci device struct</span>", 
"<span class=\"comment\"> * @size:<span class=\"ts\"/>available memory in bytes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Adjust size of available VPD area.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#pci_vpd_truncate\">pci_vpd_truncate</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#vpd\">vpd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* limited by the access method */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#attr\">attr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#vpd\">vpd</a>-><a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pci_vpd_truncate\">pci_vpd_truncate</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_block_user_cfg_access - Block userspace PCI config reads/writes</span>", 
"<span class=\"comment\"> * @dev:<span class=\"ts\"/>pci device struct</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * When user access is blocked, any reads or writes to config space will</span>", 
"<span class=\"comment\"> * sleep until access is unblocked again.  We don't allow nesting of</span>", 
"<span class=\"comment\"> * block/unblock calls.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#pci_block_user_cfg_access\">pci_block_user_cfg_access</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#was_blocked\">was_blocked</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#pci_lock\">pci_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#was_blocked\">was_blocked</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#block_ucfg_access\">block_ucfg_access</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#block_ucfg_access\">block_ucfg_access</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#pci_lock\">pci_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If we BUG() inside the pci_lock, we're guaranteed to hose</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the machine */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#was_blocked\">was_blocked</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#pci_block_user_cfg_access\">pci_block_user_cfg_access</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_unblock_user_cfg_access - Unblock userspace PCI config reads/writes</span>", 
"<span class=\"comment\"> * @dev:<span class=\"ts\"/>pci device struct</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function allows userspace PCI config accesses to resume.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#pci_unblock_user_cfg_access\">pci_unblock_user_cfg_access</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#pci_lock\">pci_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This indicates a problem in the caller, but we don't need</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to kill them, unlike a double-block above. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#block_ucfg_access\">block_ucfg_access</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#block_ucfg_access\">block_ucfg_access</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_all\">wake_up_all</a>(&amp;<a class=\"id\" href=\"#pci_ucfg_wait\">pci_ucfg_wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#pci_lock\">pci_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#pci_unblock_user_cfg_access\">pci_unblock_user_cfg_access</a>);", 
];
xr_frag_insert('l/e5/cbe6ebb05d534a12030c18557ebc27a09353e8.xr', __xr_tmp);
