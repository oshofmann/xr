var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Implementation of the access vector table type.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Author : Stephen Smalley, &lt;sds@epoch.ncsc.mil&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* Updated: Frank Mayer &lt;mayerf@tresys.com&gt; and Karl MacMillan &lt;kmacmillan@tresys.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Added conditional policy language extensions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2003 Tresys Technology, LLC</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the Free Software Foundation, version 2.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Updated: Yuichi Nakamura &lt;ynakam@hitachisoft.jp&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Tuned number of hash slots for avtab to reduce memory usage</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"avtab.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"policydb.h\"", 
"", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#avtab_node_cachep\">avtab_node_cachep</a>;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#avtab_hash\">avtab_hash</a>(struct <a class=\"id\" href=\"#avtab_key\">avtab_key</a> *<a class=\"id\" href=\"#keyp\">keyp</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>return ((<a class=\"id\" href=\"#keyp\">keyp</a>-><a class=\"id\" href=\"#target_class\">target_class</a> + (<a class=\"id\" href=\"#keyp\">keyp</a>-><a class=\"id\" href=\"#target_type\">target_type</a> << 2) +", 
"<span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#keyp\">keyp</a>-><a class=\"id\" href=\"#source_type\">source_type</a> << 9)) &amp; <a class=\"id\" href=\"#mask\">mask</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a>*", 
"<a class=\"id\" href=\"#avtab_insert_node\">avtab_insert_node</a>(struct <a class=\"id\" href=\"#avtab\">avtab</a> *<a class=\"id\" href=\"#h\">h</a>, int <a class=\"id\" href=\"#hvalue\">hvalue</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a> *<a class=\"id\" href=\"#prev\">prev</a>, struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a> *<a class=\"id\" href=\"#cur\">cur</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#avtab_key\">avtab_key</a> *<a class=\"id\" href=\"#key\">key</a>, struct <a class=\"id\" href=\"#avtab_datum\">avtab_datum</a> *<a class=\"id\" href=\"#datum\">datum</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a> *<a class=\"id\" href=\"#newnode\">newnode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newnode\">newnode</a> = <a class=\"id\" href=\"#kmem_cache_zalloc\">kmem_cache_zalloc</a>(<a class=\"id\" href=\"#avtab_node_cachep\">avtab_node_cachep</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#newnode\">newnode</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newnode\">newnode</a>-><a class=\"id\" href=\"#key\">key</a> = *<a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newnode\">newnode</a>-><a class=\"id\" href=\"#datum\">datum</a> = *<a class=\"id\" href=\"#datum\">datum</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#prev\">prev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newnode\">newnode</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#prev\">prev</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#newnode\">newnode</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newnode\">newnode</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>[<a class=\"id\" href=\"#hvalue\">hvalue</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>[<a class=\"id\" href=\"#hvalue\">hvalue</a>] = <a class=\"id\" href=\"#newnode\">newnode</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#nel\">nel</a>++;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#newnode\">newnode</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#avtab_insert\">avtab_insert</a>(struct <a class=\"id\" href=\"#avtab\">avtab</a> *<a class=\"id\" href=\"#h\">h</a>, struct <a class=\"id\" href=\"#avtab_key\">avtab_key</a> *<a class=\"id\" href=\"#key\">key</a>, struct <a class=\"id\" href=\"#avtab_datum\">avtab_datum</a> *<a class=\"id\" href=\"#datum\">datum</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hvalue\">hvalue</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a> *<a class=\"id\" href=\"#prev\">prev</a>, *<a class=\"id\" href=\"#cur\">cur</a>, *<a class=\"id\" href=\"#newnode\">newnode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#specified\">specified</a> = <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#specified\">specified</a> &amp; ~(<a class=\"id\" href=\"#AVTAB_ENABLED\">AVTAB_ENABLED</a>|<a class=\"id\" href=\"#AVTAB_ENABLED_OLD\">AVTAB_ENABLED_OLD</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#h\">h</a> || !<a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hvalue\">hvalue</a> = <a class=\"id\" href=\"#avtab_hash\">avtab_hash</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>[<a class=\"id\" href=\"#hvalue\">hvalue</a>];", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#cur\">cur</a>;", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#cur\">cur</a>, <a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#source_type\">source_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#target_type\">target_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_type\">target_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#target_class\">target_class</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_class\">target_class</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#specified\">specified</a> &amp; <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#specified\">specified</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#source_type\">source_type</a> &lt; <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#source_type\">source_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#target_type\">target_type</a> &lt; <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_type\">target_type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#source_type\">source_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#target_type\">target_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_type\">target_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#target_class\">target_class</a> &lt; <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_class\">target_class</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newnode\">newnode</a> = <a class=\"id\" href=\"#avtab_insert_node\">avtab_insert_node</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#hvalue\">hvalue</a>, <a class=\"id\" href=\"#prev\">prev</a>, <a class=\"id\" href=\"#cur\">cur</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#datum\">datum</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#newnode\">newnode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Unlike avtab_insert(), this function allow multiple insertions of the same</span>", 
"<span class=\"comment\"> * key/specified mask into the table, as needed by the conditional avtab.</span>", 
"<span class=\"comment\"> * It also returns a pointer to the node inserted.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a> *", 
"<a class=\"id\" href=\"#avtab_insert_nonunique\">avtab_insert_nonunique</a>(struct <a class=\"id\" href=\"#avtab\">avtab</a> *<a class=\"id\" href=\"#h\">h</a>, struct <a class=\"id\" href=\"#avtab_key\">avtab_key</a> *<a class=\"id\" href=\"#key\">key</a>, struct <a class=\"id\" href=\"#avtab_datum\">avtab_datum</a> *<a class=\"id\" href=\"#datum\">datum</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hvalue\">hvalue</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a> *<a class=\"id\" href=\"#prev\">prev</a>, *<a class=\"id\" href=\"#cur\">cur</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#specified\">specified</a> = <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#specified\">specified</a> &amp; ~(<a class=\"id\" href=\"#AVTAB_ENABLED\">AVTAB_ENABLED</a>|<a class=\"id\" href=\"#AVTAB_ENABLED_OLD\">AVTAB_ENABLED_OLD</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#h\">h</a> || !<a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hvalue\">hvalue</a> = <a class=\"id\" href=\"#avtab_hash\">avtab_hash</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>[<a class=\"id\" href=\"#hvalue\">hvalue</a>];", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#cur\">cur</a>;", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#cur\">cur</a>, <a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#source_type\">source_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#target_type\">target_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_type\">target_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#target_class\">target_class</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_class\">target_class</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#specified\">specified</a> &amp; <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#specified\">specified</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#source_type\">source_type</a> &lt; <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#source_type\">source_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#target_type\">target_type</a> &lt; <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_type\">target_type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#source_type\">source_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#target_type\">target_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_type\">target_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#target_class\">target_class</a> &lt; <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_class\">target_class</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#avtab_insert_node\">avtab_insert_node</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#hvalue\">hvalue</a>, <a class=\"id\" href=\"#prev\">prev</a>, <a class=\"id\" href=\"#cur\">cur</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#datum\">datum</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#avtab_datum\">avtab_datum</a> *<a class=\"id\" href=\"#avtab_search\">avtab_search</a>(struct <a class=\"id\" href=\"#avtab\">avtab</a> *<a class=\"id\" href=\"#h\">h</a>, struct <a class=\"id\" href=\"#avtab_key\">avtab_key</a> *<a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hvalue\">hvalue</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a> *<a class=\"id\" href=\"#cur\">cur</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#specified\">specified</a> = <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#specified\">specified</a> &amp; ~(<a class=\"id\" href=\"#AVTAB_ENABLED\">AVTAB_ENABLED</a>|<a class=\"id\" href=\"#AVTAB_ENABLED_OLD\">AVTAB_ENABLED_OLD</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#h\">h</a> || !<a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hvalue\">hvalue</a> = <a class=\"id\" href=\"#avtab_hash\">avtab_hash</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>[<a class=\"id\" href=\"#hvalue\">hvalue</a>]; <a class=\"id\" href=\"#cur\">cur</a>; <a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#source_type\">source_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#target_type\">target_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_type\">target_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#target_class\">target_class</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_class\">target_class</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#specified\">specified</a> &amp; <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#specified\">specified</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#datum\">datum</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#source_type\">source_type</a> &lt; <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#source_type\">source_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#target_type\">target_type</a> &lt; <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_type\">target_type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#source_type\">source_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#target_type\">target_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_type\">target_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#target_class\">target_class</a> &lt; <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_class\">target_class</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/* This search function returns a node pointer, and can be used in</span>", 
"<span class=\"comment\"> * conjunction with avtab_search_next_node()</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a>*", 
"<a class=\"id\" href=\"#avtab_search_node\">avtab_search_node</a>(struct <a class=\"id\" href=\"#avtab\">avtab</a> *<a class=\"id\" href=\"#h\">h</a>, struct <a class=\"id\" href=\"#avtab_key\">avtab_key</a> *<a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hvalue\">hvalue</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a> *<a class=\"id\" href=\"#cur\">cur</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#specified\">specified</a> = <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#specified\">specified</a> &amp; ~(<a class=\"id\" href=\"#AVTAB_ENABLED\">AVTAB_ENABLED</a>|<a class=\"id\" href=\"#AVTAB_ENABLED_OLD\">AVTAB_ENABLED_OLD</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#h\">h</a> || !<a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hvalue\">hvalue</a> = <a class=\"id\" href=\"#avtab_hash\">avtab_hash</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>[<a class=\"id\" href=\"#hvalue\">hvalue</a>]; <a class=\"id\" href=\"#cur\">cur</a>; <a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#source_type\">source_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#target_type\">target_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_type\">target_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#target_class\">target_class</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_class\">target_class</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#specified\">specified</a> &amp; <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#specified\">specified</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#cur\">cur</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#source_type\">source_type</a> &lt; <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#source_type\">source_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#target_type\">target_type</a> &lt; <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_type\">target_type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#source_type\">source_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#target_type\">target_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_type\">target_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#target_class\">target_class</a> &lt; <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_class\">target_class</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a>*", 
"<a class=\"id\" href=\"#avtab_search_node_next\">avtab_search_node_next</a>(struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a> *<a class=\"id\" href=\"#node\">node</a>, int <a class=\"id\" href=\"#specified\">specified</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a> *<a class=\"id\" href=\"#cur\">cur</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#node\">node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#specified\">specified</a> &= ~(<a class=\"id\" href=\"#AVTAB_ENABLED\">AVTAB_ENABLED</a>|<a class=\"id\" href=\"#AVTAB_ENABLED_OLD\">AVTAB_ENABLED_OLD</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#next\">next</a>; <a class=\"id\" href=\"#cur\">cur</a>; <a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_type\">target_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_type\">target_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_class\">target_class</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_class\">target_class</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#specified\">specified</a> &amp; <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#specified\">specified</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#cur\">cur</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a> &lt; <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_type\">target_type</a> &lt; <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_type\">target_type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_type\">target_type</a> == <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_type\">target_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_class\">target_class</a> &lt; <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_class\">target_class</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#avtab_destroy\">avtab_destroy</a>(struct <a class=\"id\" href=\"#avtab\">avtab</a> *<a class=\"id\" href=\"#h\">h</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a> *<a class=\"id\" href=\"#cur\">cur</a>, *<a class=\"id\" href=\"#temp\">temp</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#h\">h</a> || !<a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#nslot\">nslot</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#cur\">cur</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#temp\">temp</a> = <a class=\"id\" href=\"#cur\">cur</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#avtab_node_cachep\">avtab_node_cachep</a>, <a class=\"id\" href=\"#temp\">temp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#nslot\">nslot</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#mask\">mask</a> = 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#avtab_init\">avtab_init</a>(struct <a class=\"id\" href=\"#avtab\">avtab</a> *<a class=\"id\" href=\"#h\">h</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#nel\">nel</a> = 0;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#avtab_alloc\">avtab_alloc</a>(struct <a class=\"id\" href=\"#avtab\">avtab</a> *<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#nrules\">nrules</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#mask\">mask</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#shift\">shift</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#work\">work</a> = <a class=\"id\" href=\"#nrules\">nrules</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#nslot\">nslot</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nrules\">nrules</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#avtab_alloc_out\">avtab_alloc_out</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#work\">work</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#work\">work</a>  = <a class=\"id\" href=\"#work\">work</a> >> 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shift\">shift</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#shift\">shift</a> &gt; 2)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shift\">shift</a> = <a class=\"id\" href=\"#shift\">shift</a> - 2;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nslot\">nslot</a> = 1 << <a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nslot\">nslot</a> &gt; <a class=\"id\" href=\"#MAX_AVTAB_SIZE\">MAX_AVTAB_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nslot\">nslot</a> = <a class=\"id\" href=\"#MAX_AVTAB_SIZE\">MAX_AVTAB_SIZE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#nslot\">nslot</a> - 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a> = <a class=\"id\" href=\"#kcalloc\">kcalloc</a>(<a class=\"id\" href=\"#nslot\">nslot</a>, sizeof(*(<a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>)), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
" <a class=\"id\" href=\"#avtab_alloc_out\">avtab_alloc_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#nel\">nel</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#nslot\">nslot</a> = <a class=\"id\" href=\"#nslot\">nslot</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"SELinux: %d avtab hash slots, %d rules.\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#nslot\">nslot</a>, <a class=\"id\" href=\"#nrules\">nrules</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#avtab_hash_eval\">avtab_hash_eval</a>(struct <a class=\"id\" href=\"#avtab\">avtab</a> *<a class=\"id\" href=\"#h\">h</a>, char *<a class=\"id\" href=\"#tag\">tag</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#chain_len\">chain_len</a>, <a class=\"id\" href=\"#slots_used\">slots_used</a>, <a class=\"id\" href=\"#max_chain_len\">max_chain_len</a>;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#chain2_len_sum\">chain2_len_sum</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a> *<a class=\"id\" href=\"#cur\">cur</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slots_used\">slots_used</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_chain_len\">max_chain_len</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chain2_len_sum\">chain2_len_sum</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#nslot\">nslot</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cur\">cur</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slots_used\">slots_used</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chain_len\">chain_len</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#cur\">cur</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chain_len\">chain_len</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#chain_len\">chain_len</a> &gt; <a class=\"id\" href=\"#max_chain_len\">max_chain_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_chain_len\">max_chain_len</a> = <a class=\"id\" href=\"#chain_len\">chain_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chain2_len_sum\">chain2_len_sum</a> += <a class=\"id\" href=\"#chain_len\">chain_len</a> * <a class=\"id\" href=\"#chain_len\">chain_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"SELinux: %s:  %d entries and %d/%d buckets used, \"", 
"<span class=\"ts\"/>       \"longest chain length %d sum of chain length^2 %llu\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#tag\">tag</a>, <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#nel\">nel</a>, <a class=\"id\" href=\"#slots_used\">slots_used</a>, <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#nslot\">nslot</a>, <a class=\"id\" href=\"#max_chain_len\">max_chain_len</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#chain2_len_sum\">chain2_len_sum</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#uint16_t\">uint16_t</a> <a class=\"id\" href=\"#spec_order\">spec_order</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AVTAB_ALLOWED\">AVTAB_ALLOWED</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AVTAB_AUDITDENY\">AVTAB_AUDITDENY</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AVTAB_AUDITALLOW\">AVTAB_AUDITALLOW</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AVTAB_TRANSITION\">AVTAB_TRANSITION</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AVTAB_CHANGE\">AVTAB_CHANGE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AVTAB_MEMBER\">AVTAB_MEMBER</a>", 
"};", 
"", 
"int <a class=\"id\" href=\"#avtab_read_item\">avtab_read_item</a>(struct <a class=\"id\" href=\"#avtab\">avtab</a> *<a class=\"id\" href=\"#a\">a</a>, void *<a class=\"id\" href=\"#fp\">fp</a>, struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#pol\">pol</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    int (*<a class=\"id\" href=\"#insertf\">insertf</a>)(struct <a class=\"id\" href=\"#avtab\">avtab</a> *<a class=\"id\" href=\"#a\">a</a>, struct <a class=\"id\" href=\"#avtab_key\">avtab_key</a> *<a class=\"id\" href=\"#k\">k</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#avtab_datum\">avtab_datum</a> *<a class=\"id\" href=\"#d\">d</a>, void *<a class=\"id\" href=\"#p\">p</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>    void *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a> <a class=\"id\" href=\"#buf16\">buf16</a>[4];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#enabled\">enabled</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#buf32\">buf32</a>[7];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#items\">items</a>, <a class=\"id\" href=\"#items2\">items2</a>, <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#vers\">vers</a> = <a class=\"id\" href=\"#pol\">pol</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#avtab_key\">avtab_key</a> <a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#avtab_datum\">avtab_datum</a> <a class=\"id\" href=\"#datum\">datum</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#set\">set</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#key\">key</a>, 0, sizeof(struct <a class=\"id\" href=\"#avtab_key\">avtab_key</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#datum\">datum</a>, 0, sizeof(struct <a class=\"id\" href=\"#avtab_datum\">avtab_datum</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vers\">vers</a> &lt; <a class=\"id\" href=\"#POLICYDB_VERSION_AVTAB\">POLICYDB_VERSION_AVTAB</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf32\">buf32</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: avtab: truncated entry\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#items2\">items2</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf32\">buf32</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#items2\">items2</a> &gt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#buf32\">buf32</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: avtab: entry overflow\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf32\">buf32</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>)*<a class=\"id\" href=\"#items2\">items2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: avtab: truncated entry\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#items\">items</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf32\">buf32</a>[<a class=\"id\" href=\"#items\">items</a>++]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a> = (<a class=\"id\" href=\"#u16\">u16</a>)<a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a> != <a class=\"id\" href=\"#val\">val</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: avtab: truncated source type\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf32\">buf32</a>[<a class=\"id\" href=\"#items\">items</a>++]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_type\">target_type</a> = (<a class=\"id\" href=\"#u16\">u16</a>)<a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_type\">target_type</a> != <a class=\"id\" href=\"#val\">val</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: avtab: truncated target type\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf32\">buf32</a>[<a class=\"id\" href=\"#items\">items</a>++]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_class\">target_class</a> = (<a class=\"id\" href=\"#u16\">u16</a>)<a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_class\">target_class</a> != <a class=\"id\" href=\"#val\">val</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: avtab: truncated target class\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf32\">buf32</a>[<a class=\"id\" href=\"#items\">items</a>++]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#enabled\">enabled</a> = (<a class=\"id\" href=\"#val\">val</a> &amp; <a class=\"id\" href=\"#AVTAB_ENABLED_OLD\">AVTAB_ENABLED_OLD</a>) ? <a class=\"id\" href=\"#AVTAB_ENABLED\">AVTAB_ENABLED</a> : 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#val\">val</a> &amp; (<a class=\"id\" href=\"#AVTAB_AV\">AVTAB_AV</a> | <a class=\"id\" href=\"#AVTAB_TYPE\">AVTAB_TYPE</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: avtab: null entry\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#val\">val</a> &amp; <a class=\"id\" href=\"#AVTAB_AV\">AVTAB_AV</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#val\">val</a> &amp; <a class=\"id\" href=\"#AVTAB_TYPE\">AVTAB_TYPE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: avtab: entry has both access vectors and types\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#spec_order\">spec_order</a>); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> &amp; <a class=\"id\" href=\"#spec_order\">spec_order</a>[<a class=\"id\" href=\"#i\">i</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#specified\">specified</a> = <a class=\"id\" href=\"#spec_order\">spec_order</a>[<a class=\"id\" href=\"#i\">i</a>] | <a class=\"id\" href=\"#enabled\">enabled</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#datum\">datum</a>.<a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf32\">buf32</a>[<a class=\"id\" href=\"#items\">items</a>++]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#insertf\">insertf</a>(<a class=\"id\" href=\"#a\">a</a>, &amp;<a class=\"id\" href=\"#key\">key</a>, &amp;<a class=\"id\" href=\"#datum\">datum</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#items\">items</a> != <a class=\"id\" href=\"#items2\">items2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: avtab: entry only had %d items, expected %d\\n\", <a class=\"id\" href=\"#items2\">items2</a>, <a class=\"id\" href=\"#items\">items</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf16\">buf16</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u16\">u16</a>)*4);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: avtab: truncated entry\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#items\">items</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#buf16\">buf16</a>[<a class=\"id\" href=\"#items\">items</a>++]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_type\">target_type</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#buf16\">buf16</a>[<a class=\"id\" href=\"#items\">items</a>++]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_class\">target_class</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#buf16\">buf16</a>[<a class=\"id\" href=\"#items\">items</a>++]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#specified\">specified</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#buf16\">buf16</a>[<a class=\"id\" href=\"#items\">items</a>++]);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#policydb_type_isvalid\">policydb_type_isvalid</a>(<a class=\"id\" href=\"#pol\">pol</a>, <a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#source_type\">source_type</a>) ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#policydb_type_isvalid\">policydb_type_isvalid</a>(<a class=\"id\" href=\"#pol\">pol</a>, <a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_type\">target_type</a>) ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#policydb_class_isvalid\">policydb_class_isvalid</a>(<a class=\"id\" href=\"#pol\">pol</a>, <a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#target_class\">target_class</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: avtab: invalid type or class\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set\">set</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#spec_order\">spec_order</a>); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#specified\">specified</a> &amp; <a class=\"id\" href=\"#spec_order\">spec_order</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set\">set</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#set\">set</a> || <a class=\"id\" href=\"#set\">set</a> &gt; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux:  avtab:  more than one specifier\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf32\">buf32</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: avtab: truncated entry\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#datum\">datum</a>.<a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(*<a class=\"id\" href=\"#buf32\">buf32</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#key\">key</a>.<a class=\"id\" href=\"#specified\">specified</a> &amp; <a class=\"id\" href=\"#AVTAB_TYPE\">AVTAB_TYPE</a>) &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#policydb_type_isvalid\">policydb_type_isvalid</a>(<a class=\"id\" href=\"#pol\">pol</a>, <a class=\"id\" href=\"#datum\">datum</a>.<a class=\"id\" href=\"#data\">data</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: avtab: invalid type\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#insertf\">insertf</a>(<a class=\"id\" href=\"#a\">a</a>, &amp;<a class=\"id\" href=\"#key\">key</a>, &amp;<a class=\"id\" href=\"#datum\">datum</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#avtab_insertf\">avtab_insertf</a>(struct <a class=\"id\" href=\"#avtab\">avtab</a> *<a class=\"id\" href=\"#a\">a</a>, struct <a class=\"id\" href=\"#avtab_key\">avtab_key</a> *<a class=\"id\" href=\"#k\">k</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#avtab_datum\">avtab_datum</a> *<a class=\"id\" href=\"#d\">d</a>, void *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#avtab_insert\">avtab_insert</a>(<a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#d\">d</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#avtab_read\">avtab_read</a>(struct <a class=\"id\" href=\"#avtab\">avtab</a> *<a class=\"id\" href=\"#a\">a</a>, void *<a class=\"id\" href=\"#fp\">fp</a>, struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#pol\">pol</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#buf\">buf</a>[1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#nel\">nel</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: avtab: truncated table\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nel\">nel</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#nel\">nel</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: avtab: table is empty\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#avtab_alloc\">avtab_alloc</a>(<a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#nel\">nel</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nel\">nel</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#avtab_read_item\">avtab_read_item</a>(<a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#fp\">fp</a>, <a class=\"id\" href=\"#pol\">pol</a>, <a class=\"id\" href=\"#avtab_insertf\">avtab_insertf</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: avtab: out of memory\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#rc\">rc</a> == -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: avtab: duplicate entry\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<a class=\"id\" href=\"#bad\">bad</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avtab_destroy\">avtab_destroy</a>(<a class=\"id\" href=\"#a\">a</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#avtab_cache_init\">avtab_cache_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#avtab_node_cachep\">avtab_node_cachep</a> = <a class=\"id\" href=\"#kmem_cache_create\">kmem_cache_create</a>(\"avtab_node\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      sizeof(struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      0, <a class=\"id\" href=\"#SLAB_PANIC\">SLAB_PANIC</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#avtab_cache_destroy\">avtab_cache_destroy</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_destroy\">kmem_cache_destroy</a>(<a class=\"id\" href=\"#avtab_node_cachep\">avtab_node_cachep</a>);", 
"}", 
];
xr_frag_insert('l/e5/cd04dfaa9616d851f9434b4c2dbc5f86506bb8.xr', __xr_tmp);
