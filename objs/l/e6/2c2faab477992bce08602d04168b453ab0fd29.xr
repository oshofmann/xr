var __xr_tmp = [
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Timers are only set for non-local groups */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#group\">group</a> == <a class=\"id\" href=\"#IGMP_ALL_HOSTS\">IGMP_ALL_HOSTS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#mc_list_lock\">mc_list_lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#im\">im</a>=<a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>; <a class=\"id\" href=\"#im\">im</a>!=<a class=\"id\" href=\"#NULL\">NULL</a>; <a class=\"id\" href=\"#im\">im</a>=<a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#multiaddr\">multiaddr</a> == <a class=\"id\" href=\"#group\">group</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#igmp_stop_timer\">igmp_stop_timer</a>(<a class=\"id\" href=\"#im\">im</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#mc_list_lock\">mc_list_lock</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#igmp_heard_query\">igmp_heard_query</a>(struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#igmphdr\">igmphdr</a> <span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ih\">ih</a> = <a class=\"id\" href=\"#igmp_hdr\">igmp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#igmpv3_query\">igmpv3_query</a> *<a class=\"id\" href=\"#ih3\">ih3</a> = <a class=\"id\" href=\"#igmpv3_query_hdr\">igmpv3_query_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_mc_list\">ip_mc_list</a><span class=\"ts\"/>*<a class=\"id\" href=\"#im\">im</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#ih\">ih</a>-><a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_delay\">max_delay</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark\">mark</a> = 0;", 
"", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> == 8) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ih\">ih</a>-><a class=\"id\" href=\"#code\">code</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Alas, old v1 router presents here. */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_delay\">max_delay</a> = <a class=\"id\" href=\"#IGMP_Query_Response_Interval\">IGMP_Query_Response_Interval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#mr_v1_seen\">mr_v1_seen</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IGMP_V1_Router_Present_Timeout\">IGMP_V1_Router_Present_Timeout</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* v2 router present */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_delay\">max_delay</a> = <a class=\"id\" href=\"#ih\">ih</a>-><a class=\"id\" href=\"#code\">code</a>*(<a class=\"id\" href=\"#HZ\">HZ</a>/<a class=\"id\" href=\"#IGMP_TIMER_SCALE\">IGMP_TIMER_SCALE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#mr_v2_seen\">mr_v2_seen</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IGMP_V2_Router_Present_Timeout\">IGMP_V2_Router_Present_Timeout</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* cancel the interface change timer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#mr_ifc_count\">mr_ifc_count</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#del_timer\">del_timer</a>(&amp;<a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#mr_ifc_timer\">mr_ifc_timer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__in_dev_put\">__in_dev_put</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* clear deleted report items */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#igmpv3_clear_delrec\">igmpv3_clear_delrec</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#len\">len</a> &lt; 12) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return;<span class=\"ts\"/><span class=\"comment\">/* ignore bogus packet; freed by caller */</span>", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#IGMP_V1_SEEN\">IGMP_V1_SEEN</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This is a v3 query with v1 queriers present */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_delay\">max_delay</a> = <a class=\"id\" href=\"#IGMP_Query_Response_Interval\">IGMP_Query_Response_Interval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = 0;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#IGMP_V2_SEEN\">IGMP_V2_SEEN</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* this is a v3 query with v2 queriers present;</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Interpretation of the max_delay code is problematic here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * A real v2 host would use ih_code directly, while v3 has a</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * different encoding. We use the v3 encoding as more likely</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to be intended in a v3 query.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_delay\">max_delay</a> = <a class=\"id\" href=\"#IGMPV3_MRC\">IGMPV3_MRC</a>(<a class=\"id\" href=\"#ih3\">ih3</a>-><a class=\"id\" href=\"#code\">code</a>)*(<a class=\"id\" href=\"#HZ\">HZ</a>/<a class=\"id\" href=\"#IGMP_TIMER_SCALE\">IGMP_TIMER_SCALE</a>);", 
"<span class=\"ts\"/>} else { <span class=\"comment\">/* v3 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#igmpv3_query\">igmpv3_query</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ih3\">ih3</a> = <a class=\"id\" href=\"#igmpv3_query_hdr\">igmpv3_query_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ih3\">ih3</a>-><a class=\"id\" href=\"#nsrcs\">nsrcs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#igmpv3_query\">igmpv3_query</a>)", 
];
xr_frag_insert('l/e6/2c2faab477992bce08602d04168b453ab0fd29.xr', __xr_tmp);
