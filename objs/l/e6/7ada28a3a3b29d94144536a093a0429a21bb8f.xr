var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_X86_IA32_H\">_ASM_X86_IA32_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_X86_IA32_H\">_ASM_X86_IA32_H</a>", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IA32_EMULATION\">CONFIG_IA32_EMULATION</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compat\">compat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * 32 bit structures for IA32 support.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#sigcontext32\">sigcontext32</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* signal.h */</span>", 
"struct <a class=\"id\" href=\"#sigaction32\">sigaction32</a> {", 
"<span class=\"ts\"/>unsigned int  <a class=\"id\" href=\"#sa_handler\">sa_handler</a>;<span class=\"ts\"/><span class=\"comment\">/* Really a pointer, but need to deal</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   with 32 bits */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#sa_flags\">sa_flags</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#sa_restorer\">sa_restorer</a>;<span class=\"ts\"/><span class=\"comment\">/* Another 32 bit pointer */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_sigset_t\">compat_sigset_t</a> <a class=\"id\" href=\"#sa_mask\">sa_mask</a>;<span class=\"ts\"/><span class=\"comment\">/* A 32 bit mask */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#old_sigaction32\">old_sigaction32</a> {", 
"<span class=\"ts\"/>unsigned int  <a class=\"id\" href=\"#sa_handler\">sa_handler</a>;<span class=\"ts\"/><span class=\"comment\">/* Really a pointer, but need to deal</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   with 32 bits */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_old_sigset_t\">compat_old_sigset_t</a> <a class=\"id\" href=\"#sa_mask\">sa_mask</a>;<span class=\"ts\"/><span class=\"comment\">/* A 32 bit mask */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#sa_flags\">sa_flags</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#sa_restorer\">sa_restorer</a>;<span class=\"ts\"/><span class=\"comment\">/* Another 32 bit pointer */</span>", 
"};", 
"", 
"typedef struct <a class=\"id\" href=\"#sigaltstack_ia32\">sigaltstack_ia32</a> {", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#ss_sp\">ss_sp</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ss_flags\">ss_flags</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#ss_size\">ss_size</a>;", 
"} <a class=\"id\" href=\"#stack_ia32_t\">stack_ia32_t</a>;", 
"", 
"struct <a class=\"id\" href=\"#ucontext_ia32\">ucontext_ia32</a> {", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/>  <a class=\"id\" href=\"#uc_flags\">uc_flags</a>;", 
"<span class=\"ts\"/>unsigned int <span class=\"ts\"/>  <a class=\"id\" href=\"#uc_link\">uc_link</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stack_ia32_t\">stack_ia32_t</a><span class=\"ts\"/>  <a class=\"id\" href=\"#uc_stack\">uc_stack</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sigcontext_ia32\">sigcontext_ia32</a> <a class=\"id\" href=\"#uc_mcontext\">uc_mcontext</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_sigset_t\">compat_sigset_t</a><span class=\"ts\"/>  <a class=\"id\" href=\"#uc_sigmask\">uc_sigmask</a>;<span class=\"ts\"/><span class=\"comment\">/* mask last for extensibility */</span>", 
"};", 
"", 
"<span class=\"comment\">/* This matches struct stat64 in glibc2.2, hence the absolutely</span>", 
"<span class=\"comment\"> * insane amounts of padding around dev_t's.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#stat64\">stat64</a> {", 
"<span class=\"ts\"/>unsigned long long<span class=\"ts\"/><a class=\"id\" href=\"#st_dev\">st_dev</a>;", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__pad0\">__pad0</a>[4];", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#STAT64_HAS_BROKEN_ST_INO\">STAT64_HAS_BROKEN_ST_INO</a><span class=\"ts\"/>1", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__st_ino\">__st_ino</a>;", 
"", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st_mode\">st_mode</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st_nlink\">st_nlink</a>;", 
"", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st_uid\">st_uid</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st_gid\">st_gid</a>;", 
"", 
"<span class=\"ts\"/>unsigned long long<span class=\"ts\"/><a class=\"id\" href=\"#st_rdev\">st_rdev</a>;", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__pad3\">__pad3</a>[4];", 
"", 
"<span class=\"ts\"/>long long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st_size\">st_size</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st_blksize\">st_blksize</a>;", 
"", 
"<span class=\"ts\"/>long long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st_blocks\">st_blocks</a>;<span class=\"comment\">/* Number 512-byte blocks allocated */</span>", 
"", 
"<span class=\"ts\"/>unsigned <span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st_atime\">st_atime</a>;", 
"<span class=\"ts\"/>unsigned <span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st_atime_nsec\">st_atime_nsec</a>;", 
"<span class=\"ts\"/>unsigned <span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st_mtime\">st_mtime</a>;", 
"<span class=\"ts\"/>unsigned <span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st_mtime_nsec\">st_mtime_nsec</a>;", 
"<span class=\"ts\"/>unsigned <span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st_ctime\">st_ctime</a>;", 
"<span class=\"ts\"/>unsigned <span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st_ctime_nsec\">st_ctime_nsec</a>;", 
"", 
"<span class=\"ts\"/>unsigned long long<span class=\"ts\"/><a class=\"id\" href=\"#st_ino\">st_ino</a>;", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#packed\">packed</a>));", 
"", 
"typedef struct <a class=\"id\" href=\"#compat_siginfo\">compat_siginfo</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#si_signo\">si_signo</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#si_errno\">si_errno</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#si_code\">si_code</a>;", 
"", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#_pad\">_pad</a>[((128 / sizeof(int)) - 3)];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* kill() */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#_pid\">_pid</a>;<span class=\"ts\"/><span class=\"comment\">/* sender's pid */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#_uid\">_uid</a>;<span class=\"ts\"/><span class=\"comment\">/* sender's uid */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#_kill\">_kill</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* POSIX.1b timers */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compat_timer_t\">compat_timer_t</a> <a class=\"id\" href=\"#_tid\">_tid</a>;<span class=\"ts\"/><span class=\"comment\">/* timer id */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#_overrun\">_overrun</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* overrun count */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compat_sigval_t\">compat_sigval_t</a> <a class=\"id\" href=\"#_sigval\">_sigval</a>;<span class=\"ts\"/><span class=\"comment\">/* same as below */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#_sys_private\">_sys_private</a>;<span class=\"ts\"/><span class=\"comment\">/* not to be passed to user */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#_overrun_incr\">_overrun_incr</a>;<span class=\"ts\"/><span class=\"comment\">/* amount to add to overrun */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#_timer\">_timer</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* POSIX.1b signals */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#_pid\">_pid</a>;<span class=\"ts\"/><span class=\"comment\">/* sender's pid */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#_uid\">_uid</a>;<span class=\"ts\"/><span class=\"comment\">/* sender's uid */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compat_sigval_t\">compat_sigval_t</a> <a class=\"id\" href=\"#_sigval\">_sigval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#_rt\">_rt</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* SIGCHLD */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#_pid\">_pid</a>;<span class=\"ts\"/><span class=\"comment\">/* which child */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#_uid\">_uid</a>;<span class=\"ts\"/><span class=\"comment\">/* sender's uid */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#_status\">_status</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* exit code */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compat_clock_t\">compat_clock_t</a> <a class=\"id\" href=\"#_utime\">_utime</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compat_clock_t\">compat_clock_t</a> <a class=\"id\" href=\"#_stime\">_stime</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#_sigchld\">_sigchld</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* SIGILL, SIGFPE, SIGSEGV, SIGBUS */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#_addr\">_addr</a>;<span class=\"ts\"/><span class=\"comment\">/* faulting insn/memory ref. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#_sigfault\">_sigfault</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* SIGPOLL */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#_band\">_band</a>;<span class=\"ts\"/><span class=\"comment\">/* POLL_IN, POLL_OUT, POLL_MSG */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#_fd\">_fd</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#_sigpoll\">_sigpoll</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#_sifields\">_sifields</a>;", 
"} <a class=\"id\" href=\"#compat_siginfo_t\">compat_siginfo_t</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IA32_STACK_TOP\">IA32_STACK_TOP</a> <a class=\"id\" href=\"#IA32_PAGE_OFFSET\">IA32_PAGE_OFFSET</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a>;", 
"extern int <a class=\"id\" href=\"#ia32_setup_arg_pages\">ia32_setup_arg_pages</a>(struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> *<a class=\"id\" href=\"#bprm\">bprm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#stack_top\">stack_top</a>, int <a class=\"id\" href=\"#exec_stack\">exec_stack</a>);", 
"struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a>;", 
"extern void <a class=\"id\" href=\"#ia32_pick_mmap_layout\">ia32_pick_mmap_layout</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* !CONFIG_IA32_SUPPORT */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_X86_IA32_H */</span>", 
];
xr_frag_insert('l/e6/7ada28a3a3b29d94144536a093a0429a21bb8f.xr', __xr_tmp);
