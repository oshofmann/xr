var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#queue_handler_mutex\">queue_handler_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#queue_handler\">queue_handler</a>[<a class=\"id\" href=\"#pf\">pf</a>] == <a class=\"id\" href=\"#qh\">qh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#queue_handler\">queue_handler</a>[<a class=\"id\" href=\"#pf\">pf</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#queue_handler\">queue_handler</a>[<a class=\"id\" href=\"#pf\">pf</a>], <a class=\"id\" href=\"#qh\">qh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#queue_handler_mutex\">queue_handler_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#nf_register_queue_handler\">nf_register_queue_handler</a>);", 
"", 
"<span class=\"comment\">/* The caller must flush their queue before this */</span>", 
"int <a class=\"id\" href=\"#nf_unregister_queue_handler\">nf_unregister_queue_handler</a>(<a class=\"id\" href=\"#u_int8_t\">u_int8_t</a> <a class=\"id\" href=\"#pf\">pf</a>, const struct <a class=\"id\" href=\"#nf_queue_handler\">nf_queue_handler</a> *<a class=\"id\" href=\"#qh\">qh</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pf\">pf</a> >= <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#queue_handler\">queue_handler</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#queue_handler_mutex\">queue_handler_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#queue_handler\">queue_handler</a>[<a class=\"id\" href=\"#pf\">pf</a>] && <a class=\"id\" href=\"#queue_handler\">queue_handler</a>[<a class=\"id\" href=\"#pf\">pf</a>] != <a class=\"id\" href=\"#qh\">qh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#queue_handler_mutex\">queue_handler_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#queue_handler\">queue_handler</a>[<a class=\"id\" href=\"#pf\">pf</a>], <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#queue_handler_mutex\">queue_handler_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#synchronize_rcu\">synchronize_rcu</a>();", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#nf_unregister_queue_handler\">nf_unregister_queue_handler</a>);", 
"", 
"void <a class=\"id\" href=\"#nf_unregister_queue_handlers\">nf_unregister_queue_handlers</a>(const struct <a class=\"id\" href=\"#nf_queue_handler\">nf_queue_handler</a> *<a class=\"id\" href=\"#qh\">qh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u_int8_t\">u_int8_t</a> <a class=\"id\" href=\"#pf\">pf</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#queue_handler_mutex\">queue_handler_mutex</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pf\">pf</a> = 0; <a class=\"id\" href=\"#pf\">pf</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#queue_handler\">queue_handler</a>); <a class=\"id\" href=\"#pf\">pf</a>++)  {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#queue_handler\">queue_handler</a>[<a class=\"id\" href=\"#pf\">pf</a>] == <a class=\"id\" href=\"#qh\">qh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#queue_handler\">queue_handler</a>[<a class=\"id\" href=\"#pf\">pf</a>], <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#queue_handler_mutex\">queue_handler_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#synchronize_rcu\">synchronize_rcu</a>();", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#nf_unregister_queue_handlers\">nf_unregister_queue_handlers</a>);", 
"", 
"static void <a class=\"id\" href=\"#nf_queue_entry_release_refs\">nf_queue_entry_release_refs</a>(struct <a class=\"id\" href=\"#nf_queue_entry\">nf_queue_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Release those devices we held, or Alexey will kill me. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#indev\">indev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#indev\">indev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#outdev\">outdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#outdev\">outdev</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BRIDGE_NETFILTER\">CONFIG_BRIDGE_NETFILTER</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#nf_bridge\">nf_bridge</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#nf_bridge_info\">nf_bridge_info</a> *<a class=\"id\" href=\"#nf_bridge\">nf_bridge</a> = <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#nf_bridge\">nf_bridge</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nf_bridge\">nf_bridge</a>-><a class=\"id\" href=\"#physindev\">physindev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#nf_bridge\">nf_bridge</a>-><a class=\"id\" href=\"#physindev\">physindev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nf_bridge\">nf_bridge</a>-><a class=\"id\" href=\"#physoutdev\">physoutdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#nf_bridge\">nf_bridge</a>-><a class=\"id\" href=\"#physoutdev\">physoutdev</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Drop reference to owner of hook which queued us. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#elem\">elem</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Any packet that leaves via this function must come back</span>", 
"<span class=\"comment\"> * through nf_reinject().</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__nf_queue\">__nf_queue</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#elem\">elem</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u_int8_t\">u_int8_t</a> <a class=\"id\" href=\"#pf\">pf</a>, unsigned int <a class=\"id\" href=\"#hook\">hook</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#indev\">indev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#outdev\">outdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      int (*<a class=\"id\" href=\"#okfn\">okfn</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *),", 
"<span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#queuenum\">queuenum</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nf_queue_entry\">nf_queue_entry</a> *<a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BRIDGE_NETFILTER\">CONFIG_BRIDGE_NETFILTER</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#physindev\">physindev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#physoutdev\">physoutdev</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#nf_afinfo\">nf_afinfo</a> *<a class=\"id\" href=\"#afinfo\">afinfo</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#nf_queue_handler\">nf_queue_handler</a> *<a class=\"id\" href=\"#qh\">qh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* QUEUE == DROP if noone is waiting, to be safe. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qh\">qh</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#queue_handler\">queue_handler</a>[<a class=\"id\" href=\"#pf\">pf</a>]);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#qh\">qh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_unlock\">err_unlock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#afinfo\">afinfo</a> = <a class=\"id\" href=\"#nf_get_afinfo\">nf_get_afinfo</a>(<a class=\"id\" href=\"#pf\">pf</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#afinfo\">afinfo</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_unlock\">err_unlock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#entry\">entry</a>) + <a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#route_key_size\">route_key_size</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#entry\">entry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_unlock\">err_unlock</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#entry\">entry</a> = (struct <a class=\"id\" href=\"#nf_queue_entry\">nf_queue_entry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#skb\">skb</a><span class=\"ts\"/>= <a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#elem\">elem</a><span class=\"ts\"/>= <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#elem\">elem</a>, struct <a class=\"id\" href=\"#nf_hook_ops\">nf_hook_ops</a>, <a class=\"id\" href=\"#list\">list</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pf\">pf</a><span class=\"ts\"/>= <a class=\"id\" href=\"#pf\">pf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#hook\">hook</a><span class=\"ts\"/>= <a class=\"id\" href=\"#hook\">hook</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#indev\">indev</a><span class=\"ts\"/>= <a class=\"id\" href=\"#indev\">indev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#outdev\">outdev</a><span class=\"ts\"/>= <a class=\"id\" href=\"#outdev\">outdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#okfn\">okfn</a><span class=\"ts\"/>= <a class=\"id\" href=\"#okfn\">okfn</a>,", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If it's going away, ignore hook. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#try_module_get\">try_module_get</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#elem\">elem</a>-><a class=\"id\" href=\"#owner\">owner</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Bump dev refs so they don't vanish while packet is out */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#indev\">indev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#indev\">indev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#outdev\">outdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#outdev\">outdev</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BRIDGE_NETFILTER\">CONFIG_BRIDGE_NETFILTER</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#nf_bridge\">nf_bridge</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#physindev\">physindev</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#nf_bridge\">nf_bridge</a>-><a class=\"id\" href=\"#physindev\">physindev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#physindev\">physindev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#physindev\">physindev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#physoutdev\">physoutdev</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#nf_bridge\">nf_bridge</a>-><a class=\"id\" href=\"#physoutdev\">physoutdev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#physoutdev\">physoutdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#physoutdev\">physoutdev</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_force\">skb_dst_force</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#saveroute\">saveroute</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#qh\">qh</a>-><a class=\"id\" href=\"#outfn\">outfn</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#queuenum\">queuenum</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nf_queue_entry_release_refs\">nf_queue_entry_release_refs</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 1;", 
"", 
"<a class=\"id\" href=\"#err_unlock\">err_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"int <a class=\"id\" href=\"#nf_queue\">nf_queue</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/>     struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#elem\">elem</a>,", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#u_int8_t\">u_int8_t</a> <a class=\"id\" href=\"#pf\">pf</a>, unsigned int <a class=\"id\" href=\"#hook\">hook</a>,", 
"<span class=\"ts\"/>     struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#indev\">indev</a>,", 
"<span class=\"ts\"/>     struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#outdev\">outdev</a>,", 
"<span class=\"ts\"/>     int (*<a class=\"id\" href=\"#okfn\">okfn</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *),", 
"<span class=\"ts\"/>     unsigned int <a class=\"id\" href=\"#queuenum\">queuenum</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#segs\">segs</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb_is_gso\">skb_is_gso</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__nf_queue\">__nf_queue</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#elem\">elem</a>, <a class=\"id\" href=\"#pf\">pf</a>, <a class=\"id\" href=\"#hook\">hook</a>, <a class=\"id\" href=\"#indev\">indev</a>, <a class=\"id\" href=\"#outdev\">outdev</a>, <a class=\"id\" href=\"#okfn\">okfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#queuenum\">queuenum</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#pf\">pf</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NFPROTO_IPV4\">NFPROTO_IPV4</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_IP\">ETH_P_IP</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NFPROTO_IPV6\">NFPROTO_IPV6</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_IPV6\">ETH_P_IPV6</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#segs\">segs</a> = <a class=\"id\" href=\"#skb_gso_segment\">skb_gso_segment</a>(<a class=\"id\" href=\"#skb\">skb</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#segs\">segs</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#nskb\">nskb</a> = <a class=\"id\" href=\"#segs\">segs</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#segs\">segs</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#__nf_queue\">__nf_queue</a>(<a class=\"id\" href=\"#segs\">segs</a>, <a class=\"id\" href=\"#elem\">elem</a>, <a class=\"id\" href=\"#pf\">pf</a>, <a class=\"id\" href=\"#hook\">hook</a>, <a class=\"id\" href=\"#indev\">indev</a>, <a class=\"id\" href=\"#outdev\">outdev</a>, <a class=\"id\" href=\"#okfn\">okfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#queuenum\">queuenum</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#segs\">segs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#segs\">segs</a> = <a class=\"id\" href=\"#nskb\">nskb</a>;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#segs\">segs</a>);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"void <a class=\"id\" href=\"#nf_reinject\">nf_reinject</a>(struct <a class=\"id\" href=\"#nf_queue_entry\">nf_queue_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>, unsigned int <a class=\"id\" href=\"#verdict\">verdict</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#elem\">elem</a> = &amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#elem\">elem</a>-><a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#nf_afinfo\">nf_afinfo</a> *<a class=\"id\" href=\"#afinfo\">afinfo</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nf_queue_entry_release_refs\">nf_queue_entry_release_refs</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Continue traversal iff userspace said ok... */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#verdict\">verdict</a> == <a class=\"id\" href=\"#NF_REPEAT\">NF_REPEAT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elem\">elem</a> = <a class=\"id\" href=\"#elem\">elem</a>-><a class=\"id\" href=\"#prev\">prev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#verdict\">verdict</a> = <a class=\"id\" href=\"#NF_ACCEPT\">NF_ACCEPT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#verdict\">verdict</a> == <a class=\"id\" href=\"#NF_ACCEPT\">NF_ACCEPT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#afinfo\">afinfo</a> = <a class=\"id\" href=\"#nf_get_afinfo\">nf_get_afinfo</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#pf\">pf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#afinfo\">afinfo</a> || <a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#reroute\">reroute</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#entry\">entry</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#verdict\">verdict</a> = <a class=\"id\" href=\"#NF_DROP\">NF_DROP</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#verdict\">verdict</a> == <a class=\"id\" href=\"#NF_ACCEPT\">NF_ACCEPT</a>) {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#next_hook\">next_hook</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#verdict\">verdict</a> = <a class=\"id\" href=\"#nf_iterate\">nf_iterate</a>(&amp;<a class=\"id\" href=\"#nf_hooks\">nf_hooks</a>[<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#pf\">pf</a>][<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#hook\">hook</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#hook\">hook</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#indev\">indev</a>, <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#outdev\">outdev</a>, &amp;<a class=\"id\" href=\"#elem\">elem</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#okfn\">okfn</a>, <a class=\"id\" href=\"#INT_MIN\">INT_MIN</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#verdict\">verdict</a> &amp; <a class=\"id\" href=\"#NF_VERDICT_MASK\">NF_VERDICT_MASK</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NF_ACCEPT\">NF_ACCEPT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NF_STOP\">NF_STOP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_bh_disable\">local_bh_disable</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#okfn\">okfn</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_bh_enable\">local_bh_enable</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NF_QUEUE\">NF_QUEUE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#__nf_queue\">__nf_queue</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#elem\">elem</a>, <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#pf\">pf</a>, <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#hook\">hook</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#indev\">indev</a>, <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#outdev\">outdev</a>, <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#okfn\">okfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#verdict\">verdict</a> >> <a class=\"id\" href=\"#NF_VERDICT_BITS\">NF_VERDICT_BITS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#next_hook\">next_hook</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NF_STOLEN\">NF_STOLEN</a>:", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#nf_reinject\">nf_reinject</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"static void *<a class=\"id\" href=\"#seq_start\">seq_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#pos\">pos</a> >= <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#queue_handler\">queue_handler</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pos\">pos</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#seq_next\">seq_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>(*<a class=\"id\" href=\"#pos\">pos</a>)++;", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#pos\">pos</a> >= <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#queue_handler\">queue_handler</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pos\">pos</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#seq_stop\">seq_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"", 
"}", 
"", 
"static int <a class=\"id\" href=\"#seq_show\">seq_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#nf_queue_handler\">nf_queue_handler</a> *<a class=\"id\" href=\"#qh\">qh</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qh\">qh</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#queue_handler\">queue_handler</a>[*<a class=\"id\" href=\"#pos\">pos</a>]);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#qh\">qh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%2lld NONE\\n\", *<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%2lld %s\\n\", *<a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#qh\">qh</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#nfqueue_seq_ops\">nfqueue_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_start\">seq_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_next\">seq_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_stop\">seq_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_show\">seq_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#nfqueue_open\">nfqueue_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#nfqueue_seq_ops\">nfqueue_seq_ops</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#nfqueue_file_ops\">nfqueue_file_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/> = <a class=\"id\" href=\"#nfqueue_open\">nfqueue_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/> = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/> = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#seq_release\">seq_release</a>,", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* PROC_FS */</span>", 
"", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#netfilter_queue_init\">netfilter_queue_init</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#proc_create\">proc_create</a>(\"nf_queue\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#proc_net_netfilter\">proc_net_netfilter</a>, &amp;<a class=\"id\" href=\"#nfqueue_file_ops\">nfqueue_file_ops</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
];
xr_frag_insert('l/e6/9b870c33efc0c76ab13395d7a3e71fab3173b2.xr', __xr_tmp);
