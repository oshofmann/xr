var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * SELinux services exported to the rest of the kernel.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Author: James Morris &lt;jmorris@redhat.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2005 Red Hat, Inc., James Morris &lt;jmorris@redhat.com&gt;</span>", 
"<span class=\"comment\"> * Copyright (C) 2006 Trusted Computer Solutions, Inc. &lt;dgoeddel@trustedcs.com&gt;</span>", 
"<span class=\"comment\"> * Copyright (C) 2006 IBM Corporation, Timothy R. Chavez &lt;tinytim@us.ibm.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License version 2,</span>", 
"<span class=\"comment\"> * as published by the Free Software Foundation.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_SELINUX_H\">_LINUX_SELINUX_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_SELINUX_H\">_LINUX_SELINUX_H</a>", 
"", 
"struct <a class=\"id\" href=\"#selinux_audit_rule\">selinux_audit_rule</a>;", 
"struct <a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"struct <a class=\"id\" href=\"#kern_ipc_perm\">kern_ipc_perm</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SECURITY_SELINUX\">CONFIG_SECURITY_SELINUX</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *     selinux_string_to_sid - map a security context string to a security ID</span>", 
"<span class=\"comment\"> *     @str: the security context string to be mapped</span>", 
"<span class=\"comment\"> *     @sid: ID value returned via this.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *     Returns 0 if successful, with the SID stored in sid.  A value</span>", 
"<span class=\"comment\"> *     of zero for sid indicates no SID could be determined (but no error</span>", 
"<span class=\"comment\"> *     occurred).</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#selinux_string_to_sid\">selinux_string_to_sid</a>(char *<a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#sid\">sid</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *     selinux_secmark_relabel_packet_permission - secmark permission check</span>", 
"<span class=\"comment\"> *     @sid: SECMARK ID value to be applied to network packet</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *     Returns 0 if the current task is allowed to set the SECMARK label of</span>", 
"<span class=\"comment\"> *     packets with the supplied security ID.  Note that it is implicit that</span>", 
"<span class=\"comment\"> *     the packet is always being relabeled from the default unlabeled value,</span>", 
"<span class=\"comment\"> *     and that the access control decision is made in the AVC.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#selinux_secmark_relabel_packet_permission\">selinux_secmark_relabel_packet_permission</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *     selinux_secmark_refcount_inc - increments the secmark use counter</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *     SELinux keeps track of the current SECMARK targets in use so it knows</span>", 
"<span class=\"comment\"> *     when to apply SECMARK label access checks to network packets.  This</span>", 
"<span class=\"comment\"> *     function incements this reference count to indicate that a new SECMARK</span>", 
"<span class=\"comment\"> *     target has been configured.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#selinux_secmark_refcount_inc\">selinux_secmark_refcount_inc</a>(void);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *     selinux_secmark_refcount_dec - decrements the secmark use counter</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *     SELinux keeps track of the current SECMARK targets in use so it knows</span>", 
"<span class=\"comment\"> *     when to apply SECMARK label access checks to network packets.  This</span>", 
"<span class=\"comment\"> *     function decements this reference count to indicate that one of the</span>", 
"<span class=\"comment\"> *     existing SECMARK targets has been removed/flushed.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#selinux_secmark_refcount_dec\">selinux_secmark_refcount_dec</a>(void);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * selinux_is_enabled - is SELinux enabled?</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#selinux_is_enabled\">selinux_is_enabled</a>(void);", 
"#else", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#selinux_string_to_sid\">selinux_string_to_sid</a>(const char *<a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#sid\">sid</a>)", 
"{", 
"       *<a class=\"id\" href=\"#sid\">sid</a> = 0;", 
"       return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#selinux_secmark_relabel_packet_permission\">selinux_secmark_relabel_packet_permission</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#selinux_secmark_refcount_inc\">selinux_secmark_refcount_inc</a>(void)", 
"{", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#selinux_secmark_refcount_dec\">selinux_secmark_refcount_dec</a>(void)", 
"{", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#selinux_is_enabled\">selinux_is_enabled</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* CONFIG_SECURITY_SELINUX */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_SELINUX_H */</span>", 
];
xr_frag_insert('l/e6/b82b50e18e75874b565ee45e5b1ad3f96a4d81.xr', __xr_tmp);
