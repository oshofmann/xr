var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Xen SMP support</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file implements the Xen versions of smp_ops.  SMP under Xen is</span>", 
"<span class=\"comment\"> * very straightforward.  Bringing a CPU up is simply a matter of</span>", 
"<span class=\"comment\"> * loading its initial context and setting it running.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * IPIs are handled through the Xen event mechanism.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Because virtual CPUs can be scheduled onto any real CPU, there's no</span>", 
"<span class=\"comment\"> * useful topology information for the kernel to make use of.  As a</span>", 
"<span class=\"comment\"> * result, all CPUs are treated as if they're single-core and</span>", 
"<span class=\"comment\"> * single-threaded.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#err\">err</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#paravirt\">paravirt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#desc\">desc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pgtable\">pgtable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#interface\">interface</a>/<a class=\"id\" href=\"#xen\">xen</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#interface\">interface</a>/<a class=\"id\" href=\"#vcpu\">vcpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#interface\">interface</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#hypercall\">hypercall</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#page\">page</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#events\">events</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"xen-ops.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"mmu.h\"", 
"", 
"<a class=\"id\" href=\"#cpumask_var_t\">cpumask_var_t</a> <a class=\"id\" href=\"#xen_cpu_initialized_map\">xen_cpu_initialized_map</a>;", 
"", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(int, <a class=\"id\" href=\"#xen_resched_irq\">xen_resched_irq</a>);", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(int, <a class=\"id\" href=\"#xen_callfunc_irq\">xen_callfunc_irq</a>);", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(int, <a class=\"id\" href=\"#xen_callfuncsingle_irq\">xen_callfuncsingle_irq</a>);", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(int, <a class=\"id\" href=\"#xen_debug_irq\">xen_debug_irq</a>) = -1;", 
"", 
"static <a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#xen_call_function_interrupt\">xen_call_function_interrupt</a>(int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#dev_id\">dev_id</a>);", 
"static <a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#xen_call_function_single_interrupt\">xen_call_function_single_interrupt</a>(int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#dev_id\">dev_id</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Reschedule call back. Nothing to do,</span>", 
"<span class=\"comment\"> * all the work is done automatically when</span>", 
"<span class=\"comment\"> * we return from the interrupt.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#xen_reschedule_interrupt\">xen_reschedule_interrupt</a>(int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#dev_id\">dev_id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inc_irq_stat\">inc_irq_stat</a>(<a class=\"id\" href=\"#irq_resched_count\">irq_resched_count</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#IRQ_HANDLED\">IRQ_HANDLED</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> void <a class=\"id\" href=\"#cpu_bringup\">cpu_bringup</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_init\">cpu_init</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#touch_softlockup_watchdog\">touch_softlockup_watchdog</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_enable_sysenter\">xen_enable_sysenter</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_enable_syscall\">xen_enable_syscall</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_store_cpu_info\">smp_store_cpu_info</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_data\">cpu_data</a>(<a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#x86_max_cores\">x86_max_cores</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_cpu_sibling_map\">set_cpu_sibling_map</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_setup_cpu_clockevents\">xen_setup_cpu_clockevents</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_cpu_online\">set_cpu_online</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#true\">true</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_write\">percpu_write</a>(<a class=\"id\" href=\"#cpu_state\">cpu_state</a>, <a class=\"id\" href=\"#CPU_ONLINE\">CPU_ONLINE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wmb\">wmb</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We can take interrupts now: we're officially \"up\". */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_enable\">local_irq_enable</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wmb\">wmb</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* make sure everything is out */</span>", 
"}", 
"", 
"static <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> void <a class=\"id\" href=\"#cpu_bringup_and_idle\">cpu_bringup_and_idle</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_bringup\">cpu_bringup</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_idle\">cpu_idle</a>();", 
"}", 
"", 
"static int <a class=\"id\" href=\"#xen_smp_intr_init\">xen_smp_intr_init</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#resched_name\">resched_name</a>, *<a class=\"id\" href=\"#callfunc_name\">callfunc_name</a>, *<a class=\"id\" href=\"#debug_name\">debug_name</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#resched_name\">resched_name</a> = <a class=\"id\" href=\"#kasprintf\">kasprintf</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, \"resched%d\", <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#bind_ipi_to_irqhandler\">bind_ipi_to_irqhandler</a>(<a class=\"id\" href=\"#XEN_RESCHEDULE_VECTOR\">XEN_RESCHEDULE_VECTOR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cpu\">cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#xen_reschedule_interrupt\">xen_reschedule_interrupt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#IRQF_DISABLED\">IRQF_DISABLED</a>|<a class=\"id\" href=\"#IRQF_PERCPU\">IRQF_PERCPU</a>|<a class=\"id\" href=\"#IRQF_NOBALANCING\">IRQF_NOBALANCING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#resched_name\">resched_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#xen_resched_irq\">xen_resched_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#callfunc_name\">callfunc_name</a> = <a class=\"id\" href=\"#kasprintf\">kasprintf</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, \"callfunc%d\", <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#bind_ipi_to_irqhandler\">bind_ipi_to_irqhandler</a>(<a class=\"id\" href=\"#XEN_CALL_FUNCTION_VECTOR\">XEN_CALL_FUNCTION_VECTOR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cpu\">cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#xen_call_function_interrupt\">xen_call_function_interrupt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#IRQF_DISABLED\">IRQF_DISABLED</a>|<a class=\"id\" href=\"#IRQF_PERCPU\">IRQF_PERCPU</a>|<a class=\"id\" href=\"#IRQF_NOBALANCING\">IRQF_NOBALANCING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#callfunc_name\">callfunc_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#xen_callfunc_irq\">xen_callfunc_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debug_name\">debug_name</a> = <a class=\"id\" href=\"#kasprintf\">kasprintf</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, \"debug%d\", <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#bind_virq_to_irqhandler\">bind_virq_to_irqhandler</a>(<a class=\"id\" href=\"#VIRQ_DEBUG\">VIRQ_DEBUG</a>, <a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#xen_debug_interrupt\">xen_debug_interrupt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#IRQF_DISABLED\">IRQF_DISABLED</a> | <a class=\"id\" href=\"#IRQF_PERCPU\">IRQF_PERCPU</a> | <a class=\"id\" href=\"#IRQF_NOBALANCING\">IRQF_NOBALANCING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#debug_name\">debug_name</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#xen_debug_irq\">xen_debug_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#callfunc_name\">callfunc_name</a> = <a class=\"id\" href=\"#kasprintf\">kasprintf</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, \"callfuncsingle%d\", <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#bind_ipi_to_irqhandler\">bind_ipi_to_irqhandler</a>(<a class=\"id\" href=\"#XEN_CALL_FUNCTION_SINGLE_VECTOR\">XEN_CALL_FUNCTION_SINGLE_VECTOR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cpu\">cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#xen_call_function_single_interrupt\">xen_call_function_single_interrupt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#IRQF_DISABLED\">IRQF_DISABLED</a>|<a class=\"id\" href=\"#IRQF_PERCPU\">IRQF_PERCPU</a>|<a class=\"id\" href=\"#IRQF_NOBALANCING\">IRQF_NOBALANCING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#callfunc_name\">callfunc_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#xen_callfuncsingle_irq\">xen_callfuncsingle_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
" <a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#xen_resched_irq\">xen_resched_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unbind_from_irqhandler\">unbind_from_irqhandler</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#xen_resched_irq\">xen_resched_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>), <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#xen_callfunc_irq\">xen_callfunc_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unbind_from_irqhandler\">unbind_from_irqhandler</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#xen_callfunc_irq\">xen_callfunc_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>), <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#xen_debug_irq\">xen_debug_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unbind_from_irqhandler\">unbind_from_irqhandler</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#xen_debug_irq\">xen_debug_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>), <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#xen_callfuncsingle_irq\">xen_callfuncsingle_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unbind_from_irqhandler\">unbind_from_irqhandler</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#xen_callfuncsingle_irq\">xen_callfuncsingle_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#xen_fill_possible_map\">xen_fill_possible_map</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_cpu_ids\">nr_cpu_ids</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#HYPERVISOR_vcpu_op\">HYPERVISOR_vcpu_op</a>(<a class=\"id\" href=\"#VCPUOP_is_up\">VCPUOP_is_up</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_processors\">num_processors</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_cpu_possible\">set_cpu_possible</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#true\">true</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#xen_smp_prepare_boot_cpu\">xen_smp_prepare_boot_cpu</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>() != 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#native_smp_prepare_boot_cpu\">native_smp_prepare_boot_cpu</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We've switched to the \"real\" per-cpu gdt, so make sure the</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   old memory can be recycled */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#make_lowmem_page_readwrite\">make_lowmem_page_readwrite</a>(<a class=\"id\" href=\"#xen_initial_gdt\">xen_initial_gdt</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_setup_vcpu_info_placement\">xen_setup_vcpu_info_placement</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#xen_smp_prepare_cpus\">xen_smp_prepare_cpus</a>(unsigned int <a class=\"id\" href=\"#max_cpus\">max_cpus</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_init_lock_cpu\">xen_init_lock_cpu</a>(0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_store_cpu_info\">smp_store_cpu_info</a>(0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_data\">cpu_data</a>(0).<a class=\"id\" href=\"#x86_max_cores\">x86_max_cores</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_cpu_sibling_map\">set_cpu_sibling_map</a>(0);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xen_smp_intr_init\">xen_smp_intr_init</a>(0))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#alloc_cpumask_var\">alloc_cpumask_var</a>(&amp;<a class=\"id\" href=\"#xen_cpu_initialized_map\">xen_cpu_initialized_map</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"could not allocate xen_cpu_initialized_map\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_copy\">cpumask_copy</a>(<a class=\"id\" href=\"#xen_cpu_initialized_map\">xen_cpu_initialized_map</a>, <a class=\"id\" href=\"#cpumask_of\">cpumask_of</a>(0));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Restrict the possible_map according to max_cpus. */</span>", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#num_possible_cpus\">num_possible_cpus</a>() &gt; 1) && (<a class=\"id\" href=\"#num_possible_cpus\">num_possible_cpus</a>() &gt; <a class=\"id\" href=\"#max_cpus\">max_cpus</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#nr_cpu_ids\">nr_cpu_ids</a> - 1; !<a class=\"id\" href=\"#cpu_possible\">cpu_possible</a>(<a class=\"id\" href=\"#cpu\">cpu</a>); <a class=\"id\" href=\"#cpu\">cpu</a>--)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_cpu_possible\">set_cpu_possible</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a> (<a class=\"id\" href=\"#cpu\">cpu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#idle\">idle</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu\">cpu</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idle\">idle</a> = <a class=\"id\" href=\"#fork_idle\">fork_idle</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#idle\">idle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"failed fork for CPU %d\", <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_cpu_present\">set_cpu_present</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#true\">true</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> int", 
"<a class=\"id\" href=\"#cpu_initialize_context\">cpu_initialize_context</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#idle\">idle</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vcpu_guest_context\">vcpu_guest_context</a> *<a class=\"id\" href=\"#ctxt\">ctxt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#desc_struct\">desc_struct</a> *<a class=\"id\" href=\"#gdt\">gdt</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#gdt_mfn\">gdt_mfn</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpumask_test_and_set_cpu\">cpumask_test_and_set_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#xen_cpu_initialized_map\">xen_cpu_initialized_map</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#ctxt\">ctxt</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ctxt\">ctxt</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gdt\">gdt</a> = <a class=\"id\" href=\"#get_cpu_gdt_table\">get_cpu_gdt_table</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#VGCF_IN_KERNEL\">VGCF_IN_KERNEL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#user_regs\">user_regs</a>.<a class=\"id\" href=\"#ds\">ds</a> = <a class=\"id\" href=\"#__USER_DS\">__USER_DS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#user_regs\">user_regs</a>.<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#__USER_DS\">__USER_DS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#user_regs\">user_regs</a>.<a class=\"id\" href=\"#ss\">ss</a> = <a class=\"id\" href=\"#__KERNEL_DS\">__KERNEL_DS</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#user_regs\">user_regs</a>.<a class=\"id\" href=\"#fs\">fs</a> = <a class=\"id\" href=\"#__KERNEL_PERCPU\">__KERNEL_PERCPU</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#user_regs\">user_regs</a>.<a class=\"id\" href=\"#gs\">gs</a> = <a class=\"id\" href=\"#__KERNEL_STACK_CANARY\">__KERNEL_STACK_CANARY</a>;", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#gs_base_kernel\">gs_base_kernel</a> = <a class=\"id\" href=\"#per_cpu_offset\">per_cpu_offset</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#user_regs\">user_regs</a>.<a class=\"id\" href=\"#eip\">eip</a> = (unsigned long)<a class=\"id\" href=\"#cpu_bringup_and_idle\">cpu_bringup_and_idle</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#user_regs\">user_regs</a>.<a class=\"id\" href=\"#eflags\">eflags</a> = 0x1000; <span class=\"comment\">/* IOPL_RING1 */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#fpu_ctxt\">fpu_ctxt</a>, 0, sizeof(<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#fpu_ctxt\">fpu_ctxt</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_copy_trap_info\">xen_copy_trap_info</a>(<a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#trap_ctxt\">trap_ctxt</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#ldt_ents\">ldt_ents</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>((unsigned long)<a class=\"id\" href=\"#gdt\">gdt</a> &amp; ~<a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gdt_mfn\">gdt_mfn</a> = <a class=\"id\" href=\"#arbitrary_virt_to_mfn\">arbitrary_virt_to_mfn</a>(<a class=\"id\" href=\"#gdt\">gdt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#make_lowmem_page_readonly\">make_lowmem_page_readonly</a>(<a class=\"id\" href=\"#gdt\">gdt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#make_lowmem_page_readonly\">make_lowmem_page_readonly</a>(<a class=\"id\" href=\"#mfn_to_virt\">mfn_to_virt</a>(<a class=\"id\" href=\"#gdt_mfn\">gdt_mfn</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#gdt_frames\">gdt_frames</a>[0] = <a class=\"id\" href=\"#gdt_mfn\">gdt_mfn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#gdt_ents\">gdt_ents</a>      = <a class=\"id\" href=\"#GDT_ENTRIES\">GDT_ENTRIES</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#user_regs\">user_regs</a>.<a class=\"id\" href=\"#cs\">cs</a> = <a class=\"id\" href=\"#__KERNEL_CS\">__KERNEL_CS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#user_regs\">user_regs</a>.<a class=\"id\" href=\"#esp\">esp</a> = <a class=\"id\" href=\"#idle\">idle</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#sp0\">sp0</a> - sizeof(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#kernel_ss\">kernel_ss</a> = <a class=\"id\" href=\"#__KERNEL_DS\">__KERNEL_DS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#kernel_sp\">kernel_sp</a> = <a class=\"id\" href=\"#idle\">idle</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#sp0\">sp0</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#event_callback_cs\">event_callback_cs</a>     = <a class=\"id\" href=\"#__KERNEL_CS\">__KERNEL_CS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#failsafe_callback_cs\">failsafe_callback_cs</a>  = <a class=\"id\" href=\"#__KERNEL_CS\">__KERNEL_CS</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#event_callback_eip\">event_callback_eip</a>    = (unsigned long)<a class=\"id\" href=\"#xen_hypervisor_callback\">xen_hypervisor_callback</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#failsafe_callback_eip\">failsafe_callback_eip</a> = (unsigned long)<a class=\"id\" href=\"#xen_failsafe_callback\">xen_failsafe_callback</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#xen_cr3\">xen_cr3</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#swapper_pg_dir\">swapper_pg_dir</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctxt\">ctxt</a>-><a class=\"id\" href=\"#ctrlreg\">ctrlreg</a>[3] = <a class=\"id\" href=\"#xen_pfn_to_cr3\">xen_pfn_to_cr3</a>(<a class=\"id\" href=\"#virt_to_mfn\">virt_to_mfn</a>(<a class=\"id\" href=\"#swapper_pg_dir\">swapper_pg_dir</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#HYPERVISOR_vcpu_op\">HYPERVISOR_vcpu_op</a>(<a class=\"id\" href=\"#VCPUOP_initialise\">VCPUOP_initialise</a>, <a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#ctxt\">ctxt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ctxt\">ctxt</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#xen_cpu_up\">xen_cpu_up</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#idle\">idle</a> = <a class=\"id\" href=\"#idle_task\">idle_task</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#current_task\">current_task</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#idle\">idle</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_ctx_init\">irq_ctx_init</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_tsk_thread_flag\">clear_tsk_thread_flag</a>(<a class=\"id\" href=\"#idle\">idle</a>, <a class=\"id\" href=\"#TIF_FORK\">TIF_FORK</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#kernel_stack\">kernel_stack</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) =", 
"<span class=\"ts\"/><span class=\"ts\"/>(unsigned long)<a class=\"id\" href=\"#task_stack_page\">task_stack_page</a>(<a class=\"id\" href=\"#idle\">idle</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#KERNEL_STACK_OFFSET\">KERNEL_STACK_OFFSET</a> + <a class=\"id\" href=\"#THREAD_SIZE\">THREAD_SIZE</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_setup_runstate_info\">xen_setup_runstate_info</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_setup_timer\">xen_setup_timer</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_init_lock_cpu\">xen_init_lock_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpu_state\">cpu_state</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#CPU_UP_PREPARE\">CPU_UP_PREPARE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* make sure interrupts start blocked */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#xen_vcpu\">xen_vcpu</a>, <a class=\"id\" href=\"#cpu\">cpu</a>)-><a class=\"id\" href=\"#evtchn_upcall_mask\">evtchn_upcall_mask</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#cpu_initialize_context\">cpu_initialize_context</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#idle\">idle</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num_online_cpus\">num_online_cpus</a>() == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alternatives_smp_switch\">alternatives_smp_switch</a>(1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#xen_smp_intr_init\">xen_smp_intr_init</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#HYPERVISOR_vcpu_op\">HYPERVISOR_vcpu_op</a>(<a class=\"id\" href=\"#VCPUOP_up\">VCPUOP_up</a>, <a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#rc\">rc</a>);", 
"", 
"<span class=\"ts\"/>while(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpu_state\">cpu_state</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) != <a class=\"id\" href=\"#CPU_ONLINE\">CPU_ONLINE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#HYPERVISOR_sched_op\">HYPERVISOR_sched_op</a>(<a class=\"id\" href=\"#SCHEDOP_yield\">SCHEDOP_yield</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#barrier\">barrier</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_smp_cpus_done\">xen_smp_cpus_done</a>(unsigned int <a class=\"id\" href=\"#max_cpus\">max_cpus</a>)", 
"{", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>", 
"static int <a class=\"id\" href=\"#xen_cpu_disable\">xen_cpu_disable</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu\">cpu</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_disable_common\">cpu_disable_common</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#load_cr3\">load_cr3</a>(<a class=\"id\" href=\"#swapper_pg_dir\">swapper_pg_dir</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_cpu_die\">xen_cpu_die</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#HYPERVISOR_vcpu_op\">HYPERVISOR_vcpu_op</a>(<a class=\"id\" href=\"#VCPUOP_is_up\">VCPUOP_is_up</a>, <a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#TASK_UNINTERRUPTIBLE\">TASK_UNINTERRUPTIBLE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_timeout\">schedule_timeout</a>(<a class=\"id\" href=\"#HZ\">HZ</a>/10);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unbind_from_irqhandler\">unbind_from_irqhandler</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#xen_resched_irq\">xen_resched_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>), <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unbind_from_irqhandler\">unbind_from_irqhandler</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#xen_callfunc_irq\">xen_callfunc_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>), <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unbind_from_irqhandler\">unbind_from_irqhandler</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#xen_debug_irq\">xen_debug_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>), <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unbind_from_irqhandler\">unbind_from_irqhandler</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#xen_callfuncsingle_irq\">xen_callfuncsingle_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>), <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_uninit_lock_cpu\">xen_uninit_lock_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_teardown_timer\">xen_teardown_timer</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num_online_cpus\">num_online_cpus</a>() == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alternatives_smp_switch\">alternatives_smp_switch</a>(0);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#xen_play_dead\">xen_play_dead</a>(void) <span class=\"comment\">/* used only with HOTPLUG_CPU */</span>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#play_dead_common\">play_dead_common</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HYPERVISOR_vcpu_op\">HYPERVISOR_vcpu_op</a>(<a class=\"id\" href=\"#VCPUOP_down\">VCPUOP_down</a>, <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>(), <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_bringup\">cpu_bringup</a>();", 
"}", 
"", 
"#else <span class=\"comment\">/* !CONFIG_HOTPLUG_CPU */</span>", 
"static int <a class=\"id\" href=\"#xen_cpu_disable\">xen_cpu_disable</a>(void)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_cpu_die\">xen_cpu_die</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_play_dead\">xen_play_dead</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"static void <a class=\"id\" href=\"#stop_self\">stop_self</a>(void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* make sure we're not pinning something down */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#load_cr3\">load_cr3</a>(<a class=\"id\" href=\"#swapper_pg_dir\">swapper_pg_dir</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* should set up a minimal gdt */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_cpu_online\">set_cpu_online</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HYPERVISOR_vcpu_op\">HYPERVISOR_vcpu_op</a>(<a class=\"id\" href=\"#VCPUOP_down\">VCPUOP_down</a>, <a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_smp_send_stop\">xen_smp_send_stop</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_call_function\">smp_call_function</a>(<a class=\"id\" href=\"#stop_self\">stop_self</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_smp_send_reschedule\">xen_smp_send_reschedule</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_send_IPI_one\">xen_send_IPI_one</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#XEN_RESCHEDULE_VECTOR\">XEN_RESCHEDULE_VECTOR</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_send_IPI_mask\">xen_send_IPI_mask</a>(const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#mask\">mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      enum <a class=\"id\" href=\"#ipi_vector\">ipi_vector</a> <a class=\"id\" href=\"#vector\">vector</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu_and\">for_each_cpu_and</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#cpu_online_mask\">cpu_online_mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xen_send_IPI_one\">xen_send_IPI_one</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#vector\">vector</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_smp_send_call_function_ipi\">xen_smp_send_call_function_ipi</a>(const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_send_IPI_mask\">xen_send_IPI_mask</a>(<a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#XEN_CALL_FUNCTION_VECTOR\">XEN_CALL_FUNCTION_VECTOR</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Make sure other vcpus get a chance to run if they need to. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#mask\">mask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#xen_vcpu_stolen\">xen_vcpu_stolen</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#HYPERVISOR_sched_op\">HYPERVISOR_sched_op</a>(<a class=\"id\" href=\"#SCHEDOP_yield\">SCHEDOP_yield</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_smp_send_call_function_single_ipi\">xen_smp_send_call_function_single_ipi</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_send_IPI_mask\">xen_send_IPI_mask</a>(<a class=\"id\" href=\"#cpumask_of\">cpumask_of</a>(<a class=\"id\" href=\"#cpu\">cpu</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#XEN_CALL_FUNCTION_SINGLE_VECTOR\">XEN_CALL_FUNCTION_SINGLE_VECTOR</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#xen_call_function_interrupt\">xen_call_function_interrupt</a>(int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#dev_id\">dev_id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_enter\">irq_enter</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#generic_smp_call_function_interrupt\">generic_smp_call_function_interrupt</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inc_irq_stat\">inc_irq_stat</a>(<a class=\"id\" href=\"#irq_call_count\">irq_call_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_exit\">irq_exit</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#IRQ_HANDLED\">IRQ_HANDLED</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#xen_call_function_single_interrupt\">xen_call_function_single_interrupt</a>(int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#dev_id\">dev_id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_enter\">irq_enter</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#generic_smp_call_function_single_interrupt\">generic_smp_call_function_single_interrupt</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inc_irq_stat\">inc_irq_stat</a>(<a class=\"id\" href=\"#irq_call_count\">irq_call_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_exit\">irq_exit</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#IRQ_HANDLED\">IRQ_HANDLED</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#smp_ops\">smp_ops</a> <a class=\"id\" href=\"#xen_smp_ops\">xen_smp_ops</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#smp_prepare_boot_cpu\">smp_prepare_boot_cpu</a> = <a class=\"id\" href=\"#xen_smp_prepare_boot_cpu\">xen_smp_prepare_boot_cpu</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#smp_prepare_cpus\">smp_prepare_cpus</a> = <a class=\"id\" href=\"#xen_smp_prepare_cpus\">xen_smp_prepare_cpus</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#smp_cpus_done\">smp_cpus_done</a> = <a class=\"id\" href=\"#xen_smp_cpus_done\">xen_smp_cpus_done</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#cpu_up\">cpu_up</a> = <a class=\"id\" href=\"#xen_cpu_up\">xen_cpu_up</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#cpu_die\">cpu_die</a> = <a class=\"id\" href=\"#xen_cpu_die\">xen_cpu_die</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#cpu_disable\">cpu_disable</a> = <a class=\"id\" href=\"#xen_cpu_disable\">xen_cpu_disable</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#play_dead\">play_dead</a> = <a class=\"id\" href=\"#xen_play_dead\">xen_play_dead</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#smp_send_stop\">smp_send_stop</a> = <a class=\"id\" href=\"#xen_smp_send_stop\">xen_smp_send_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#smp_send_reschedule\">smp_send_reschedule</a> = <a class=\"id\" href=\"#xen_smp_send_reschedule\">xen_smp_send_reschedule</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#send_call_func_ipi\">send_call_func_ipi</a> = <a class=\"id\" href=\"#xen_smp_send_call_function_ipi\">xen_smp_send_call_function_ipi</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#send_call_func_single_ipi\">send_call_func_single_ipi</a> = <a class=\"id\" href=\"#xen_smp_send_call_function_single_ipi\">xen_smp_send_call_function_single_ipi</a>,", 
"};", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#xen_smp_init\">xen_smp_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_ops\">smp_ops</a> = <a class=\"id\" href=\"#xen_smp_ops\">xen_smp_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_fill_possible_map\">xen_fill_possible_map</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_init_spinlocks\">xen_init_spinlocks</a>();", 
"}", 
];
xr_frag_insert('l/e7/23332020d298b69a7df82b61db96f151b35bb5.xr', __xr_tmp);
