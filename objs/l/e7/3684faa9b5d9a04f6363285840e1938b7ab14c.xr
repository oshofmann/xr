var __xr_tmp = [
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kcopyd_put_pages\">kcopyd_put_pages</a>(<a class=\"id\" href=\"#kc\">kc</a>, <a class=\"id\" href=\"#pl\">pl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a> += <a class=\"id\" href=\"#nr\">nr</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#client_free_pages\">client_free_pages</a>(struct <a class=\"id\" href=\"#dm_kcopyd_client\">dm_kcopyd_client</a> *<a class=\"id\" href=\"#kc\">kc</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#nr_free_pages\">nr_free_pages</a> != <a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drop_pages\">drop_pages</a>(<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#pages\">pages</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#pages\">pages</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#nr_free_pages\">nr_free_pages</a> = <a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a> = 0;", 
"}", 
"", 
"<span class=\"comment\">/*-----------------------------------------------------------------</span>", 
"<span class=\"comment\"> * kcopyd_jobs need to be allocated by the *clients* of kcopyd,</span>", 
"<span class=\"comment\"> * for this reason we use a mempool to prevent the client from</span>", 
"<span class=\"comment\"> * ever having to do io (which could cause a deadlock).</span>", 
"<span class=\"comment\"> *---------------------------------------------------------------*/</span>", 
"struct <a class=\"id\" href=\"#kcopyd_job\">kcopyd_job</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_kcopyd_client\">dm_kcopyd_client</a> *<a class=\"id\" href=\"#kc\">kc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Error state of the job.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#read_err\">read_err</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#write_err\">write_err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Either READ or WRITE</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rw\">rw</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_io_region\">dm_io_region</a> <a class=\"id\" href=\"#source\">source</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The destinations for the transfer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#num_dests\">num_dests</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_io_region\">dm_io_region</a> <a class=\"id\" href=\"#dests\">dests</a>[<a class=\"id\" href=\"#DM_KCOPYD_MAX_REGIONS\">DM_KCOPYD_MAX_REGIONS</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#nr_pages\">nr_pages</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page_list\">page_list</a> *<a class=\"id\" href=\"#pages\">pages</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Set this to ensure you are notified when the job has</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * completed.  'context' is for callback to use.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_kcopyd_notify_fn\">dm_kcopyd_notify_fn</a> <a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#context\">context</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * These fields are only used if the job has been split</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * into more manageable parts.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a> <a class=\"id\" href=\"#lock\">lock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#sub_jobs\">sub_jobs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#progress\">progress</a>;", 
"};", 
"", 
"<span class=\"comment\">/* FIXME: this should scale with the number of pages */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MIN_JOBS\">MIN_JOBS</a> 512", 
"", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#_job_cache\">_job_cache</a>;", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#dm_kcopyd_init\">dm_kcopyd_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_job_cache\">_job_cache</a> = <a class=\"id\" href=\"#KMEM_CACHE\">KMEM_CACHE</a>(<a class=\"id\" href=\"#kcopyd_job\">kcopyd_job</a>, 0);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#_job_cache\">_job_cache</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#dm_kcopyd_exit\">dm_kcopyd_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_destroy\">kmem_cache_destroy</a>(<a class=\"id\" href=\"#_job_cache\">_job_cache</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_job_cache\">_job_cache</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Functions to push and pop a job onto the head of a given job</span>", 
"<span class=\"comment\"> * list.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#kcopyd_job\">kcopyd_job</a> *<a class=\"id\" href=\"#pop\">pop</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#jobs\">jobs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#dm_kcopyd_client\">dm_kcopyd_client</a> *<a class=\"id\" href=\"#kc\">kc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kcopyd_job\">kcopyd_job</a> *<a class=\"id\" href=\"#job\">job</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#job_lock\">job_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(<a class=\"id\" href=\"#jobs\">jobs</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#jobs\">jobs</a>-><a class=\"id\" href=\"#next\">next</a>, struct <a class=\"id\" href=\"#kcopyd_job\">kcopyd_job</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#job_lock\">job_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#job\">job</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#push\">push</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#jobs\">jobs</a>, struct <a class=\"id\" href=\"#kcopyd_job\">kcopyd_job</a> *<a class=\"id\" href=\"#job\">job</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_kcopyd_client\">dm_kcopyd_client</a> *<a class=\"id\" href=\"#kc\">kc</a> = <a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#kc\">kc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#job_lock\">job_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#jobs\">jobs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#job_lock\">job_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"", 
"static void <a class=\"id\" href=\"#push_head\">push_head</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#jobs\">jobs</a>, struct <a class=\"id\" href=\"#kcopyd_job\">kcopyd_job</a> *<a class=\"id\" href=\"#job\">job</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_kcopyd_client\">dm_kcopyd_client</a> *<a class=\"id\" href=\"#kc\">kc</a> = <a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#kc\">kc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#job_lock\">job_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#jobs\">jobs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#job_lock\">job_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * These three functions process 1 item from the corresponding</span>", 
"<span class=\"comment\"> * job list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * They return:</span>", 
"<span class=\"comment\"> * &lt; 0: error</span>", 
"<span class=\"comment\"> *   0: success</span>", 
"<span class=\"comment\"> * &gt; 0: can't process yet.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#run_complete_job\">run_complete_job</a>(struct <a class=\"id\" href=\"#kcopyd_job\">kcopyd_job</a> *<a class=\"id\" href=\"#job\">job</a>)", 
"{", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#context\">context</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#read_err\">read_err</a> = <a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#read_err\">read_err</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#write_err\">write_err</a> = <a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#write_err\">write_err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_kcopyd_notify_fn\">dm_kcopyd_notify_fn</a> <a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_kcopyd_client\">dm_kcopyd_client</a> *<a class=\"id\" href=\"#kc\">kc</a> = <a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#kc\">kc</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#pages\">pages</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kcopyd_put_pages\">kcopyd_put_pages</a>(<a class=\"id\" href=\"#kc\">kc</a>, <a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#pages\">pages</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mempool_free\">mempool_free</a>(<a class=\"id\" href=\"#job\">job</a>, <a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#job_pool\">job_pool</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>(<a class=\"id\" href=\"#read_err\">read_err</a>, <a class=\"id\" href=\"#write_err\">write_err</a>, <a class=\"id\" href=\"#context\">context</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_dec_and_test\">atomic_dec_and_test</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#nr_jobs\">nr_jobs</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up\">wake_up</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#destroyq\">destroyq</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#complete_io\">complete_io</a>(unsigned long <a class=\"id\" href=\"#error\">error</a>, void *<a class=\"id\" href=\"#context\">context</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kcopyd_job\">kcopyd_job</a> *<a class=\"id\" href=\"#job\">job</a> = (struct <a class=\"id\" href=\"#kcopyd_job\">kcopyd_job</a> *) <a class=\"id\" href=\"#context\">context</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_kcopyd_client\">dm_kcopyd_client</a> *<a class=\"id\" href=\"#kc\">kc</a> = <a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#kc\">kc</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#rw\">rw</a> == <a class=\"id\" href=\"#WRITE\">WRITE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#write_err\">write_err</a> |= <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#read_err\">read_err</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#DM_KCOPYD_IGNORE_ERROR\">DM_KCOPYD_IGNORE_ERROR</a>, &amp;<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#push\">push</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#complete_jobs\">complete_jobs</a>, <a class=\"id\" href=\"#job\">job</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake\">wake</a>(<a class=\"id\" href=\"#kc\">kc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#rw\">rw</a> == <a class=\"id\" href=\"#WRITE\">WRITE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#push\">push</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#complete_jobs\">complete_jobs</a>, <a class=\"id\" href=\"#job\">job</a>);", 
"", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#rw\">rw</a> = <a class=\"id\" href=\"#WRITE\">WRITE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#push\">push</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#io_jobs\">io_jobs</a>, <a class=\"id\" href=\"#job\">job</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake\">wake</a>(<a class=\"id\" href=\"#kc\">kc</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Request io on as many buffer heads as we can currently get for</span>", 
"<span class=\"comment\"> * a particular job.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#run_io_job\">run_io_job</a>(struct <a class=\"id\" href=\"#kcopyd_job\">kcopyd_job</a> *<a class=\"id\" href=\"#job\">job</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_io_request\">dm_io_request</a> <a class=\"id\" href=\"#io_req\">io_req</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#bi_rw\">bi_rw</a> = <a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#rw\">rw</a> | <a class=\"id\" href=\"#REQ_SYNC\">REQ_SYNC</a> | <a class=\"id\" href=\"#REQ_UNPLUG\">REQ_UNPLUG</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mem\">mem</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#DM_IO_PAGE_LIST\">DM_IO_PAGE_LIST</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mem\">mem</a>.<a class=\"id\" href=\"#ptr\">ptr</a>.<a class=\"id\" href=\"#pl\">pl</a> = <a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#pages\">pages</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mem\">mem</a>.<a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#notify\">notify</a>.<a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#complete_io\">complete_io</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#notify\">notify</a>.<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#job\">job</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#client\">client</a> = <a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#io_client\">io_client</a>,", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#rw\">rw</a> == <a class=\"id\" href=\"#READ\">READ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#dm_io\">dm_io</a>(&amp;<a class=\"id\" href=\"#io_req\">io_req</a>, 1, &amp;<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#source\">source</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#dm_io\">dm_io</a>(&amp;<a class=\"id\" href=\"#io_req\">io_req</a>, <a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#num_dests\">num_dests</a>, <a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#dests\">dests</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#run_pages_job\">run_pages_job</a>(struct <a class=\"id\" href=\"#kcopyd_job\">kcopyd_job</a> *<a class=\"id\" href=\"#job\">job</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a> = <a class=\"id\" href=\"#dm_div_up\">dm_div_up</a>(<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#dests\">dests</a>[0].<a class=\"id\" href=\"#count\">count</a> + <a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> >> 9);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#kcopyd_get_pages\">kcopyd_get_pages</a>(<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#kc\">kc</a>, <a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a>, &amp;<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#pages\">pages</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#r\">r</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* this job is ready for io */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#push\">push</a>(&amp;<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#io_jobs\">io_jobs</a>, <a class=\"id\" href=\"#job\">job</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a> == -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* can't complete now */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Run through a list for as long as possible.  Returns the count</span>", 
"<span class=\"comment\"> * of successful jobs.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#process_jobs\">process_jobs</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#jobs\">jobs</a>, struct <a class=\"id\" href=\"#dm_kcopyd_client\">dm_kcopyd_client</a> *<a class=\"id\" href=\"#kc\">kc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int (*<a class=\"id\" href=\"#fn\">fn</a>) (struct <a class=\"id\" href=\"#kcopyd_job\">kcopyd_job</a> *))", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kcopyd_job\">kcopyd_job</a> *<a class=\"id\" href=\"#job\">job</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#count\">count</a> = 0;", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#job\">job</a> = <a class=\"id\" href=\"#pop\">pop</a>(<a class=\"id\" href=\"#jobs\">jobs</a>, <a class=\"id\" href=\"#kc\">kc</a>))) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#fn\">fn</a>(<a class=\"id\" href=\"#job\">job</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* error this rogue job */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#rw\">rw</a> == <a class=\"id\" href=\"#WRITE\">WRITE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#write_err\">write_err</a> = (unsigned long) -1L;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#read_err\">read_err</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#push\">push</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#complete_jobs\">complete_jobs</a>, <a class=\"id\" href=\"#job\">job</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We couldn't service this job ATM, so</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * push this job back onto the list.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#push_head\">push_head</a>(<a class=\"id\" href=\"#jobs\">jobs</a>, <a class=\"id\" href=\"#job\">job</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * kcopyd does this every time it's woken up.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#do_work\">do_work</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_kcopyd_client\">dm_kcopyd_client</a> *<a class=\"id\" href=\"#kc\">kc</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_kcopyd_client\">dm_kcopyd_client</a>, <a class=\"id\" href=\"#kcopyd_work\">kcopyd_work</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The order that these are called is *very* important.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * complete jobs can free some pages for pages jobs.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Pages jobs when successful will jump onto the io jobs</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * list.  io jobs call wake when they complete and it all</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * starts again.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#process_jobs\">process_jobs</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#complete_jobs\">complete_jobs</a>, <a class=\"id\" href=\"#kc\">kc</a>, <a class=\"id\" href=\"#run_complete_job\">run_complete_job</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#process_jobs\">process_jobs</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#pages_jobs\">pages_jobs</a>, <a class=\"id\" href=\"#kc\">kc</a>, <a class=\"id\" href=\"#run_pages_job\">run_pages_job</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#process_jobs\">process_jobs</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#io_jobs\">io_jobs</a>, <a class=\"id\" href=\"#kc\">kc</a>, <a class=\"id\" href=\"#run_io_job\">run_io_job</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * If we are copying a small region we just dispatch a single job</span>", 
"<span class=\"comment\"> * to do the copy, otherwise the io has to be split up into many</span>", 
"<span class=\"comment\"> * jobs.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#dispatch_job\">dispatch_job</a>(struct <a class=\"id\" href=\"#kcopyd_job\">kcopyd_job</a> *<a class=\"id\" href=\"#job\">job</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_kcopyd_client\">dm_kcopyd_client</a> *<a class=\"id\" href=\"#kc\">kc</a> = <a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#kc\">kc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#nr_jobs\">nr_jobs</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#source\">source</a>.<a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#push\">push</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#complete_jobs\">complete_jobs</a>, <a class=\"id\" href=\"#job\">job</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#push\">push</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#pages_jobs\">pages_jobs</a>, <a class=\"id\" href=\"#job\">job</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake\">wake</a>(<a class=\"id\" href=\"#kc\">kc</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SUB_JOB_SIZE\">SUB_JOB_SIZE</a> 128", 
"static void <a class=\"id\" href=\"#segment_complete\">segment_complete</a>(int <a class=\"id\" href=\"#read_err\">read_err</a>, unsigned long <a class=\"id\" href=\"#write_err\">write_err</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     void *<a class=\"id\" href=\"#context\">context</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* FIXME: tidy this function */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#progress\">progress</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#count\">count</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kcopyd_job\">kcopyd_job</a> *<a class=\"id\" href=\"#job\">job</a> = (struct <a class=\"id\" href=\"#kcopyd_job\">kcopyd_job</a> *) <a class=\"id\" href=\"#context\">context</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_kcopyd_client\">dm_kcopyd_client</a> *<a class=\"id\" href=\"#kc\">kc</a> = <a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#kc\">kc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* update the error */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#read_err\">read_err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#read_err\">read_err</a> = 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#write_err\">write_err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#write_err\">write_err</a> |= <a class=\"id\" href=\"#write_err\">write_err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Only dispatch more work if there hasn't been an error.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((!<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#read_err\">read_err</a> && !<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#write_err\">write_err</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#DM_KCOPYD_IGNORE_ERROR\">DM_KCOPYD_IGNORE_ERROR</a>, &amp;<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get the next chunk of work */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#progress\">progress</a> = <a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#progress\">progress</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#source\">source</a>.<a class=\"id\" href=\"#count\">count</a> - <a class=\"id\" href=\"#progress\">progress</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &gt; <a class=\"id\" href=\"#SUB_JOB_SIZE\">SUB_JOB_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#SUB_JOB_SIZE\">SUB_JOB_SIZE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#progress\">progress</a> += <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#kcopyd_job\">kcopyd_job</a> *<a class=\"id\" href=\"#sub_job\">sub_job</a> = <a class=\"id\" href=\"#mempool_alloc\">mempool_alloc</a>(<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#job_pool\">job_pool</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#GFP_NOIO\">GFP_NOIO</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sub_job\">sub_job</a> = *<a class=\"id\" href=\"#job\">job</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sub_job\">sub_job</a>-><a class=\"id\" href=\"#source\">source</a>.<a class=\"id\" href=\"#sector\">sector</a> += <a class=\"id\" href=\"#progress\">progress</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sub_job\">sub_job</a>-><a class=\"id\" href=\"#source\">source</a>.<a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#num_dests\">num_dests</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sub_job\">sub_job</a>-><a class=\"id\" href=\"#dests\">dests</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#sector\">sector</a> += <a class=\"id\" href=\"#progress\">progress</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sub_job\">sub_job</a>-><a class=\"id\" href=\"#dests\">dests</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sub_job\">sub_job</a>-><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#segment_complete\">segment_complete</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sub_job\">sub_job</a>-><a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#job\">job</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dispatch_job\">dispatch_job</a>(<a class=\"id\" href=\"#sub_job\">sub_job</a>);", 
"", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#atomic_dec_and_test\">atomic_dec_and_test</a>(&amp;<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#sub_jobs\">sub_jobs</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Queue the completion callback to the kcopyd thread.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Some callers assume that all the completions are called</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * from a single thread and don't race with each other.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We must not call the callback directly here because this</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * code may not be executing in the thread.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#push\">push</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#complete_jobs\">complete_jobs</a>, <a class=\"id\" href=\"#job\">job</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake\">wake</a>(<a class=\"id\" href=\"#kc\">kc</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Create some little jobs that will do the move between</span>", 
"<span class=\"comment\"> * them.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SPLIT_COUNT\">SPLIT_COUNT</a> 8", 
"static void <a class=\"id\" href=\"#split_job\">split_job</a>(struct <a class=\"id\" href=\"#kcopyd_job\">kcopyd_job</a> *<a class=\"id\" href=\"#job\">job</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#nr_jobs\">nr_jobs</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#sub_jobs\">sub_jobs</a>, <a class=\"id\" href=\"#SPLIT_COUNT\">SPLIT_COUNT</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#SPLIT_COUNT\">SPLIT_COUNT</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#segment_complete\">segment_complete</a>(0, 0u, <a class=\"id\" href=\"#job\">job</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#dm_kcopyd_copy\">dm_kcopyd_copy</a>(struct <a class=\"id\" href=\"#dm_kcopyd_client\">dm_kcopyd_client</a> *<a class=\"id\" href=\"#kc\">kc</a>, struct <a class=\"id\" href=\"#dm_io_region\">dm_io_region</a> *<a class=\"id\" href=\"#from\">from</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#num_dests\">num_dests</a>, struct <a class=\"id\" href=\"#dm_io_region\">dm_io_region</a> *<a class=\"id\" href=\"#dests\">dests</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#dm_kcopyd_notify_fn\">dm_kcopyd_notify_fn</a> <a class=\"id\" href=\"#fn\">fn</a>, void *<a class=\"id\" href=\"#context\">context</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kcopyd_job\">kcopyd_job</a> *<a class=\"id\" href=\"#job\">job</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Allocate a new job.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a> = <a class=\"id\" href=\"#mempool_alloc\">mempool_alloc</a>(<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#job_pool\">job_pool</a>, <a class=\"id\" href=\"#GFP_NOIO\">GFP_NOIO</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * set up for the read.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#kc\">kc</a> = <a class=\"id\" href=\"#kc\">kc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#read_err\">read_err</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#write_err\">write_err</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#rw\">rw</a> = <a class=\"id\" href=\"#READ\">READ</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#source\">source</a> = *<a class=\"id\" href=\"#from\">from</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#num_dests\">num_dests</a> = <a class=\"id\" href=\"#num_dests\">num_dests</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#dests\">dests</a>, <a class=\"id\" href=\"#dests\">dests</a>, sizeof(*<a class=\"id\" href=\"#dests\">dests</a>) * <a class=\"id\" href=\"#num_dests\">num_dests</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#pages\">pages</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#context\">context</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#source\">source</a>.<a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#SUB_JOB_SIZE\">SUB_JOB_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dispatch_job\">dispatch_job</a>(<a class=\"id\" href=\"#job\">job</a>);", 
"", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#job\">job</a>-><a class=\"id\" href=\"#progress\">progress</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#split_job\">split_job</a>(<a class=\"id\" href=\"#job\">job</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dm_kcopyd_copy\">dm_kcopyd_copy</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Cancels a kcopyd job, eg. someone might be deactivating a</span>", 
"<span class=\"comment\"> * mirror.</span>", 
"<span class=\"comment\"> */</span>", 
"#if 0", 
"int <a class=\"id\" href=\"#kcopyd_cancel\">kcopyd_cancel</a>(struct <a class=\"id\" href=\"#kcopyd_job\">kcopyd_job</a> *<a class=\"id\" href=\"#job\">job</a>, int <a class=\"id\" href=\"#block\">block</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* FIXME: finish */</span>", 
"<span class=\"ts\"/>return -1;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>  <span class=\"comment\">/*  0  */</span>", 
"", 
"<span class=\"comment\">/*-----------------------------------------------------------------</span>", 
"<span class=\"comment\"> * Client setup</span>", 
"<span class=\"comment\"> *---------------------------------------------------------------*/</span>", 
"int <a class=\"id\" href=\"#dm_kcopyd_client_create\">dm_kcopyd_client_create</a>(unsigned int <a class=\"id\" href=\"#nr_pages\">nr_pages</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#dm_kcopyd_client\">dm_kcopyd_client</a> **<a class=\"id\" href=\"#result\">result</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_kcopyd_client\">dm_kcopyd_client</a> *<a class=\"id\" href=\"#kc\">kc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kc\">kc</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#kc\">kc</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#kc\">kc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#job_lock\">job_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#complete_jobs\">complete_jobs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#io_jobs\">io_jobs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#pages_jobs\">pages_jobs</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#job_pool\">job_pool</a> = <a class=\"id\" href=\"#mempool_create_slab_pool\">mempool_create_slab_pool</a>(<a class=\"id\" href=\"#MIN_JOBS\">MIN_JOBS</a>, <a class=\"id\" href=\"#_job_cache\">_job_cache</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#job_pool\">job_pool</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_slab\">bad_slab</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#kcopyd_work\">kcopyd_work</a>, <a class=\"id\" href=\"#do_work\">do_work</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#kcopyd_wq\">kcopyd_wq</a> = <a class=\"id\" href=\"#create_singlethread_workqueue\">create_singlethread_workqueue</a>(\"kcopyd\");", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#kcopyd_wq\">kcopyd_wq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_workqueue\">bad_workqueue</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#pages\">pages</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a> = <a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#nr_free_pages\">nr_free_pages</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#client_alloc_pages\">client_alloc_pages</a>(<a class=\"id\" href=\"#kc\">kc</a>, <a class=\"id\" href=\"#nr_pages\">nr_pages</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_client_pages\">bad_client_pages</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#io_client\">io_client</a> = <a class=\"id\" href=\"#dm_io_client_create\">dm_io_client_create</a>(<a class=\"id\" href=\"#nr_pages\">nr_pages</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#io_client\">io_client</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#io_client\">io_client</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_io_client\">bad_io_client</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#destroyq\">destroyq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#nr_jobs\">nr_jobs</a>, 0);", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#kc\">kc</a>;", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#bad_io_client\">bad_io_client</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#client_free_pages\">client_free_pages</a>(<a class=\"id\" href=\"#kc\">kc</a>);", 
"<a class=\"id\" href=\"#bad_client_pages\">bad_client_pages</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destroy_workqueue\">destroy_workqueue</a>(<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#kcopyd_wq\">kcopyd_wq</a>);", 
"<a class=\"id\" href=\"#bad_workqueue\">bad_workqueue</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mempool_destroy\">mempool_destroy</a>(<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#job_pool\">job_pool</a>);", 
"<a class=\"id\" href=\"#bad_slab\">bad_slab</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#kc\">kc</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dm_kcopyd_client_create\">dm_kcopyd_client_create</a>);", 
"", 
"void <a class=\"id\" href=\"#dm_kcopyd_client_destroy\">dm_kcopyd_client_destroy</a>(struct <a class=\"id\" href=\"#dm_kcopyd_client\">dm_kcopyd_client</a> *<a class=\"id\" href=\"#kc\">kc</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Wait for completion of all jobs submitted by this client. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_event\">wait_event</a>(<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#destroyq\">destroyq</a>, !<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#nr_jobs\">nr_jobs</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#complete_jobs\">complete_jobs</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#io_jobs\">io_jobs</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#pages_jobs\">pages_jobs</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destroy_workqueue\">destroy_workqueue</a>(<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#kcopyd_wq\">kcopyd_wq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_io_client_destroy\">dm_io_client_destroy</a>(<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#io_client\">io_client</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#client_free_pages\">client_free_pages</a>(<a class=\"id\" href=\"#kc\">kc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mempool_destroy\">mempool_destroy</a>(<a class=\"id\" href=\"#kc\">kc</a>-><a class=\"id\" href=\"#job_pool\">job_pool</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#kc\">kc</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dm_kcopyd_client_destroy\">dm_kcopyd_client_destroy</a>);", 
];
xr_frag_insert('l/e7/3684faa9b5d9a04f6363285840e1938b7ab14c.xr', __xr_tmp);
