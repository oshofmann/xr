var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Ftrace header.  For implementation details beyond the random comments</span>", 
"<span class=\"comment\"> * scattered below, see: Documentation/trace/ftrace-design.txt</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_FTRACE_H\">_LINUX_FTRACE_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_FTRACE_H\">_LINUX_FTRACE_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#trace_clock\">trace_clock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kallsyms\">kallsyms</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#linkage\">linkage</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ktime\">ktime</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#ftrace\">ftrace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FUNCTION_TRACER\">CONFIG_FUNCTION_TRACER</a>", 
"", 
"extern int <a class=\"id\" href=\"#ftrace_enabled\">ftrace_enabled</a>;", 
"extern int", 
"<a class=\"id\" href=\"#ftrace_enable_sysctl\">ftrace_enable_sysctl</a>(struct <a class=\"id\" href=\"#ctl_table\">ctl_table</a> *<a class=\"id\" href=\"#table\">table</a>, int <a class=\"id\" href=\"#write\">write</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> *<a class=\"id\" href=\"#lenp\">lenp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>);", 
"", 
"typedef void (*<a class=\"id\" href=\"#ftrace_func_t\">ftrace_func_t</a>)(unsigned long <a class=\"id\" href=\"#ip\">ip</a>, unsigned long <a class=\"id\" href=\"#parent_ip\">parent_ip</a>);", 
"", 
"struct <a class=\"id\" href=\"#ftrace_ops\">ftrace_ops</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ftrace_func_t\">ftrace_func_t</a><span class=\"ts\"/>  <a class=\"id\" href=\"#func\">func</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_ops\">ftrace_ops</a> *<a class=\"id\" href=\"#next\">next</a>;", 
"};", 
"", 
"extern int <a class=\"id\" href=\"#function_trace_stop\">function_trace_stop</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Type of the current tracing.</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#ftrace_tracing_type_t\">ftrace_tracing_type_t</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FTRACE_TYPE_ENTER\">FTRACE_TYPE_ENTER</a> = 0, <span class=\"comment\">/* Hook the call of the function */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FTRACE_TYPE_RETURN\">FTRACE_TYPE_RETURN</a>,<span class=\"ts\"/><span class=\"comment\">/* Hook the return of the function */</span>", 
"};", 
"", 
"<span class=\"comment\">/* Current tracing type, default is FTRACE_TYPE_ENTER */</span>", 
"extern enum <a class=\"id\" href=\"#ftrace_tracing_type_t\">ftrace_tracing_type_t</a> <a class=\"id\" href=\"#ftrace_tracing_type\">ftrace_tracing_type</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ftrace_stop - stop function tracer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * A quick way to stop the function tracer. Note this an on off switch,</span>", 
"<span class=\"comment\"> * it is not something that is recursive like preempt_disable.</span>", 
"<span class=\"comment\"> * This does not disable the calling of mcount, it only stops the</span>", 
"<span class=\"comment\"> * calling of functions from mcount.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ftrace_stop\">ftrace_stop</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#function_trace_stop\">function_trace_stop</a> = 1;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ftrace_start - start the function tracer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function is the inverse of ftrace_stop. This does not enable</span>", 
"<span class=\"comment\"> * the function tracing if the function tracer is disabled. This only</span>", 
"<span class=\"comment\"> * sets the function tracer flag to continue calling the functions</span>", 
"<span class=\"comment\"> * from mcount.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ftrace_start\">ftrace_start</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#function_trace_stop\">function_trace_stop</a> = 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The ftrace_ops must be a static and should also</span>", 
"<span class=\"comment\"> * be read_mostly.  These functions do modify read_mostly variables</span>", 
"<span class=\"comment\"> * so use them sparely. Never free an ftrace_op or modify the</span>", 
"<span class=\"comment\"> * next pointer after it has been registered. Even after unregistering</span>", 
"<span class=\"comment\"> * it, the next pointer may still be used internally.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#register_ftrace_function\">register_ftrace_function</a>(struct <a class=\"id\" href=\"#ftrace_ops\">ftrace_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>);", 
"int <a class=\"id\" href=\"#unregister_ftrace_function\">unregister_ftrace_function</a>(struct <a class=\"id\" href=\"#ftrace_ops\">ftrace_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>);", 
"void <a class=\"id\" href=\"#clear_ftrace_function\">clear_ftrace_function</a>(void);", 
"", 
"extern void <a class=\"id\" href=\"#ftrace_stub\">ftrace_stub</a>(unsigned long <a class=\"id\" href=\"#a0\">a0</a>, unsigned long <a class=\"id\" href=\"#a1\">a1</a>);", 
"", 
"#else <span class=\"comment\">/* !CONFIG_FUNCTION_TRACER */</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * (un)register_ftrace_function must be a macro since the ops parameter</span>", 
"<span class=\"comment\"> * must not be evaluated.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#register_ftrace_function\">register_ftrace_function</a>(<a class=\"id\" href=\"#ops\">ops</a>) ({ 0; })", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#unregister_ftrace_function\">unregister_ftrace_function</a>(<a class=\"id\" href=\"#ops\">ops</a>) ({ 0; })", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#clear_ftrace_function\">clear_ftrace_function</a>(void) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ftrace_kill\">ftrace_kill</a>(void) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ftrace_stop\">ftrace_stop</a>(void) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ftrace_start\">ftrace_start</a>(void) { }", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_FUNCTION_TRACER */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_STACK_TRACER\">CONFIG_STACK_TRACER</a>", 
"extern int <a class=\"id\" href=\"#stack_tracer_enabled\">stack_tracer_enabled</a>;", 
"int", 
"<a class=\"id\" href=\"#stack_trace_sysctl\">stack_trace_sysctl</a>(struct <a class=\"id\" href=\"#ctl_table\">ctl_table</a> *<a class=\"id\" href=\"#table\">table</a>, int <a class=\"id\" href=\"#write\">write</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> *<a class=\"id\" href=\"#lenp\">lenp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"struct <a class=\"id\" href=\"#ftrace_func_command\">ftrace_func_command</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#func\">func</a>)(char *<a class=\"id\" href=\"#func\">func</a>, char *<a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#params\">params</a>, int <a class=\"id\" href=\"#enable\">enable</a>);", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DYNAMIC_FTRACE\">CONFIG_DYNAMIC_FTRACE</a>", 
"", 
"int <a class=\"id\" href=\"#ftrace_arch_code_modify_prepare\">ftrace_arch_code_modify_prepare</a>(void);", 
"int <a class=\"id\" href=\"#ftrace_arch_code_modify_post_process\">ftrace_arch_code_modify_post_process</a>(void);", 
"", 
"struct <a class=\"id\" href=\"#seq_file\">seq_file</a>;", 
"", 
"struct <a class=\"id\" href=\"#ftrace_probe_ops\">ftrace_probe_ops</a> {", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#func\">func</a>)(unsigned long <a class=\"id\" href=\"#ip\">ip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#parent_ip\">parent_ip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void **<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#callback\">callback</a>)(unsigned long <a class=\"id\" href=\"#ip\">ip</a>, void **<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#free\">free</a>)(void **<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#print\">print</a>)(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#ip\">ip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#ftrace_probe_ops\">ftrace_probe_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void *<a class=\"id\" href=\"#data\">data</a>);", 
"};", 
"", 
"extern int", 
"<a class=\"id\" href=\"#register_ftrace_function_probe\">register_ftrace_function_probe</a>(char *<a class=\"id\" href=\"#glob\">glob</a>, struct <a class=\"id\" href=\"#ftrace_probe_ops\">ftrace_probe_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      void *<a class=\"id\" href=\"#data\">data</a>);", 
"extern void", 
"<a class=\"id\" href=\"#unregister_ftrace_function_probe\">unregister_ftrace_function_probe</a>(char *<a class=\"id\" href=\"#glob\">glob</a>, struct <a class=\"id\" href=\"#ftrace_probe_ops\">ftrace_probe_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#data\">data</a>);", 
"extern void", 
"<a class=\"id\" href=\"#unregister_ftrace_function_probe_func\">unregister_ftrace_function_probe_func</a>(char *<a class=\"id\" href=\"#glob\">glob</a>, struct <a class=\"id\" href=\"#ftrace_probe_ops\">ftrace_probe_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>);", 
"extern void <a class=\"id\" href=\"#unregister_ftrace_function_probe_all\">unregister_ftrace_function_probe_all</a>(char *<a class=\"id\" href=\"#glob\">glob</a>);", 
"", 
"extern int <a class=\"id\" href=\"#ftrace_text_reserved\">ftrace_text_reserved</a>(void *<a class=\"id\" href=\"#start\">start</a>, void *<a class=\"id\" href=\"#end\">end</a>);", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FTRACE_FL_FREE\">FTRACE_FL_FREE</a><span class=\"ts\"/><span class=\"ts\"/>= (1 << 0),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FTRACE_FL_FAILED\">FTRACE_FL_FAILED</a><span class=\"ts\"/>= (1 << 1),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FTRACE_FL_FILTER\">FTRACE_FL_FILTER</a><span class=\"ts\"/>= (1 << 2),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FTRACE_FL_ENABLED\">FTRACE_FL_ENABLED</a><span class=\"ts\"/>= (1 << 3),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FTRACE_FL_NOTRACE\">FTRACE_FL_NOTRACE</a><span class=\"ts\"/>= (1 << 4),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FTRACE_FL_CONVERTED\">FTRACE_FL_CONVERTED</a><span class=\"ts\"/>= (1 << 5),", 
"};", 
"", 
"struct <a class=\"id\" href=\"#dyn_ftrace\">dyn_ftrace</a> {", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip\">ip</a>; <span class=\"comment\">/* address of mcount call-site */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dyn_ftrace\">dyn_ftrace</a><span class=\"ts\"/>*<a class=\"id\" href=\"#freelist\">freelist</a>;", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dyn_ftrace\">dyn_ftrace</a><span class=\"ts\"/>*<a class=\"id\" href=\"#newlist\">newlist</a>;", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dyn_arch_ftrace\">dyn_arch_ftrace</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arch\">arch</a>;", 
"};", 
"", 
"int <a class=\"id\" href=\"#ftrace_force_update\">ftrace_force_update</a>(void);", 
"void <a class=\"id\" href=\"#ftrace_set_filter\">ftrace_set_filter</a>(unsigned char *<a class=\"id\" href=\"#buf\">buf</a>, int <a class=\"id\" href=\"#len\">len</a>, int <a class=\"id\" href=\"#reset\">reset</a>);", 
"", 
"int <a class=\"id\" href=\"#register_ftrace_command\">register_ftrace_command</a>(struct <a class=\"id\" href=\"#ftrace_func_command\">ftrace_func_command</a> *<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"int <a class=\"id\" href=\"#unregister_ftrace_command\">unregister_ftrace_command</a>(struct <a class=\"id\" href=\"#ftrace_func_command\">ftrace_func_command</a> *<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"", 
"<span class=\"comment\">/* defined in arch */</span>", 
"extern int <a class=\"id\" href=\"#ftrace_ip_converted\">ftrace_ip_converted</a>(unsigned long <a class=\"id\" href=\"#ip\">ip</a>);", 
"extern int <a class=\"id\" href=\"#ftrace_dyn_arch_init\">ftrace_dyn_arch_init</a>(void *<a class=\"id\" href=\"#data\">data</a>);", 
"extern int <a class=\"id\" href=\"#ftrace_update_ftrace_func\">ftrace_update_ftrace_func</a>(<a class=\"id\" href=\"#ftrace_func_t\">ftrace_func_t</a> <a class=\"id\" href=\"#func\">func</a>);", 
"extern void <a class=\"id\" href=\"#ftrace_caller\">ftrace_caller</a>(void);", 
"extern void <a class=\"id\" href=\"#ftrace_call\">ftrace_call</a>(void);", 
"extern void <a class=\"id\" href=\"#mcount_call\">mcount_call</a>(void);", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#FTRACE_ADDR\">FTRACE_ADDR</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FTRACE_ADDR\">FTRACE_ADDR</a> ((unsigned long)<a class=\"id\" href=\"#ftrace_caller\">ftrace_caller</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FUNCTION_GRAPH_TRACER\">CONFIG_FUNCTION_GRAPH_TRACER</a>", 
"extern void <a class=\"id\" href=\"#ftrace_graph_caller\">ftrace_graph_caller</a>(void);", 
"extern int <a class=\"id\" href=\"#ftrace_enable_ftrace_graph_caller\">ftrace_enable_ftrace_graph_caller</a>(void);", 
"extern int <a class=\"id\" href=\"#ftrace_disable_ftrace_graph_caller\">ftrace_disable_ftrace_graph_caller</a>(void);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ftrace_enable_ftrace_graph_caller\">ftrace_enable_ftrace_graph_caller</a>(void) { return 0; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ftrace_disable_ftrace_graph_caller\">ftrace_disable_ftrace_graph_caller</a>(void) { return 0; }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ftrace_make_nop - convert code into nop</span>", 
"<span class=\"comment\"> * @mod: module structure if called by module load initialization</span>", 
"<span class=\"comment\"> * @rec: the mcount call site record</span>", 
"<span class=\"comment\"> * @addr: the address that the call site should be calling</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is a very sensitive operation and great care needs</span>", 
"<span class=\"comment\"> * to be taken by the arch.  The operation should carefully</span>", 
"<span class=\"comment\"> * read the location, check to see if what is read is indeed</span>", 
"<span class=\"comment\"> * what we expect it to be, and then on success of the compare,</span>", 
"<span class=\"comment\"> * it should write to the location.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The code segment at @rec-&gt;ip should be a caller to @addr</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return must be:</span>", 
"<span class=\"comment\"> *  0 on success</span>", 
"<span class=\"comment\"> *  -EFAULT on error reading the location</span>", 
"<span class=\"comment\"> *  -EINVAL on a failed compare of the contents</span>", 
"<span class=\"comment\"> *  -EPERM  on error writing to the location</span>", 
"<span class=\"comment\"> * Any other value will be considered a failure.</span>", 
"<span class=\"comment\"> */</span>", 
"extern int <a class=\"id\" href=\"#ftrace_make_nop\">ftrace_make_nop</a>(struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#mod\">mod</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#dyn_ftrace\">dyn_ftrace</a> *<a class=\"id\" href=\"#rec\">rec</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ftrace_make_call - convert a nop call site into a call to addr</span>", 
"<span class=\"comment\"> * @rec: the mcount call site record</span>", 
"<span class=\"comment\"> * @addr: the address that the call site should call</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is a very sensitive operation and great care needs</span>", 
"<span class=\"comment\"> * to be taken by the arch.  The operation should carefully</span>", 
"<span class=\"comment\"> * read the location, check to see if what is read is indeed</span>", 
"<span class=\"comment\"> * what we expect it to be, and then on success of the compare,</span>", 
"<span class=\"comment\"> * it should write to the location.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The code segment at @rec-&gt;ip should be a nop</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return must be:</span>", 
"<span class=\"comment\"> *  0 on success</span>", 
"<span class=\"comment\"> *  -EFAULT on error reading the location</span>", 
"<span class=\"comment\"> *  -EINVAL on a failed compare of the contents</span>", 
"<span class=\"comment\"> *  -EPERM  on error writing to the location</span>", 
"<span class=\"comment\"> * Any other value will be considered a failure.</span>", 
"<span class=\"comment\"> */</span>", 
"extern int <a class=\"id\" href=\"#ftrace_make_call\">ftrace_make_call</a>(struct <a class=\"id\" href=\"#dyn_ftrace\">dyn_ftrace</a> *<a class=\"id\" href=\"#rec\">rec</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"comment\">/* May be defined in arch */</span>", 
"extern int <a class=\"id\" href=\"#ftrace_arch_read_dyn_info\">ftrace_arch_read_dyn_info</a>(char *<a class=\"id\" href=\"#buf\">buf</a>, int <a class=\"id\" href=\"#size\">size</a>);", 
"", 
"extern int <a class=\"id\" href=\"#skip_trace\">skip_trace</a>(unsigned long <a class=\"id\" href=\"#ip\">ip</a>);", 
"", 
"extern void <a class=\"id\" href=\"#ftrace_disable_daemon\">ftrace_disable_daemon</a>(void);", 
"extern void <a class=\"id\" href=\"#ftrace_enable_daemon\">ftrace_enable_daemon</a>(void);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#skip_trace\">skip_trace</a>(unsigned long <a class=\"id\" href=\"#ip\">ip</a>) { return 0; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ftrace_force_update\">ftrace_force_update</a>(void) { return 0; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ftrace_set_filter\">ftrace_set_filter</a>(unsigned char *<a class=\"id\" href=\"#buf\">buf</a>, int <a class=\"id\" href=\"#len\">len</a>, int <a class=\"id\" href=\"#reset\">reset</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ftrace_disable_daemon\">ftrace_disable_daemon</a>(void) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ftrace_enable_daemon\">ftrace_enable_daemon</a>(void) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ftrace_release_mod\">ftrace_release_mod</a>(struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#mod\">mod</a>) {}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#register_ftrace_command\">register_ftrace_command</a>(struct <a class=\"id\" href=\"#ftrace_func_command\">ftrace_func_command</a> *<a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#unregister_ftrace_command\">unregister_ftrace_command</a>(char *<a class=\"id\" href=\"#cmd_name\">cmd_name</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ftrace_text_reserved\">ftrace_text_reserved</a>(void *<a class=\"id\" href=\"#start\">start</a>, void *<a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_DYNAMIC_FTRACE */</span>", 
"", 
"<span class=\"comment\">/* totally disable ftrace - can not re-enable after this */</span>", 
"void <a class=\"id\" href=\"#ftrace_kill\">ftrace_kill</a>(void);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tracer_disable\">tracer_disable</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FUNCTION_TRACER\">CONFIG_FUNCTION_TRACER</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ftrace_enabled\">ftrace_enabled</a> = 0;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Ftrace disable/restore without lock. Some synchronization mechanism</span>", 
"<span class=\"comment\"> * must be used to prevent ftrace_enabled to be changed between</span>", 
"<span class=\"comment\"> * disable/restore.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#__ftrace_enabled_save\">__ftrace_enabled_save</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FUNCTION_TRACER\">CONFIG_FUNCTION_TRACER</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#saved_ftrace_enabled\">saved_ftrace_enabled</a> = <a class=\"id\" href=\"#ftrace_enabled\">ftrace_enabled</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ftrace_enabled\">ftrace_enabled</a> = 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#saved_ftrace_enabled\">saved_ftrace_enabled</a>;", 
"#else", 
"<span class=\"ts\"/>return 0;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__ftrace_enabled_restore\">__ftrace_enabled_restore</a>(int <a class=\"id\" href=\"#enabled\">enabled</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FUNCTION_TRACER\">CONFIG_FUNCTION_TRACER</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ftrace_enabled\">ftrace_enabled</a> = <a class=\"id\" href=\"#enabled\">enabled</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#HAVE_ARCH_CALLER_ADDR\">HAVE_ARCH_CALLER_ADDR</a>", 
"# <a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FRAME_POINTER\">CONFIG_FRAME_POINTER</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CALLER_ADDR0\">CALLER_ADDR0</a> ((unsigned long)<a class=\"id\" href=\"#__builtin_return_address\">__builtin_return_address</a>(0))", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CALLER_ADDR1\">CALLER_ADDR1</a> ((unsigned long)<a class=\"id\" href=\"#__builtin_return_address\">__builtin_return_address</a>(1))", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CALLER_ADDR2\">CALLER_ADDR2</a> ((unsigned long)<a class=\"id\" href=\"#__builtin_return_address\">__builtin_return_address</a>(2))", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CALLER_ADDR3\">CALLER_ADDR3</a> ((unsigned long)<a class=\"id\" href=\"#__builtin_return_address\">__builtin_return_address</a>(3))", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CALLER_ADDR4\">CALLER_ADDR4</a> ((unsigned long)<a class=\"id\" href=\"#__builtin_return_address\">__builtin_return_address</a>(4))", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CALLER_ADDR5\">CALLER_ADDR5</a> ((unsigned long)<a class=\"id\" href=\"#__builtin_return_address\">__builtin_return_address</a>(5))", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CALLER_ADDR6\">CALLER_ADDR6</a> ((unsigned long)<a class=\"id\" href=\"#__builtin_return_address\">__builtin_return_address</a>(6))", 
"# else", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CALLER_ADDR0\">CALLER_ADDR0</a> ((unsigned long)<a class=\"id\" href=\"#__builtin_return_address\">__builtin_return_address</a>(0))", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CALLER_ADDR1\">CALLER_ADDR1</a> 0UL", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CALLER_ADDR2\">CALLER_ADDR2</a> 0UL", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CALLER_ADDR3\">CALLER_ADDR3</a> 0UL", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CALLER_ADDR4\">CALLER_ADDR4</a> 0UL", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CALLER_ADDR5\">CALLER_ADDR5</a> 0UL", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CALLER_ADDR6\">CALLER_ADDR6</a> 0UL", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* ifndef HAVE_ARCH_CALLER_ADDR */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IRQSOFF_TRACER\">CONFIG_IRQSOFF_TRACER</a>", 
"  extern void <a class=\"id\" href=\"#time_hardirqs_on\">time_hardirqs_on</a>(unsigned long <a class=\"id\" href=\"#a0\">a0</a>, unsigned long <a class=\"id\" href=\"#a1\">a1</a>);", 
"  extern void <a class=\"id\" href=\"#time_hardirqs_off\">time_hardirqs_off</a>(unsigned long <a class=\"id\" href=\"#a0\">a0</a>, unsigned long <a class=\"id\" href=\"#a1\">a1</a>);", 
"#else", 
"  static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#time_hardirqs_on\">time_hardirqs_on</a>(unsigned long <a class=\"id\" href=\"#a0\">a0</a>, unsigned long <a class=\"id\" href=\"#a1\">a1</a>) { }", 
"  static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#time_hardirqs_off\">time_hardirqs_off</a>(unsigned long <a class=\"id\" href=\"#a0\">a0</a>, unsigned long <a class=\"id\" href=\"#a1\">a1</a>) { }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PREEMPT_TRACER\">CONFIG_PREEMPT_TRACER</a>", 
"  extern void <a class=\"id\" href=\"#trace_preempt_on\">trace_preempt_on</a>(unsigned long <a class=\"id\" href=\"#a0\">a0</a>, unsigned long <a class=\"id\" href=\"#a1\">a1</a>);", 
"  extern void <a class=\"id\" href=\"#trace_preempt_off\">trace_preempt_off</a>(unsigned long <a class=\"id\" href=\"#a0\">a0</a>, unsigned long <a class=\"id\" href=\"#a1\">a1</a>);", 
"#else", 
"  static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#trace_preempt_on\">trace_preempt_on</a>(unsigned long <a class=\"id\" href=\"#a0\">a0</a>, unsigned long <a class=\"id\" href=\"#a1\">a1</a>) { }", 
"  static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#trace_preempt_off\">trace_preempt_off</a>(unsigned long <a class=\"id\" href=\"#a0\">a0</a>, unsigned long <a class=\"id\" href=\"#a1\">a1</a>) { }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FTRACE_MCOUNT_RECORD\">CONFIG_FTRACE_MCOUNT_RECORD</a>", 
"extern void <a class=\"id\" href=\"#ftrace_init\">ftrace_init</a>(void);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ftrace_init\">ftrace_init</a>(void) { }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Structure that defines an entry function trace.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ftrace_graph_ent\">ftrace_graph_ent</a> {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#func\">func</a>; <span class=\"comment\">/* Current function */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Structure that defines a return function trace.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ftrace_graph_ret\">ftrace_graph_ret</a> {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#func\">func</a>; <span class=\"comment\">/* Current function */</span>", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#calltime\">calltime</a>;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#rettime\">rettime</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Number of functions that overran the depth limit for current task */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#overrun\">overrun</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a>;", 
"};", 
"", 
"<span class=\"comment\">/* Type of the callback handlers for tracing function graph*/</span>", 
"typedef void (*<a class=\"id\" href=\"#trace_func_graph_ret_t\">trace_func_graph_ret_t</a>)(struct <a class=\"id\" href=\"#ftrace_graph_ret\">ftrace_graph_ret</a> *); <span class=\"comment\">/* return */</span>", 
"typedef int (*<a class=\"id\" href=\"#trace_func_graph_ent_t\">trace_func_graph_ent_t</a>)(struct <a class=\"id\" href=\"#ftrace_graph_ent\">ftrace_graph_ent</a> *); <span class=\"comment\">/* entry */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FUNCTION_GRAPH_TRACER\">CONFIG_FUNCTION_GRAPH_TRACER</a>", 
"", 
"<span class=\"comment\">/* for init task */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INIT_FTRACE_GRAPH\">INIT_FTRACE_GRAPH</a><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ret_stack\">ret_stack</a> = <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Stack of return addresses for functions</span>", 
"<span class=\"comment\"> * of a thread.</span>", 
"<span class=\"comment\"> * Used in struct thread_info</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ftrace_ret_stack\">ftrace_ret_stack</a> {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#func\">func</a>;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#calltime\">calltime</a>;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#subtime\">subtime</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#fp\">fp</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Primary handler of a function return.</span>", 
"<span class=\"comment\"> * It relays on ftrace_return_to_handler.</span>", 
"<span class=\"comment\"> * Defined in entry_32/64.S</span>", 
"<span class=\"comment\"> */</span>", 
"extern void <a class=\"id\" href=\"#return_to_handler\">return_to_handler</a>(void);", 
"", 
"extern int", 
"<a class=\"id\" href=\"#ftrace_push_return_trace\">ftrace_push_return_trace</a>(unsigned long <a class=\"id\" href=\"#ret\">ret</a>, unsigned long <a class=\"id\" href=\"#func\">func</a>, int *<a class=\"id\" href=\"#depth\">depth</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#frame_pointer\">frame_pointer</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Sometimes we don't want to trace a function with the function</span>", 
"<span class=\"comment\"> * graph tracer but we want them to keep traced by the usual function</span>", 
"<span class=\"comment\"> * tracer if the function graph tracer is not configured.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__notrace_funcgraph\">__notrace_funcgraph</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#notrace\">notrace</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We want to which function is an entrypoint of a hardirq.</span>", 
"<span class=\"comment\"> * That will help us to put a signal on output.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__irq_entry\">__irq_entry</a><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#__section__\">__section__</a>(\".irqentry.text\")))", 
"", 
"<span class=\"comment\">/* Limits of hardirq entrypoints */</span>", 
"extern char <a class=\"id\" href=\"#__irqentry_text_start\">__irqentry_text_start</a>[];", 
"extern char <a class=\"id\" href=\"#__irqentry_text_end\">__irqentry_text_end</a>[];", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FTRACE_RETFUNC_DEPTH\">FTRACE_RETFUNC_DEPTH</a> 50", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FTRACE_RETSTACK_ALLOC_SIZE\">FTRACE_RETSTACK_ALLOC_SIZE</a> 32", 
"extern int <a class=\"id\" href=\"#register_ftrace_graph\">register_ftrace_graph</a>(<a class=\"id\" href=\"#trace_func_graph_ret_t\">trace_func_graph_ret_t</a> <a class=\"id\" href=\"#retfunc\">retfunc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_func_graph_ent_t\">trace_func_graph_ent_t</a> <a class=\"id\" href=\"#entryfunc\">entryfunc</a>);", 
"", 
"extern void <a class=\"id\" href=\"#ftrace_graph_stop\">ftrace_graph_stop</a>(void);", 
"", 
"<span class=\"comment\">/* The current handlers in use */</span>", 
"extern <a class=\"id\" href=\"#trace_func_graph_ret_t\">trace_func_graph_ret_t</a> <a class=\"id\" href=\"#ftrace_graph_return\">ftrace_graph_return</a>;", 
"extern <a class=\"id\" href=\"#trace_func_graph_ent_t\">trace_func_graph_ent_t</a> <a class=\"id\" href=\"#ftrace_graph_entry\">ftrace_graph_entry</a>;", 
"", 
"extern void <a class=\"id\" href=\"#unregister_ftrace_graph\">unregister_ftrace_graph</a>(void);", 
"", 
"extern void <a class=\"id\" href=\"#ftrace_graph_init_task\">ftrace_graph_init_task</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#t\">t</a>);", 
"extern void <a class=\"id\" href=\"#ftrace_graph_exit_task\">ftrace_graph_exit_task</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#t\">t</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#task_curr_ret_stack\">task_curr_ret_stack</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#t\">t</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#curr_ret_stack\">curr_ret_stack</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#pause_graph_tracing\">pause_graph_tracing</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#tracing_graph_pause\">tracing_graph_pause</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unpause_graph_tracing\">unpause_graph_tracing</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#tracing_graph_pause\">tracing_graph_pause</a>);", 
"}", 
"#else <span class=\"comment\">/* !CONFIG_FUNCTION_GRAPH_TRACER */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__notrace_funcgraph\">__notrace_funcgraph</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__irq_entry\">__irq_entry</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INIT_FTRACE_GRAPH\">INIT_FTRACE_GRAPH</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ftrace_graph_init_task\">ftrace_graph_init_task</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#t\">t</a>) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ftrace_graph_exit_task\">ftrace_graph_exit_task</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#t\">t</a>) { }", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#register_ftrace_graph\">register_ftrace_graph</a>(<a class=\"id\" href=\"#trace_func_graph_ret_t\">trace_func_graph_ret_t</a> <a class=\"id\" href=\"#retfunc\">retfunc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#trace_func_graph_ent_t\">trace_func_graph_ent_t</a> <a class=\"id\" href=\"#entryfunc\">entryfunc</a>)", 
"{", 
"<span class=\"ts\"/>return -1;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unregister_ftrace_graph\">unregister_ftrace_graph</a>(void) { }", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#task_curr_ret_stack\">task_curr_ret_stack</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#pause_graph_tracing\">pause_graph_tracing</a>(void) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unpause_graph_tracing\">unpause_graph_tracing</a>(void) { }", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_FUNCTION_GRAPH_TRACER */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TRACING\">CONFIG_TRACING</a>", 
"", 
"<span class=\"comment\">/* flags for current-&gt;trace */</span>", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TSK_TRACE_FL_TRACE_BIT\">TSK_TRACE_FL_TRACE_BIT</a><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TSK_TRACE_FL_GRAPH_BIT\">TSK_TRACE_FL_GRAPH_BIT</a><span class=\"ts\"/>= 1,", 
"};", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TSK_TRACE_FL_TRACE\">TSK_TRACE_FL_TRACE</a><span class=\"ts\"/>= 1 << <a class=\"id\" href=\"#TSK_TRACE_FL_TRACE_BIT\">TSK_TRACE_FL_TRACE_BIT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TSK_TRACE_FL_GRAPH\">TSK_TRACE_FL_GRAPH</a><span class=\"ts\"/>= 1 << <a class=\"id\" href=\"#TSK_TRACE_FL_GRAPH_BIT\">TSK_TRACE_FL_GRAPH_BIT</a>,", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_tsk_trace_trace\">set_tsk_trace_trace</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#TSK_TRACE_FL_TRACE_BIT\">TSK_TRACE_FL_TRACE_BIT</a>, &amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#trace\">trace</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#clear_tsk_trace_trace\">clear_tsk_trace_trace</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#TSK_TRACE_FL_TRACE_BIT\">TSK_TRACE_FL_TRACE_BIT</a>, &amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#trace\">trace</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#test_tsk_trace_trace\">test_tsk_trace_trace</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#trace\">trace</a> &amp; <a class=\"id\" href=\"#TSK_TRACE_FL_TRACE\">TSK_TRACE_FL_TRACE</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_tsk_trace_graph\">set_tsk_trace_graph</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#TSK_TRACE_FL_GRAPH_BIT\">TSK_TRACE_FL_GRAPH_BIT</a>, &amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#trace\">trace</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#clear_tsk_trace_graph\">clear_tsk_trace_graph</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#TSK_TRACE_FL_GRAPH_BIT\">TSK_TRACE_FL_GRAPH_BIT</a>, &amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#trace\">trace</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#test_tsk_trace_graph\">test_tsk_trace_graph</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#trace\">trace</a> &amp; <a class=\"id\" href=\"#TSK_TRACE_FL_GRAPH\">TSK_TRACE_FL_GRAPH</a>;", 
"}", 
"", 
"enum <a class=\"id\" href=\"#ftrace_dump_mode\">ftrace_dump_mode</a>;", 
"", 
"extern enum <a class=\"id\" href=\"#ftrace_dump_mode\">ftrace_dump_mode</a> <a class=\"id\" href=\"#ftrace_dump_on_oops\">ftrace_dump_on_oops</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PREEMPT\">CONFIG_PREEMPT</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INIT_TRACE_RECURSION\">INIT_TRACE_RECURSION</a><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#trace_recursion\">trace_recursion</a> = 0,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_TRACING */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#INIT_TRACE_RECURSION\">INIT_TRACE_RECURSION</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INIT_TRACE_RECURSION\">INIT_TRACE_RECURSION</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FTRACE_SYSCALLS\">CONFIG_FTRACE_SYSCALLS</a>", 
"", 
"unsigned long <a class=\"id\" href=\"#arch_syscall_addr\">arch_syscall_addr</a>(int <a class=\"id\" href=\"#nr\">nr</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_FTRACE_SYSCALLS */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_FTRACE_H */</span>", 
];
xr_frag_insert('l/e8/0c44d1622fd48a3adb186c91cbace2f9f98419.xr', __xr_tmp);
