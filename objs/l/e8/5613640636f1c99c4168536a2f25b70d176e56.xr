var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__LINUX_DEBUG_LOCKING_H\">__LINUX_DEBUG_LOCKING_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__LINUX_DEBUG_LOCKING_H\">__LINUX_DEBUG_LOCKING_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#task_struct\">task_struct</a>;", 
"", 
"extern int <a class=\"id\" href=\"#debug_locks\">debug_locks</a>;", 
"extern int <a class=\"id\" href=\"#debug_locks_silent\">debug_locks_silent</a>;", 
"", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#__debug_locks_off\">__debug_locks_off</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#xchg\">xchg</a>(&amp;<a class=\"id\" href=\"#debug_locks\">debug_locks</a>, 0);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Generic 'turn off all lock debugging' function:</span>", 
"<span class=\"comment\"> */</span>", 
"extern int <a class=\"id\" href=\"#debug_locks_off\">debug_locks_off</a>(void);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEBUG_LOCKS_WARN_ON\">DEBUG_LOCKS_WARN_ON</a>(<a class=\"id\" href=\"#c\">c</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"({<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#__ret\">__ret</a> = 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#oops_in_progress\">oops_in_progress</a> && <a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#c\">c</a>)) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#debug_locks_off\">debug_locks_off</a>() && !<a class=\"id\" href=\"#debug_locks_silent\">debug_locks_silent</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ret\">__ret</a> = 1;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ret\">__ret</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"})", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SMP_DEBUG_LOCKS_WARN_ON\">SMP_DEBUG_LOCKS_WARN_ON</a>(<a class=\"id\" href=\"#c\">c</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEBUG_LOCKS_WARN_ON\">DEBUG_LOCKS_WARN_ON</a>(<a class=\"id\" href=\"#c\">c</a>)", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SMP_DEBUG_LOCKS_WARN_ON\">SMP_DEBUG_LOCKS_WARN_ON</a>(<a class=\"id\" href=\"#c\">c</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>do { } while (0)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DEBUG_LOCKING_API_SELFTESTS\">CONFIG_DEBUG_LOCKING_API_SELFTESTS</a>", 
"  extern void <a class=\"id\" href=\"#locking_selftest\">locking_selftest</a>(void);", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#locking_selftest\">locking_selftest</a>()<span class=\"ts\"/>do { } while (0)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"struct <a class=\"id\" href=\"#task_struct\">task_struct</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_LOCKDEP\">CONFIG_LOCKDEP</a>", 
"extern void <a class=\"id\" href=\"#debug_show_all_locks\">debug_show_all_locks</a>(void);", 
"extern void <a class=\"id\" href=\"#__debug_show_held_locks\">__debug_show_held_locks</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"extern void <a class=\"id\" href=\"#debug_show_held_locks\">debug_show_held_locks</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"extern void <a class=\"id\" href=\"#debug_check_no_locks_freed\">debug_check_no_locks_freed</a>(const void *<a class=\"id\" href=\"#from\">from</a>, unsigned long <a class=\"id\" href=\"#len\">len</a>);", 
"extern void <a class=\"id\" href=\"#debug_check_no_locks_held\">debug_check_no_locks_held</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#debug_show_all_locks\">debug_show_all_locks</a>(void)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__debug_show_held_locks\">__debug_show_held_locks</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>)", 
"{", 
"}", 
];
xr_frag_insert('l/e8/5613640636f1c99c4168536a2f25b70d176e56.xr', __xr_tmp);
