var __xr_tmp = [
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Base implementations of per-CPU variable declarations and definitions, where</span>", 
"<span class=\"comment\"> * the section in which the variable is to be placed is provided by the</span>", 
"<span class=\"comment\"> * 'sec' argument.  This may be used to affect the parameters governing the</span>", 
"<span class=\"comment\"> * variable's storage.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE!  The sections for the DECLARE and for the DEFINE must match, lest</span>", 
"<span class=\"comment\"> * linkage errors occur due the compiler generating the wrong code to access</span>", 
"<span class=\"comment\"> * that section.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__PCPU_ATTRS\">__PCPU_ATTRS</a>(<a class=\"id\" href=\"#sec\">sec</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__percpu\">__percpu</a> <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#section\">section</a>(<a class=\"id\" href=\"#PER_CPU_BASE_SECTION\">PER_CPU_BASE_SECTION</a> <a class=\"id\" href=\"#sec\">sec</a>)))<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PER_CPU_ATTRIBUTES\">PER_CPU_ATTRIBUTES</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__PCPU_DUMMY_ATTRS\">__PCPU_DUMMY_ATTRS</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#section\">section</a>(\".discard\"), <a class=\"id\" href=\"#unused\">unused</a>))", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Macro which verifies @ptr is a percpu pointer without evaluating</span>", 
"<span class=\"comment\"> * @ptr.  This is to be used in percpu accessors to verify that the</span>", 
"<span class=\"comment\"> * input parameter is a percpu pointer.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__verify_pcpu_ptr\">__verify_pcpu_ptr</a>(<a class=\"id\" href=\"#ptr\">ptr</a>)<span class=\"ts\"/>do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>const void <a class=\"id\" href=\"#__percpu\">__percpu</a> *<a class=\"id\" href=\"#__vpp_verify\">__vpp_verify</a> = (<a class=\"id\" href=\"#typeof\">typeof</a>(<a class=\"id\" href=\"#ptr\">ptr</a>))<a class=\"id\" href=\"#NULL\">NULL</a>;<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#__vpp_verify\">__vpp_verify</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"} while (0)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * s390 and alpha modules require percpu variables to be defined as</span>", 
"<span class=\"comment\"> * weak to force the compiler to generate GOT based external</span>", 
"<span class=\"comment\"> * references for them.  This is necessary because percpu sections</span>", 
"<span class=\"comment\"> * will be located outside of the usually addressable area.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This definition puts the following two extra restrictions when</span>", 
"<span class=\"comment\"> * defining percpu variables.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * 1. The symbol must be globally unique, even the static ones.</span>", 
"<span class=\"comment\"> * 2. Static percpu variables cannot be defined inside a function.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Archs which need weak percpu definitions should define</span>", 
"<span class=\"comment\"> * ARCH_NEEDS_WEAK_PER_CPU in asm/percpu.h when necessary.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * To ensure that the generic code observes the above two</span>", 
"<span class=\"comment\"> * restrictions, if CONFIG_DEBUG_FORCE_WEAK_PER_CPU is set weak</span>", 
"<span class=\"comment\"> * definition is used for all cases.</span>", 
"<span class=\"comment\"> */</span>", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#ARCH_NEEDS_WEAK_PER_CPU\">ARCH_NEEDS_WEAK_PER_CPU</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_DEBUG_FORCE_WEAK_PER_CPU\">CONFIG_DEBUG_FORCE_WEAK_PER_CPU</a>)", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * __pcpu_scope_* dummy variable is used to enforce scope.  It</span>", 
"<span class=\"comment\"> * receives the static modifier when it's used in front of</span>", 
"<span class=\"comment\"> * DEFINE_PER_CPU() and will trigger build failure if</span>", 
"<span class=\"comment\"> * DECLARE_PER_CPU() is used for the same variable.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * __pcpu_unique_* dummy variable is used to enforce symbol uniqueness</span>", 
"<span class=\"comment\"> * such that hidden weak symbol collision, which will cause unrelated</span>", 
"<span class=\"comment\"> * variables to share the same address, can be detected during build.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DECLARE_PER_CPU_SECTION\">DECLARE_PER_CPU_SECTION</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#sec\">sec</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>extern <a class=\"id\" href=\"#__PCPU_DUMMY_ATTRS\">__PCPU_DUMMY_ATTRS</a> char <a class=\"id\" href=\"#__pcpu_scope_\">__pcpu_scope_</a>##<a class=\"id\" href=\"#name\">name</a>;<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>extern <a class=\"id\" href=\"#__PCPU_ATTRS\">__PCPU_ATTRS</a>(<a class=\"id\" href=\"#sec\">sec</a>) <a class=\"id\" href=\"#__typeof__\">__typeof__</a>(<a class=\"id\" href=\"#type\">type</a>) <a class=\"id\" href=\"#name\">name</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFINE_PER_CPU_SECTION\">DEFINE_PER_CPU_SECTION</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#sec\">sec</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__PCPU_DUMMY_ATTRS\">__PCPU_DUMMY_ATTRS</a> char <a class=\"id\" href=\"#__pcpu_scope_\">__pcpu_scope_</a>##<a class=\"id\" href=\"#name\">name</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>extern <a class=\"id\" href=\"#__PCPU_DUMMY_ATTRS\">__PCPU_DUMMY_ATTRS</a> char <a class=\"id\" href=\"#__pcpu_unique_\">__pcpu_unique_</a>##<a class=\"id\" href=\"#name\">name</a>;<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__PCPU_DUMMY_ATTRS\">__PCPU_DUMMY_ATTRS</a> char <a class=\"id\" href=\"#__pcpu_unique_\">__pcpu_unique_</a>##<a class=\"id\" href=\"#name\">name</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__PCPU_ATTRS\">__PCPU_ATTRS</a>(<a class=\"id\" href=\"#sec\">sec</a>) <a class=\"id\" href=\"#PER_CPU_DEF_ATTRIBUTES\">PER_CPU_DEF_ATTRIBUTES</a> <a class=\"id\" href=\"#__weak\">__weak</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__typeof__\">__typeof__</a>(<a class=\"id\" href=\"#type\">type</a>) <a class=\"id\" href=\"#name\">name</a>", 
"#else", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Normal declaration and definition macros.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DECLARE_PER_CPU_SECTION\">DECLARE_PER_CPU_SECTION</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#sec\">sec</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>extern <a class=\"id\" href=\"#__PCPU_ATTRS\">__PCPU_ATTRS</a>(<a class=\"id\" href=\"#sec\">sec</a>) <a class=\"id\" href=\"#__typeof__\">__typeof__</a>(<a class=\"id\" href=\"#type\">type</a>) <a class=\"id\" href=\"#name\">name</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFINE_PER_CPU_SECTION\">DEFINE_PER_CPU_SECTION</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#sec\">sec</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__PCPU_ATTRS\">__PCPU_ATTRS</a>(<a class=\"id\" href=\"#sec\">sec</a>) <a class=\"id\" href=\"#PER_CPU_DEF_ATTRIBUTES\">PER_CPU_DEF_ATTRIBUTES</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__typeof__\">__typeof__</a>(<a class=\"id\" href=\"#type\">type</a>) <a class=\"id\" href=\"#name\">name</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Variant on the per-CPU variable declaration/definition theme used for</span>", 
"<span class=\"comment\"> * ordinary per-CPU variables.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DECLARE_PER_CPU\">DECLARE_PER_CPU</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DECLARE_PER_CPU_SECTION\">DECLARE_PER_CPU_SECTION</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>, \"\")", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DEFINE_PER_CPU_SECTION\">DEFINE_PER_CPU_SECTION</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>, \"\")", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Declaration/definition used for per-CPU variables that must come first in</span>", 
"<span class=\"comment\"> * the set of variables.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DECLARE_PER_CPU_FIRST\">DECLARE_PER_CPU_FIRST</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DECLARE_PER_CPU_SECTION\">DECLARE_PER_CPU_SECTION</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#PER_CPU_FIRST_SECTION\">PER_CPU_FIRST_SECTION</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFINE_PER_CPU_FIRST\">DEFINE_PER_CPU_FIRST</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DEFINE_PER_CPU_SECTION\">DEFINE_PER_CPU_SECTION</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#PER_CPU_FIRST_SECTION\">PER_CPU_FIRST_SECTION</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Declaration/definition used for per-CPU variables that must be cacheline</span>", 
"<span class=\"comment\"> * aligned under SMP conditions so that, whilst a particular instance of the</span>", 
"<span class=\"comment\"> * data corresponds to a particular CPU, inefficiencies due to direct access by</span>", 
"<span class=\"comment\"> * other CPUs are reduced by preventing the data from unnecessarily spanning</span>", 
"<span class=\"comment\"> * cachelines.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * An example of this would be statistical data, where each CPU's set of data</span>", 
"<span class=\"comment\"> * is updated by that CPU alone, but the data from across all CPUs is collated</span>", 
"<span class=\"comment\"> * by a CPU processing a read from a proc file.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DECLARE_PER_CPU_SHARED_ALIGNED\">DECLARE_PER_CPU_SHARED_ALIGNED</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DECLARE_PER_CPU_SECTION\">DECLARE_PER_CPU_SECTION</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#PER_CPU_SHARED_ALIGNED_SECTION\">PER_CPU_SHARED_ALIGNED_SECTION</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#____cacheline_aligned_in_smp\">____cacheline_aligned_in_smp</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFINE_PER_CPU_SHARED_ALIGNED\">DEFINE_PER_CPU_SHARED_ALIGNED</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DEFINE_PER_CPU_SECTION\">DEFINE_PER_CPU_SECTION</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#PER_CPU_SHARED_ALIGNED_SECTION\">PER_CPU_SHARED_ALIGNED_SECTION</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#____cacheline_aligned_in_smp\">____cacheline_aligned_in_smp</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DECLARE_PER_CPU_ALIGNED\">DECLARE_PER_CPU_ALIGNED</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DECLARE_PER_CPU_SECTION\">DECLARE_PER_CPU_SECTION</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#PER_CPU_ALIGNED_SECTION\">PER_CPU_ALIGNED_SECTION</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#____cacheline_aligned\">____cacheline_aligned</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFINE_PER_CPU_ALIGNED\">DEFINE_PER_CPU_ALIGNED</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DEFINE_PER_CPU_SECTION\">DEFINE_PER_CPU_SECTION</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#PER_CPU_ALIGNED_SECTION\">PER_CPU_ALIGNED_SECTION</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#____cacheline_aligned\">____cacheline_aligned</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Declaration/definition used for per-CPU variables that must be page aligned.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DECLARE_PER_CPU_PAGE_ALIGNED\">DECLARE_PER_CPU_PAGE_ALIGNED</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DECLARE_PER_CPU_SECTION\">DECLARE_PER_CPU_SECTION</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>, \"..page_aligned\")<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__aligned\">__aligned</a>(<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFINE_PER_CPU_PAGE_ALIGNED\">DEFINE_PER_CPU_PAGE_ALIGNED</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DEFINE_PER_CPU_SECTION\">DEFINE_PER_CPU_SECTION</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>, \"..page_aligned\")<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__aligned\">__aligned</a>(<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Intermodule exports for per-CPU variables.  sparse forgets about</span>", 
"<span class=\"comment\"> * address space across EXPORT_SYMBOL(), change EXPORT_SYMBOL() to</span>", 
"<span class=\"comment\"> * noop if __CHECKER__.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__CHECKER__\">__CHECKER__</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXPORT_PER_CPU_SYMBOL\">EXPORT_PER_CPU_SYMBOL</a>(<a class=\"id\" href=\"#var\">var</a>) <a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#var\">var</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXPORT_PER_CPU_SYMBOL_GPL\">EXPORT_PER_CPU_SYMBOL_GPL</a>(<a class=\"id\" href=\"#var\">var</a>) <a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#var\">var</a>)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXPORT_PER_CPU_SYMBOL\">EXPORT_PER_CPU_SYMBOL</a>(<a class=\"id\" href=\"#var\">var</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXPORT_PER_CPU_SYMBOL_GPL\">EXPORT_PER_CPU_SYMBOL_GPL</a>(<a class=\"id\" href=\"#var\">var</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_PERCPU_DEFS_H */</span>", 
];
xr_frag_insert('l/e8/9bf418d747b7add02504df1511294474d0fcce.xr', __xr_tmp);
