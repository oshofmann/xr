var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Functions related to segment and merge handling</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bio\">bio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#scatterlist\">scatterlist</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"blk.h\"", 
"", 
"static unsigned int <a class=\"id\" href=\"#__blk_recalc_rq_segments\">__blk_recalc_rq_segments</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#bv\">bv</a>, *<a class=\"id\" href=\"#bvprv\">bvprv</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cluster\">cluster</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#high\">high</a>, <a class=\"id\" href=\"#highprv\">highprv</a> = 1;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#seg_size\">seg_size</a>, <a class=\"id\" href=\"#nr_phys_segs\">nr_phys_segs</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#fbio\">fbio</a>, *<a class=\"id\" href=\"#bbio\">bbio</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bio\">bio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fbio\">fbio</a> = <a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cluster\">cluster</a> = <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#QUEUE_FLAG_CLUSTER\">QUEUE_FLAG_CLUSTER</a>, &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seg_size\">seg_size</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_phys_segs\">nr_phys_segs</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_bio\">for_each_bio</a>(<a class=\"id\" href=\"#bio\">bio</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_for_each_segment\">bio_for_each_segment</a>(<a class=\"id\" href=\"#bv\">bv</a>, <a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the trick here is making sure that a high page is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * never considered part of another segment, since that</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * might change with the bounce page.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#high\">high</a> = <a class=\"id\" href=\"#page_to_pfn\">page_to_pfn</a>(<a class=\"id\" href=\"#bv\">bv</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>) &gt; <a class=\"id\" href=\"#queue_bounce_pfn\">queue_bounce_pfn</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#high\">high</a> || <a class=\"id\" href=\"#highprv\">highprv</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#new_segment\">new_segment</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cluster\">cluster</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#seg_size\">seg_size</a> + <a class=\"id\" href=\"#bv\">bv</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &gt; <a class=\"id\" href=\"#queue_max_segment_size\">queue_max_segment_size</a>(<a class=\"id\" href=\"#q\">q</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#new_segment\">new_segment</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#BIOVEC_PHYS_MERGEABLE\">BIOVEC_PHYS_MERGEABLE</a>(<a class=\"id\" href=\"#bvprv\">bvprv</a>, <a class=\"id\" href=\"#bv\">bv</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#new_segment\">new_segment</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#BIOVEC_SEG_BOUNDARY\">BIOVEC_SEG_BOUNDARY</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#bvprv\">bvprv</a>, <a class=\"id\" href=\"#bv\">bv</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#new_segment\">new_segment</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seg_size\">seg_size</a> += <a class=\"id\" href=\"#bv\">bv</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bvprv\">bvprv</a> = <a class=\"id\" href=\"#bv\">bv</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#new_segment\">new_segment</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nr_phys_segs\">nr_phys_segs</a> == 1 && <a class=\"id\" href=\"#seg_size\">seg_size</a> &gt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#fbio\">fbio</a>-><a class=\"id\" href=\"#bi_seg_front_size\">bi_seg_front_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fbio\">fbio</a>-><a class=\"id\" href=\"#bi_seg_front_size\">bi_seg_front_size</a> = <a class=\"id\" href=\"#seg_size\">seg_size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_phys_segs\">nr_phys_segs</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bvprv\">bvprv</a> = <a class=\"id\" href=\"#bv\">bv</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seg_size\">seg_size</a> = <a class=\"id\" href=\"#bv\">bv</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#highprv\">highprv</a> = <a class=\"id\" href=\"#high\">high</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bbio\">bbio</a> = <a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nr_phys_segs\">nr_phys_segs</a> == 1 && <a class=\"id\" href=\"#seg_size\">seg_size</a> &gt; <a class=\"id\" href=\"#fbio\">fbio</a>-><a class=\"id\" href=\"#bi_seg_front_size\">bi_seg_front_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fbio\">fbio</a>-><a class=\"id\" href=\"#bi_seg_front_size\">bi_seg_front_size</a> = <a class=\"id\" href=\"#seg_size\">seg_size</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#seg_size\">seg_size</a> &gt; <a class=\"id\" href=\"#bbio\">bbio</a>-><a class=\"id\" href=\"#bi_seg_back_size\">bi_seg_back_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bbio\">bbio</a>-><a class=\"id\" href=\"#bi_seg_back_size\">bi_seg_back_size</a> = <a class=\"id\" href=\"#seg_size\">seg_size</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nr_phys_segs\">nr_phys_segs</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#blk_recalc_rq_segments\">blk_recalc_rq_segments</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#nr_phys_segments\">nr_phys_segments</a> = <a class=\"id\" href=\"#__blk_recalc_rq_segments\">__blk_recalc_rq_segments</a>(<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#bio\">bio</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#blk_recount_segments\">blk_recount_segments</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#nxt\">nxt</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_next\">bi_next</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_next\">bi_next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_phys_segments\">bi_phys_segments</a> = <a class=\"id\" href=\"#__blk_recalc_rq_segments\">__blk_recalc_rq_segments</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_next\">bi_next</a> = <a class=\"id\" href=\"#nxt\">nxt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_flags\">bi_flags</a> |= (1 << <a class=\"id\" href=\"#BIO_SEG_VALID\">BIO_SEG_VALID</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#blk_recount_segments\">blk_recount_segments</a>);", 
"", 
"static int <a class=\"id\" href=\"#blk_phys_contig_segment\">blk_phys_contig_segment</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#nxt\">nxt</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#QUEUE_FLAG_CLUSTER\">QUEUE_FLAG_CLUSTER</a>, &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_seg_back_size\">bi_seg_back_size</a> + <a class=\"id\" href=\"#nxt\">nxt</a>-><a class=\"id\" href=\"#bi_seg_front_size\">bi_seg_front_size</a> &gt;", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#queue_max_segment_size\">queue_max_segment_size</a>(<a class=\"id\" href=\"#q\">q</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bio_has_data\">bio_has_data</a>(<a class=\"id\" href=\"#bio\">bio</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#BIOVEC_PHYS_MERGEABLE\">BIOVEC_PHYS_MERGEABLE</a>(<a class=\"id\" href=\"#__BVEC_END\">__BVEC_END</a>(<a class=\"id\" href=\"#bio\">bio</a>), <a class=\"id\" href=\"#__BVEC_START\">__BVEC_START</a>(<a class=\"id\" href=\"#nxt\">nxt</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * bio and nxt are contiguous in memory; check if the queue allows</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * these two to be merged into one</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#BIO_SEG_BOUNDARY\">BIO_SEG_BOUNDARY</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#nxt\">nxt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * map a request to scatterlist, return number of sg entries setup. Caller</span>", 
"<span class=\"comment\"> * must make sure sg can hold rq-&gt;nr_phys_segments entries</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#blk_rq_map_sg\">blk_rq_map_sg</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sglist\">sglist</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#bvec\">bvec</a>, *<a class=\"id\" href=\"#bvprv\">bvprv</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#req_iterator\">req_iterator</a> <a class=\"id\" href=\"#iter\">iter</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sg\">sg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nsegs\">nsegs</a>, <a class=\"id\" href=\"#cluster\">cluster</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nsegs\">nsegs</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cluster\">cluster</a> = <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#QUEUE_FLAG_CLUSTER\">QUEUE_FLAG_CLUSTER</a>, &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for each bio in rq</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bvprv\">bvprv</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg\">sg</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq_for_each_segment\">rq_for_each_segment</a>(<a class=\"id\" href=\"#bvec\">bvec</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#iter\">iter</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bvprv\">bvprv</a> && <a class=\"id\" href=\"#cluster\">cluster</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sg\">sg</a>-><a class=\"id\" href=\"#length\">length</a> + <a class=\"id\" href=\"#nbytes\">nbytes</a> &gt; <a class=\"id\" href=\"#queue_max_segment_size\">queue_max_segment_size</a>(<a class=\"id\" href=\"#q\">q</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#new_segment\">new_segment</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#BIOVEC_PHYS_MERGEABLE\">BIOVEC_PHYS_MERGEABLE</a>(<a class=\"id\" href=\"#bvprv\">bvprv</a>, <a class=\"id\" href=\"#bvec\">bvec</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#new_segment\">new_segment</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#BIOVEC_SEG_BOUNDARY\">BIOVEC_SEG_BOUNDARY</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#bvprv\">bvprv</a>, <a class=\"id\" href=\"#bvec\">bvec</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#new_segment\">new_segment</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg\">sg</a>-><a class=\"id\" href=\"#length\">length</a> += <a class=\"id\" href=\"#nbytes\">nbytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<a class=\"id\" href=\"#new_segment\">new_segment</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sg\">sg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg\">sg</a> = <a class=\"id\" href=\"#sglist\">sglist</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If the driver previously mapped a shorter</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * list, we could see a termination bit</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * prematurely unless it fully inits the sg</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * table on each mapping. We KNOW that there</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * must be more entries here or the driver</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * would be buggy, so force clear the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * termination bit to avoid doing a full</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * sg_init_table() in drivers for each command.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg\">sg</a>-><a class=\"id\" href=\"#page_link\">page_link</a> &= ~0x02;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg\">sg</a> = <a class=\"id\" href=\"#sg_next\">sg_next</a>(<a class=\"id\" href=\"#sg\">sg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_set_page\">sg_set_page</a>(<a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>, <a class=\"id\" href=\"#nbytes\">nbytes</a>, <a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nsegs\">nsegs</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bvprv\">bvprv</a> = <a class=\"id\" href=\"#bvec\">bvec</a>;", 
"<span class=\"ts\"/>} <span class=\"comment\">/* segments in rq */</span>", 
"", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_COPY_USER\">REQ_COPY_USER</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#blk_rq_bytes\">blk_rq_bytes</a>(<a class=\"id\" href=\"#rq\">rq</a>) &amp; <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#dma_pad_mask\">dma_pad_mask</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#pad_len\">pad_len</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#dma_pad_mask\">dma_pad_mask</a> &amp; ~<a class=\"id\" href=\"#blk_rq_bytes\">blk_rq_bytes</a>(<a class=\"id\" href=\"#rq\">rq</a>)) + 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg\">sg</a>-><a class=\"id\" href=\"#length\">length</a> += <a class=\"id\" href=\"#pad_len\">pad_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#extra_len\">extra_len</a> += <a class=\"id\" href=\"#pad_len\">pad_len</a>;", 
"<span class=\"ts\"/>}", 
"", 
];
xr_frag_insert('l/e8/b453975393803866d03225875dbc8930804454.xr', __xr_tmp);
