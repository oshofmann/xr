var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * security/tomoyo/load_policy.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Policy loader launcher for TOMOYO.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2005-2010  NTT DATA CORPORATION</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"common.h\"", 
"", 
"<span class=\"comment\">/* path to policy loader */</span>", 
"static const char *<a class=\"id\" href=\"#tomoyo_loader\">tomoyo_loader</a> = \"/sbin/tomoyo-init\";", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_policy_loader_exists - Check whether /sbin/tomoyo-init exists.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns true if /sbin/tomoyo-init exists, false otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tomoyo_policy_loader_exists\">tomoyo_policy_loader_exists</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Don't activate MAC if the policy loader doesn't exist.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the initrd includes /sbin/init but real-root-dev has not</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mounted on / yet, activating MAC will block the system since</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * policies are not loaded yet.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Thus, let do_execve() call this function everytime.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#path\">path</a> <a class=\"id\" href=\"#path\">path</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#kern_path\">kern_path</a>(<a class=\"id\" href=\"#tomoyo_loader\">tomoyo_loader</a>, <a class=\"id\" href=\"#LOOKUP_FOLLOW\">LOOKUP_FOLLOW</a>, &amp;<a class=\"id\" href=\"#path\">path</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Not activating Mandatory Access Control now \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"since %s doesn't exist.\\n\", <a class=\"id\" href=\"#tomoyo_loader\">tomoyo_loader</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_load_policy - Run external policy loader to load policy.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @filename: The program about to start.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function checks whether @filename is /sbin/init , and if so</span>", 
"<span class=\"comment\"> * invoke /sbin/tomoyo-init and wait for the termination of /sbin/tomoyo-init</span>", 
"<span class=\"comment\"> * and then continues invocation of /sbin/init.</span>", 
"<span class=\"comment\"> * /sbin/tomoyo-init reads policy files in /etc/tomoyo/ directory and</span>", 
"<span class=\"comment\"> * writes to /sys/kernel/security/tomoyo/ interfaces.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns nothing.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#tomoyo_load_policy\">tomoyo_load_policy</a>(const char *<a class=\"id\" href=\"#filename\">filename</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#argv\">argv</a>[2];", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#envp\">envp</a>[3];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tomoyo_policy_loaded\">tomoyo_policy_loaded</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check filename is /sbin/init or /sbin/tomoyo-start.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * /sbin/tomoyo-start is a dummy filename in case where /sbin/init can't</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * be passed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * You can create /sbin/tomoyo-start by</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * \"ln -s /bin/true /sbin/tomoyo-start\".</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#filename\">filename</a>, \"/sbin/init\") &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#filename\">filename</a>, \"/sbin/tomoyo-start\"))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tomoyo_policy_loader_exists\">tomoyo_policy_loader_exists</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Calling %s to load policy. Please wait.\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#tomoyo_loader\">tomoyo_loader</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#argv\">argv</a>[0] = (char *) <a class=\"id\" href=\"#tomoyo_loader\">tomoyo_loader</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#argv\">argv</a>[1] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#envp\">envp</a>[0] = \"HOME=/\";", 
"<span class=\"ts\"/><a class=\"id\" href=\"#envp\">envp</a>[1] = \"PATH=/sbin:/bin:/usr/sbin:/usr/bin\";", 
"<span class=\"ts\"/><a class=\"id\" href=\"#envp\">envp</a>[2] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call_usermodehelper\">call_usermodehelper</a>(<a class=\"id\" href=\"#argv\">argv</a>[0], <a class=\"id\" href=\"#argv\">argv</a>, <a class=\"id\" href=\"#envp\">envp</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_check_profile\">tomoyo_check_profile</a>();", 
"}", 
];
xr_frag_insert('l/e8/c0a4867fefa82fda46c80cf319a8d0a46fff4d.xr', __xr_tmp);
