var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2001 Sistina Software (UK) Limited</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is released under the GPL.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"dm.h\"", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kmod\">kmod</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bio\">bio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_MSG_PREFIX\">DM_MSG_PREFIX</a> \"target\"", 
"", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#_targets\">_targets</a>);", 
"static <a class=\"id\" href=\"#DECLARE_RWSEM\">DECLARE_RWSEM</a>(<a class=\"id\" href=\"#_lock\">_lock</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_MOD_NAME_SIZE\">DM_MOD_NAME_SIZE</a> 32", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#target_type\">target_type</a> *<a class=\"id\" href=\"#__find_target_type\">__find_target_type</a>(const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#target_type\">target_type</a> *<a class=\"id\" href=\"#tt\">tt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#tt\">tt</a>, &amp;<a class=\"id\" href=\"#_targets\">_targets</a>, <a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#tt\">tt</a>-><a class=\"id\" href=\"#name\">name</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tt\">tt</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#target_type\">target_type</a> *<a class=\"id\" href=\"#get_target_type\">get_target_type</a>(const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#target_type\">target_type</a> *<a class=\"id\" href=\"#tt\">tt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#_lock\">_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tt\">tt</a> = <a class=\"id\" href=\"#__find_target_type\">__find_target_type</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tt\">tt</a> && !<a class=\"id\" href=\"#try_module_get\">try_module_get</a>(<a class=\"id\" href=\"#tt\">tt</a>-><a class=\"id\" href=\"#module\">module</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tt\">tt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#_lock\">_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tt\">tt</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#load_module\">load_module</a>(const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#request_module\">request_module</a>(\"dm-%s\", <a class=\"id\" href=\"#name\">name</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#target_type\">target_type</a> *<a class=\"id\" href=\"#dm_get_target_type\">dm_get_target_type</a>(const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#target_type\">target_type</a> *<a class=\"id\" href=\"#tt\">tt</a> = <a class=\"id\" href=\"#get_target_type\">get_target_type</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tt\">tt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#load_module\">load_module</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tt\">tt</a> = <a class=\"id\" href=\"#get_target_type\">get_target_type</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tt\">tt</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#dm_put_target_type\">dm_put_target_type</a>(struct <a class=\"id\" href=\"#target_type\">target_type</a> *<a class=\"id\" href=\"#tt\">tt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#_lock\">_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#tt\">tt</a>-><a class=\"id\" href=\"#module\">module</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#_lock\">_lock</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#dm_target_iterate\">dm_target_iterate</a>(void (*<a class=\"id\" href=\"#iter_func\">iter_func</a>)(struct <a class=\"id\" href=\"#target_type\">target_type</a> *<a class=\"id\" href=\"#tt\">tt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#param\">param</a>), void *<a class=\"id\" href=\"#param\">param</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#target_type\">target_type</a> *<a class=\"id\" href=\"#tt\">tt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#_lock\">_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#tt\">tt</a>, &amp;<a class=\"id\" href=\"#_targets\">_targets</a>, <a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter_func\">iter_func</a>(<a class=\"id\" href=\"#tt\">tt</a>, <a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#_lock\">_lock</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#dm_register_target\">dm_register_target</a>(struct <a class=\"id\" href=\"#target_type\">target_type</a> *<a class=\"id\" href=\"#tt\">tt</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rv\">rv</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#_lock\">_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__find_target_type\">__find_target_type</a>(<a class=\"id\" href=\"#tt\">tt</a>-><a class=\"id\" href=\"#name\">name</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#tt\">tt</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#_targets\">_targets</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#_lock\">_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#dm_unregister_target\">dm_unregister_target</a>(struct <a class=\"id\" href=\"#target_type\">target_type</a> *<a class=\"id\" href=\"#tt\">tt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#_lock\">_lock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#__find_target_type\">__find_target_type</a>(<a class=\"id\" href=\"#tt\">tt</a>-><a class=\"id\" href=\"#name\">name</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMCRIT\">DMCRIT</a>(\"Unregistering unrecognised target: %s\", <a class=\"id\" href=\"#tt\">tt</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#tt\">tt</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#_lock\">_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * io-err: always fails an io, useful for bringing</span>", 
"<span class=\"comment\"> * up LVs that have holes in them.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#io_err_ctr\">io_err_ctr</a>(struct <a class=\"id\" href=\"#dm_target\">dm_target</a> *<a class=\"id\" href=\"#tt\">tt</a>, unsigned int <a class=\"id\" href=\"#argc\">argc</a>, char **<a class=\"id\" href=\"#args\">args</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Return error for discards instead of -EOPNOTSUPP</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tt\">tt</a>-><a class=\"id\" href=\"#num_discard_requests\">num_discard_requests</a> = 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#io_err_dtr\">io_err_dtr</a>(struct <a class=\"id\" href=\"#dm_target\">dm_target</a> *<a class=\"id\" href=\"#tt\">tt</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* empty */</span>", 
"}", 
"", 
"static int <a class=\"id\" href=\"#io_err_map\">io_err_map</a>(struct <a class=\"id\" href=\"#dm_target\">dm_target</a> *<a class=\"id\" href=\"#tt\">tt</a>, struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      union <a class=\"id\" href=\"#map_info\">map_info</a> *<a class=\"id\" href=\"#map_context\">map_context</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#target_type\">target_type</a> <a class=\"id\" href=\"#error_target\">error_target</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> = \"error\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#version\">version</a> = {1, 0, 1},", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ctr\">ctr</a>  = <a class=\"id\" href=\"#io_err_ctr\">io_err_ctr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dtr\">dtr</a>  = <a class=\"id\" href=\"#io_err_dtr\">io_err_dtr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#map\">map</a>  = <a class=\"id\" href=\"#io_err_map\">io_err_map</a>,", 
"};", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#dm_target_init\">dm_target_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dm_register_target\">dm_register_target</a>(&amp;<a class=\"id\" href=\"#error_target\">error_target</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#dm_target_exit\">dm_target_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_unregister_target\">dm_unregister_target</a>(&amp;<a class=\"id\" href=\"#error_target\">error_target</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dm_register_target\">dm_register_target</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dm_unregister_target\">dm_unregister_target</a>);", 
];
xr_frag_insert('l/e9/055346c18ccf26d383e2c9528a89e0759348a5.xr', __xr_tmp);
