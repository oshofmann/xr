var __xr_tmp = [
"static void <a class=\"id\" href=\"#cn_queue_free_callback\">cn_queue_free_callback</a>(struct <a class=\"id\" href=\"#cn_callback_entry\">cn_callback_entry</a> *<a class=\"id\" href=\"#cbq\">cbq</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* The first jobs have been sent to kevent, flush them too */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_scheduled_work\">flush_scheduled_work</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cbq\">cbq</a>-><a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#cn_queue\">cn_queue</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_workqueue\">flush_workqueue</a>(<a class=\"id\" href=\"#cbq\">cbq</a>-><a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#cn_queue\">cn_queue</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#cbq\">cbq</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#cn_cb_equal\">cn_cb_equal</a>(struct <a class=\"id\" href=\"#cb_id\">cb_id</a> *<a class=\"id\" href=\"#i1\">i1</a>, struct <a class=\"id\" href=\"#cb_id\">cb_id</a> *<a class=\"id\" href=\"#i2\">i2</a>)", 
"{", 
"<span class=\"ts\"/>return ((<a class=\"id\" href=\"#i1\">i1</a>-><a class=\"id\" href=\"#idx\">idx</a> == <a class=\"id\" href=\"#i2\">i2</a>-><a class=\"id\" href=\"#idx\">idx</a>) && (<a class=\"id\" href=\"#i1\">i1</a>-><a class=\"id\" href=\"#val\">val</a> == <a class=\"id\" href=\"#i2\">i2</a>-><a class=\"id\" href=\"#val\">val</a>));", 
"}", 
"", 
"int <a class=\"id\" href=\"#cn_queue_add_callback\">cn_queue_add_callback</a>(struct <a class=\"id\" href=\"#cn_queue_dev\">cn_queue_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, char *<a class=\"id\" href=\"#name\">name</a>, struct <a class=\"id\" href=\"#cb_id\">cb_id</a> *<a class=\"id\" href=\"#id\">id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  void (*<a class=\"id\" href=\"#callback\">callback</a>)(struct <a class=\"id\" href=\"#cn_msg\">cn_msg</a> *, struct <a class=\"id\" href=\"#netlink_skb_parms\">netlink_skb_parms</a> *))", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cn_callback_entry\">cn_callback_entry</a> *<a class=\"id\" href=\"#cbq\">cbq</a>, *<a class=\"id\" href=\"#__cbq\">__cbq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#found\">found</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cbq\">cbq</a> = <a class=\"id\" href=\"#cn_queue_alloc_callback_entry\">cn_queue_alloc_callback_entry</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#callback\">callback</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cbq\">cbq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cbq\">cbq</a>-><a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#__cbq\">__cbq</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#queue_list\">queue_list</a>, <a class=\"id\" href=\"#callback_entry\">callback_entry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cn_cb_equal\">cn_cb_equal</a>(&amp;<a class=\"id\" href=\"#__cbq\">__cbq</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#id\">id</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#found\">found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#cbq\">cbq</a>-><a class=\"id\" href=\"#callback_entry\">callback_entry</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#queue_list\">queue_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#found\">found</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cn_queue_free_callback\">cn_queue_free_callback</a>(<a class=\"id\" href=\"#cbq\">cbq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cbq\">cbq</a>-><a class=\"id\" href=\"#seq\">seq</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cbq\">cbq</a>-><a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#cbq\">cbq</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#idx\">idx</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#cn_queue_del_callback\">cn_queue_del_callback</a>(struct <a class=\"id\" href=\"#cn_queue_dev\">cn_queue_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#cb_id\">cb_id</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cn_callback_entry\">cn_callback_entry</a> *<a class=\"id\" href=\"#cbq\">cbq</a>, *<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#found\">found</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#cbq\">cbq</a>, <a class=\"id\" href=\"#n\">n</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#queue_list\">queue_list</a>, <a class=\"id\" href=\"#callback_entry\">callback_entry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cn_cb_equal\">cn_cb_equal</a>(&amp;<a class=\"id\" href=\"#cbq\">cbq</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#id\">id</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#cbq\">cbq</a>-><a class=\"id\" href=\"#callback_entry\">callback_entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#found\">found</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cn_queue_free_callback\">cn_queue_free_callback</a>(<a class=\"id\" href=\"#cbq\">cbq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"struct <a class=\"id\" href=\"#cn_queue_dev\">cn_queue_dev</a> *<a class=\"id\" href=\"#cn_queue_alloc_dev\">cn_queue_alloc_dev</a>(char *<a class=\"id\" href=\"#name\">name</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#nls\">nls</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cn_queue_dev\">cn_queue_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, sizeof(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>), \"%s\", <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#queue_list\">queue_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#wq_created\">wq_created</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#nls\">nls</a> = <a class=\"id\" href=\"#nls\">nls</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#wq_creation\">wq_creation</a>, <a class=\"id\" href=\"#cn_queue_create\">cn_queue_create</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#cn_queue_free_dev\">cn_queue_free_dev</a>(struct <a class=\"id\" href=\"#cn_queue_dev\">cn_queue_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cn_callback_entry\">cn_callback_entry</a> *<a class=\"id\" href=\"#cbq\">cbq</a>, *<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#timeout\">timeout</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DEFINE_WAIT\">DEFINE_WAIT</a>(<a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Flush the first pending jobs queued on kevent */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_scheduled_work\">flush_scheduled_work</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If the connector workqueue creation is still pending, wait for it */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prepare_to_wait\">prepare_to_wait</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#wq_created\">wq_created</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#TASK_UNINTERRUPTIBLE\">TASK_UNINTERRUPTIBLE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#wq_requested\">wq_requested</a>) && !<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cn_queue\">cn_queue</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#schedule_timeout\">schedule_timeout</a>(<a class=\"id\" href=\"#HZ\">HZ</a> * 2);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#timeout\">timeout</a> && !<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cn_queue\">cn_queue</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#finish_wait\">finish_wait</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#wq_created\">wq_created</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cn_queue\">cn_queue</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_workqueue\">flush_workqueue</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cn_queue\">cn_queue</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#destroy_workqueue\">destroy_workqueue</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cn_queue\">cn_queue</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#cbq\">cbq</a>, <a class=\"id\" href=\"#n\">n</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#queue_list\">queue_list</a>, <a class=\"id\" href=\"#callback_entry\">callback_entry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#cbq\">cbq</a>-><a class=\"id\" href=\"#callback_entry\">callback_entry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Waiting for %s to become free: refcnt=%d.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msleep\">msleep</a>(1000);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
];
xr_frag_insert('l/e9/30fbea8e3e73e7c2827adb91a98cabb968f13b.xr', __xr_tmp);
