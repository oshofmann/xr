var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * kernel userspace event delivery</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2004 Red Hat, Inc.  All rights reserved.</span>", 
"<span class=\"comment\"> * Copyright (C) 2004 Novell, Inc.  All rights reserved.</span>", 
"<span class=\"comment\"> * Copyright (C) 2004 IBM, Inc. All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Licensed under the GNU GPL v2.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Robert Love<span class=\"ts\"/><span class=\"ts\"/>&lt;rml@novell.com&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Kay Sievers<span class=\"ts\"/><span class=\"ts\"/>&lt;kay.sievers@vrfy.org&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Arjan van de Ven<span class=\"ts\"/>&lt;arjanv@redhat.com&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Greg Kroah-Hartman<span class=\"ts\"/>&lt;greg@kroah.com&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kobject\">kobject</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#user_namespace\">user_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netlink\">netlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#uevent_seqnum\">uevent_seqnum</a>;", 
"char <a class=\"id\" href=\"#uevent_helper\">uevent_helper</a>[<a class=\"id\" href=\"#UEVENT_HELPER_PATH_LEN\">UEVENT_HELPER_PATH_LEN</a>] = <a class=\"id\" href=\"#CONFIG_UEVENT_HELPER_PATH\">CONFIG_UEVENT_HELPER_PATH</a>;", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#sequence_lock\">sequence_lock</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET\">CONFIG_NET</a>", 
"struct <a class=\"id\" href=\"#uevent_sock\">uevent_sock</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"};", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#uevent_sock_list\">uevent_sock_list</a>);", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#uevent_sock_mutex\">uevent_sock_mutex</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* the strings here must match the enum in include/linux/kobject.h */</span>", 
"static const char *<a class=\"id\" href=\"#kobject_actions\">kobject_actions</a>[] = {", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#KOBJ_ADD\">KOBJ_ADD</a>] =<span class=\"ts\"/><span class=\"ts\"/>\"add\",", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#KOBJ_REMOVE\">KOBJ_REMOVE</a>] =<span class=\"ts\"/><span class=\"ts\"/>\"remove\",", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#KOBJ_CHANGE\">KOBJ_CHANGE</a>] =<span class=\"ts\"/><span class=\"ts\"/>\"change\",", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#KOBJ_MOVE\">KOBJ_MOVE</a>] =<span class=\"ts\"/><span class=\"ts\"/>\"move\",", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#KOBJ_ONLINE\">KOBJ_ONLINE</a>] =<span class=\"ts\"/><span class=\"ts\"/>\"online\",", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#KOBJ_OFFLINE\">KOBJ_OFFLINE</a>] =<span class=\"ts\"/>\"offline\",", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * kobject_action_type - translate action string to numeric type</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @buf: buffer containing the action string, newline is ignored</span>", 
"<span class=\"comment\"> * @len: length of buffer</span>", 
"<span class=\"comment\"> * @type: pointer to the location to store the action type</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 if the action string was recognized.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#kobject_action_type\">kobject_action_type</a>(const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>enum <a class=\"id\" href=\"#kobject_action\">kobject_action</a> *<a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#kobject_action\">kobject_action</a> <a class=\"id\" href=\"#action\">action</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> && (<a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#count\">count</a>-1] == '\\n' || <a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#count\">count</a>-1] == '\\0'))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a>--;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#action\">action</a> = 0; <a class=\"id\" href=\"#action\">action</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#kobject_actions\">kobject_actions</a>); <a class=\"id\" href=\"#action\">action</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#kobject_actions\">kobject_actions</a>[<a class=\"id\" href=\"#action\">action</a>], <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#kobject_actions\">kobject_actions</a>[<a class=\"id\" href=\"#action\">action</a>][<a class=\"id\" href=\"#count\">count</a>] != '\\0')", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#action\">action</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET\">CONFIG_NET</a>", 
"static int <a class=\"id\" href=\"#kobj_bcast_filter\">kobj_bcast_filter</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#dsk\">dsk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#kobj_ns_type_operations\">kobj_ns_type_operations</a> *<a class=\"id\" href=\"#ops\">ops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#kobj_ns_ops\">kobj_ns_ops</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const void *<a class=\"id\" href=\"#sock_ns\">sock_ns</a>, *<a class=\"id\" href=\"#ns\">ns</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#kobj\">kobj</a>-><a class=\"id\" href=\"#ktype\">ktype</a>-><a class=\"id\" href=\"#namespace\">namespace</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_ns\">sock_ns</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#netlink_ns\">netlink_ns</a>(<a class=\"id\" href=\"#dsk\">dsk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sock_ns\">sock_ns</a> != <a class=\"id\" href=\"#ns\">ns</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#kobj_usermode_filter\">kobj_usermode_filter</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#kobj_ns_type_operations\">kobj_ns_type_operations</a> *<a class=\"id\" href=\"#ops\">ops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#kobj_ns_ops\">kobj_ns_ops</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const void *<a class=\"id\" href=\"#init_ns\">init_ns</a>, *<a class=\"id\" href=\"#ns\">ns</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#kobj\">kobj</a>-><a class=\"id\" href=\"#ktype\">ktype</a>-><a class=\"id\" href=\"#namespace\">namespace</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_ns\">init_ns</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#initial_ns\">initial_ns</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ns\">ns</a> != <a class=\"id\" href=\"#init_ns\">init_ns</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * kobject_uevent_env - send an uevent with environmental data</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @action: action that is happening</span>", 
"<span class=\"comment\"> * @kobj: struct kobject that the action is happening to</span>", 
"<span class=\"comment\"> * @envp_ext: pointer to environmental data</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 if kobject_uevent_env() is completed with success or the</span>", 
"<span class=\"comment\"> * corresponding error when it fails.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#kobject_uevent_env\">kobject_uevent_env</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>, enum <a class=\"id\" href=\"#kobject_action\">kobject_action</a> <a class=\"id\" href=\"#action\">action</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       char *<a class=\"id\" href=\"#envp_ext\">envp_ext</a>[])", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobj_uevent_env\">kobj_uevent_env</a> *<a class=\"id\" href=\"#env\">env</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#action_string\">action_string</a> = <a class=\"id\" href=\"#kobject_actions\">kobject_actions</a>[<a class=\"id\" href=\"#action\">action</a>];", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#devpath\">devpath</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#subsystem\">subsystem</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#top_kobj\">top_kobj</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kset\">kset</a> *<a class=\"id\" href=\"#kset\">kset</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#kset_uevent_ops\">kset_uevent_ops</a> *<a class=\"id\" href=\"#uevent_ops\">uevent_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET\">CONFIG_NET</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uevent_sock\">uevent_sock</a> *<a class=\"id\" href=\"#ue_sk\">ue_sk</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"kobject: '%s' (%p): %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#kobject_name\">kobject_name</a>(<a class=\"id\" href=\"#kobj\">kobj</a>), <a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* search the kset we belong to */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#top_kobj\">top_kobj</a> = <a class=\"id\" href=\"#kobj\">kobj</a>;", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#top_kobj\">top_kobj</a>-><a class=\"id\" href=\"#kset\">kset</a> && <a class=\"id\" href=\"#top_kobj\">top_kobj</a>-><a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#top_kobj\">top_kobj</a> = <a class=\"id\" href=\"#top_kobj\">top_kobj</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#top_kobj\">top_kobj</a>-><a class=\"id\" href=\"#kset\">kset</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"kobject: '%s' (%p): %s: attempted to send uevent \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"without kset!\\n\", <a class=\"id\" href=\"#kobject_name\">kobject_name</a>(<a class=\"id\" href=\"#kobj\">kobj</a>), <a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kset\">kset</a> = <a class=\"id\" href=\"#top_kobj\">top_kobj</a>-><a class=\"id\" href=\"#kset\">kset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uevent_ops\">uevent_ops</a> = <a class=\"id\" href=\"#kset\">kset</a>-><a class=\"id\" href=\"#uevent_ops\">uevent_ops</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* skip the event, if uevent_suppress is set*/</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#kobj\">kobj</a>-><a class=\"id\" href=\"#uevent_suppress\">uevent_suppress</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"kobject: '%s' (%p): %s: uevent_suppress \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"caused the event to drop!\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#kobject_name\">kobject_name</a>(<a class=\"id\" href=\"#kobj\">kobj</a>), <a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* skip the event, if the filter returns zero. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uevent_ops\">uevent_ops</a> && <a class=\"id\" href=\"#uevent_ops\">uevent_ops</a>-><a class=\"id\" href=\"#filter\">filter</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#uevent_ops\">uevent_ops</a>-><a class=\"id\" href=\"#filter\">filter</a>(<a class=\"id\" href=\"#kset\">kset</a>, <a class=\"id\" href=\"#kobj\">kobj</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"kobject: '%s' (%p): %s: filter function \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"caused the event to drop!\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#kobject_name\">kobject_name</a>(<a class=\"id\" href=\"#kobj\">kobj</a>), <a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* originating subsystem */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uevent_ops\">uevent_ops</a> && <a class=\"id\" href=\"#uevent_ops\">uevent_ops</a>-><a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#subsystem\">subsystem</a> = <a class=\"id\" href=\"#uevent_ops\">uevent_ops</a>-><a class=\"id\" href=\"#name\">name</a>(<a class=\"id\" href=\"#kset\">kset</a>, <a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#subsystem\">subsystem</a> = <a class=\"id\" href=\"#kobject_name\">kobject_name</a>(&amp;<a class=\"id\" href=\"#kset\">kset</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#subsystem\">subsystem</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"kobject: '%s' (%p): %s: unset subsystem caused the \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"event to drop!\\n\", <a class=\"id\" href=\"#kobject_name\">kobject_name</a>(<a class=\"id\" href=\"#kobj\">kobj</a>), <a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* environment buffer */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#env\">env</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#kobj_uevent_env\">kobj_uevent_env</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#env\">env</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* complete object path */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#devpath\">devpath</a> = <a class=\"id\" href=\"#kobject_get_path\">kobject_get_path</a>(<a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#devpath\">devpath</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* default keys */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"ACTION=%s\", <a class=\"id\" href=\"#action_string\">action_string</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"DEVPATH=%s\", <a class=\"id\" href=\"#devpath\">devpath</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"SUBSYSTEM=%s\", <a class=\"id\" href=\"#subsystem\">subsystem</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* keys passed in from the caller */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#envp_ext\">envp_ext</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#envp_ext\">envp_ext</a>[<a class=\"id\" href=\"#i\">i</a>]; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"%s\", <a class=\"id\" href=\"#envp_ext\">envp_ext</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* let the kset specific function add its stuff */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uevent_ops\">uevent_ops</a> && <a class=\"id\" href=\"#uevent_ops\">uevent_ops</a>-><a class=\"id\" href=\"#uevent\">uevent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#uevent_ops\">uevent_ops</a>-><a class=\"id\" href=\"#uevent\">uevent</a>(<a class=\"id\" href=\"#kset\">kset</a>, <a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#env\">env</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"kobject: '%s' (%p): %s: uevent() returned \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"%d\\n\", <a class=\"id\" href=\"#kobject_name\">kobject_name</a>(<a class=\"id\" href=\"#kobj\">kobj</a>), <a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#retval\">retval</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Mark \"add\" and \"remove\" events in the object to ensure proper</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * events to userspace during automatic cleanup. If the object did</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * send an \"add\" event, \"remove\" will automatically generated by</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the core, if not already done by the caller.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#action\">action</a> == <a class=\"id\" href=\"#KOBJ_ADD\">KOBJ_ADD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobj\">kobj</a>-><a class=\"id\" href=\"#state_add_uevent_sent\">state_add_uevent_sent</a> = 1;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#action\">action</a> == <a class=\"id\" href=\"#KOBJ_REMOVE\">KOBJ_REMOVE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobj\">kobj</a>-><a class=\"id\" href=\"#state_remove_uevent_sent\">state_remove_uevent_sent</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we will send an event, so request a new sequence number */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#sequence_lock\">sequence_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq\">seq</a> = ++<a class=\"id\" href=\"#uevent_seqnum\">uevent_seqnum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sequence_lock\">sequence_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"SEQNUM=%llu\", (unsigned long long)<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NET\">CONFIG_NET</a>)", 
"<span class=\"ts\"/><span class=\"comment\">/* send netlink message */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#uevent_sock_mutex\">uevent_sock_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#ue_sk\">ue_sk</a>, &amp;<a class=\"id\" href=\"#uevent_sock_list\">uevent_sock_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#uevent_sock\">uevent_sock</a> = <a class=\"id\" href=\"#ue_sk\">ue_sk</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* allocate message with the maximum possible size */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#action_string\">action_string</a>) + <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#devpath\">devpath</a>) + 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#alloc_skb\">alloc_skb</a>(<a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#buflen\">buflen</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#scratch\">scratch</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* add header */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scratch\">scratch</a> = <a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#scratch\">scratch</a>, \"%s@%s\", <a class=\"id\" href=\"#action_string\">action_string</a>, <a class=\"id\" href=\"#devpath\">devpath</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* copy keys to our continuous event payload buffer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#envp_idx\">envp_idx</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#envp\">envp</a>[<a class=\"id\" href=\"#i\">i</a>]) + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scratch\">scratch</a> = <a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strcpy\">strcpy</a>(<a class=\"id\" href=\"#scratch\">scratch</a>, <a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#envp\">envp</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NETLINK_CB\">NETLINK_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>).<a class=\"id\" href=\"#dst_group\">dst_group</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#netlink_broadcast_filtered\">netlink_broadcast_filtered</a>(<a class=\"id\" href=\"#uevent_sock\">uevent_sock</a>, <a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    0, 1, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#kobj_bcast_filter\">kobj_bcast_filter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ENOBUFS should be handled in userspace */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> == -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#uevent_sock_mutex\">uevent_sock_mutex</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* call uevent_helper, usually only enabled during early boot */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uevent_helper\">uevent_helper</a>[0] && !<a class=\"id\" href=\"#kobj_usermode_filter\">kobj_usermode_filter</a>(<a class=\"id\" href=\"#kobj\">kobj</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#argv\">argv</a> [3];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#argv\">argv</a> [0] = <a class=\"id\" href=\"#uevent_helper\">uevent_helper</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#argv\">argv</a> [1] = (char *)<a class=\"id\" href=\"#subsystem\">subsystem</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#argv\">argv</a> [2] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"HOME=/\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"PATH=/sbin:/bin:/usr/sbin:/usr/bin\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#call_usermodehelper\">call_usermodehelper</a>(<a class=\"id\" href=\"#argv\">argv</a>[0], <a class=\"id\" href=\"#argv\">argv</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#envp\">envp</a>, <a class=\"id\" href=\"#UMH_WAIT_EXEC\">UMH_WAIT_EXEC</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#exit\">exit</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#devpath\">devpath</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#env\">env</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#kobject_uevent_env\">kobject_uevent_env</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * kobject_uevent - notify userspace by sending an uevent</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @action: action that is happening</span>", 
"<span class=\"comment\"> * @kobj: struct kobject that the action is happening to</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 if kobject_uevent() is completed with success or the</span>", 
"<span class=\"comment\"> * corresponding error when it fails.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>, enum <a class=\"id\" href=\"#kobject_action\">kobject_action</a> <a class=\"id\" href=\"#action\">action</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#kobject_uevent_env\">kobject_uevent_env</a>(<a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#action\">action</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * add_uevent_var - add key value string to the environment buffer</span>", 
"<span class=\"comment\"> * @env: environment buffer structure</span>", 
"<span class=\"comment\"> * @format: printf format for the key=value pair</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 if environment variable was added successfully or -ENOMEM</span>", 
"<span class=\"comment\"> * if no space was available.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(struct <a class=\"id\" href=\"#kobj_uevent_env\">kobj_uevent_env</a> *<a class=\"id\" href=\"#env\">env</a>, const char *<a class=\"id\" href=\"#format\">format</a>, ...)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#envp_idx\">envp_idx</a> >= <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#envp\">envp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN\">WARN</a>(1, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"add_uevent_var: too many keys\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_start\">va_start</a>(<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#format\">format</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#vsnprintf\">vsnprintf</a>(&amp;<a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#buflen\">buflen</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(<a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#buf\">buf</a>) - <a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#buflen\">buflen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#format\">format</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_end\">va_end</a>(<a class=\"id\" href=\"#args\">args</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> >= (sizeof(<a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#buf\">buf</a>) - <a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#buflen\">buflen</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN\">WARN</a>(1, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"add_uevent_var: buffer size too small\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#envp\">envp</a>[<a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#envp_idx\">envp_idx</a>++] = &amp;<a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#buflen\">buflen</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#buflen\">buflen</a> += <a class=\"id\" href=\"#len\">len</a> + 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>);", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NET\">CONFIG_NET</a>)", 
"static int <a class=\"id\" href=\"#uevent_net_init\">uevent_net_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uevent_sock\">uevent_sock</a> *<a class=\"id\" href=\"#ue_sk\">ue_sk</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ue_sk\">ue_sk</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#ue_sk\">ue_sk</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ue_sk\">ue_sk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ue_sk\">ue_sk</a>-><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#netlink_kernel_create\">netlink_kernel_create</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#NETLINK_KOBJECT_UEVENT\">NETLINK_KOBJECT_UEVENT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  1, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ue_sk\">ue_sk</a>-><a class=\"id\" href=\"#sk\">sk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"kobject_uevent: unable to create netlink socket!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ue_sk\">ue_sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#uevent_sock_mutex\">uevent_sock_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#ue_sk\">ue_sk</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#uevent_sock_list\">uevent_sock_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#uevent_sock_mutex\">uevent_sock_mutex</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#uevent_net_exit\">uevent_net_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uevent_sock\">uevent_sock</a> *<a class=\"id\" href=\"#ue_sk\">ue_sk</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#uevent_sock_mutex\">uevent_sock_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#ue_sk\">ue_sk</a>, &amp;<a class=\"id\" href=\"#uevent_sock_list\">uevent_sock_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#ue_sk\">ue_sk</a>-><a class=\"id\" href=\"#sk\">sk</a>) == <a class=\"id\" href=\"#net\">net</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#found\">found</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#uevent_sock_mutex\">uevent_sock_mutex</a>);", 
"<span class=\"ts\"/>return;", 
"", 
"<a class=\"id\" href=\"#found\">found</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#ue_sk\">ue_sk</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#uevent_sock_mutex\">uevent_sock_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_kernel_release\">netlink_kernel_release</a>(<a class=\"id\" href=\"#ue_sk\">ue_sk</a>-><a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ue_sk\">ue_sk</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pernet_operations\">pernet_operations</a> <a class=\"id\" href=\"#uevent_net_ops\">uevent_net_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#init\">init</a><span class=\"ts\"/>= <a class=\"id\" href=\"#uevent_net_init\">uevent_net_init</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#exit\">exit</a><span class=\"ts\"/>= <a class=\"id\" href=\"#uevent_net_exit\">uevent_net_exit</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#kobject_uevent_init\">kobject_uevent_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_set_nonroot\">netlink_set_nonroot</a>(<a class=\"id\" href=\"#NETLINK_KOBJECT_UEVENT\">NETLINK_KOBJECT_UEVENT</a>, <a class=\"id\" href=\"#NL_NONROOT_RECV\">NL_NONROOT_RECV</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#register_pernet_subsys\">register_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#uevent_net_ops\">uevent_net_ops</a>);", 
"}", 
"", 
"", 
"<a class=\"id\" href=\"#postcore_initcall\">postcore_initcall</a>(<a class=\"id\" href=\"#kobject_uevent_init\">kobject_uevent_init</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/e9/3bde83d5ba13ed6bf55d545e9073dbf763da34.xr', __xr_tmp);
