var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright 2004 James Cleverdon, IBM.</span>", 
"<span class=\"comment\"> * Subject to the GNU Public License, v.2</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Generic APIC sub-arch probe layer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Hacked for x86-64 by James Cleverdon from i386 architecture code by</span>", 
"<span class=\"comment\"> * Martin Bligh, Andi Kleen, James Bottomley, John Stultz, and</span>", 
"<span class=\"comment\"> * James Cleverdon.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#threads\">threads</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpumask\">cpumask</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ctype\">ctype</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hardirq\">hardirq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dmar\">dmar</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#apic\">apic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#ipi\">ipi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#setup\">setup</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"extern struct <a class=\"id\" href=\"#apic\">apic</a> <a class=\"id\" href=\"#apic_flat\">apic_flat</a>;", 
"extern struct <a class=\"id\" href=\"#apic\">apic</a> <a class=\"id\" href=\"#apic_physflat\">apic_physflat</a>;", 
"extern struct <a class=\"id\" href=\"#apic\">apic</a> <a class=\"id\" href=\"#apic_x2xpic_uv_x\">apic_x2xpic_uv_x</a>;", 
"extern struct <a class=\"id\" href=\"#apic\">apic</a> <a class=\"id\" href=\"#apic_x2apic_phys\">apic_x2apic_phys</a>;", 
"extern struct <a class=\"id\" href=\"#apic\">apic</a> <a class=\"id\" href=\"#apic_x2apic_cluster\">apic_x2apic_cluster</a>;", 
"", 
"struct <a class=\"id\" href=\"#apic\">apic</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> *<a class=\"id\" href=\"#apic\">apic</a> = &amp;<a class=\"id\" href=\"#apic_flat\">apic_flat</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#apic\">apic</a>);", 
"", 
"static struct <a class=\"id\" href=\"#apic\">apic</a> *<a class=\"id\" href=\"#apic_probe\">apic_probe</a>[] <a class=\"id\" href=\"#__initdata\">__initdata</a> = {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_UV\">CONFIG_X86_UV</a>", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#apic_x2apic_uv_x\">apic_x2apic_uv_x</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_X2APIC\">CONFIG_X86_X2APIC</a>", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#apic_x2apic_phys\">apic_x2apic_phys</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#apic_x2apic_cluster\">apic_x2apic_cluster</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#apic_physflat\">apic_physflat</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#apicid_phys_pkg_id\">apicid_phys_pkg_id</a>(int <a class=\"id\" href=\"#initial_apic_id\">initial_apic_id</a>, int <a class=\"id\" href=\"#index_msb\">index_msb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hard_smp_processor_id\">hard_smp_processor_id</a>() >> <a class=\"id\" href=\"#index_msb\">index_msb</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Check the APIC IDs in bios_cpu_apicid and choose the APIC mode.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#default_setup_apic_routing\">default_setup_apic_routing</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_X2APIC\">CONFIG_X86_X2APIC</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#x2apic_mode\">x2apic_mode</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_UV\">CONFIG_X86_UV</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       && <a class=\"id\" href=\"#apic\">apic</a> != &amp;<a class=\"id\" href=\"#apic_x2apic_uv_x\">apic_x2apic_uv_x</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       ) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#x2apic_phys\">x2apic_phys</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic\">apic</a> = &amp;<a class=\"id\" href=\"#apic_x2apic_phys\">apic_x2apic_phys</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic\">apic</a> = &amp;<a class=\"id\" href=\"#apic_x2apic_cluster\">apic_x2apic_cluster</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#apic\">apic</a> == &amp;<a class=\"id\" href=\"#apic_flat\">apic_flat</a> && <a class=\"id\" href=\"#num_possible_cpus\">num_possible_cpus</a>() &gt; 8)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic\">apic</a> = &amp;<a class=\"id\" href=\"#apic_physflat\">apic_physflat</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Setting APIC routing to %s\\n\", <a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_vsmp_box\">is_vsmp_box</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* need to update phys_pkg_id */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#phys_pkg_id\">phys_pkg_id</a> = <a class=\"id\" href=\"#apicid_phys_pkg_id\">apicid_phys_pkg_id</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Now that apic routing model is selected, configure the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * fault handling for intr remapping.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#intr_remapping_enabled\">intr_remapping_enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#enable_drhd_fault_handling\">enable_drhd_fault_handling</a>();", 
"}", 
"", 
"<span class=\"comment\">/* Same for both flat and physical. */</span>", 
"", 
"void <a class=\"id\" href=\"#apic_send_IPI_self\">apic_send_IPI_self</a>(int <a class=\"id\" href=\"#vector\">vector</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__default_send_IPI_shortcut\">__default_send_IPI_shortcut</a>(<a class=\"id\" href=\"#APIC_DEST_SELF\">APIC_DEST_SELF</a>, <a class=\"id\" href=\"#vector\">vector</a>, <a class=\"id\" href=\"#APIC_DEST_PHYSICAL\">APIC_DEST_PHYSICAL</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#default_acpi_madt_oem_check\">default_acpi_madt_oem_check</a>(char *<a class=\"id\" href=\"#oem_id\">oem_id</a>, char *<a class=\"id\" href=\"#oem_table_id\">oem_table_id</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#apic_probe\">apic_probe</a>[<a class=\"id\" href=\"#i\">i</a>]; ++<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#apic_probe\">apic_probe</a>[<a class=\"id\" href=\"#i\">i</a>]-><a class=\"id\" href=\"#acpi_madt_oem_check\">acpi_madt_oem_check</a>(<a class=\"id\" href=\"#oem_id\">oem_id</a>, <a class=\"id\" href=\"#oem_table_id\">oem_table_id</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic\">apic</a> = <a class=\"id\" href=\"#apic_probe\">apic_probe</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Setting APIC routing to %s.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
];
xr_frag_insert('l/e9/ad8445ad67674d5a72f54f9efa0181a6b70274.xr', __xr_tmp);
