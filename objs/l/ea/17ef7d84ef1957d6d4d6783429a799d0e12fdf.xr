var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\">    hwmon.c - part of lm_sensors, Linux kernel modules for hardware monitoring</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">    This file defines the sysfs class \"hwmon\", for use by sensors drivers.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">    Copyright (C) 2005 Mark M. Hoffman &lt;mhoffman@lightlink.com&gt;</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">    This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\">    it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\">    the Free Software Foundation; version 2 of the License.</span>", 
"<span class=\"comment\">*/</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#err\">err</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kdev_t\">kdev_t</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#idr\">idr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hwmon\">hwmon</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HWMON_ID_PREFIX\">HWMON_ID_PREFIX</a> \"hwmon\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HWMON_ID_FORMAT\">HWMON_ID_FORMAT</a> <a class=\"id\" href=\"#HWMON_ID_PREFIX\">HWMON_ID_PREFIX</a> \"%d\"", 
"", 
"static struct <a class=\"id\" href=\"#class\">class</a> *<a class=\"id\" href=\"#hwmon_class\">hwmon_class</a>;", 
"", 
"static <a class=\"id\" href=\"#DEFINE_IDR\">DEFINE_IDR</a>(<a class=\"id\" href=\"#hwmon_idr\">hwmon_idr</a>);", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#idr_lock\">idr_lock</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * hwmon_device_register - register w/ hwmon</span>", 
"<span class=\"comment\"> * @dev: the device to register</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * hwmon_device_unregister() must be called when the device is no</span>", 
"<span class=\"comment\"> * longer needed.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the pointer to the new device.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#hwmon_device_register\">hwmon_device_register</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#hwdev\">hwdev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<a class=\"id\" href=\"#again\">again</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#idr_pre_get\">idr_pre_get</a>(&amp;<a class=\"id\" href=\"#hwmon_idr\">hwmon_idr</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>) == 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#idr_lock\">idr_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#idr_get_new\">idr_get_new</a>(&amp;<a class=\"id\" href=\"#hwmon_idr\">hwmon_idr</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#idr_lock\">idr_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#again\">again</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#err\">err</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#id\">id</a> &amp; <a class=\"id\" href=\"#MAX_ID_MASK\">MAX_ID_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hwdev\">hwdev</a> = <a class=\"id\" href=\"#device_create\">device_create</a>(<a class=\"id\" href=\"#hwmon_class\">hwmon_class</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(0, 0), <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#HWMON_ID_FORMAT\">HWMON_ID_FORMAT</a>, <a class=\"id\" href=\"#id\">id</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#hwdev\">hwdev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#idr_lock\">idr_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idr_remove\">idr_remove</a>(&amp;<a class=\"id\" href=\"#hwmon_idr\">hwmon_idr</a>, <a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#idr_lock\">idr_lock</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hwdev\">hwdev</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * hwmon_device_unregister - removes the previously registered class device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @dev: the class device to destroy</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#hwmon_device_unregister\">hwmon_device_unregister</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#id\">id</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#HWMON_ID_FORMAT\">HWMON_ID_FORMAT</a>, &amp;<a class=\"id\" href=\"#id\">id</a>) == 1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_unregister\">device_unregister</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#idr_lock\">idr_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idr_remove\">idr_remove</a>(&amp;<a class=\"id\" href=\"#hwmon_idr\">hwmon_idr</a>, <a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#idr_lock\">idr_lock</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_dbg\">dev_dbg</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"hwmon_device_unregister() failed: bad class ID!\\n\");", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#hwmon_pci_quirks\">hwmon_pci_quirks</a>(void)", 
"{", 
"#if <a class=\"id\" href=\"#defined\">defined</a> <a class=\"id\" href=\"#CONFIG_X86\">CONFIG_X86</a> && <a class=\"id\" href=\"#defined\">defined</a> <a class=\"id\" href=\"#CONFIG_PCI\">CONFIG_PCI</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#sb\">sb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#enable\">enable</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Open access to 0x295-0x296 on MSI MS-7031 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#pci_get_device\">pci_get_device</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_ATI\">PCI_VENDOR_ID_ATI</a>, 0x436c, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#subsystem_vendor\">subsystem_vendor</a> == 0x1462 &&<span class=\"ts\"/><span class=\"comment\">/* MSI */</span>", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#subsystem_device\">subsystem_device</a> == 0x0031)) {<span class=\"ts\"/><span class=\"comment\">/* MS-7031 */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_byte\">pci_read_config_byte</a>(<a class=\"id\" href=\"#sb\">sb</a>, 0x48, &amp;<a class=\"id\" href=\"#enable\">enable</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#sb\">sb</a>, 0x64, &amp;<a class=\"id\" href=\"#base\">base</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#base\">base</a> == 0 && !(<a class=\"id\" href=\"#enable\">enable</a> &amp; <a class=\"id\" href=\"#BIT\">BIT</a>(2))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"Opening wide generic port at 0x295\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#sb\">sb</a>, 0x64, 0x295);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_byte\">pci_write_config_byte</a>(<a class=\"id\" href=\"#sb\">sb</a>, 0x48, <a class=\"id\" href=\"#enable\">enable</a> | <a class=\"id\" href=\"#BIT\">BIT</a>(2));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#hwmon_init\">hwmon_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hwmon_pci_quirks\">hwmon_pci_quirks</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hwmon_class\">hwmon_class</a> = <a class=\"id\" href=\"#class_create\">class_create</a>(<a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>, \"hwmon\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#hwmon_class\">hwmon_class</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"hwmon.c: couldn't create sysfs class\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#hwmon_class\">hwmon_class</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#hwmon_exit\">hwmon_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#class_destroy\">class_destroy</a>(<a class=\"id\" href=\"#hwmon_class\">hwmon_class</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#subsys_initcall\">subsys_initcall</a>(<a class=\"id\" href=\"#hwmon_init\">hwmon_init</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#hwmon_exit\">hwmon_exit</a>);", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#hwmon_device_register\">hwmon_device_register</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#hwmon_device_unregister\">hwmon_device_unregister</a>);", 
"", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"Mark M. Hoffman <mhoffman@lightlink.com>\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"hardware monitoring sysfs/class support\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"", 
];
xr_frag_insert('l/ea/17ef7d84ef1957d6d4d6783429a799d0e12fdf.xr', __xr_tmp);
