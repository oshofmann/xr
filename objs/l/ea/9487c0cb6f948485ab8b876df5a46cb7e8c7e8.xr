var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Split spinlock implementation out into its own file, so it can be</span>", 
"<span class=\"comment\"> * compiled in a FTRACE-compatible way.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel_stat\">kernel_stat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#debugfs\">debugfs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#log2\">log2</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#paravirt\">paravirt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#interface\">interface</a>/<a class=\"id\" href=\"#xen\">xen</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#events\">events</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"xen-ops.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"debugfs.h\"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_XEN_DEBUG_FS\">CONFIG_XEN_DEBUG_FS</a>", 
"static struct <a class=\"id\" href=\"#xen_spinlock_stats\">xen_spinlock_stats</a>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#taken\">taken</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#taken_slow\">taken_slow</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#taken_slow_nested\">taken_slow_nested</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#taken_slow_pickup\">taken_slow_pickup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#taken_slow_spurious\">taken_slow_spurious</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#taken_slow_irqenable\">taken_slow_irqenable</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#released\">released</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#released_slow\">released_slow</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#released_slow_kicked\">released_slow_kicked</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HISTO_BUCKETS\">HISTO_BUCKETS</a><span class=\"ts\"/>30", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#histo_spin_total\">histo_spin_total</a>[<a class=\"id\" href=\"#HISTO_BUCKETS\">HISTO_BUCKETS</a>+1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#histo_spin_spinning\">histo_spin_spinning</a>[<a class=\"id\" href=\"#HISTO_BUCKETS\">HISTO_BUCKETS</a>+1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#histo_spin_blocked\">histo_spin_blocked</a>[<a class=\"id\" href=\"#HISTO_BUCKETS\">HISTO_BUCKETS</a>+1];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#time_total\">time_total</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#time_spinning\">time_spinning</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#time_blocked\">time_blocked</a>;", 
"} <a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>;", 
"", 
"static <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#zero_stats\">zero_stats</a>;", 
"", 
"static unsigned <a class=\"id\" href=\"#lock_timeout\">lock_timeout</a> = 1 << 10;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TIMEOUT\">TIMEOUT</a> <a class=\"id\" href=\"#lock_timeout\">lock_timeout</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#check_zero\">check_zero</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#zero_stats\">zero_stats</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>, 0, sizeof(<a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zero_stats\">zero_stats</a> = 0;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ADD_STATS\">ADD_STATS</a>(<a class=\"id\" href=\"#elem\">elem</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>do { <a class=\"id\" href=\"#check_zero\">check_zero</a>(); <a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>.<a class=\"id\" href=\"#elem\">elem</a> += (<a class=\"id\" href=\"#val\">val</a>); } while(0)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#spin_time_start\">spin_time_start</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#xen_clocksource_read\">xen_clocksource_read</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__spin_time_accum\">__spin_time_accum</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#delta\">delta</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#array\">array</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#ilog2\">ilog2</a>(<a class=\"id\" href=\"#delta\">delta</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#check_zero\">check_zero</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#index\">index</a> &lt; <a class=\"id\" href=\"#HISTO_BUCKETS\">HISTO_BUCKETS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#array\">array</a>[<a class=\"id\" href=\"#index\">index</a>]++;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#array\">array</a>[<a class=\"id\" href=\"#HISTO_BUCKETS\">HISTO_BUCKETS</a>]++;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#spin_time_accum_spinning\">spin_time_accum_spinning</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#xen_clocksource_read\">xen_clocksource_read</a>() - <a class=\"id\" href=\"#start\">start</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__spin_time_accum\">__spin_time_accum</a>(<a class=\"id\" href=\"#delta\">delta</a>, <a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>.<a class=\"id\" href=\"#histo_spin_spinning\">histo_spin_spinning</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>.<a class=\"id\" href=\"#time_spinning\">time_spinning</a> += <a class=\"id\" href=\"#delta\">delta</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#spin_time_accum_total\">spin_time_accum_total</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#xen_clocksource_read\">xen_clocksource_read</a>() - <a class=\"id\" href=\"#start\">start</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__spin_time_accum\">__spin_time_accum</a>(<a class=\"id\" href=\"#delta\">delta</a>, <a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>.<a class=\"id\" href=\"#histo_spin_total\">histo_spin_total</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>.<a class=\"id\" href=\"#time_total\">time_total</a> += <a class=\"id\" href=\"#delta\">delta</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#spin_time_accum_blocked\">spin_time_accum_blocked</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#xen_clocksource_read\">xen_clocksource_read</a>() - <a class=\"id\" href=\"#start\">start</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__spin_time_accum\">__spin_time_accum</a>(<a class=\"id\" href=\"#delta\">delta</a>, <a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>.<a class=\"id\" href=\"#histo_spin_blocked\">histo_spin_blocked</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>.<a class=\"id\" href=\"#time_blocked\">time_blocked</a> += <a class=\"id\" href=\"#delta\">delta</a>;", 
"}", 
"#else  <span class=\"comment\">/* !CONFIG_XEN_DEBUG_FS */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TIMEOUT\">TIMEOUT</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(1 << 10)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ADD_STATS\">ADD_STATS</a>(<a class=\"id\" href=\"#elem\">elem</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/>do { (void)(<a class=\"id\" href=\"#val\">val</a>); } while(0)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#spin_time_start\">spin_time_start</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#spin_time_accum_total\">spin_time_accum_total</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#spin_time_accum_spinning\">spin_time_accum_spinning</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#spin_time_accum_blocked\">spin_time_accum_blocked</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>  <span class=\"comment\">/* CONFIG_XEN_DEBUG_FS */</span>", 
"", 
"struct <a class=\"id\" href=\"#xen_spinlock\">xen_spinlock</a> {", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#lock\">lock</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 0 -&gt; free; 1 -&gt; locked */</span>", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#spinners\">spinners</a>;<span class=\"ts\"/><span class=\"comment\">/* count of waiting cpus */</span>", 
"};", 
"", 
"static int <a class=\"id\" href=\"#xen_spin_is_locked\">xen_spin_is_locked</a>(struct <a class=\"id\" href=\"#arch_spinlock\">arch_spinlock</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xen_spinlock\">xen_spinlock</a> *<a class=\"id\" href=\"#xl\">xl</a> = (struct <a class=\"id\" href=\"#xen_spinlock\">xen_spinlock</a> *)<a class=\"id\" href=\"#lock\">lock</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#xl\">xl</a>-><a class=\"id\" href=\"#lock\">lock</a> != 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#xen_spin_is_contended\">xen_spin_is_contended</a>(struct <a class=\"id\" href=\"#arch_spinlock\">arch_spinlock</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xen_spinlock\">xen_spinlock</a> *<a class=\"id\" href=\"#xl\">xl</a> = (struct <a class=\"id\" href=\"#xen_spinlock\">xen_spinlock</a> *)<a class=\"id\" href=\"#lock\">lock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Not strictly true; this is only the count of contended</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   lock-takers entering the slow path. */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#xl\">xl</a>-><a class=\"id\" href=\"#spinners\">spinners</a> != 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#xen_spin_trylock\">xen_spin_trylock</a>(struct <a class=\"id\" href=\"#arch_spinlock\">arch_spinlock</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xen_spinlock\">xen_spinlock</a> *<a class=\"id\" href=\"#xl\">xl</a> = (struct <a class=\"id\" href=\"#xen_spinlock\">xen_spinlock</a> *)<a class=\"id\" href=\"#lock\">lock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#old\">old</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"xchgb %b0,%1\"", 
"<span class=\"ts\"/>    : \"+q\" (<a class=\"id\" href=\"#old\">old</a>), \"+m\" (<a class=\"id\" href=\"#xl\">xl</a>-><a class=\"id\" href=\"#lock\">lock</a>) : : \"memory\");", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#old\">old</a> == 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(int, <a class=\"id\" href=\"#lock_kicker_irq\">lock_kicker_irq</a>) = -1;", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#xen_spinlock\">xen_spinlock</a> *, <a class=\"id\" href=\"#lock_spinners\">lock_spinners</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Mark a cpu as interested in a lock.  Returns the CPU's previous</span>", 
"<span class=\"comment\"> * lock of interest, in case we got preempted by an interrupt.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#xen_spinlock\">xen_spinlock</a> *<a class=\"id\" href=\"#spinning_lock\">spinning_lock</a>(struct <a class=\"id\" href=\"#xen_spinlock\">xen_spinlock</a> *<a class=\"id\" href=\"#xl\">xl</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xen_spinlock\">xen_spinlock</a> *<a class=\"id\" href=\"#prev\">prev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#lock_spinners\">lock_spinners</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#lock_spinners\">lock_spinners</a>) = <a class=\"id\" href=\"#xl\">xl</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wmb\">wmb</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set lock of interest before count */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(<a class=\"id\" href=\"#LOCK_PREFIX\">LOCK_PREFIX</a> \" incw %0\"", 
"<span class=\"ts\"/>    : \"+m\" (<a class=\"id\" href=\"#xl\">xl</a>-><a class=\"id\" href=\"#spinners\">spinners</a>) : : \"memory\");", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#prev\">prev</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Mark a cpu as no longer interested in a lock.  Restores previous</span>", 
"<span class=\"comment\"> * lock of interest (NULL for none).</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unspinning_lock\">unspinning_lock</a>(struct <a class=\"id\" href=\"#xen_spinlock\">xen_spinlock</a> *<a class=\"id\" href=\"#xl\">xl</a>, struct <a class=\"id\" href=\"#xen_spinlock\">xen_spinlock</a> *<a class=\"id\" href=\"#prev\">prev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(<a class=\"id\" href=\"#LOCK_PREFIX\">LOCK_PREFIX</a> \" decw %0\"", 
"<span class=\"ts\"/>    : \"+m\" (<a class=\"id\" href=\"#xl\">xl</a>-><a class=\"id\" href=\"#spinners\">spinners</a>) : : \"memory\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wmb\">wmb</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* decrement count before restoring lock */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#lock_spinners\">lock_spinners</a>) = <a class=\"id\" href=\"#prev\">prev</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#noinline\">noinline</a> int <a class=\"id\" href=\"#xen_spin_lock_slow\">xen_spin_lock_slow</a>(struct <a class=\"id\" href=\"#arch_spinlock\">arch_spinlock</a> *<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#irq_enable\">irq_enable</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xen_spinlock\">xen_spinlock</a> *<a class=\"id\" href=\"#xl\">xl</a> = (struct <a class=\"id\" href=\"#xen_spinlock\">xen_spinlock</a> *)<a class=\"id\" href=\"#lock\">lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xen_spinlock\">xen_spinlock</a> *<a class=\"id\" href=\"#prev\">prev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#lock_kicker_irq\">lock_kicker_irq</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If kicker interrupts not initialized yet, just spin */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a> == -1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#spin_time_start\">spin_time_start</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* announce we're spinning */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#spinning_lock\">spinning_lock</a>(<a class=\"id\" href=\"#xl\">xl</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ADD_STATS\">ADD_STATS</a>(<a class=\"id\" href=\"#taken_slow\">taken_slow</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ADD_STATS\">ADD_STATS</a>(<a class=\"id\" href=\"#taken_slow_nested\">taken_slow_nested</a>, <a class=\"id\" href=\"#prev\">prev</a> != <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* clear pending */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xen_clear_irq_pending\">xen_clear_irq_pending</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* check again make sure it didn't become free while</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   we weren't looking  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#xen_spin_trylock\">xen_spin_trylock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ADD_STATS\">ADD_STATS</a>(<a class=\"id\" href=\"#taken_slow_pickup\">taken_slow_pickup</a>, 1);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If we interrupted another spinlock while it</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * was blocking, make sure it doesn't block</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * without rechecking the lock.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#prev\">prev</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xen_set_irq_pending\">xen_set_irq_pending</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#__raw_local_save_flags\">__raw_local_save_flags</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#irq_enable\">irq_enable</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ADD_STATS\">ADD_STATS</a>(<a class=\"id\" href=\"#taken_slow_irqenable\">taken_slow_irqenable</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_local_irq_enable\">raw_local_irq_enable</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Block until irq becomes pending.  If we're</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * interrupted at this point (after the trylock but</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * before entering the block), then the nested lock</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * handler guarantees that the irq will be left</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * pending if there's any chance the lock became free;</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * xen_poll_irq() returns immediately if the irq is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * pending.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xen_poll_irq\">xen_poll_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_local_irq_restore\">raw_local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ADD_STATS\">ADD_STATS</a>(<a class=\"id\" href=\"#taken_slow_spurious\">taken_slow_spurious</a>, !<a class=\"id\" href=\"#xen_test_irq_pending\">xen_test_irq_pending</a>(<a class=\"id\" href=\"#irq\">irq</a>));", 
"<span class=\"ts\"/>} while (!<a class=\"id\" href=\"#xen_test_irq_pending\">xen_test_irq_pending</a>(<a class=\"id\" href=\"#irq\">irq</a>)); <span class=\"comment\">/* check for spurious wakeups */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kstat_incr_irqs_this_cpu\">kstat_incr_irqs_this_cpu</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>));", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unspinning_lock\">unspinning_lock</a>(<a class=\"id\" href=\"#xl\">xl</a>, <a class=\"id\" href=\"#prev\">prev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_time_accum_blocked\">spin_time_accum_blocked</a>(<a class=\"id\" href=\"#start\">start</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__xen_spin_lock\">__xen_spin_lock</a>(struct <a class=\"id\" href=\"#arch_spinlock\">arch_spinlock</a> *<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#irq_enable\">irq_enable</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xen_spinlock\">xen_spinlock</a> *<a class=\"id\" href=\"#xl\">xl</a> = (struct <a class=\"id\" href=\"#xen_spinlock\">xen_spinlock</a> *)<a class=\"id\" href=\"#lock\">lock</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#timeout\">timeout</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#oldval\">oldval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start_spin\">start_spin</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ADD_STATS\">ADD_STATS</a>(<a class=\"id\" href=\"#taken\">taken</a>, 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start_spin\">start_spin</a> = <a class=\"id\" href=\"#spin_time_start\">spin_time_start</a>();", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start_spin_fast\">start_spin_fast</a> = <a class=\"id\" href=\"#spin_time_start\">spin_time_start</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#TIMEOUT\">TIMEOUT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"1: xchgb %1,%0\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>    \"   testb %1,%1\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>    \"   jz 3f\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>    \"2: rep;nop\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>    \"   cmpb $0,%0\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>    \"   je 1b\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>    \"   dec %2\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>    \"   jnz 2b\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>    \"3:\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>    : \"+m\" (<a class=\"id\" href=\"#xl\">xl</a>-><a class=\"id\" href=\"#lock\">lock</a>), \"=q\" (<a class=\"id\" href=\"#oldval\">oldval</a>), \"+r\" (<a class=\"id\" href=\"#timeout\">timeout</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>    : \"1\" (1)", 
"<span class=\"ts\"/><span class=\"ts\"/>    : \"memory\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_time_accum_spinning\">spin_time_accum_spinning</a>(<a class=\"id\" href=\"#start_spin_fast\">start_spin_fast</a>);", 
"", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#oldval\">oldval</a> != 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#TIMEOUT\">TIMEOUT</a> == ~0 || !<a class=\"id\" href=\"#xen_spin_lock_slow\">xen_spin_lock_slow</a>(<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#irq_enable\">irq_enable</a>))));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_time_accum_total\">spin_time_accum_total</a>(<a class=\"id\" href=\"#start_spin\">start_spin</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_spin_lock\">xen_spin_lock</a>(struct <a class=\"id\" href=\"#arch_spinlock\">arch_spinlock</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__xen_spin_lock\">__xen_spin_lock</a>(<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_spin_lock_flags\">xen_spin_lock_flags</a>(struct <a class=\"id\" href=\"#arch_spinlock\">arch_spinlock</a> *<a class=\"id\" href=\"#lock\">lock</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__xen_spin_lock\">__xen_spin_lock</a>(<a class=\"id\" href=\"#lock\">lock</a>, !<a class=\"id\" href=\"#raw_irqs_disabled_flags\">raw_irqs_disabled_flags</a>(<a class=\"id\" href=\"#flags\">flags</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#noinline\">noinline</a> void <a class=\"id\" href=\"#xen_spin_unlock_slow\">xen_spin_unlock_slow</a>(struct <a class=\"id\" href=\"#xen_spinlock\">xen_spinlock</a> *<a class=\"id\" href=\"#xl\">xl</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ADD_STATS\">ADD_STATS</a>(<a class=\"id\" href=\"#released_slow\">released_slow</a>, 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* XXX should mix up next cpu selection */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#lock_spinners\">lock_spinners</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) == <a class=\"id\" href=\"#xl\">xl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ADD_STATS\">ADD_STATS</a>(<a class=\"id\" href=\"#released_slow_kicked\">released_slow_kicked</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xen_send_IPI_one\">xen_send_IPI_one</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#XEN_SPIN_UNLOCK_VECTOR\">XEN_SPIN_UNLOCK_VECTOR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_spin_unlock\">xen_spin_unlock</a>(struct <a class=\"id\" href=\"#arch_spinlock\">arch_spinlock</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xen_spinlock\">xen_spinlock</a> *<a class=\"id\" href=\"#xl\">xl</a> = (struct <a class=\"id\" href=\"#xen_spinlock\">xen_spinlock</a> *)<a class=\"id\" href=\"#lock\">lock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ADD_STATS\">ADD_STATS</a>(<a class=\"id\" href=\"#released\">released</a>, 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_wmb\">smp_wmb</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* make sure no writes get moved after unlock */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xl\">xl</a>-><a class=\"id\" href=\"#lock\">lock</a> = 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* release lock */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Make sure unlock happens before checking for waiting</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * spinners.  We need a strong barrier to enforce the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * write-read ordering to different memory locations, as the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * CPU makes no implied guarantees about their ordering.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mb\">mb</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#xl\">xl</a>-><a class=\"id\" href=\"#spinners\">spinners</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xen_spin_unlock_slow\">xen_spin_unlock_slow</a>(<a class=\"id\" href=\"#xl\">xl</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#dummy_handler\">dummy_handler</a>(int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#dev_id\">dev_id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#IRQ_HANDLED\">IRQ_HANDLED</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#xen_init_lock_cpu\">xen_init_lock_cpu</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#kasprintf\">kasprintf</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, \"spinlock%d\", <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#bind_ipi_to_irqhandler\">bind_ipi_to_irqhandler</a>(<a class=\"id\" href=\"#XEN_SPIN_UNLOCK_VECTOR\">XEN_SPIN_UNLOCK_VECTOR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#cpu\">cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#dummy_handler\">dummy_handler</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#IRQF_DISABLED\">IRQF_DISABLED</a>|<a class=\"id\" href=\"#IRQF_PERCPU\">IRQF_PERCPU</a>|<a class=\"id\" href=\"#IRQF_NOBALANCING\">IRQF_NOBALANCING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#disable_irq\">disable_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>); <span class=\"comment\">/* make sure it's never delivered */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#lock_kicker_irq\">lock_kicker_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"cpu %d spinlock event irq %d\\n\", <a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#irq\">irq</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#xen_uninit_lock_cpu\">xen_uninit_lock_cpu</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unbind_from_irqhandler\">unbind_from_irqhandler</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#lock_kicker_irq\">lock_kicker_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>), <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#xen_init_spinlocks\">xen_init_spinlocks</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_lock_ops\">pv_lock_ops</a>.<a class=\"id\" href=\"#spin_is_locked\">spin_is_locked</a> = <a class=\"id\" href=\"#xen_spin_is_locked\">xen_spin_is_locked</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_lock_ops\">pv_lock_ops</a>.<a class=\"id\" href=\"#spin_is_contended\">spin_is_contended</a> = <a class=\"id\" href=\"#xen_spin_is_contended\">xen_spin_is_contended</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_lock_ops\">pv_lock_ops</a>.<a class=\"id\" href=\"#spin_lock\">spin_lock</a> = <a class=\"id\" href=\"#xen_spin_lock\">xen_spin_lock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_lock_ops\">pv_lock_ops</a>.<a class=\"id\" href=\"#spin_lock_flags\">spin_lock_flags</a> = <a class=\"id\" href=\"#xen_spin_lock_flags\">xen_spin_lock_flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_lock_ops\">pv_lock_ops</a>.<a class=\"id\" href=\"#spin_trylock\">spin_trylock</a> = <a class=\"id\" href=\"#xen_spin_trylock\">xen_spin_trylock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_lock_ops\">pv_lock_ops</a>.<a class=\"id\" href=\"#spin_unlock\">spin_unlock</a> = <a class=\"id\" href=\"#xen_spin_unlock\">xen_spin_unlock</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_XEN_DEBUG_FS\">CONFIG_XEN_DEBUG_FS</a>", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#d_spin_debug\">d_spin_debug</a>;", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#xen_spinlock_debugfs\">xen_spinlock_debugfs</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#d_xen\">d_xen</a> = <a class=\"id\" href=\"#xen_init_debugfs\">xen_init_debugfs</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#d_xen\">d_xen</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_spin_debug\">d_spin_debug</a> = <a class=\"id\" href=\"#debugfs_create_dir\">debugfs_create_dir</a>(\"spinlocks\", <a class=\"id\" href=\"#d_xen\">d_xen</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u8\">debugfs_create_u8</a>(\"zero_stats\", 0644, <a class=\"id\" href=\"#d_spin_debug\">d_spin_debug</a>, &amp;<a class=\"id\" href=\"#zero_stats\">zero_stats</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"timeout\", 0644, <a class=\"id\" href=\"#d_spin_debug\">d_spin_debug</a>, &amp;<a class=\"id\" href=\"#lock_timeout\">lock_timeout</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u64\">debugfs_create_u64</a>(\"taken\", 0444, <a class=\"id\" href=\"#d_spin_debug\">d_spin_debug</a>, &amp;<a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>.<a class=\"id\" href=\"#taken\">taken</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"taken_slow\", 0444, <a class=\"id\" href=\"#d_spin_debug\">d_spin_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>.<a class=\"id\" href=\"#taken_slow\">taken_slow</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"taken_slow_nested\", 0444, <a class=\"id\" href=\"#d_spin_debug\">d_spin_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>.<a class=\"id\" href=\"#taken_slow_nested\">taken_slow_nested</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"taken_slow_pickup\", 0444, <a class=\"id\" href=\"#d_spin_debug\">d_spin_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>.<a class=\"id\" href=\"#taken_slow_pickup\">taken_slow_pickup</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"taken_slow_spurious\", 0444, <a class=\"id\" href=\"#d_spin_debug\">d_spin_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>.<a class=\"id\" href=\"#taken_slow_spurious\">taken_slow_spurious</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"taken_slow_irqenable\", 0444, <a class=\"id\" href=\"#d_spin_debug\">d_spin_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>.<a class=\"id\" href=\"#taken_slow_irqenable\">taken_slow_irqenable</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u64\">debugfs_create_u64</a>(\"released\", 0444, <a class=\"id\" href=\"#d_spin_debug\">d_spin_debug</a>, &amp;<a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>.<a class=\"id\" href=\"#released\">released</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"released_slow\", 0444, <a class=\"id\" href=\"#d_spin_debug\">d_spin_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>.<a class=\"id\" href=\"#released_slow\">released_slow</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"released_slow_kicked\", 0444, <a class=\"id\" href=\"#d_spin_debug\">d_spin_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>.<a class=\"id\" href=\"#released_slow_kicked\">released_slow_kicked</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u64\">debugfs_create_u64</a>(\"time_spinning\", 0444, <a class=\"id\" href=\"#d_spin_debug\">d_spin_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>.<a class=\"id\" href=\"#time_spinning\">time_spinning</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u64\">debugfs_create_u64</a>(\"time_blocked\", 0444, <a class=\"id\" href=\"#d_spin_debug\">d_spin_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>.<a class=\"id\" href=\"#time_blocked\">time_blocked</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u64\">debugfs_create_u64</a>(\"time_total\", 0444, <a class=\"id\" href=\"#d_spin_debug\">d_spin_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>.<a class=\"id\" href=\"#time_total\">time_total</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_debugfs_create_u32_array\">xen_debugfs_create_u32_array</a>(\"histo_total\", 0444, <a class=\"id\" href=\"#d_spin_debug\">d_spin_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>.<a class=\"id\" href=\"#histo_spin_total\">histo_spin_total</a>, <a class=\"id\" href=\"#HISTO_BUCKETS\">HISTO_BUCKETS</a> + 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_debugfs_create_u32_array\">xen_debugfs_create_u32_array</a>(\"histo_spinning\", 0444, <a class=\"id\" href=\"#d_spin_debug\">d_spin_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>.<a class=\"id\" href=\"#histo_spin_spinning\">histo_spin_spinning</a>, <a class=\"id\" href=\"#HISTO_BUCKETS\">HISTO_BUCKETS</a> + 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_debugfs_create_u32_array\">xen_debugfs_create_u32_array</a>(\"histo_blocked\", 0444, <a class=\"id\" href=\"#d_spin_debug\">d_spin_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#spinlock_stats\">spinlock_stats</a>.<a class=\"id\" href=\"#histo_spin_blocked\">histo_spin_blocked</a>, <a class=\"id\" href=\"#HISTO_BUCKETS\">HISTO_BUCKETS</a> + 1);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#fs_initcall\">fs_initcall</a>(<a class=\"id\" href=\"#xen_spinlock_debugfs\">xen_spinlock_debugfs</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* CONFIG_XEN_DEBUG_FS */</span>", 
];
xr_frag_insert('l/ea/9487c0cb6f948485ab8b876df5a46cb7e8c7e8.xr', __xr_tmp);
