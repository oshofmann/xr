var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Force feedback effect types</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_RUMBLE\">FF_RUMBLE</a><span class=\"ts\"/>0x50", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_PERIODIC\">FF_PERIODIC</a><span class=\"ts\"/>0x51", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_CONSTANT\">FF_CONSTANT</a><span class=\"ts\"/>0x52", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_SPRING\">FF_SPRING</a><span class=\"ts\"/>0x53", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_FRICTION\">FF_FRICTION</a><span class=\"ts\"/>0x54", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_DAMPER\">FF_DAMPER</a><span class=\"ts\"/>0x55", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_INERTIA\">FF_INERTIA</a><span class=\"ts\"/>0x56", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_RAMP\">FF_RAMP</a><span class=\"ts\"/><span class=\"ts\"/>0x57", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_EFFECT_MIN\">FF_EFFECT_MIN</a><span class=\"ts\"/><a class=\"id\" href=\"#FF_RUMBLE\">FF_RUMBLE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_EFFECT_MAX\">FF_EFFECT_MAX</a><span class=\"ts\"/><a class=\"id\" href=\"#FF_RAMP\">FF_RAMP</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Force feedback periodic effect types</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_SQUARE\">FF_SQUARE</a><span class=\"ts\"/>0x58", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_TRIANGLE\">FF_TRIANGLE</a><span class=\"ts\"/>0x59", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_SINE\">FF_SINE</a><span class=\"ts\"/><span class=\"ts\"/>0x5a", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_SAW_UP\">FF_SAW_UP</a><span class=\"ts\"/>0x5b", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_SAW_DOWN\">FF_SAW_DOWN</a><span class=\"ts\"/>0x5c", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_CUSTOM\">FF_CUSTOM</a><span class=\"ts\"/>0x5d", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_WAVEFORM_MIN\">FF_WAVEFORM_MIN</a><span class=\"ts\"/><a class=\"id\" href=\"#FF_SQUARE\">FF_SQUARE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_WAVEFORM_MAX\">FF_WAVEFORM_MAX</a><span class=\"ts\"/><a class=\"id\" href=\"#FF_CUSTOM\">FF_CUSTOM</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Set ff device properties</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_GAIN\">FF_GAIN</a><span class=\"ts\"/><span class=\"ts\"/>0x60", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_AUTOCENTER\">FF_AUTOCENTER</a><span class=\"ts\"/>0x61", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_MAX\">FF_MAX</a><span class=\"ts\"/><span class=\"ts\"/>0x7f", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_CNT\">FF_CNT</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#FF_MAX\">FF_MAX</a>+1)", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * In-kernel definitions.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mod_devicetable\">mod_devicetable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct input_mt_slot - represents the state of an input MT slot</span>", 
"<span class=\"comment\"> * @abs: holds current values of ABS_MT axes for this slot</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#input_mt_slot\">input_mt_slot</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#abs\">abs</a>[<a class=\"id\" href=\"#ABS_MT_LAST\">ABS_MT_LAST</a> - <a class=\"id\" href=\"#ABS_MT_FIRST\">ABS_MT_FIRST</a> + 1];", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct input_dev - represents an input device</span>", 
"<span class=\"comment\"> * @name: name of the device</span>", 
"<span class=\"comment\"> * @phys: physical path to the device in the system hierarchy</span>", 
"<span class=\"comment\"> * @uniq: unique identification code for the device (if device has it)</span>", 
"<span class=\"comment\"> * @id: id of the device (struct input_id)</span>", 
"<span class=\"comment\"> * @evbit: bitmap of types of events supported by the device (EV_KEY,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>EV_REL, etc.)</span>", 
"<span class=\"comment\"> * @keybit: bitmap of keys/buttons this device has</span>", 
"<span class=\"comment\"> * @relbit: bitmap of relative axes for the device</span>", 
"<span class=\"comment\"> * @absbit: bitmap of absolute axes for the device</span>", 
"<span class=\"comment\"> * @mscbit: bitmap of miscellaneous events supported by the device</span>", 
"<span class=\"comment\"> * @ledbit: bitmap of leds present on the device</span>", 
"<span class=\"comment\"> * @sndbit: bitmap of sound effects supported by the device</span>", 
"<span class=\"comment\"> * @ffbit: bitmap of force feedback effects supported by the device</span>", 
"<span class=\"comment\"> * @swbit: bitmap of switches present on the device</span>", 
"<span class=\"comment\"> * @hint_events_per_packet: average number of events generated by the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>device in a packet (between EV_SYN/SYN_REPORT events). Used by</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>event handlers to estimate size of the buffer needed to hold</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>events.</span>", 
"<span class=\"comment\"> * @keycodemax: size of keycode table</span>", 
"<span class=\"comment\"> * @keycodesize: size of elements in keycode table</span>", 
"<span class=\"comment\"> * @keycode: map of scancodes to keycodes for this device</span>", 
"<span class=\"comment\"> * @setkeycode: optional method to alter current keymap, used to implement</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sparse keymaps. If not supplied default mechanism will be used.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The method is being called while holding event_lock and thus must</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>not sleep</span>", 
"<span class=\"comment\"> * @getkeycode: optional method to retrieve current keymap. If not supplied</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>default mechanism will be used. The method is being called while</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>holding event_lock and thus must not sleep</span>", 
"<span class=\"comment\"> * @ff: force feedback structure associated with the device if device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>supports force feedback effects</span>", 
"<span class=\"comment\"> * @repeat_key: stores key code of the last key pressed; used to implement</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>software autorepeat</span>", 
"<span class=\"comment\"> * @timer: timer for software autorepeat</span>", 
"<span class=\"comment\"> * @rep: current values for autorepeat parameters (delay, rate)</span>", 
"<span class=\"comment\"> * @mt: pointer to array of struct input_mt_slot holding current values</span>", 
];
xr_frag_insert('l/ea/a1e60686b9040cb2eae524740ed095d6aebe90.xr', __xr_tmp);
