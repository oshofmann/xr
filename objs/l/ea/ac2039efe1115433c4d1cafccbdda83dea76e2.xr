var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * \"splice\": joining two ropes together by interweaving their strands.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is the \"extended pipe\" functionality, where a pipe is used as</span>", 
"<span class=\"comment\"> * an arbitrary in-memory buffer. Think of a pipe as a small kernel</span>", 
"<span class=\"comment\"> * buffer that you can use to transfer data from one end to the other.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The traditional unix read/write is extended with a \"splice()\" operation</span>", 
"<span class=\"comment\"> * that transfers data buffers to or from a pipe buffer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Named by Larry McVoy, original implementation from Linus, extended by</span>", 
"<span class=\"comment\"> * Jens to support splicing to files, network, direct splicing, etc and</span>", 
"<span class=\"comment\"> * fixing lots of bugs.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2005-2006 Jens Axboe &lt;axboe@kernel.dk&gt;</span>", 
"<span class=\"comment\"> * Copyright (C) 2005-2006 Linus Torvalds &lt;torvalds@osdl.org&gt;</span>", 
"<span class=\"comment\"> * Copyright (C) 2006 Ingo Molnar &lt;mingo@elte.hu&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#file\">file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pagemap\">pagemap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#splice\">splice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#memcontrol\">memcontrol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm_inline\">mm_inline</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#writeback\">writeback</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#buffer_head\">buffer_head</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uio\">uio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Attempt to steal a page from a pipe buffer. This should perhaps go into</span>", 
"<span class=\"comment\"> * a vm helper function, it's already simplified quite a bit by the</span>", 
"<span class=\"comment\"> * addition of remove_mapping(). If success is returned, the caller may</span>", 
"<span class=\"comment\"> * attempt to reuse this page for another destination.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#page_cache_pipe_buf_steal\">page_cache_pipe_buf_steal</a>(struct <a class=\"id\" href=\"#pipe_inode_info\">pipe_inode_info</a> *<a class=\"id\" href=\"#pipe\">pipe</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#pipe_buffer\">pipe_buffer</a> *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_page\">lock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#page_mapping\">page_mapping</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mapping\">mapping</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#PageUptodate\">PageUptodate</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * At least for ext2 with nobh option, we need to wait on</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * writeback completing on this page, since we'll remove it</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * from the pagecache.  Otherwise truncate wont wait on the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * page, allowing the disk blocks to be reused by someone else</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * before we actually wrote our data to them. fs corruption</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * ensues.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_on_page_writeback\">wait_on_page_writeback</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page_has_private\">page_has_private</a>(<a class=\"id\" href=\"#page\">page</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#try_to_release_page\">try_to_release_page</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If we succeeded in removing the mapping, set LRU flag</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and return good.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#remove_mapping\">remove_mapping</a>(<a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#PIPE_BUF_FLAG_LRU\">PIPE_BUF_FLAG_LRU</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Raced with truncate or failed to remove page from current</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * address space, unlock and return failure.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#page_cache_pipe_buf_release\">page_cache_pipe_buf_release</a>(struct <a class=\"id\" href=\"#pipe_inode_info\">pipe_inode_info</a> *<a class=\"id\" href=\"#pipe\">pipe</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pipe_buffer\">pipe_buffer</a> *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#PIPE_BUF_FLAG_LRU\">PIPE_BUF_FLAG_LRU</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Check whether the contents of buf is OK to access. Since the content</span>", 
"<span class=\"comment\"> * is a page cache page, IO may be in flight.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#page_cache_pipe_buf_confirm\">page_cache_pipe_buf_confirm</a>(struct <a class=\"id\" href=\"#pipe_inode_info\">pipe_inode_info</a> *<a class=\"id\" href=\"#pipe\">pipe</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#pipe_buffer\">pipe_buffer</a> *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#PageUptodate\">PageUptodate</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_page\">lock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Page got truncated/unhashed. This will cause a 0-byte</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * splice, if this is the first page.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#mapping\">mapping</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Uh oh, read-error from disk.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#PageUptodate\">PageUptodate</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Page is ok afterall, we are done.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#pipe_buf_operations\">pipe_buf_operations</a> <a class=\"id\" href=\"#page_cache_pipe_buf_ops\">page_cache_pipe_buf_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#can_merge\">can_merge</a> = 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#map\">map</a> = <a class=\"id\" href=\"#generic_pipe_buf_map\">generic_pipe_buf_map</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unmap\">unmap</a> = <a class=\"id\" href=\"#generic_pipe_buf_unmap\">generic_pipe_buf_unmap</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#confirm\">confirm</a> = <a class=\"id\" href=\"#page_cache_pipe_buf_confirm\">page_cache_pipe_buf_confirm</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#page_cache_pipe_buf_release\">page_cache_pipe_buf_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#steal\">steal</a> = <a class=\"id\" href=\"#page_cache_pipe_buf_steal\">page_cache_pipe_buf_steal</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get\">get</a> = <a class=\"id\" href=\"#generic_pipe_buf_get\">generic_pipe_buf_get</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#user_page_pipe_buf_steal\">user_page_pipe_buf_steal</a>(struct <a class=\"id\" href=\"#pipe_inode_info\">pipe_inode_info</a> *<a class=\"id\" href=\"#pipe\">pipe</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#pipe_buffer\">pipe_buffer</a> *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#PIPE_BUF_FLAG_GIFT\">PIPE_BUF_FLAG_GIFT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#PIPE_BUF_FLAG_LRU\">PIPE_BUF_FLAG_LRU</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#generic_pipe_buf_steal\">generic_pipe_buf_steal</a>(<a class=\"id\" href=\"#pipe\">pipe</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#pipe_buf_operations\">pipe_buf_operations</a> <a class=\"id\" href=\"#user_page_pipe_buf_ops\">user_page_pipe_buf_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#can_merge\">can_merge</a> = 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#map\">map</a> = <a class=\"id\" href=\"#generic_pipe_buf_map\">generic_pipe_buf_map</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unmap\">unmap</a> = <a class=\"id\" href=\"#generic_pipe_buf_unmap\">generic_pipe_buf_unmap</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#confirm\">confirm</a> = <a class=\"id\" href=\"#generic_pipe_buf_confirm\">generic_pipe_buf_confirm</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#page_cache_pipe_buf_release\">page_cache_pipe_buf_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#steal\">steal</a> = <a class=\"id\" href=\"#user_page_pipe_buf_steal\">user_page_pipe_buf_steal</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get\">get</a> = <a class=\"id\" href=\"#generic_pipe_buf_get\">generic_pipe_buf_get</a>,", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * splice_to_pipe - fill passed data into a pipe</span>", 
"<span class=\"comment\"> * @pipe:<span class=\"ts\"/>pipe to fill</span>", 
"<span class=\"comment\"> * @spd:<span class=\"ts\"/>data to fill</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> *    @spd contains a map of pages and len/offset tuples, along with</span>", 
"<span class=\"comment\"> *    the struct pipe_buf_operations associated with these pages. This</span>", 
"<span class=\"comment\"> *    function will link that data to the pipe.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#splice_to_pipe\">splice_to_pipe</a>(struct <a class=\"id\" href=\"#pipe_inode_info\">pipe_inode_info</a> *<a class=\"id\" href=\"#pipe\">pipe</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#splice_pipe_desc\">splice_pipe_desc</a> *<a class=\"id\" href=\"#spd\">spd</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#spd_pages\">spd_pages</a> = <a class=\"id\" href=\"#spd\">spd</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#do_wakeup\">do_wakeup</a>, <a class=\"id\" href=\"#page_nr\">page_nr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_wakeup\">do_wakeup</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page_nr\">page_nr</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pipe_lock\">pipe_lock</a>(<a class=\"id\" href=\"#pipe\">pipe</a>);", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#readers\">readers</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#send_sig\">send_sig</a>(<a class=\"id\" href=\"#SIGPIPE\">SIGPIPE</a>, <a class=\"id\" href=\"#current\">current</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EPIPE\">EPIPE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#nrbufs\">nrbufs</a> &lt; <a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#buffers\">buffers</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#newbuf\">newbuf</a> = (<a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#curbuf\">curbuf</a> + <a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#nrbufs\">nrbufs</a>) &amp; (<a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#buffers\">buffers</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pipe_buffer\">pipe_buffer</a> *<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#bufs\">bufs</a> + <a class=\"id\" href=\"#newbuf\">newbuf</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#spd\">spd</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#page_nr\">page_nr</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#spd\">spd</a>-><a class=\"id\" href=\"#partial\">partial</a>[<a class=\"id\" href=\"#page_nr\">page_nr</a>].<a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#spd\">spd</a>-><a class=\"id\" href=\"#partial\">partial</a>[<a class=\"id\" href=\"#page_nr\">page_nr</a>].<a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#private\">private</a> = <a class=\"id\" href=\"#spd\">spd</a>-><a class=\"id\" href=\"#partial\">partial</a>[<a class=\"id\" href=\"#page_nr\">page_nr</a>].<a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#spd\">spd</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#spd\">spd</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SPLICE_F_GIFT\">SPLICE_F_GIFT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#PIPE_BUF_FLAG_GIFT\">PIPE_BUF_FLAG_GIFT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#nrbufs\">nrbufs</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_nr\">page_nr</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> += <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_wakeup\">do_wakeup</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!--<a class=\"id\" href=\"#spd\">spd</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#nrbufs\">nrbufs</a> &lt; <a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#buffers\">buffers</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#spd\">spd</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SPLICE_F_NONBLOCK\">SPLICE_F_NONBLOCK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ERESTARTSYS\">ERESTARTSYS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
];
xr_frag_insert('l/ea/ac2039efe1115433c4d1cafccbdda83dea76e2.xr', __xr_tmp);
