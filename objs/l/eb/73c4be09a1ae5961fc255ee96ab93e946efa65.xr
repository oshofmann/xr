var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_GENERIC_BITOPS_LE_H_\">_ASM_GENERIC_BITOPS_LE_H_</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_GENERIC_BITOPS_LE_H_\">_ASM_GENERIC_BITOPS_LE_H_</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#byteorder\">byteorder</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BITOP_WORD\">BITOP_WORD</a>(<a class=\"id\" href=\"#nr\">nr</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#nr\">nr</a>) / <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BITOP_LE_SWIZZLE\">BITOP_LE_SWIZZLE</a><span class=\"ts\"/>((<a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>-1) &amp; ~0x7)", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#__LITTLE_ENDIAN\">__LITTLE_ENDIAN</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#generic_test_le_bit\">generic_test_le_bit</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#addr\">addr</a>) <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#addr\">addr</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#generic___set_le_bit\">generic___set_le_bit</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#addr\">addr</a>) <a class=\"id\" href=\"#__set_bit\">__set_bit</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#addr\">addr</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#generic___clear_le_bit\">generic___clear_le_bit</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#addr\">addr</a>) <a class=\"id\" href=\"#__clear_bit\">__clear_bit</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#addr\">addr</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#generic_test_and_set_le_bit\">generic_test_and_set_le_bit</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#addr\">addr</a>) <a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#addr\">addr</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#generic_test_and_clear_le_bit\">generic_test_and_clear_le_bit</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#addr\">addr</a>) <a class=\"id\" href=\"#test_and_clear_bit\">test_and_clear_bit</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#addr\">addr</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#generic___test_and_set_le_bit\">generic___test_and_set_le_bit</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#addr\">addr</a>) <a class=\"id\" href=\"#__test_and_set_bit\">__test_and_set_bit</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#addr\">addr</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#generic___test_and_clear_le_bit\">generic___test_and_clear_le_bit</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#addr\">addr</a>) <a class=\"id\" href=\"#__test_and_clear_bit\">__test_and_clear_bit</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#addr\">addr</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#generic_find_next_zero_le_bit\">generic_find_next_zero_le_bit</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#offset\">offset</a>) <a class=\"id\" href=\"#find_next_zero_bit\">find_next_zero_bit</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#offset\">offset</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#generic_find_next_le_bit\">generic_find_next_le_bit</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#offset\">offset</a>) \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#find_next_bit\">find_next_bit</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#offset\">offset</a>)", 
"", 
"#<a class=\"id\" href=\"#elif\">elif</a> <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#__BIG_ENDIAN\">__BIG_ENDIAN</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#generic_test_le_bit\">generic_test_le_bit</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#addr\">addr</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#test_bit\">test_bit</a>((<a class=\"id\" href=\"#nr\">nr</a>) ^ <a class=\"id\" href=\"#BITOP_LE_SWIZZLE\">BITOP_LE_SWIZZLE</a>, (<a class=\"id\" href=\"#addr\">addr</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#generic___set_le_bit\">generic___set_le_bit</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#addr\">addr</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__set_bit\">__set_bit</a>((<a class=\"id\" href=\"#nr\">nr</a>) ^ <a class=\"id\" href=\"#BITOP_LE_SWIZZLE\">BITOP_LE_SWIZZLE</a>, (<a class=\"id\" href=\"#addr\">addr</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#generic___clear_le_bit\">generic___clear_le_bit</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#addr\">addr</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__clear_bit\">__clear_bit</a>((<a class=\"id\" href=\"#nr\">nr</a>) ^ <a class=\"id\" href=\"#BITOP_LE_SWIZZLE\">BITOP_LE_SWIZZLE</a>, (<a class=\"id\" href=\"#addr\">addr</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#generic_test_and_set_le_bit\">generic_test_and_set_le_bit</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#addr\">addr</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>((<a class=\"id\" href=\"#nr\">nr</a>) ^ <a class=\"id\" href=\"#BITOP_LE_SWIZZLE\">BITOP_LE_SWIZZLE</a>, (<a class=\"id\" href=\"#addr\">addr</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#generic_test_and_clear_le_bit\">generic_test_and_clear_le_bit</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#addr\">addr</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#test_and_clear_bit\">test_and_clear_bit</a>((<a class=\"id\" href=\"#nr\">nr</a>) ^ <a class=\"id\" href=\"#BITOP_LE_SWIZZLE\">BITOP_LE_SWIZZLE</a>, (<a class=\"id\" href=\"#addr\">addr</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#generic___test_and_set_le_bit\">generic___test_and_set_le_bit</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#addr\">addr</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__test_and_set_bit\">__test_and_set_bit</a>((<a class=\"id\" href=\"#nr\">nr</a>) ^ <a class=\"id\" href=\"#BITOP_LE_SWIZZLE\">BITOP_LE_SWIZZLE</a>, (<a class=\"id\" href=\"#addr\">addr</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#generic___test_and_clear_le_bit\">generic___test_and_clear_le_bit</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#addr\">addr</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__test_and_clear_bit\">__test_and_clear_bit</a>((<a class=\"id\" href=\"#nr\">nr</a>) ^ <a class=\"id\" href=\"#BITOP_LE_SWIZZLE\">BITOP_LE_SWIZZLE</a>, (<a class=\"id\" href=\"#addr\">addr</a>))", 
"", 
"extern unsigned long <a class=\"id\" href=\"#generic_find_next_zero_le_bit\">generic_find_next_zero_le_bit</a>(const unsigned long *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#size\">size</a>, unsigned long <a class=\"id\" href=\"#offset\">offset</a>);", 
"extern unsigned long <a class=\"id\" href=\"#generic_find_next_le_bit\">generic_find_next_le_bit</a>(const unsigned long *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#size\">size</a>, unsigned long <a class=\"id\" href=\"#offset\">offset</a>);", 
"", 
"#else", 
"#<a class=\"id\" href=\"#error\">error</a> \"Please fix <asm/byteorder.h>\"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#generic_find_first_zero_le_bit\">generic_find_first_zero_le_bit</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#size\">size</a>) \\", 
"        <a class=\"id\" href=\"#generic_find_next_zero_le_bit\">generic_find_next_zero_le_bit</a>((<a class=\"id\" href=\"#addr\">addr</a>), (<a class=\"id\" href=\"#size\">size</a>), 0)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_GENERIC_BITOPS_LE_H_ */</span>", 
];
xr_frag_insert('l/eb/73c4be09a1ae5961fc255ee96ab93e946efa65.xr', __xr_tmp);
