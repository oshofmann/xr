var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Access to user system call parameters and results</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2008-2009 Red Hat, Inc.  All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This copyrighted material is made available to anyone wishing to use,</span>", 
"<span class=\"comment\"> * modify, copy, or redistribute it subject to the terms and conditions</span>", 
"<span class=\"comment\"> * of the GNU General Public License v.2.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * See asm-generic/syscall.h for descriptions of what we must do here.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_X86_SYSCALL_H\">_ASM_X86_SYSCALL_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_X86_SYSCALL_H\">_ASM_X86_SYSCALL_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#err\">err</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"extern const unsigned long <a class=\"id\" href=\"#sys_call_table\">sys_call_table</a>[];", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Only the low 32 bits of orig_ax are meaningful, so we return int.</span>", 
"<span class=\"comment\"> * This importantly ignores the high bits on 64-bit, so comparisons</span>", 
"<span class=\"comment\"> * sign-extend the low 32 bits.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#syscall_get_nr\">syscall_get_nr</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#orig_ax\">orig_ax</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#syscall_rollback\">syscall_rollback</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ax\">ax</a> = <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#orig_ax\">orig_ax</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> long <a class=\"id\" href=\"#syscall_get_error\">syscall_get_error</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ax\">ax</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IA32_EMULATION\">CONFIG_IA32_EMULATION</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * TS_COMPAT is set for 32-bit syscall entries and then</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * remains set until we return to user mode.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task_thread_info\">task_thread_info</a>(<a class=\"id\" href=\"#task\">task</a>)-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#TS_COMPAT\">TS_COMPAT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Sign-extend the value so (int)-EFOO becomes (long)-EFOO</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and will match correctly in comparisons.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = (long) (int) <a class=\"id\" href=\"#error\">error</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#IS_ERR_VALUE\">IS_ERR_VALUE</a>(<a class=\"id\" href=\"#error\">error</a>) ? <a class=\"id\" href=\"#error\">error</a> : 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> long <a class=\"id\" href=\"#syscall_get_return_value\">syscall_get_return_value</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ax\">ax</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#syscall_set_return_value\">syscall_set_return_value</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#error\">error</a>, long <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ax\">ax</a> = (long) <a class=\"id\" href=\"#error\">error</a> ?: <a class=\"id\" href=\"#val\">val</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#syscall_get_arguments\">syscall_get_arguments</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned int <a class=\"id\" href=\"#i\">i</a>, unsigned int <a class=\"id\" href=\"#n\">n</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long *<a class=\"id\" href=\"#args\">args</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#i\">i</a> + <a class=\"id\" href=\"#n\">n</a> &gt; 6);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#args\">args</a>, &amp;<a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#bx\">bx</a> + <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#n\">n</a> * sizeof(<a class=\"id\" href=\"#args\">args</a>[0]));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#syscall_set_arguments\">syscall_set_arguments</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned int <a class=\"id\" href=\"#i\">i</a>, unsigned int <a class=\"id\" href=\"#n\">n</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const unsigned long *<a class=\"id\" href=\"#args\">args</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#i\">i</a> + <a class=\"id\" href=\"#n\">n</a> &gt; 6);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#bx\">bx</a> + <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#n\">n</a> * sizeof(<a class=\"id\" href=\"#args\">args</a>[0]));", 
"}", 
"", 
"#else<span class=\"ts\"/> <span class=\"comment\">/* CONFIG_X86_64 */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#syscall_get_arguments\">syscall_get_arguments</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned int <a class=\"id\" href=\"#i\">i</a>, unsigned int <a class=\"id\" href=\"#n\">n</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long *<a class=\"id\" href=\"#args\">args</a>)", 
"{", 
"# <a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IA32_EMULATION\">CONFIG_IA32_EMULATION</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task_thread_info\">task_thread_info</a>(<a class=\"id\" href=\"#task\">task</a>)-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#TS_COMPAT\">TS_COMPAT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#args\">args</a>++ = <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#bx\">bx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#args\">args</a>++ = <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#cx\">cx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 2:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#args\">args</a>++ = <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#dx\">dx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 3:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#args\">args</a>++ = <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#si\">si</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 4:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#args\">args</a>++ = <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#di\">di</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 5:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#args\">args</a>++ = <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#bp\">bp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 6:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>else", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#args\">args</a>++ = <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#di\">di</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#args\">args</a>++ = <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#si\">si</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 2:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#args\">args</a>++ = <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#dx\">dx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 3:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#args\">args</a>++ = <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#r10\">r10</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 4:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#args\">args</a>++ = <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#r8\">r8</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 5:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#args\">args</a>++ = <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#r9\">r9</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 6:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#syscall_set_arguments\">syscall_set_arguments</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned int <a class=\"id\" href=\"#i\">i</a>, unsigned int <a class=\"id\" href=\"#n\">n</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const unsigned long *<a class=\"id\" href=\"#args\">args</a>)", 
"{", 
"# <a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IA32_EMULATION\">CONFIG_IA32_EMULATION</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task_thread_info\">task_thread_info</a>(<a class=\"id\" href=\"#task\">task</a>)-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#TS_COMPAT\">TS_COMPAT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#bx\">bx</a> = *<a class=\"id\" href=\"#args\">args</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#cx\">cx</a> = *<a class=\"id\" href=\"#args\">args</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 2:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#dx\">dx</a> = *<a class=\"id\" href=\"#args\">args</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 3:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#si\">si</a> = *<a class=\"id\" href=\"#args\">args</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 4:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#di\">di</a> = *<a class=\"id\" href=\"#args\">args</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 5:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#bp\">bp</a> = *<a class=\"id\" href=\"#args\">args</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 6:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>else", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#di\">di</a> = *<a class=\"id\" href=\"#args\">args</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#si\">si</a> = *<a class=\"id\" href=\"#args\">args</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 2:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#dx\">dx</a> = *<a class=\"id\" href=\"#args\">args</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 3:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#r10\">r10</a> = *<a class=\"id\" href=\"#args\">args</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 4:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#r8\">r8</a> = *<a class=\"id\" href=\"#args\">args</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 5:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#r9\">r9</a> = *<a class=\"id\" href=\"#args\">args</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 6:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>--) break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* CONFIG_X86_32 */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* _ASM_X86_SYSCALL_H */</span>", 
];
xr_frag_insert('l/ec/61804d6359bf3e63b3b738a6e90799135a056c.xr', __xr_tmp);
