var __xr_tmp = [
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#which\">which</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#PRIO_PROCESS\">PRIO_PROCESS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#who\">who</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#find_task_by_vpid\">find_task_by_vpid</a>(<a class=\"id\" href=\"#who\">who</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#current\">current</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#niceval\">niceval</a> = 20 - <a class=\"id\" href=\"#task_nice\">task_nice</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#niceval\">niceval</a> &gt; <a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#niceval\">niceval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#PRIO_PGRP\">PRIO_PGRP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#who\">who</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgrp\">pgrp</a> = <a class=\"id\" href=\"#find_vpid\">find_vpid</a>(<a class=\"id\" href=\"#who\">who</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgrp\">pgrp</a> = <a class=\"id\" href=\"#task_pgrp\">task_pgrp</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_each_pid_thread\">do_each_pid_thread</a>(<a class=\"id\" href=\"#pgrp\">pgrp</a>, <a class=\"id\" href=\"#PIDTYPE_PGID\">PIDTYPE_PGID</a>, <a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#niceval\">niceval</a> = 20 - <a class=\"id\" href=\"#task_nice\">task_nice</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#niceval\">niceval</a> &gt; <a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#niceval\">niceval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#while_each_pid_thread\">while_each_pid_thread</a>(<a class=\"id\" href=\"#pgrp\">pgrp</a>, <a class=\"id\" href=\"#PIDTYPE_PGID\">PIDTYPE_PGID</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#PRIO_USER\">PRIO_USER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#user\">user</a> = (struct <a class=\"id\" href=\"#user_struct\">user_struct</a> *) <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#user\">user</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#who\">who</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#who\">who</a> = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#uid\">uid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if ((<a class=\"id\" href=\"#who\">who</a> != <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#uid\">uid</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> !(<a class=\"id\" href=\"#user\">user</a> = <a class=\"id\" href=\"#find_user\">find_user</a>(<a class=\"id\" href=\"#who\">who</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;<span class=\"ts\"/><span class=\"comment\">/* No processes for this user */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_each_thread\">do_each_thread</a>(<a class=\"id\" href=\"#g\">g</a>, <a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__task_cred\">__task_cred</a>(<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#uid\">uid</a> == <a class=\"id\" href=\"#who\">who</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#niceval\">niceval</a> = 20 - <a class=\"id\" href=\"#task_nice\">task_nice</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#niceval\">niceval</a> &gt; <a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#niceval\">niceval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#while_each_thread\">while_each_thread</a>(<a class=\"id\" href=\"#g\">g</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#who\">who</a> != <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#uid\">uid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_uid\">free_uid</a>(<a class=\"id\" href=\"#user\">user</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* for find_user() */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>emergency_restart - reboot the system</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Without shutting down any hardware or taking any locks</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>reboot the system.  This is called when we know we are in</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>trouble so this is our best effort to reboot.  This is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>safe to call in interrupt context.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#emergency_restart\">emergency_restart</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#machine_emergency_restart\">machine_emergency_restart</a>();", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#emergency_restart\">emergency_restart</a>);", 
"", 
"void <a class=\"id\" href=\"#kernel_restart_prepare\">kernel_restart_prepare</a>(char *<a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocking_notifier_call_chain\">blocking_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#reboot_notifier_list\">reboot_notifier_list</a>, <a class=\"id\" href=\"#SYS_RESTART\">SYS_RESTART</a>, <a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#system_state\">system_state</a> = <a class=\"id\" href=\"#SYSTEM_RESTART\">SYSTEM_RESTART</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_shutdown\">device_shutdown</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysdev_shutdown\">sysdev_shutdown</a>();", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>kernel_restart - reboot the system</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@cmd: pointer to buffer containing command to execute for restart</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>or %NULL</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Shutdown everything and perform a clean reboot.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This is not safe to call in interrupt context.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#kernel_restart\">kernel_restart</a>(char *<a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kernel_restart_prepare\">kernel_restart_prepare</a>(<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cmd\">cmd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_EMERG\">KERN_EMERG</a> \"Restarting system.\\n\");", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_EMERG\">KERN_EMERG</a> \"Restarting system with command '%s'.\\n\", <a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#machine_restart\">machine_restart</a>(<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#kernel_restart\">kernel_restart</a>);", 
"", 
"static void <a class=\"id\" href=\"#kernel_shutdown_prepare\">kernel_shutdown_prepare</a>(enum <a class=\"id\" href=\"#system_states\">system_states</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocking_notifier_call_chain\">blocking_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#reboot_notifier_list\">reboot_notifier_list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#SYSTEM_HALT\">SYSTEM_HALT</a>)?<a class=\"id\" href=\"#SYS_HALT\">SYS_HALT</a>:<a class=\"id\" href=\"#SYS_POWER_OFF\">SYS_POWER_OFF</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#system_state\">system_state</a> = <a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_shutdown\">device_shutdown</a>();", 
"}", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>kernel_halt - halt the system</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Shutdown everything and perform a clean system halt.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#kernel_halt\">kernel_halt</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kernel_shutdown_prepare\">kernel_shutdown_prepare</a>(<a class=\"id\" href=\"#SYSTEM_HALT\">SYSTEM_HALT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysdev_shutdown\">sysdev_shutdown</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_EMERG\">KERN_EMERG</a> \"System halted.\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#machine_halt\">machine_halt</a>();", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#kernel_halt\">kernel_halt</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>kernel_power_off - power_off the system</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Shutdown everything and perform a clean system power_off.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#kernel_power_off\">kernel_power_off</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kernel_shutdown_prepare\">kernel_shutdown_prepare</a>(<a class=\"id\" href=\"#SYSTEM_POWER_OFF\">SYSTEM_POWER_OFF</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pm_power_off_prepare\">pm_power_off_prepare</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pm_power_off_prepare\">pm_power_off_prepare</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disable_nonboot_cpus\">disable_nonboot_cpus</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysdev_shutdown\">sysdev_shutdown</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_EMERG\">KERN_EMERG</a> \"Power down.\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#machine_power_off\">machine_power_off</a>();", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#kernel_power_off\">kernel_power_off</a>);", 
"", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#reboot_mutex\">reboot_mutex</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Reboot system call: for obvious reasons only root may call it,</span>", 
"<span class=\"comment\"> * and even root needs to set up some magic numbers in the registers</span>", 
"<span class=\"comment\"> * so that some mistake won't make this reboot the whole machine.</span>", 
"<span class=\"comment\"> * You can also set the meaning of the ctrl-alt-del-key here.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * reboot doesn't sync: do that yourself before calling this.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE4\">SYSCALL_DEFINE4</a>(<a class=\"id\" href=\"#reboot\">reboot</a>, int, <a class=\"id\" href=\"#magic1\">magic1</a>, int, <a class=\"id\" href=\"#magic2\">magic2</a>, unsigned int, <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buffer\">buffer</a>[256];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We only trust the superuser with rebooting the system. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_BOOT\">CAP_SYS_BOOT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* For safety, we require \"magic\" arguments. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#magic1\">magic1</a> != <a class=\"id\" href=\"#LINUX_REBOOT_MAGIC1\">LINUX_REBOOT_MAGIC1</a> ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#magic2\">magic2</a> != <a class=\"id\" href=\"#LINUX_REBOOT_MAGIC2\">LINUX_REBOOT_MAGIC2</a> &&", 
"<span class=\"ts\"/>                <a class=\"id\" href=\"#magic2\">magic2</a> != <a class=\"id\" href=\"#LINUX_REBOOT_MAGIC2A\">LINUX_REBOOT_MAGIC2A</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#magic2\">magic2</a> != <a class=\"id\" href=\"#LINUX_REBOOT_MAGIC2B\">LINUX_REBOOT_MAGIC2B</a> &&", 
"<span class=\"ts\"/>                <a class=\"id\" href=\"#magic2\">magic2</a> != <a class=\"id\" href=\"#LINUX_REBOOT_MAGIC2C\">LINUX_REBOOT_MAGIC2C</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Instead of trying to make the power_off code look like</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * halt when pm_power_off is not set do it the easy way.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#LINUX_REBOOT_CMD_POWER_OFF\">LINUX_REBOOT_CMD_POWER_OFF</a>) && !<a class=\"id\" href=\"#pm_power_off\">pm_power_off</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a> = <a class=\"id\" href=\"#LINUX_REBOOT_CMD_HALT\">LINUX_REBOOT_CMD_HALT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#reboot_mutex\">reboot_mutex</a>);", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LINUX_REBOOT_CMD_RESTART\">LINUX_REBOOT_CMD_RESTART</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kernel_restart\">kernel_restart</a>(<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LINUX_REBOOT_CMD_CAD_ON\">LINUX_REBOOT_CMD_CAD_ON</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#C_A_D\">C_A_D</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LINUX_REBOOT_CMD_CAD_OFF\">LINUX_REBOOT_CMD_CAD_OFF</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#C_A_D\">C_A_D</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LINUX_REBOOT_CMD_HALT\">LINUX_REBOOT_CMD_HALT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kernel_halt\">kernel_halt</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_exit\">do_exit</a>(0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"cannot halt\");", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LINUX_REBOOT_CMD_POWER_OFF\">LINUX_REBOOT_CMD_POWER_OFF</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kernel_power_off\">kernel_power_off</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_exit\">do_exit</a>(0);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LINUX_REBOOT_CMD_RESTART2\">LINUX_REBOOT_CMD_RESTART2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strncpy_from_user\">strncpy_from_user</a>(&amp;<a class=\"id\" href=\"#buffer\">buffer</a>[0], <a class=\"id\" href=\"#arg\">arg</a>, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>) - 1) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>[sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>) - 1] = '\\0';", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kernel_restart\">kernel_restart</a>(<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_KEXEC\">CONFIG_KEXEC</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LINUX_REBOOT_CMD_KEXEC\">LINUX_REBOOT_CMD_KEXEC</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#kernel_kexec\">kernel_kexec</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HIBERNATION\">CONFIG_HIBERNATION</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LINUX_REBOOT_CMD_SW_SUSPEND\">LINUX_REBOOT_CMD_SW_SUSPEND</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#hibernate\">hibernate</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#reboot_mutex\">reboot_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#deferred_cad\">deferred_cad</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#dummy\">dummy</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kernel_restart\">kernel_restart</a>(<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function gets called by ctrl-alt-del - ie the keyboard interrupt.</span>", 
"<span class=\"comment\"> * As it's called within an interrupt, it may NOT sync: the only choice</span>", 
"<span class=\"comment\"> * is whether to reboot at once, or just ignore the ctrl-alt-del.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ctrl_alt_del\">ctrl_alt_del</a>(void)", 
"{", 
"<span class=\"ts\"/>static <a class=\"id\" href=\"#DECLARE_WORK\">DECLARE_WORK</a>(<a class=\"id\" href=\"#cad_work\">cad_work</a>, <a class=\"id\" href=\"#deferred_cad\">deferred_cad</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#C_A_D\">C_A_D</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#cad_work\">cad_work</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_cad_pid\">kill_cad_pid</a>(<a class=\"id\" href=\"#SIGINT\">SIGINT</a>, 1);", 
"}", 
"<span class=\"ts\"/>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Unprivileged users may change the real gid to the effective gid</span>", 
"<span class=\"comment\"> * or vice versa.  (BSD-style)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If you set the real gid at all, or set the effective gid to a value not</span>", 
"<span class=\"comment\"> * equal to the real gid, then the saved gid is set to the new effective gid.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This makes it possible for a setgid program to completely drop its</span>", 
"<span class=\"comment\"> * privileges, which is often a useful assertion to make when you are doing</span>", 
"<span class=\"comment\"> * a security audit over a program.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The general idea is that a program which uses just setregid() will be</span>", 
"<span class=\"comment\"> * 100% compatible with BSD.  A program which uses just setgid() will be</span>", 
"<span class=\"comment\"> * 100% compatible with POSIX with saved IDs. </span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * SMP: There are not races, the GIDs are checked only by filesystem</span>", 
"<span class=\"comment\"> *      operations (as far as semantic preservation is concerned).</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#setregid\">setregid</a>, <a class=\"id\" href=\"#gid_t\">gid_t</a>, <a class=\"id\" href=\"#rgid\">rgid</a>, <a class=\"id\" href=\"#gid_t\">gid_t</a>, <a class=\"id\" href=\"#egid\">egid</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#old\">old</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> = <a class=\"id\" href=\"#prepare_creds\">prepare_creds</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new\">new</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#current_cred\">current_cred</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rgid\">rgid</a> != (<a class=\"id\" href=\"#gid_t\">gid_t</a>) -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#gid\">gid</a> == <a class=\"id\" href=\"#rgid\">rgid</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#egid\">egid</a> == <a class=\"id\" href=\"#rgid\">rgid</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SETGID\">CAP_SETGID</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#gid\">gid</a> = <a class=\"id\" href=\"#rgid\">rgid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#egid\">egid</a> != (<a class=\"id\" href=\"#gid_t\">gid_t</a>) -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#gid\">gid</a> == <a class=\"id\" href=\"#egid\">egid</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#egid\">egid</a> == <a class=\"id\" href=\"#egid\">egid</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#sgid\">sgid</a> == <a class=\"id\" href=\"#egid\">egid</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SETGID\">CAP_SETGID</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#egid\">egid</a> = <a class=\"id\" href=\"#egid\">egid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rgid\">rgid</a> != (<a class=\"id\" href=\"#gid_t\">gid_t</a>) -1 ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#egid\">egid</a> != (<a class=\"id\" href=\"#gid_t\">gid_t</a>) -1 && <a class=\"id\" href=\"#egid\">egid</a> != <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#gid\">gid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#sgid\">sgid</a> = <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#egid\">egid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#fsgid\">fsgid</a> = <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#egid\">egid</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#commit_creds\">commit_creds</a>(<a class=\"id\" href=\"#new\">new</a>);", 
"", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#abort_creds\">abort_creds</a>(<a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * setgid() is implemented like SysV w/ SAVED_IDS </span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * SMP: Same implicit races as above.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE1\">SYSCALL_DEFINE1</a>(<a class=\"id\" href=\"#setgid\">setgid</a>, <a class=\"id\" href=\"#gid_t\">gid_t</a>, <a class=\"id\" href=\"#gid\">gid</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#old\">old</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> = <a class=\"id\" href=\"#prepare_creds\">prepare_creds</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new\">new</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#current_cred\">current_cred</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SETGID\">CAP_SETGID</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#gid\">gid</a> = <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#egid\">egid</a> = <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#sgid\">sgid</a> = <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#fsgid\">fsgid</a> = <a class=\"id\" href=\"#gid\">gid</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#gid\">gid</a> == <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#gid\">gid</a> || <a class=\"id\" href=\"#gid\">gid</a> == <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#sgid\">sgid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#egid\">egid</a> = <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#fsgid\">fsgid</a> = <a class=\"id\" href=\"#gid\">gid</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#commit_creds\">commit_creds</a>(<a class=\"id\" href=\"#new\">new</a>);", 
"", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#abort_creds\">abort_creds</a>(<a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * change the user struct in a credentials set to match the new UID</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#set_user\">set_user</a>(struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#new\">new</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_struct\">user_struct</a> *<a class=\"id\" href=\"#new_user\">new_user</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_user\">new_user</a> = <a class=\"id\" href=\"#alloc_uid\">alloc_uid</a>(<a class=\"id\" href=\"#current_user_ns\">current_user_ns</a>(), <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#uid\">uid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_user\">new_user</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#new_user\">new_user</a>-><a class=\"id\" href=\"#processes\">processes</a>) >= <a class=\"id\" href=\"#rlimit\">rlimit</a>(<a class=\"id\" href=\"#RLIMIT_NPROC\">RLIMIT_NPROC</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_user\">new_user</a> != <a class=\"id\" href=\"#INIT_USER\">INIT_USER</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_uid\">free_uid</a>(<a class=\"id\" href=\"#new_user\">new_user</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_uid\">free_uid</a>(<a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#user\">user</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#user\">user</a> = <a class=\"id\" href=\"#new_user\">new_user</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Unprivileged users may change the real uid to the effective uid</span>", 
"<span class=\"comment\"> * or vice versa.  (BSD-style)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If you set the real uid at all, or set the effective uid to a value not</span>", 
"<span class=\"comment\"> * equal to the real uid, then the saved uid is set to the new effective uid.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This makes it possible for a setuid program to completely drop its</span>", 
"<span class=\"comment\"> * privileges, which is often a useful assertion to make when you are doing</span>", 
"<span class=\"comment\"> * a security audit over a program.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The general idea is that a program which uses just setreuid() will be</span>", 
"<span class=\"comment\"> * 100% compatible with BSD.  A program which uses just setuid() will be</span>", 
"<span class=\"comment\"> * 100% compatible with POSIX with saved IDs. </span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#setreuid\">setreuid</a>, <a class=\"id\" href=\"#uid_t\">uid_t</a>, <a class=\"id\" href=\"#ruid\">ruid</a>, <a class=\"id\" href=\"#uid_t\">uid_t</a>, <a class=\"id\" href=\"#euid\">euid</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#old\">old</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> = <a class=\"id\" href=\"#prepare_creds\">prepare_creds</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new\">new</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#current_cred\">current_cred</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ruid\">ruid</a> != (<a class=\"id\" href=\"#uid_t\">uid_t</a>) -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#uid\">uid</a> = <a class=\"id\" href=\"#ruid\">ruid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#uid\">uid</a> != <a class=\"id\" href=\"#ruid\">ruid</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#euid\">euid</a> != <a class=\"id\" href=\"#ruid\">ruid</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SETUID\">CAP_SETUID</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#euid\">euid</a> != (<a class=\"id\" href=\"#uid_t\">uid_t</a>) -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#euid\">euid</a> = <a class=\"id\" href=\"#euid\">euid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#uid\">uid</a> != <a class=\"id\" href=\"#euid\">euid</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#euid\">euid</a> != <a class=\"id\" href=\"#euid\">euid</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#suid\">suid</a> != <a class=\"id\" href=\"#euid\">euid</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SETUID\">CAP_SETUID</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#uid\">uid</a> != <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#uid\">uid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#set_user\">set_user</a>(<a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ruid\">ruid</a> != (<a class=\"id\" href=\"#uid_t\">uid_t</a>) -1 ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#euid\">euid</a> != (<a class=\"id\" href=\"#uid_t\">uid_t</a>) -1 && <a class=\"id\" href=\"#euid\">euid</a> != <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#uid\">uid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#suid\">suid</a> = <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#euid\">euid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#fsuid\">fsuid</a> = <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#euid\">euid</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#security_task_fix_setuid\">security_task_fix_setuid</a>(<a class=\"id\" href=\"#new\">new</a>, <a class=\"id\" href=\"#old\">old</a>, <a class=\"id\" href=\"#LSM_SETID_RE\">LSM_SETID_RE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#commit_creds\">commit_creds</a>(<a class=\"id\" href=\"#new\">new</a>);", 
"", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#abort_creds\">abort_creds</a>(<a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"<span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * setuid() is implemented like SysV with SAVED_IDS </span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> * Note that SAVED_ID's is deficient in that a setuid root program</span>", 
"<span class=\"comment\"> * like sendmail, for example, cannot set its uid to be a normal </span>", 
"<span class=\"comment\"> * user and then switch back, because if you're root, setuid() sets</span>", 
"<span class=\"comment\"> * the saved uid too.  If you don't like this, blame the bright people</span>", 
"<span class=\"comment\"> * in the POSIX committee and/or USG.  Note that the BSD-style setreuid()</span>", 
"<span class=\"comment\"> * will allow a root program to temporarily drop privileges and be able to</span>", 
"<span class=\"comment\"> * regain them by swapping the real and effective uid.  </span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE1\">SYSCALL_DEFINE1</a>(<a class=\"id\" href=\"#setuid\">setuid</a>, <a class=\"id\" href=\"#uid_t\">uid_t</a>, <a class=\"id\" href=\"#uid\">uid</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#old\">old</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> = <a class=\"id\" href=\"#prepare_creds\">prepare_creds</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new\">new</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#current_cred\">current_cred</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SETUID\">CAP_SETUID</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#suid\">suid</a> = <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#uid\">uid</a> = <a class=\"id\" href=\"#uid\">uid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uid\">uid</a> != <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#uid\">uid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#set_user\">set_user</a>(<a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#uid\">uid</a> != <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#uid\">uid</a> && <a class=\"id\" href=\"#uid\">uid</a> != <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#suid\">suid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#fsuid\">fsuid</a> = <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#euid\">euid</a> = <a class=\"id\" href=\"#uid\">uid</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#security_task_fix_setuid\">security_task_fix_setuid</a>(<a class=\"id\" href=\"#new\">new</a>, <a class=\"id\" href=\"#old\">old</a>, <a class=\"id\" href=\"#LSM_SETID_ID\">LSM_SETID_ID</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#commit_creds\">commit_creds</a>(<a class=\"id\" href=\"#new\">new</a>);", 
"", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#abort_creds\">abort_creds</a>(<a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function implements a generic ability to update ruid, euid,</span>", 
"<span class=\"comment\"> * and suid.  This allows you to implement the 4.4 compatible seteuid().</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#setresuid\">setresuid</a>, <a class=\"id\" href=\"#uid_t\">uid_t</a>, <a class=\"id\" href=\"#ruid\">ruid</a>, <a class=\"id\" href=\"#uid_t\">uid_t</a>, <a class=\"id\" href=\"#euid\">euid</a>, <a class=\"id\" href=\"#uid_t\">uid_t</a>, <a class=\"id\" href=\"#suid\">suid</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#old\">old</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> = <a class=\"id\" href=\"#prepare_creds\">prepare_creds</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new\">new</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#current_cred\">current_cred</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SETUID\">CAP_SETUID</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ruid\">ruid</a> != (<a class=\"id\" href=\"#uid_t\">uid_t</a>) -1 && <a class=\"id\" href=\"#ruid\">ruid</a> != <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#uid\">uid</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ruid\">ruid</a> != <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#euid\">euid</a>  && <a class=\"id\" href=\"#ruid\">ruid</a> != <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#suid\">suid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#euid\">euid</a> != (<a class=\"id\" href=\"#uid_t\">uid_t</a>) -1 && <a class=\"id\" href=\"#euid\">euid</a> != <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#uid\">uid</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#euid\">euid</a> != <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#euid\">euid</a>  && <a class=\"id\" href=\"#euid\">euid</a> != <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#suid\">suid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#suid\">suid</a> != (<a class=\"id\" href=\"#uid_t\">uid_t</a>) -1 && <a class=\"id\" href=\"#suid\">suid</a> != <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#uid\">uid</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#suid\">suid</a> != <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#euid\">euid</a>  && <a class=\"id\" href=\"#suid\">suid</a> != <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#suid\">suid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ruid\">ruid</a> != (<a class=\"id\" href=\"#uid_t\">uid_t</a>) -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#uid\">uid</a> = <a class=\"id\" href=\"#ruid\">ruid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ruid\">ruid</a> != <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#uid\">uid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#set_user\">set_user</a>(<a class=\"id\" href=\"#new\">new</a>);", 
];
xr_frag_insert('l/ec/628212e49ba4e902c83212afe7acbdcd0c620a.xr', __xr_tmp);
