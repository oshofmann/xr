var __xr_tmp = [
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We do still charge estimated metadata to the sb though;</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we cannot afford to run out of free blocks.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_claim_free_blocks\">ext4_claim_free_blocks</a>(<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#md_needed\">md_needed</a> + 1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_release_reservation_block\">dquot_release_reservation_block</a>(<a class=\"id\" href=\"#inode\">inode</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_should_retry_alloc\">ext4_should_retry_alloc</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, &amp;<a class=\"id\" href=\"#retries\">retries</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#yield\">yield</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#repeat\">repeat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_block_reservation_lock\">i_block_reservation_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_reserved_data_blocks\">i_reserved_data_blocks</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_reserved_meta_blocks\">i_reserved_meta_blocks</a> += <a class=\"id\" href=\"#md_needed\">md_needed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_block_reservation_lock\">i_block_reservation_lock</a>);", 
"", 
"<span class=\"ts\"/>return 0;       <span class=\"comment\">/* success */</span>", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ext4_da_release_space\">ext4_da_release_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#to_free\">to_free</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_inode_info\">ext4_inode_info</a> *<a class=\"id\" href=\"#ei\">ei</a> = <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#to_free\">to_free</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Nothing to release, exit */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_block_reservation_lock\">i_block_reservation_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_ext4_da_release_space\">trace_ext4_da_release_space</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#to_free\">to_free</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#to_free\">to_free</a> &gt; <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_reserved_data_blocks\">i_reserved_data_blocks</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * if there aren't enough reserved blocks, then the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * counter is messed up somewhere.  Since this</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * function is called from invalidate page, it's</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * harmless to return without any action.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>, \"ext4_da_release_space: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"ino %lu, to_free %d with only %d reserved \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"data blocks\\n\", <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, <a class=\"id\" href=\"#to_free\">to_free</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_reserved_data_blocks\">i_reserved_data_blocks</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to_free\">to_free</a> = <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_reserved_data_blocks\">i_reserved_data_blocks</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_reserved_data_blocks\">i_reserved_data_blocks</a> -= <a class=\"id\" href=\"#to_free\">to_free</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_reserved_data_blocks\">i_reserved_data_blocks</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We can release all of the reserved metadata blocks</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * only when we have written all of the delayed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * allocation blocks.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_sub\">percpu_counter_sub</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_dirtyblocks_counter\">s_dirtyblocks_counter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_reserved_meta_blocks\">i_reserved_meta_blocks</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_reserved_meta_blocks\">i_reserved_meta_blocks</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_da_metadata_calc_len\">i_da_metadata_calc_len</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* update fs dirty data blocks counter */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_sub\">percpu_counter_sub</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_dirtyblocks_counter\">s_dirtyblocks_counter</a>, <a class=\"id\" href=\"#to_free\">to_free</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_block_reservation_lock\">i_block_reservation_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dquot_release_reservation_block\">dquot_release_reservation_block</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#to_free\">to_free</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ext4_da_page_release_reservation\">ext4_da_page_release_reservation</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#to_release\">to_release</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#head\">head</a>, *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#curr_off\">curr_off</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#page_buffers\">page_buffers</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#next_off\">next_off</a> = <a class=\"id\" href=\"#curr_off\">curr_off</a> + <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#offset\">offset</a> <= <a class=\"id\" href=\"#curr_off\">curr_off</a>) && (<a class=\"id\" href=\"#buffer_delay\">buffer_delay</a>(<a class=\"id\" href=\"#bh\">bh</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to_release\">to_release</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_buffer_delay\">clear_buffer_delay</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#curr_off\">curr_off</a> = <a class=\"id\" href=\"#next_off\">next_off</a>;", 
"<span class=\"ts\"/>} while ((<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_this_page\">b_this_page</a>) != <a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_da_release_space\">ext4_da_release_space</a>(<a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#host\">host</a>, <a class=\"id\" href=\"#to_release\">to_release</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Delayed allocation stuff</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * mpage_da_submit_io - walks through extent of pages and try to write</span>", 
"<span class=\"comment\"> * them with writepage() call back</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @mpd-&gt;inode: inode</span>", 
"<span class=\"comment\"> * @mpd-&gt;first_page: first page of the extent</span>", 
"<span class=\"comment\"> * @mpd-&gt;next_page: page after the last page of the extent</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * By the time mpage_da_submit_io() is called we expect all blocks</span>", 
"<span class=\"comment\"> * to be allocated. this may be wrong if allocation failed.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * As pages are already locked by write_cache_pages(), we can't use it</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#mpage_da_submit_io\">mpage_da_submit_io</a>(struct <a class=\"id\" href=\"#mpage_da_data\">mpage_da_data</a> *<a class=\"id\" href=\"#mpd\">mpd</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#pages_skipped\">pages_skipped</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pagevec\">pagevec</a> <a class=\"id\" href=\"#pvec\">pvec</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0, <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#nr_pages\">nr_pages</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#next_page\">next_page</a> <= <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#first_page\">first_page</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We need to start from the first_page to the next_page - 1</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to make sure we also write the mapped dirty buffer_heads.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we look at mpd-&gt;b_blocknr we would only be looking</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * at the currently mapped buffer_heads.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#first_page\">first_page</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#next_page\">next_page</a> - 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pagevec_init\">pagevec_init</a>(&amp;<a class=\"id\" href=\"#pvec\">pvec</a>, 0);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#index\">index</a> <= <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_pages\">nr_pages</a> = <a class=\"id\" href=\"#pagevec_lookup\">pagevec_lookup</a>(&amp;<a class=\"id\" href=\"#pvec\">pvec</a>, <a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#PAGEVEC_SIZE\">PAGEVEC_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nr_pages\">nr_pages</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_pages\">nr_pages</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#pvec\">pvec</a>.<a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#index\">index</a> &gt; <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#PageLocked\">PageLocked</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#PageWriteback\">PageWriteback</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pages_skipped\">pages_skipped</a> = <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#wbc\">wbc</a>-><a class=\"id\" href=\"#pages_skipped\">pages_skipped</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#a_ops\">a_ops</a>-><a class=\"id\" href=\"#writepage\">writepage</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#wbc\">wbc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a> && (<a class=\"id\" href=\"#pages_skipped\">pages_skipped</a> == <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#wbc\">wbc</a>-><a class=\"id\" href=\"#pages_skipped\">pages_skipped</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * have successfully written the page</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * without skipping the same</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#pages_written\">pages_written</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * In error case, we have to continue because</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * remaining pages are still locked</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * XXX: unlock and re-dirty them?</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pagevec_release\">pagevec_release</a>(&amp;<a class=\"id\" href=\"#pvec\">pvec</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * mpage_put_bnr_to_bhs - walk blocks and assign them actual numbers</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * the function goes through all passed space and put actual disk</span>", 
"<span class=\"comment\"> * block numbers into buffer heads, dropping BH_Delay and BH_Unwritten</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#mpage_put_bnr_to_bhs\">mpage_put_bnr_to_bhs</a>(struct <a class=\"id\" href=\"#mpage_da_data\">mpage_da_data</a> *<a class=\"id\" href=\"#mpd\">mpd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#ext4_map_blocks\">ext4_map_blocks</a> *<a class=\"id\" href=\"#map\">map</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#blocks\">blocks</a> = <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#pblock\">pblock</a> = <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_pblk\">m_pblk</a>, <a class=\"id\" href=\"#cur_logical\">cur_logical</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#head\">head</a>, *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pagevec\">pagevec</a> <a class=\"id\" href=\"#pvec\">pvec</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nr_pages\">nr_pages</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a> >> (<a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a> - <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = (<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a> + <a class=\"id\" href=\"#blocks\">blocks</a> - 1) >> (<a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a> - <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cur_logical\">cur_logical</a> = <a class=\"id\" href=\"#index\">index</a> << (<a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a> - <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pagevec_init\">pagevec_init</a>(&amp;<a class=\"id\" href=\"#pvec\">pvec</a>, 0);", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#index\">index</a> <= <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* XXX: optimize tail */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_pages\">nr_pages</a> = <a class=\"id\" href=\"#pagevec_lookup\">pagevec_lookup</a>(&amp;<a class=\"id\" href=\"#pvec\">pvec</a>, <a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#PAGEVEC_SIZE\">PAGEVEC_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nr_pages\">nr_pages</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_pages\">nr_pages</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#pvec\">pvec</a>.<a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#index\">index</a> &gt; <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#PageLocked\">PageLocked</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#PageWriteback\">PageWriteback</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#page_has_buffers\">page_has_buffers</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#page_buffers\">page_buffers</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#bh\">bh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* skip blocks out of the range */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cur_logical\">cur_logical</a> >= <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur_logical\">cur_logical</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} while ((<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_this_page\">b_this_page</a>) != <a class=\"id\" href=\"#head\">head</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cur_logical\">cur_logical</a> >= <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a> + <a class=\"id\" href=\"#blocks\">blocks</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_delay\">buffer_delay</a>(<a class=\"id\" href=\"#bh\">bh</a>) || <a class=\"id\" href=\"#buffer_unwritten\">buffer_unwritten</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_bdev\">b_bdev</a> != <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_delay\">buffer_delay</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_buffer_delay\">clear_buffer_delay</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a> = <a class=\"id\" href=\"#pblock\">pblock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * unwritten already should have</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * blocknr assigned. Verify that</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_buffer_unwritten\">clear_buffer_unwritten</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a> != <a class=\"id\" href=\"#pblock\">pblock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#buffer_mapped\">buffer_mapped</a>(<a class=\"id\" href=\"#bh\">bh</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a> != <a class=\"id\" href=\"#pblock\">pblock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_flags\">m_flags</a> &amp; <a class=\"id\" href=\"#EXT4_MAP_UNINIT\">EXT4_MAP_UNINIT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_uninit\">set_buffer_uninit</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur_logical\">cur_logical</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pblock\">pblock</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} while ((<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_this_page\">b_this_page</a>) != <a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pagevec_release\">pagevec_release</a>(&amp;<a class=\"id\" href=\"#pvec\">pvec</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"", 
"static void <a class=\"id\" href=\"#ext4_da_block_invalidatepages\">ext4_da_block_invalidatepages</a>(struct <a class=\"id\" href=\"#mpage_da_data\">mpage_da_data</a> *<a class=\"id\" href=\"#mpd\">mpd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#logical\">logical</a>, long <a class=\"id\" href=\"#blk_cnt\">blk_cnt</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nr_pages\">nr_pages</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pagevec\">pagevec</a> <a class=\"id\" href=\"#pvec\">pvec</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#logical\">logical</a> >> (<a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a> - <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a>   = (<a class=\"id\" href=\"#logical\">logical</a> + <a class=\"id\" href=\"#blk_cnt\">blk_cnt</a> - 1) >>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a> - <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#index\">index</a> <= <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_pages\">nr_pages</a> = <a class=\"id\" href=\"#pagevec_lookup\">pagevec_lookup</a>(&amp;<a class=\"id\" href=\"#pvec\">pvec</a>, <a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#PAGEVEC_SIZE\">PAGEVEC_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nr_pages\">nr_pages</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_pages\">nr_pages</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#pvec\">pvec</a>.<a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#index\">index</a> &gt; <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#PageLocked\">PageLocked</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#PageWriteback\">PageWriteback</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block_invalidatepage\">block_invalidatepage</a>(<a class=\"id\" href=\"#page\">page</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ClearPageUptodate\">ClearPageUptodate</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#pvec\">pvec</a>.<a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#nr_pages\">nr_pages</a> - 1]-><a class=\"id\" href=\"#index\">index</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pagevec_release\">pagevec_release</a>(&amp;<a class=\"id\" href=\"#pvec\">pvec</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ext4_print_free_blocks\">ext4_print_free_blocks</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"Total free blocks count %lld\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#ext4_count_free_blocks\">ext4_count_free_blocks</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"Free/Dirty block details\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"free_blocks=%lld\\n\",", 
"<span class=\"ts\"/>       (long long) <a class=\"id\" href=\"#percpu_counter_sum\">percpu_counter_sum</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeblocks_counter\">s_freeblocks_counter</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"dirty_blocks=%lld\\n\",", 
"<span class=\"ts\"/>       (long long) <a class=\"id\" href=\"#percpu_counter_sum\">percpu_counter_sum</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_dirtyblocks_counter\">s_dirtyblocks_counter</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"Block reservation details\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"i_reserved_data_blocks=%u\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_reserved_data_blocks\">i_reserved_data_blocks</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"i_reserved_meta_blocks=%u\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_reserved_meta_blocks\">i_reserved_meta_blocks</a>);", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * mpage_da_map_blocks - go through given space</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @mpd - bh describing space</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The function skips space we know is already mapped to disk blocks.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#mpage_da_map_blocks\">mpage_da_map_blocks</a>(struct <a class=\"id\" href=\"#mpage_da_data\">mpage_da_data</a> *<a class=\"id\" href=\"#mpd\">mpd</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#blks\">blks</a>, <a class=\"id\" href=\"#get_blocks_flags\">get_blocks_flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_map_blocks\">ext4_map_blocks</a> <a class=\"id\" href=\"#map\">map</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#max_blocks\">max_blocks</a> = <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_size\">b_size</a> >> <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#disksize\">disksize</a> = <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_disksize\">i_disksize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We consider only non-mapped and non-allocated blocks</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_state\">b_state</a>  &amp; (1 << <a class=\"id\" href=\"#BH_Mapped\">BH_Mapped</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>!(<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_state\">b_state</a> &amp; (1 << <a class=\"id\" href=\"#BH_Delay\">BH_Delay</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>!(<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_state\">b_state</a> &amp; (1 << <a class=\"id\" href=\"#BH_Unwritten\">BH_Unwritten</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we didn't accumulate anything to write simply return</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_size\">b_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext4_journal_current_handle\">ext4_journal_current_handle</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#handle\">handle</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Call ext4_map_blocks() to allocate any delayed allocation</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * blocks, or to convert an uninitialized extent to be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * initialized (in the case where we have written into</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * one or more preallocated blocks).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We pass in the magic EXT4_GET_BLOCKS_DELALLOC_RESERVE to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * indicate that we are on the delayed allocation path.  This</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * affects functions in many different parts of the allocation</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * call path.  This flag exists primarily because we don't</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * want to change *many* call functions, so ext4_map_blocks()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * will set the magic i_delalloc_reserved_flag once the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * inode's allocation semaphore is taken.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the blocks in questions were delalloc blocks, set</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * EXT4_GET_BLOCKS_DELALLOC_RESERVE so the delalloc accounting</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * variables are updated after the blocks have been allocated.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_lblk\">m_lblk</a> = <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_len\">m_len</a> = <a class=\"id\" href=\"#max_blocks\">max_blocks</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_blocks_flags\">get_blocks_flags</a> = <a class=\"id\" href=\"#EXT4_GET_BLOCKS_CREATE\">EXT4_GET_BLOCKS_CREATE</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_should_dioread_nolock\">ext4_should_dioread_nolock</a>(<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_blocks_flags\">get_blocks_flags</a> |= <a class=\"id\" href=\"#EXT4_GET_BLOCKS_IO_CREATE_EXT\">EXT4_GET_BLOCKS_IO_CREATE_EXT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_state\">b_state</a> &amp; (1 << <a class=\"id\" href=\"#BH_Delay\">BH_Delay</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_blocks_flags\">get_blocks_flags</a> |= <a class=\"id\" href=\"#EXT4_GET_BLOCKS_DELALLOC_RESERVE\">EXT4_GET_BLOCKS_DELALLOC_RESERVE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blks\">blks</a> = <a class=\"id\" href=\"#ext4_map_blocks\">ext4_map_blocks</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#map\">map</a>, <a class=\"id\" href=\"#get_blocks_flags\">get_blocks_flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blks\">blks</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#blks\">blks</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If get block returns with error we simply</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * return. Later writepage will redirty the page and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * writepages will find the dirty page again</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ext4_count_free_blocks\">ext4_count_free_blocks</a>(<a class=\"id\" href=\"#sb\">sb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * get block failure will cause us to loop in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * writepages, because a_ops-&gt;writepage won't be able</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to make progress. The page will be redirtied by</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * writepage and writepages will again try to write</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the same.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_mount_flags\">s_mount_flags</a> &amp; <a class=\"id\" href=\"#EXT4_MF_FS_ABORTED\">EXT4_MF_FS_ABORTED</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"delayed block allocation failed for inode %lu \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"at logical offset %llu with max blocks %zd \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"with error %d\", <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (unsigned long long) <a class=\"id\" href=\"#next\">next</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_size\">b_size</a> >> <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"This should not happen!! Data will be lost\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_print_free_blocks\">ext4_print_free_blocks</a>(<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* invalidate all the pages */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_da_block_invalidatepages\">ext4_da_block_invalidatepages</a>(<a class=\"id\" href=\"#mpd\">mpd</a>, <a class=\"id\" href=\"#next\">next</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_size\">b_size</a> >> <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#blks\">blks</a> == 0);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_flags\">m_flags</a> &amp; <a class=\"id\" href=\"#EXT4_MAP_NEW\">EXT4_MAP_NEW</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a> = <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_len\">m_len</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unmap_underlying_metadata\">unmap_underlying_metadata</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_pblk\">m_pblk</a> + <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If blocks are delayed marked, we need to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * put actual blocknr and drop delayed bit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_state\">b_state</a> &amp; (1 << <a class=\"id\" href=\"#BH_Delay\">BH_Delay</a>)) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_state\">b_state</a> &amp; (1 << <a class=\"id\" href=\"#BH_Unwritten\">BH_Unwritten</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpage_put_bnr_to_bhs\">mpage_put_bnr_to_bhs</a>(<a class=\"id\" href=\"#mpd\">mpd</a>, &amp;<a class=\"id\" href=\"#map\">map</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_should_order_data\">ext4_should_order_data</a>(<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_jbd2_file_inode\">ext4_jbd2_file_inode</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Update on-disk size along with block allocation.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disksize\">disksize</a> = ((<a class=\"id\" href=\"#loff_t\">loff_t</a>) <a class=\"id\" href=\"#next\">next</a> + <a class=\"id\" href=\"#blks\">blks</a>) << <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#disksize\">disksize</a> &gt; <a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#disksize\">disksize</a> = <a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#disksize\">disksize</a> &gt; <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_disksize\">i_disksize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_update_i_disksize\">ext4_update_i_disksize</a>(<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#disksize\">disksize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ext4_mark_inode_dirty\">ext4_mark_inode_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BH_FLAGS\">BH_FLAGS</a> ((1 << <a class=\"id\" href=\"#BH_Uptodate\">BH_Uptodate</a>) | (1 << <a class=\"id\" href=\"#BH_Mapped\">BH_Mapped</a>) | \\", 
"<span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#BH_Delay\">BH_Delay</a>) | (1 << <a class=\"id\" href=\"#BH_Unwritten\">BH_Unwritten</a>))", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * mpage_add_bh_to_extent - try to add one more block to extent of blocks</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @mpd-&gt;lbh - extent of blocks</span>", 
"<span class=\"comment\"> * @logical - logical number of the block in the file</span>", 
"<span class=\"comment\"> * @bh - bh of the block (used to access block's state)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * the function is used to collect contig. blocks in same state</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#mpage_add_bh_to_extent\">mpage_add_bh_to_extent</a>(struct <a class=\"id\" href=\"#mpage_da_data\">mpage_da_data</a> *<a class=\"id\" href=\"#mpd\">mpd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#logical\">logical</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#b_size\">b_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned long <a class=\"id\" href=\"#b_state\">b_state</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nrblocks\">nrblocks</a> = <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_size\">b_size</a> >> <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * XXX Don't go larger than mballoc is willing to allocate</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This is a stopgap solution.  We eventually need to fold</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mpage_da_submit_io() into this function and then call</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ext4_map_blocks() multiple times in a loop</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nrblocks\">nrblocks</a> >= 8*1024*1024/<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#flush_it\">flush_it</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check if thereserved journal credits might overflow */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ext4_test_inode_flag\">ext4_test_inode_flag</a>(<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_INODE_EXTENTS\">EXT4_INODE_EXTENTS</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nrblocks\">nrblocks</a> >= <a class=\"id\" href=\"#EXT4_MAX_TRANS_DATA\">EXT4_MAX_TRANS_DATA</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * With non-extent format we are limited by the journal</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * credit available.  Total credit needed to insert</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * nrblocks contiguous blocks is dependent on the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * nrblocks.  So limit nrblocks.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#flush_it\">flush_it</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if ((<a class=\"id\" href=\"#nrblocks\">nrblocks</a> + (<a class=\"id\" href=\"#b_size\">b_size</a> >> <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>)) &gt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_MAX_TRANS_DATA\">EXT4_MAX_TRANS_DATA</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Adding the new buffer_head would make it cross the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * allowed limit for which we have journal credit</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * reserved. So limit the new bh-&gt;b_size</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#b_size\">b_size</a> = (<a class=\"id\" href=\"#EXT4_MAX_TRANS_DATA\">EXT4_MAX_TRANS_DATA</a> - <a class=\"id\" href=\"#nrblocks\">nrblocks</a>) <<", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* we will do mpage_da_submit_io in the next loop */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * First block in the extent</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_size\">b_size</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a> = <a class=\"id\" href=\"#logical\">logical</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_size\">b_size</a> = <a class=\"id\" href=\"#b_size\">b_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_state\">b_state</a> = <a class=\"id\" href=\"#b_state\">b_state</a> &amp; <a class=\"id\" href=\"#BH_FLAGS\">BH_FLAGS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a> + <a class=\"id\" href=\"#nrblocks\">nrblocks</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Can we merge the block to our big extent?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#logical\">logical</a> == <a class=\"id\" href=\"#next\">next</a> && (<a class=\"id\" href=\"#b_state\">b_state</a> &amp; <a class=\"id\" href=\"#BH_FLAGS\">BH_FLAGS</a>) == <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_state\">b_state</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_size\">b_size</a> += <a class=\"id\" href=\"#b_size\">b_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#flush_it\">flush_it</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We couldn't merge the block to our extent, so we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * need to flush current  extent and start new one</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mpage_da_map_blocks\">mpage_da_map_blocks</a>(<a class=\"id\" href=\"#mpd\">mpd</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpage_da_submit_io\">mpage_da_submit_io</a>(<a class=\"id\" href=\"#mpd\">mpd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#io_done\">io_done</a> = 1;", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_bh_delay_or_unwritten\">ext4_bh_delay_or_unwritten</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#buffer_delay\">buffer_delay</a>(<a class=\"id\" href=\"#bh\">bh</a>) || <a class=\"id\" href=\"#buffer_unwritten\">buffer_unwritten</a>(<a class=\"id\" href=\"#bh\">bh</a>)) && <a class=\"id\" href=\"#buffer_dirty\">buffer_dirty</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * __mpage_da_writepage - finds extent of pages and blocks</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @page: page to consider</span>", 
"<span class=\"comment\"> * @wbc: not used, we just follow rules</span>", 
"<span class=\"comment\"> * @data: context</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The function finds extents of pages and scan them for all blocks.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__mpage_da_writepage\">__mpage_da_writepage</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#writeback_control\">writeback_control</a> *<a class=\"id\" href=\"#wbc\">wbc</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mpage_da_data\">mpage_da_data</a> *<a class=\"id\" href=\"#mpd\">mpd</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>, *<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#logical\">logical</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Can we merge this page to current extent?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#next_page\">next_page</a> != <a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#index\">index</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Nope, we can't. So, we map non-allocated blocks</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and start IO on them using writepage()</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#next_page\">next_page</a> != <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#first_page\">first_page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mpage_da_map_blocks\">mpage_da_map_blocks</a>(<a class=\"id\" href=\"#mpd\">mpd</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpage_da_submit_io\">mpage_da_submit_io</a>(<a class=\"id\" href=\"#mpd\">mpd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * skip rest of the page in the page_vec</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#io_done\">io_done</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#redirty_page_for_writepage\">redirty_page_for_writepage</a>(<a class=\"id\" href=\"#wbc\">wbc</a>, <a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#MPAGE_DA_EXTENT_TAIL\">MPAGE_DA_EXTENT_TAIL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Start next extent of pages ...</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#first_page\">first_page</a> = <a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#index\">index</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * ... and blocks</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_size\">b_size</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_state\">b_state</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#next_page\">next_page</a> = <a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#index\">index</a> + 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#logical\">logical</a> = (<a class=\"id\" href=\"#sector_t\">sector_t</a>) <a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#index\">index</a> <<", 
"<span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a> - <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#page_has_buffers\">page_has_buffers</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpage_add_bh_to_extent\">mpage_add_bh_to_extent</a>(<a class=\"id\" href=\"#mpd\">mpd</a>, <a class=\"id\" href=\"#logical\">logical</a>, <a class=\"id\" href=\"#PAGE_CACHE_SIZE\">PAGE_CACHE_SIZE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (1 << <a class=\"id\" href=\"#BH_Dirty\">BH_Dirty</a>) | (1 << <a class=\"id\" href=\"#BH_Uptodate\">BH_Uptodate</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#io_done\">io_done</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#MPAGE_DA_EXTENT_TAIL\">MPAGE_DA_EXTENT_TAIL</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Page with regular buffer heads, just add all dirty ones</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#page_buffers\">page_buffers</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#buffer_locked\">buffer_locked</a>(<a class=\"id\" href=\"#bh\">bh</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We need to try to allocate</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * unmapped blocks in the same page.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Otherwise we won't make progress</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * with the page in ext4_writepage</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_bh_delay_or_unwritten\">ext4_bh_delay_or_unwritten</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpage_add_bh_to_extent\">mpage_add_bh_to_extent</a>(<a class=\"id\" href=\"#mpd\">mpd</a>, <a class=\"id\" href=\"#logical\">logical</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_state\">b_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#io_done\">io_done</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#MPAGE_DA_EXTENT_TAIL\">MPAGE_DA_EXTENT_TAIL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#buffer_dirty\">buffer_dirty</a>(<a class=\"id\" href=\"#bh\">bh</a>) && (<a class=\"id\" href=\"#buffer_mapped\">buffer_mapped</a>(<a class=\"id\" href=\"#bh\">bh</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * mapped dirty buffer. We need to update</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the b_state because we look at</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * b_state in mpage_da_map_blocks. We don't</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * update b_size because if we find an</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * unmapped buffer_head later we need to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * use the b_state flag of that buffer_head.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_size\">b_size</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#b_state\">b_state</a> = <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_state\">b_state</a> &amp; <a class=\"id\" href=\"#BH_FLAGS\">BH_FLAGS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#logical\">logical</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>} while ((<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_this_page\">b_this_page</a>) != <a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is a special get_blocks_t callback which is used by</span>", 
"<span class=\"comment\"> * ext4_da_write_begin().  It will either return mapped block or</span>", 
"<span class=\"comment\"> * reserve space for a single block.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * For delayed buffer_head we have BH_Mapped, BH_New, BH_Delay set.</span>", 
"<span class=\"comment\"> * We also have b_blocknr = -1 and b_bdev initialized properly</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * For unwritten buffer_head we have BH_Mapped, BH_New, BH_Unwritten set.</span>", 
"<span class=\"comment\"> * We also have b_blocknr = physicalblock mapping unwritten extent and b_bdev</span>", 
"<span class=\"comment\"> * initialized properly.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext4_da_get_block_prep\">ext4_da_get_block_prep</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#iblock\">iblock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>, int <a class=\"id\" href=\"#create\">create</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_map_blocks\">ext4_map_blocks</a> <a class=\"id\" href=\"#map\">map</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#invalid_block\">invalid_block</a> = ~((<a class=\"id\" href=\"#sector_t\">sector_t</a>) 0xffff);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#invalid_block\">invalid_block</a> &lt; <a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#invalid_block\">invalid_block</a> = ~0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#create\">create</a> == 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a> != <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_lblk\">m_lblk</a> = <a class=\"id\" href=\"#iblock\">iblock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_len\">m_len</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * first, we need to know whether the block is allocated already</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * preallocated blocks are unmapped but should treated</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the same as allocated blocks.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_map_blocks\">ext4_map_blocks</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#map\">map</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_delay\">buffer_delay</a>(<a class=\"id\" href=\"#bh\">bh</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0; <span class=\"comment\">/* Not sure this could or should happen */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * XXX: __block_prepare_write() unmaps passed block,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * is it OK?</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_da_reserve_space\">ext4_da_reserve_space</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#iblock\">iblock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* not enough space to reserve */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map_bh\">map_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#invalid_block\">invalid_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_new\">set_buffer_new</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_delay\">set_buffer_delay</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map_bh\">map_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_pblk\">m_pblk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_state\">b_state</a> = (<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_state\">b_state</a> &amp; ~<a class=\"id\" href=\"#EXT4_MAP_FLAGS\">EXT4_MAP_FLAGS</a>) | <a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_flags\">m_flags</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_unwritten\">buffer_unwritten</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* A delayed write to unwritten bh should be marked</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * new and mapped.  Mapped ensures that we don't do</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * get_block multiple times when we write to the same</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * offset and new ensures that we do proper zero out</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * for partial write.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_new\">set_buffer_new</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_mapped\">set_buffer_mapped</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function is used as a standard get_block_t calback function</span>", 
"<span class=\"comment\"> * when there is no desire to allocate any blocks.  It is used as a</span>", 
"<span class=\"comment\"> * callback function for block_prepare_write() and block_write_full_page().</span>", 
"<span class=\"comment\"> * These functions should only try to map a single block at a time.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Since this function doesn't do block allocations even if the caller</span>", 
"<span class=\"comment\"> * requests it by passing in create=1, it is critically important that</span>", 
"<span class=\"comment\"> * any caller checks to make sure that any buffer heads are returned</span>", 
"<span class=\"comment\"> * by this function are either all already mapped or marked for</span>", 
"<span class=\"comment\"> * delayed allocation before calling  block_write_full_page().  Otherwise,</span>", 
"<span class=\"comment\"> * b_blocknr could be left unitialized, and the page write functions will</span>", 
"<span class=\"comment\"> * be taken by surprise.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#noalloc_get_block_write\">noalloc_get_block_write</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#iblock\">iblock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh_result\">bh_result</a>, int <a class=\"id\" href=\"#create\">create</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bh_result\">bh_result</a>-><a class=\"id\" href=\"#b_size\">b_size</a> != <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#_ext4_get_block\">_ext4_get_block</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#iblock\">iblock</a>, <a class=\"id\" href=\"#bh_result\">bh_result</a>, 0);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#bget_one\">bget_one</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_bh\">get_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#bput_one\">bput_one</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__ext4_journalled_writepage\">__ext4_journalled_writepage</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#mapping\">mapping</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#host\">host</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#page_bufs\">page_bufs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page_bufs\">page_bufs</a> = <a class=\"id\" href=\"#page_buffers\">page_buffers</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#page_bufs\">page_bufs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#walk_page_buffers\">walk_page_buffers</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#page_bufs\">page_bufs</a>, 0, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#bget_one\">bget_one</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* As soon as we unlock the page, it can go away, but we have</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * references to buffers so we are safe */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext4_journal_start\">ext4_journal_start</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#ext4_writepage_trans_blocks\">ext4_writepage_trans_blocks</a>(<a class=\"id\" href=\"#inode\">inode</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#walk_page_buffers\">walk_page_buffers</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#page_bufs\">page_bufs</a>, 0, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_journal_get_write_access\">do_journal_get_write_access</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#walk_page_buffers\">walk_page_buffers</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#page_bufs\">page_bufs</a>, 0, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_end_fn\">write_end_fn</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#walk_page_buffers\">walk_page_buffers</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#page_bufs\">page_bufs</a>, 0, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#bput_one\">bput_one</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_set_inode_state\">ext4_set_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_STATE_JDATA\">EXT4_STATE_JDATA</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_set_bh_endio\">ext4_set_bh_endio</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>);", 
"static void <a class=\"id\" href=\"#ext4_end_io_buffer_write\">ext4_end_io_buffer_write</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>, int <a class=\"id\" href=\"#uptodate\">uptodate</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Note that we don't need to start a transaction unless we're journaling data</span>", 
"<span class=\"comment\"> * because we should have holes filled from ext4_page_mkwrite(). We even don't</span>", 
"<span class=\"comment\"> * need to file the inode to the transaction's list in ordered mode because if</span>", 
"<span class=\"comment\"> * we are writing back data added by write(), the inode is already there and if</span>", 
"<span class=\"comment\"> * we are writing back data modified via mmap(), noone guarantees in which</span>", 
"<span class=\"comment\"> * transaction the data will hit the disk. In case we are journaling data, we</span>", 
"<span class=\"comment\"> * cannot start transaction directly because transaction start ranks above page</span>", 
"<span class=\"comment\"> * lock so we have to do some magic.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function can get called via...</span>", 
"<span class=\"comment\"> *   - ext4_da_writepages after taking page lock (have journal handle)</span>", 
"<span class=\"comment\"> *   - journal_submit_inode_data_buffers (no journal handle)</span>", 
"<span class=\"comment\"> *   - shrink_page_list via pdflush (no journal handle)</span>", 
"<span class=\"comment\"> *   - grab_page_cache when doing write_begin (have journal handle)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We don't do any block allocation in this function. If we have page with</span>", 
"<span class=\"comment\"> * multiple blocks we need to write those buffer_heads that are mapped. This</span>", 
"<span class=\"comment\"> * is important for mmaped based write. So if we do with blocksize 1K</span>", 
"<span class=\"comment\"> * truncate(f, 1024);</span>", 
"<span class=\"comment\"> * a = mmap(f, 0, 4096);</span>", 
"<span class=\"comment\"> * a[0] = 'a';</span>", 
"<span class=\"comment\"> * truncate(f, 4096);</span>", 
"<span class=\"comment\"> * we have in the page first buffer_head mapped via page_mkwrite call back</span>", 
"<span class=\"comment\"> * but other bufer_heads would be unmapped but dirty(dirty done via the</span>", 
"<span class=\"comment\"> * do_wp_page). So writepage should write the first block. If we modify</span>", 
"<span class=\"comment\"> * the mmap area beyond 1024 we will again get a page_fault and the</span>", 
"<span class=\"comment\"> * page_mkwrite callback will do the block allocation and mark the</span>", 
"<span class=\"comment\"> * buffer_heads mapped.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We redirty the page if we have any buffer_heads that is either delay or</span>", 
"<span class=\"comment\"> * unwritten in the page.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We can get recursively called as show below.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ext4_writepage() -&gt; kmalloc() -&gt; __alloc_pages() -&gt; page_launder() -&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>ext4_writepage()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * But since we don't do any block allocation we should not deadlock.</span>", 
"<span class=\"comment\"> * Page also have the dirty flag cleared so we don't get recurive page_lock.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext4_writepage\">ext4_writepage</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#writeback_control\">writeback_control</a> *<a class=\"id\" href=\"#wbc\">wbc</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#page_bufs\">page_bufs</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#host\">host</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_ext4_writepage\">trace_ext4_writepage</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#index\">index</a> == <a class=\"id\" href=\"#size\">size</a> >> <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#size\">size</a> &amp; ~<a class=\"id\" href=\"#PAGE_CACHE_MASK\">PAGE_CACHE_MASK</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#PAGE_CACHE_SIZE\">PAGE_CACHE_SIZE</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#page_has_buffers\">page_has_buffers</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_bufs\">page_bufs</a> = <a class=\"id\" href=\"#page_buffers\">page_buffers</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#walk_page_buffers\">walk_page_buffers</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#page_bufs\">page_bufs</a>, 0, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_bh_delay_or_unwritten\">ext4_bh_delay_or_unwritten</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We don't want to do  block allocation</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * So redirty the page and return</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We may reach here when we do a journal commit</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * via journal_submit_inode_data_buffers.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If we don't have mapping block we just ignore</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * them. We can also reach here via shrink_page_list</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#redirty_page_for_writepage\">redirty_page_for_writepage</a>(<a class=\"id\" href=\"#wbc\">wbc</a>, <a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The test for page_has_buffers() is subtle:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We know the page is dirty but it lost buffers. That means</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * that at some moment in time after write_begin()/write_end()</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * has been called all buffers have been clean and thus they</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * must have been written at least once. So they are all</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * mapped and we can happily proceed with mapping them</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and writing the page.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Try to initialize the buffer_heads and check whether</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * all are mapped and non delay. We don't want to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * do block allocation here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#block_prepare_write\">block_prepare_write</a>(<a class=\"id\" href=\"#page\">page</a>, 0, <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#noalloc_get_block_write\">noalloc_get_block_write</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_bufs\">page_bufs</a> = <a class=\"id\" href=\"#page_buffers\">page_buffers</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* check whether all are mapped and non delay */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#walk_page_buffers\">walk_page_buffers</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#page_bufs\">page_bufs</a>, 0, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_bh_delay_or_unwritten\">ext4_bh_delay_or_unwritten</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#redirty_page_for_writepage\">redirty_page_for_writepage</a>(<a class=\"id\" href=\"#wbc\">wbc</a>, <a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We can't do block allocation here</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * so just redity the page and unlock</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * and return</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#redirty_page_for_writepage\">redirty_page_for_writepage</a>(<a class=\"id\" href=\"#wbc\">wbc</a>, <a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* now mark the buffer_heads as dirty and uptodate */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block_commit_write\">block_commit_write</a>(<a class=\"id\" href=\"#page\">page</a>, 0, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PageChecked\">PageChecked</a>(<a class=\"id\" href=\"#page\">page</a>) && <a class=\"id\" href=\"#ext4_should_journal_data\">ext4_should_journal_data</a>(<a class=\"id\" href=\"#inode\">inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * It's mmapped pagecache.  Add buffers and journal it.  There</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * doesn't seem much point in redirtying the page here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ClearPageChecked\">ClearPageChecked</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__ext4_journalled_writepage\">__ext4_journalled_writepage</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#page_bufs\">page_bufs</a> && <a class=\"id\" href=\"#buffer_uninit\">buffer_uninit</a>(<a class=\"id\" href=\"#page_bufs\">page_bufs</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_set_bh_endio\">ext4_set_bh_endio</a>(<a class=\"id\" href=\"#page_bufs\">page_bufs</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#block_write_full_page_endio\">block_write_full_page_endio</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#noalloc_get_block_write\">noalloc_get_block_write</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#wbc\">wbc</a>, <a class=\"id\" href=\"#ext4_end_io_buffer_write\">ext4_end_io_buffer_write</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#block_write_full_page\">block_write_full_page</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#noalloc_get_block_write\">noalloc_get_block_write</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#wbc\">wbc</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is called via ext4_da_writepages() to</span>", 
"<span class=\"comment\"> * calulate the total number of credits to reserve to fit</span>", 
"<span class=\"comment\"> * a single extent allocation into a single transaction,</span>", 
"<span class=\"comment\"> * ext4_da_writpeages() will loop calling this before</span>", 
"<span class=\"comment\"> * the block allocation.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#ext4_da_writepages_trans_blocks\">ext4_da_writepages_trans_blocks</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#max_blocks\">max_blocks</a> = <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_reserved_data_blocks\">i_reserved_data_blocks</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * With non-extent format the journal credit needed to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * insert nrblocks contiguous block is dependent on</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * number of contiguous block. So we will limit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * number of contiguous block to a sane value</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ext4_test_inode_flag\">ext4_test_inode_flag</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_INODE_EXTENTS\">EXT4_INODE_EXTENTS</a>)) &&", 
];
xr_frag_insert('l/ec/78cea52321c305d6023e77f9472b3d4f53baf5.xr', __xr_tmp);
