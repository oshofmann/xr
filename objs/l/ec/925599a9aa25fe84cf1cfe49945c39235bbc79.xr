var __xr_tmp = [
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#get_task_mm\">get_task_mm</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#nwords\">nwords</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nwords\">nwords</a> += 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>} while (<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#saved_auxv\">saved_auxv</a>[<a class=\"id\" href=\"#nwords\">nwords</a> - 2] != 0); <span class=\"comment\">/* AT_NULL */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#nwords\">nwords</a> * sizeof(<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#saved_auxv\">saved_auxv</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#saved_auxv\">saved_auxv</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mmput\">mmput</a>(<a class=\"id\" href=\"#mm\">mm</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_KALLSYMS\">CONFIG_KALLSYMS</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Provides a wchan file via kallsyms in a proper one-value-per-file format.</span>", 
"<span class=\"comment\"> * Returns the resolved symbol.  If that fails, simply return the address.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#proc_pid_wchan\">proc_pid_wchan</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, char *<a class=\"id\" href=\"#buffer\">buffer</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#wchan\">wchan</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#symname\">symname</a>[<a class=\"id\" href=\"#KSYM_NAME_LEN\">KSYM_NAME_LEN</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wchan\">wchan</a> = <a class=\"id\" href=\"#get_wchan\">get_wchan</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lookup_symbol_name\">lookup_symbol_name</a>(<a class=\"id\" href=\"#wchan\">wchan</a>, <a class=\"id\" href=\"#symname\">symname</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ptrace_may_access\">ptrace_may_access</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#PTRACE_MODE_READ\">PTRACE_MODE_READ</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, \"%lu\", <a class=\"id\" href=\"#wchan\">wchan</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, \"%s\", <a class=\"id\" href=\"#symname\">symname</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_KALLSYMS */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_STACKTRACE\">CONFIG_STACKTRACE</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_STACK_TRACE_DEPTH\">MAX_STACK_TRACE_DEPTH</a><span class=\"ts\"/>64", 
"", 
"static int <a class=\"id\" href=\"#proc_pid_stack\">proc_pid_stack</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#pid\">pid</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#stack_trace\">stack_trace</a> <a class=\"id\" href=\"#trace\">trace</a>;", 
"<span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#entries\">entries</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entries\">entries</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#MAX_STACK_TRACE_DEPTH\">MAX_STACK_TRACE_DEPTH</a> * sizeof(*<a class=\"id\" href=\"#entries\">entries</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#entries\">entries</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace\">trace</a>.<a class=\"id\" href=\"#nr_entries\">nr_entries</a><span class=\"ts\"/>= 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace\">trace</a>.<a class=\"id\" href=\"#max_entries\">max_entries</a><span class=\"ts\"/>= <a class=\"id\" href=\"#MAX_STACK_TRACE_DEPTH\">MAX_STACK_TRACE_DEPTH</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace\">trace</a>.<a class=\"id\" href=\"#entries\">entries</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#entries\">entries</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace\">trace</a>.<a class=\"id\" href=\"#skip\">skip</a><span class=\"ts\"/><span class=\"ts\"/>= 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#save_stack_trace_tsk\">save_stack_trace_tsk</a>(<a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#trace\">trace</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#trace\">trace</a>.<a class=\"id\" href=\"#nr_entries\">nr_entries</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"[<%p>] %pS\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (void *)<a class=\"id\" href=\"#entries\">entries</a>[<a class=\"id\" href=\"#i\">i</a>], (void *)<a class=\"id\" href=\"#entries\">entries</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#entries\">entries</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SCHEDSTATS\">CONFIG_SCHEDSTATS</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Provides /proc/PID/schedstat</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#proc_pid_schedstat\">proc_pid_schedstat</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, char *<a class=\"id\" href=\"#buffer\">buffer</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, \"%llu %llu %lu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#se\">se</a>.<a class=\"id\" href=\"#sum_exec_runtime\">sum_exec_runtime</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#sched_info\">sched_info</a>.<a class=\"id\" href=\"#run_delay\">run_delay</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#sched_info\">sched_info</a>.<a class=\"id\" href=\"#pcount\">pcount</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_LATENCYTOP\">CONFIG_LATENCYTOP</a>", 
"static int <a class=\"id\" href=\"#lstats_show_proc\">lstats_show_proc</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#m\">m</a>, \"Latency Top version : v0.1\\n\");", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 32; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#latency_record\">latency_record</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#backtrace\">backtrace</a>[0]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#q\">q</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%i %li %li \",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#latency_record\">latency_record</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#latency_record\">latency_record</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#time\">time</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#latency_record\">latency_record</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#max\">max</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#q\">q</a> = 0; <a class=\"id\" href=\"#q\">q</a> &lt; <a class=\"id\" href=\"#LT_BACKTRACEDEPTH\">LT_BACKTRACEDEPTH</a>; <a class=\"id\" href=\"#q\">q</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#sym\">sym</a>[<a class=\"id\" href=\"#KSYM_SYMBOL_LEN\">KSYM_SYMBOL_LEN</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#latency_record\">latency_record</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#backtrace\">backtrace</a>[<a class=\"id\" href=\"#q\">q</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#latency_record\">latency_record</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#backtrace\">backtrace</a>[<a class=\"id\" href=\"#q\">q</a>] == <a class=\"id\" href=\"#ULONG_MAX\">ULONG_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sprint_symbol\">sprint_symbol</a>(<a class=\"id\" href=\"#sym\">sym</a>, <a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#latency_record\">latency_record</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#backtrace\">backtrace</a>[<a class=\"id\" href=\"#q\">q</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#strchr\">strchr</a>(<a class=\"id\" href=\"#sym\">sym</a>, '+');", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#c\">c</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%s \", <a class=\"id\" href=\"#sym\">sym</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#lstats_open\">lstats_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#single_open\">single_open</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#lstats_show_proc\">lstats_show_proc</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#lstats_write\">lstats_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#offs\">offs</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_dentry\">f_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_all_latency_tracing\">clear_all_latency_tracing</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_lstats_operations\">proc_lstats_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#lstats_open\">lstats_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#lstats_write\">lstats_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#single_release\">single_release</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#proc_oom_score\">proc_oom_score</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, char *<a class=\"id\" href=\"#buffer\">buffer</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#points\">points</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pid_alive\">pid_alive</a>(<a class=\"id\" href=\"#task\">task</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#points\">points</a> = <a class=\"id\" href=\"#oom_badness\">oom_badness</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#totalram_pages\">totalram_pages</a> + <a class=\"id\" href=\"#total_swap_pages\">total_swap_pages</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, \"%lu\\n\", <a class=\"id\" href=\"#points\">points</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#limit_names\">limit_names</a> {", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#unit\">unit</a>;", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#limit_names\">limit_names</a> <a class=\"id\" href=\"#lnames\">lnames</a>[<a class=\"id\" href=\"#RLIM_NLIMITS\">RLIM_NLIMITS</a>] = {", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RLIMIT_CPU\">RLIMIT_CPU</a>] = {\"Max cpu time\", \"seconds\"},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RLIMIT_FSIZE\">RLIMIT_FSIZE</a>] = {\"Max file size\", \"bytes\"},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RLIMIT_DATA\">RLIMIT_DATA</a>] = {\"Max data size\", \"bytes\"},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RLIMIT_STACK\">RLIMIT_STACK</a>] = {\"Max stack size\", \"bytes\"},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RLIMIT_CORE\">RLIMIT_CORE</a>] = {\"Max core file size\", \"bytes\"},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RLIMIT_RSS\">RLIMIT_RSS</a>] = {\"Max resident set\", \"bytes\"},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RLIMIT_NPROC\">RLIMIT_NPROC</a>] = {\"Max processes\", \"processes\"},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RLIMIT_NOFILE\">RLIMIT_NOFILE</a>] = {\"Max open files\", \"files\"},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RLIMIT_MEMLOCK\">RLIMIT_MEMLOCK</a>] = {\"Max locked memory\", \"bytes\"},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RLIMIT_AS\">RLIMIT_AS</a>] = {\"Max address space\", \"bytes\"},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RLIMIT_LOCKS\">RLIMIT_LOCKS</a>] = {\"Max file locks\", \"locks\"},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RLIMIT_SIGPENDING\">RLIMIT_SIGPENDING</a>] = {\"Max pending signals\", \"signals\"},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RLIMIT_MSGQUEUE\">RLIMIT_MSGQUEUE</a>] = {\"Max msgqueue size\", \"bytes\"},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RLIMIT_NICE\">RLIMIT_NICE</a>] = {\"Max nice priority\", <a class=\"id\" href=\"#NULL\">NULL</a>},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RLIMIT_RTPRIO\">RLIMIT_RTPRIO</a>] = {\"Max realtime priority\", <a class=\"id\" href=\"#NULL\">NULL</a>},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RLIMIT_RTTIME\">RLIMIT_RTTIME</a>] = {\"Max realtime timeout\", \"us\"},", 
"};", 
"", 
"<span class=\"comment\">/* Display limits for a process */</span>", 
"static int <a class=\"id\" href=\"#proc_pid_limits\">proc_pid_limits</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, char *<a class=\"id\" href=\"#buffer\">buffer</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#count\">count</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#bufptr\">bufptr</a> = <a class=\"id\" href=\"#buffer\">buffer</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rlimit\">rlimit</a> <a class=\"id\" href=\"#rlim\">rlim</a>[<a class=\"id\" href=\"#RLIM_NLIMITS\">RLIM_NLIMITS</a>];", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#lock_task_sighand\">lock_task_sighand</a>(<a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#rlim\">rlim</a>, <a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#rlim\">rlim</a>, sizeof(struct <a class=\"id\" href=\"#rlimit\">rlimit</a>) * <a class=\"id\" href=\"#RLIM_NLIMITS\">RLIM_NLIMITS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_task_sighand\">unlock_task_sighand</a>(<a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * print the file header</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(&amp;<a class=\"id\" href=\"#bufptr\">bufptr</a>[<a class=\"id\" href=\"#count\">count</a>], \"%-25s %-20s %-20s %-10s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Limit\", \"Soft Limit\", \"Hard Limit\", \"Units\");", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#RLIM_NLIMITS\">RLIM_NLIMITS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rlim\">rlim</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#rlim_cur\">rlim_cur</a> == <a class=\"id\" href=\"#RLIM_INFINITY\">RLIM_INFINITY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(&amp;<a class=\"id\" href=\"#bufptr\">bufptr</a>[<a class=\"id\" href=\"#count\">count</a>], \"%-25s %-20s \",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#lnames\">lnames</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a>, \"unlimited\");", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(&amp;<a class=\"id\" href=\"#bufptr\">bufptr</a>[<a class=\"id\" href=\"#count\">count</a>], \"%-25s %-20lu \",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#lnames\">lnames</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#rlim\">rlim</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#rlim_cur\">rlim_cur</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rlim\">rlim</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#rlim_max\">rlim_max</a> == <a class=\"id\" href=\"#RLIM_INFINITY\">RLIM_INFINITY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(&amp;<a class=\"id\" href=\"#bufptr\">bufptr</a>[<a class=\"id\" href=\"#count\">count</a>], \"%-20s \", \"unlimited\");", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(&amp;<a class=\"id\" href=\"#bufptr\">bufptr</a>[<a class=\"id\" href=\"#count\">count</a>], \"%-20lu \",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#rlim\">rlim</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#rlim_max\">rlim_max</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#lnames\">lnames</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#unit\">unit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(&amp;<a class=\"id\" href=\"#bufptr\">bufptr</a>[<a class=\"id\" href=\"#count\">count</a>], \"%-10s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#lnames\">lnames</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#unit\">unit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(&amp;<a class=\"id\" href=\"#bufptr\">bufptr</a>[<a class=\"id\" href=\"#count\">count</a>], \"\\n\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HAVE_ARCH_TRACEHOOK\">CONFIG_HAVE_ARCH_TRACEHOOK</a>", 
"static int <a class=\"id\" href=\"#proc_pid_syscall\">proc_pid_syscall</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, char *<a class=\"id\" href=\"#buffer\">buffer</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#nr\">nr</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#args\">args</a>[6], <a class=\"id\" href=\"#sp\">sp</a>, <a class=\"id\" href=\"#pc\">pc</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task_current_syscall\">task_current_syscall</a>(<a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#args\">args</a>, 6, &amp;<a class=\"id\" href=\"#sp\">sp</a>, &amp;<a class=\"id\" href=\"#pc\">pc</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, \"running\\n\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nr\">nr</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, \"%ld 0x%lx 0x%lx\\n\", <a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#sp\">sp</a>, <a class=\"id\" href=\"#pc\">pc</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"%ld 0x%lx 0x%lx 0x%lx 0x%lx 0x%lx 0x%lx 0x%lx 0x%lx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#nr\">nr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#args\">args</a>[0], <a class=\"id\" href=\"#args\">args</a>[1], <a class=\"id\" href=\"#args\">args</a>[2], <a class=\"id\" href=\"#args\">args</a>[3], <a class=\"id\" href=\"#args\">args</a>[4], <a class=\"id\" href=\"#args\">args</a>[5],", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#sp\">sp</a>, <a class=\"id\" href=\"#pc\">pc</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_HAVE_ARCH_TRACEHOOK */</span>", 
"", 
"<span class=\"comment\">/************************************************************************/</span>", 
"<span class=\"comment\">/*                       Here the fs part begins                        */</span>", 
"<span class=\"comment\">/************************************************************************/</span>", 
"", 
"<span class=\"comment\">/* permission checks */</span>", 
"static int <a class=\"id\" href=\"#proc_fd_access_allowed\">proc_fd_access_allowed</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#allowed\">allowed</a> = 0;", 
"<span class=\"ts\"/><span class=\"comment\">/* Allow access to a task's file descriptors if it is us or we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * may use ptrace attach to the process and find out that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * information.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task\">task</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#allowed\">allowed</a> = <a class=\"id\" href=\"#ptrace_may_access\">ptrace_may_access</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#PTRACE_MODE_READ\">PTRACE_MODE_READ</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#allowed\">allowed</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#proc_setattr\">proc_setattr</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#iattr\">iattr</a> *<a class=\"id\" href=\"#attr\">attr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_MODE\">ATTR_MODE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#inode_change_ok\">inode_change_ok</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_SIZE\">ATTR_SIZE</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_size\">ia_size</a> != <a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#inode\">inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#vmtruncate\">vmtruncate</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_size\">ia_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setattr_copy\">setattr_copy</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mark_inode_dirty\">mark_inode_dirty</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#proc_def_inode_operations\">proc_def_inode_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setattr\">setattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_setattr\">proc_setattr</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#mounts_open_common\">mounts_open_common</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> *<a class=\"id\" href=\"#op\">op</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nsproxy\">nsproxy</a> *<a class=\"id\" href=\"#nsp\">nsp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mnt_namespace\">mnt_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#path\">path</a> <a class=\"id\" href=\"#root\">root</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_mounts\">proc_mounts</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task\">task</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nsp\">nsp</a> = <a class=\"id\" href=\"#task_nsproxy\">task_nsproxy</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nsp\">nsp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#nsp\">nsp</a>-><a class=\"id\" href=\"#mnt_ns\">mnt_ns</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ns\">ns</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_mnt_ns\">get_mnt_ns</a>(<a class=\"id\" href=\"#ns\">ns</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ns\">ns</a> && <a class=\"id\" href=\"#get_task_root\">get_task_root</a>(<a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#root\">root</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ns\">ns</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_put_ns\">err_put_ns</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(struct <a class=\"id\" href=\"#proc_mounts\">proc_mounts</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_put_path\">err_put_path</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a> = &amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#m\">m</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#op\">op</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_free\">err_free</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#m\">m</a>.<a class=\"id\" href=\"#private\">private</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#ns\">ns</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#root\">root</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#event\">event</a> = <a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#event\">event</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
" <a class=\"id\" href=\"#err_free\">err_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#p\">p</a>);", 
" <a class=\"id\" href=\"#err_put_path\">err_put_path</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#root\">root</a>);", 
" <a class=\"id\" href=\"#err_put_ns\">err_put_ns</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_mnt_ns\">put_mnt_ns</a>(<a class=\"id\" href=\"#ns\">ns</a>);", 
" <a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#mounts_release\">mounts_release</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_mounts\">proc_mounts</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_mnt_ns\">put_mnt_ns</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#ns\">ns</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_release\">seq_release</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>);", 
"}", 
"", 
"static unsigned <a class=\"id\" href=\"#mounts_poll\">mounts_poll</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#poll_table\">poll_table</a> *<a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_mounts\">proc_mounts</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#POLLIN\">POLLIN</a> | <a class=\"id\" href=\"#POLLRDNORM\">POLLRDNORM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#poll_wait\">poll_wait</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#poll\">poll</a>, <a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mnt_had_events\">mnt_had_events</a>(<a class=\"id\" href=\"#p\">p</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> |= <a class=\"id\" href=\"#POLLERR\">POLLERR</a> | <a class=\"id\" href=\"#POLLPRI\">POLLPRI</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#mounts_open\">mounts_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mounts_open_common\">mounts_open_common</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#mounts_op\">mounts_op</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_mounts_operations\">proc_mounts_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#mounts_open\">mounts_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#mounts_release\">mounts_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#mounts_poll\">mounts_poll</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#mountinfo_open\">mountinfo_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mounts_open_common\">mounts_open_common</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#mountinfo_op\">mountinfo_op</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_mountinfo_operations\">proc_mountinfo_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#mountinfo_open\">mountinfo_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#mounts_release\">mounts_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#mounts_poll\">mounts_poll</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#mountstats_open\">mountstats_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mounts_open_common\">mounts_open_common</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#mountstats_op\">mountstats_op</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_mountstats_operations\">proc_mountstats_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#mountstats_open\">mountstats_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#mounts_release\">mounts_release</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PROC_BLOCK_SIZE\">PROC_BLOCK_SIZE</a><span class=\"ts\"/>(3*1024)<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 4K page size but our output routines use some slack for overruns */</span>", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#proc_info_read\">proc_info_read</a>(struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> * <a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_no_task\">out_no_task</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &gt; <a class=\"id\" href=\"#PROC_BLOCK_SIZE\">PROC_BLOCK_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#PROC_BLOCK_SIZE\">PROC_BLOCK_SIZE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#__get_free_page\">__get_free_page</a>(<a class=\"id\" href=\"#GFP_TEMPORARY\">GFP_TEMPORARY</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#PROC_I\">PROC_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#op\">op</a>.<a class=\"id\" href=\"#proc_read\">proc_read</a>(<a class=\"id\" href=\"#task\">task</a>, (char*)<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#length\">length</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#simple_read_from_buffer\">simple_read_from_buffer</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#ppos\">ppos</a>, (char *)<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<a class=\"id\" href=\"#out_no_task\">out_no_task</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#length\">length</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_info_file_operations\">proc_info_file_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_info_read\">proc_info_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_llseek\">generic_file_llseek</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#proc_single_show\">proc_single_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_fs_info\">s_fs_info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#proc_pid\">proc_pid</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_pid_task\">get_pid_task</a>(<a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#PIDTYPE_PID\">PIDTYPE_PID</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PROC_I\">PROC_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#op\">op</a>.<a class=\"id\" href=\"#proc_show\">proc_show</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#ns\">ns</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#proc_single_open\">proc_single_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>)", 
"{", 
];
xr_frag_insert('l/ec/925599a9aa25fe84cf1cfe49945c39235bbc79.xr', __xr_tmp);
