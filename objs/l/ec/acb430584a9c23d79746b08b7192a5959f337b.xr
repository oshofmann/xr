var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#css\">css</a>-><a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#id_lock\">id_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idr_remove\">idr_remove</a>(&amp;<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#idr\">idr</a>, <a class=\"id\" href=\"#id\">id</a>-><a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#id_lock\">id_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call_rcu\">call_rcu</a>(&amp;<a class=\"id\" href=\"#id\">id</a>-><a class=\"id\" href=\"#rcu_head\">rcu_head</a>, <a class=\"id\" href=\"#__free_css_id_cb\">__free_css_id_cb</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#free_css_id\">free_css_id</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is called by init or create(). Then, calls to this function are</span>", 
"<span class=\"comment\"> * always serialized (By cgroup_mutex() at create()).</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static struct <a class=\"id\" href=\"#css_id\">css_id</a> *<a class=\"id\" href=\"#get_new_cssid\">get_new_cssid</a>(struct <a class=\"id\" href=\"#cgroup_subsys\">cgroup_subsys</a> *<a class=\"id\" href=\"#ss\">ss</a>, int <a class=\"id\" href=\"#depth\">depth</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#css_id\">css_id</a> *<a class=\"id\" href=\"#newid\">newid</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#myid\">myid</a>, <a class=\"id\" href=\"#error\">error</a>, <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#use_id\">use_id</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = sizeof(*<a class=\"id\" href=\"#newid\">newid</a>) + sizeof(unsigned short) * (<a class=\"id\" href=\"#depth\">depth</a> + 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newid\">newid</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#newid\">newid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* get id */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#idr_pre_get\">idr_pre_get</a>(&amp;<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#idr\">idr</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#id_lock\">id_lock</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't use 0. allocates an ID of 1-65535 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#idr_get_new_above\">idr_get_new_above</a>(&amp;<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#idr\">idr</a>, <a class=\"id\" href=\"#newid\">newid</a>, 1, &amp;<a class=\"id\" href=\"#myid\">myid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#id_lock\">id_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Returns error when there are no free spaces for new ID.*/</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#myid\">myid</a> &gt; <a class=\"id\" href=\"#CSS_ID_MAX\">CSS_ID_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#remove_idr\">remove_idr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newid\">newid</a>-><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#myid\">myid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newid\">newid</a>-><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#depth\">depth</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#newid\">newid</a>;", 
"<a class=\"id\" href=\"#remove_idr\">remove_idr</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#id_lock\">id_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idr_remove\">idr_remove</a>(&amp;<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#idr\">idr</a>, <a class=\"id\" href=\"#myid\">myid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#id_lock\">id_lock</a>);", 
"<a class=\"id\" href=\"#err_out\">err_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#newid\">newid</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#error\">error</a>);", 
"", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init_or_module\">__init_or_module</a> <a class=\"id\" href=\"#cgroup_init_idr\">cgroup_init_idr</a>(struct <a class=\"id\" href=\"#cgroup_subsys\">cgroup_subsys</a> *<a class=\"id\" href=\"#ss\">ss</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#cgroup_subsys_state\">cgroup_subsys_state</a> *<a class=\"id\" href=\"#rootcss\">rootcss</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#css_id\">css_id</a> *<a class=\"id\" href=\"#newid\">newid</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#id_lock\">id_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idr_init\">idr_init</a>(&amp;<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#idr\">idr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newid\">newid</a> = <a class=\"id\" href=\"#get_new_cssid\">get_new_cssid</a>(<a class=\"id\" href=\"#ss\">ss</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#newid\">newid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#newid\">newid</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newid\">newid</a>-><a class=\"id\" href=\"#stack\">stack</a>[0] = <a class=\"id\" href=\"#newid\">newid</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newid\">newid</a>-><a class=\"id\" href=\"#css\">css</a> = <a class=\"id\" href=\"#rootcss\">rootcss</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rootcss\">rootcss</a>-><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#newid\">newid</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#alloc_css_id\">alloc_css_id</a>(struct <a class=\"id\" href=\"#cgroup_subsys\">cgroup_subsys</a> *<a class=\"id\" href=\"#ss\">ss</a>, struct <a class=\"id\" href=\"#cgroup\">cgroup</a> *<a class=\"id\" href=\"#parent\">parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cgroup\">cgroup</a> *<a class=\"id\" href=\"#child\">child</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#subsys_id\">subsys_id</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#depth\">depth</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cgroup_subsys_state\">cgroup_subsys_state</a> *<a class=\"id\" href=\"#parent_css\">parent_css</a>, *<a class=\"id\" href=\"#child_css\">child_css</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#css_id\">css_id</a> *<a class=\"id\" href=\"#child_id\">child_id</a>, *<a class=\"id\" href=\"#parent_id\">parent_id</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#subsys_id\">subsys_id</a> = <a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#subsys_id\">subsys_id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parent_css\">parent_css</a> = <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#subsys\">subsys</a>[<a class=\"id\" href=\"#subsys_id\">subsys_id</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child_css\">child_css</a> = <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#subsys\">subsys</a>[<a class=\"id\" href=\"#subsys_id\">subsys_id</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parent_id\">parent_id</a> = <a class=\"id\" href=\"#parent_css\">parent_css</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#parent_id\">parent_id</a>-><a class=\"id\" href=\"#depth\">depth</a> + 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child_id\">child_id</a> = <a class=\"id\" href=\"#get_new_cssid\">get_new_cssid</a>(<a class=\"id\" href=\"#ss\">ss</a>, <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#child_id\">child_id</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#child_id\">child_id</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#depth\">depth</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child_id\">child_id</a>-><a class=\"id\" href=\"#stack\">stack</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#parent_id\">parent_id</a>-><a class=\"id\" href=\"#stack\">stack</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child_id\">child_id</a>-><a class=\"id\" href=\"#stack\">stack</a>[<a class=\"id\" href=\"#depth\">depth</a>] = <a class=\"id\" href=\"#child_id\">child_id</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * child_id-&gt;css pointer will be set after this cgroup is available</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * see cgroup_populate_dir()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#child_css\">child_css</a>-><a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#child_id\">child_id</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * css_lookup - lookup css by id</span>", 
"<span class=\"comment\"> * @ss: cgroup subsys to be looked into.</span>", 
"<span class=\"comment\"> * @id: the id</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns pointer to cgroup_subsys_state if there is valid one with id.</span>", 
"<span class=\"comment\"> * NULL if not. Should be called under rcu_read_lock()</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#cgroup_subsys_state\">cgroup_subsys_state</a> *<a class=\"id\" href=\"#css_lookup\">css_lookup</a>(struct <a class=\"id\" href=\"#cgroup_subsys\">cgroup_subsys</a> *<a class=\"id\" href=\"#ss\">ss</a>, int <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#css_id\">css_id</a> *<a class=\"id\" href=\"#cssid\">cssid</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#use_id\">use_id</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cssid\">cssid</a> = <a class=\"id\" href=\"#idr_find\">idr_find</a>(&amp;<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#idr\">idr</a>, <a class=\"id\" href=\"#id\">id</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#cssid\">cssid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#cssid\">cssid</a>-><a class=\"id\" href=\"#css\">css</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#css_lookup\">css_lookup</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * css_get_next - lookup next cgroup under specified hierarchy.</span>", 
"<span class=\"comment\"> * @ss: pointer to subsystem</span>", 
"<span class=\"comment\"> * @id: current position of iteration.</span>", 
"<span class=\"comment\"> * @root: pointer to css. search tree under this.</span>", 
"<span class=\"comment\"> * @foundid: position of found object.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Search next css under the specified hierarchy of rootid. Calling under</span>", 
"<span class=\"comment\"> * rcu_read_lock() is necessary. Returns NULL if it reaches the end.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#cgroup_subsys_state\">cgroup_subsys_state</a> *", 
"<a class=\"id\" href=\"#css_get_next\">css_get_next</a>(struct <a class=\"id\" href=\"#cgroup_subsys\">cgroup_subsys</a> *<a class=\"id\" href=\"#ss\">ss</a>, int <a class=\"id\" href=\"#id\">id</a>,", 
"<span class=\"ts\"/>     struct <a class=\"id\" href=\"#cgroup_subsys_state\">cgroup_subsys_state</a> *<a class=\"id\" href=\"#root\">root</a>, int *<a class=\"id\" href=\"#foundid\">foundid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cgroup_subsys_state\">cgroup_subsys_state</a> *<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#css_id\">css_id</a> *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tmpid\">tmpid</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rootid\">rootid</a> = <a class=\"id\" href=\"#css_id\">css_id</a>(<a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#css_depth\">css_depth</a>(<a class=\"id\" href=\"#root\">root</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rootid\">rootid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#use_id\">use_id</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* fill start point for scan */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmpid\">tmpid</a> = <a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * scan next entry from bitmap(tree), tmpid is updated after</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * idr_get_next().</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#id_lock\">id_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#idr_get_next\">idr_get_next</a>(&amp;<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#idr\">idr</a>, &amp;<a class=\"id\" href=\"#tmpid\">tmpid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#ss\">ss</a>-><a class=\"id\" href=\"#id_lock\">id_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tmp\">tmp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#depth\">depth</a> >= <a class=\"id\" href=\"#depth\">depth</a> && <a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#stack\">stack</a>[<a class=\"id\" href=\"#depth\">depth</a>] == <a class=\"id\" href=\"#rootid\">rootid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#css\">css</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#foundid\">foundid</a> = <a class=\"id\" href=\"#tmpid\">tmpid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* continue to scan from next id */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmpid\">tmpid</a> = <a class=\"id\" href=\"#tmpid\">tmpid</a> + 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CGROUP_DEBUG\">CONFIG_CGROUP_DEBUG</a>", 
];
xr_frag_insert('l/ec/acb430584a9c23d79746b08b7192a5959f337b.xr', __xr_tmp);
