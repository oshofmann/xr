var __xr_tmp = [
"static unsigned int <a class=\"id\" href=\"#powersave_bias_target\">powersave_bias_target</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#freq_next\">freq_next</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#relation\">relation</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#freq_req\">freq_req</a>, <a class=\"id\" href=\"#freq_reduc\">freq_reduc</a>, <a class=\"id\" href=\"#freq_avg\">freq_avg</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#freq_hi\">freq_hi</a>, <a class=\"id\" href=\"#freq_lo\">freq_lo</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#index\">index</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#jiffies_total\">jiffies_total</a>, <a class=\"id\" href=\"#jiffies_hi\">jiffies_hi</a>, <a class=\"id\" href=\"#jiffies_lo\">jiffies_lo</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a> *<a class=\"id\" href=\"#dbs_info\">dbs_info</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#od_cpu_dbs_info\">od_cpu_dbs_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#freq_table\">freq_table</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#freq_lo\">freq_lo</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#freq_lo_jiffies\">freq_lo_jiffies</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#freq_next\">freq_next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_frequency_table_target\">cpufreq_frequency_table_target</a>(<a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#freq_table\">freq_table</a>, <a class=\"id\" href=\"#freq_next\">freq_next</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#relation\">relation</a>, &amp;<a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#freq_req\">freq_req</a> = <a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#freq_table\">freq_table</a>[<a class=\"id\" href=\"#index\">index</a>].<a class=\"id\" href=\"#frequency\">frequency</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#freq_reduc\">freq_reduc</a> = <a class=\"id\" href=\"#freq_req\">freq_req</a> * <a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#powersave_bias\">powersave_bias</a> / 1000;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#freq_avg\">freq_avg</a> = <a class=\"id\" href=\"#freq_req\">freq_req</a> - <a class=\"id\" href=\"#freq_reduc\">freq_reduc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Find freq bounds for freq_avg in freq_table */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_frequency_table_target\">cpufreq_frequency_table_target</a>(<a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#freq_table\">freq_table</a>, <a class=\"id\" href=\"#freq_avg\">freq_avg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CPUFREQ_RELATION_H\">CPUFREQ_RELATION_H</a>, &amp;<a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#freq_lo\">freq_lo</a> = <a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#freq_table\">freq_table</a>[<a class=\"id\" href=\"#index\">index</a>].<a class=\"id\" href=\"#frequency\">frequency</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_frequency_table_target\">cpufreq_frequency_table_target</a>(<a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#freq_table\">freq_table</a>, <a class=\"id\" href=\"#freq_avg\">freq_avg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CPUFREQ_RELATION_L\">CPUFREQ_RELATION_L</a>, &amp;<a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#freq_hi\">freq_hi</a> = <a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#freq_table\">freq_table</a>[<a class=\"id\" href=\"#index\">index</a>].<a class=\"id\" href=\"#frequency\">frequency</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Find out how long we have to be in hi and lo freqs */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#freq_hi\">freq_hi</a> == <a class=\"id\" href=\"#freq_lo\">freq_lo</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#freq_lo\">freq_lo</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#freq_lo_jiffies\">freq_lo_jiffies</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#freq_lo\">freq_lo</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jiffies_total\">jiffies_total</a> = <a class=\"id\" href=\"#usecs_to_jiffies\">usecs_to_jiffies</a>(<a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#sampling_rate\">sampling_rate</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jiffies_hi\">jiffies_hi</a> = (<a class=\"id\" href=\"#freq_avg\">freq_avg</a> - <a class=\"id\" href=\"#freq_lo\">freq_lo</a>) * <a class=\"id\" href=\"#jiffies_total\">jiffies_total</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jiffies_hi\">jiffies_hi</a> += ((<a class=\"id\" href=\"#freq_hi\">freq_hi</a> - <a class=\"id\" href=\"#freq_lo\">freq_lo</a>) / 2);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jiffies_hi\">jiffies_hi</a> /= (<a class=\"id\" href=\"#freq_hi\">freq_hi</a> - <a class=\"id\" href=\"#freq_lo\">freq_lo</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jiffies_lo\">jiffies_lo</a> = <a class=\"id\" href=\"#jiffies_total\">jiffies_total</a> - <a class=\"id\" href=\"#jiffies_hi\">jiffies_hi</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#freq_lo\">freq_lo</a> = <a class=\"id\" href=\"#freq_lo\">freq_lo</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#freq_lo_jiffies\">freq_lo_jiffies</a> = <a class=\"id\" href=\"#jiffies_lo\">jiffies_lo</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#freq_hi_jiffies\">freq_hi_jiffies</a> = <a class=\"id\" href=\"#jiffies_hi\">jiffies_hi</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#freq_hi\">freq_hi</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ondemand_powersave_bias_init_cpu\">ondemand_powersave_bias_init_cpu</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a> *<a class=\"id\" href=\"#dbs_info\">dbs_info</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#od_cpu_dbs_info\">od_cpu_dbs_info</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#freq_table\">freq_table</a> = <a class=\"id\" href=\"#cpufreq_frequency_get_table\">cpufreq_frequency_get_table</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#freq_lo\">freq_lo</a> = 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ondemand_powersave_bias_init\">ondemand_powersave_bias_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ondemand_powersave_bias_init_cpu\">ondemand_powersave_bias_init_cpu</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/************************** sysfs interface ************************/</span>", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_sampling_rate_max\">show_sampling_rate_max</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk_once\">printk_once</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"CPUFREQ: ondemand sampling_rate_max \"", 
"<span class=\"ts\"/>       \"sysfs file is deprecated - used by: %s\\n\", <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#comm\">comm</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\\n\", -1U);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_sampling_rate_min\">show_sampling_rate_min</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\\n\", <a class=\"id\" href=\"#min_sampling_rate\">min_sampling_rate</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#define_one_global_ro\">define_one_global_ro</a>(<a class=\"id\" href=\"#sampling_rate_max\">sampling_rate_max</a>);", 
"<a class=\"id\" href=\"#define_one_global_ro\">define_one_global_ro</a>(<a class=\"id\" href=\"#sampling_rate_min\">sampling_rate_min</a>);", 
"", 
"<span class=\"comment\">/* cpufreq_ondemand Governor Tunables */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#show_one\">show_one</a>(<a class=\"id\" href=\"#file_name\">file_name</a>, <a class=\"id\" href=\"#object\">object</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_\">show_</a>##<a class=\"id\" href=\"#file_name\">file_name</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)              \\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\\n\", <a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#object\">object</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"}", 
"<a class=\"id\" href=\"#show_one\">show_one</a>(<a class=\"id\" href=\"#sampling_rate\">sampling_rate</a>, <a class=\"id\" href=\"#sampling_rate\">sampling_rate</a>);", 
"<a class=\"id\" href=\"#show_one\">show_one</a>(<a class=\"id\" href=\"#io_is_busy\">io_is_busy</a>, <a class=\"id\" href=\"#io_is_busy\">io_is_busy</a>);", 
"<a class=\"id\" href=\"#show_one\">show_one</a>(<a class=\"id\" href=\"#up_threshold\">up_threshold</a>, <a class=\"id\" href=\"#up_threshold\">up_threshold</a>);", 
"<a class=\"id\" href=\"#show_one\">show_one</a>(<a class=\"id\" href=\"#ignore_nice_load\">ignore_nice_load</a>, <a class=\"id\" href=\"#ignore_nice\">ignore_nice</a>);", 
"<a class=\"id\" href=\"#show_one\">show_one</a>(<a class=\"id\" href=\"#powersave_bias\">powersave_bias</a>, <a class=\"id\" href=\"#powersave_bias\">powersave_bias</a>);", 
"", 
"<span class=\"comment\">/*** delete after deprecation time ***/</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEPRECATION_MSG\">DEPRECATION_MSG</a>(<a class=\"id\" href=\"#file_name\">file_name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk_once\">printk_once</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"CPUFREQ: Per core ondemand sysfs \"<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>    \"interface is deprecated - \" #<a class=\"id\" href=\"#file_name\">file_name</a> \"\\n\");", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#show_one_old\">show_one_old</a>(<a class=\"id\" href=\"#file_name\">file_name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_\">show_</a>##<a class=\"id\" href=\"#file_name\">file_name</a>##<a class=\"id\" href=\"#_old\">_old</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#unused\">unused</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk_once\">printk_once</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"CPUFREQ: Per core ondemand sysfs \"<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>    \"interface is deprecated - \" #<a class=\"id\" href=\"#file_name\">file_name</a> \"\\n\");<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#show_\">show_</a>##<a class=\"id\" href=\"#file_name\">file_name</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#buf\">buf</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"}", 
"<a class=\"id\" href=\"#show_one_old\">show_one_old</a>(<a class=\"id\" href=\"#sampling_rate\">sampling_rate</a>);", 
"<a class=\"id\" href=\"#show_one_old\">show_one_old</a>(<a class=\"id\" href=\"#up_threshold\">up_threshold</a>);", 
"<a class=\"id\" href=\"#show_one_old\">show_one_old</a>(<a class=\"id\" href=\"#ignore_nice_load\">ignore_nice_load</a>);", 
"<a class=\"id\" href=\"#show_one_old\">show_one_old</a>(<a class=\"id\" href=\"#powersave_bias\">powersave_bias</a>);", 
"<a class=\"id\" href=\"#show_one_old\">show_one_old</a>(<a class=\"id\" href=\"#sampling_rate_min\">sampling_rate_min</a>);", 
"<a class=\"id\" href=\"#show_one_old\">show_one_old</a>(<a class=\"id\" href=\"#sampling_rate_max\">sampling_rate_max</a>);", 
"", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_ro_old\">cpufreq_freq_attr_ro_old</a>(<a class=\"id\" href=\"#sampling_rate_min\">sampling_rate_min</a>);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_ro_old\">cpufreq_freq_attr_ro_old</a>(<a class=\"id\" href=\"#sampling_rate_max\">sampling_rate_max</a>);", 
"", 
"<span class=\"comment\">/*** delete after deprecation time ***/</span>", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#store_sampling_rate\">store_sampling_rate</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#a\">a</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#b\">b</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\", &amp;<a class=\"id\" href=\"#input\">input</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#sampling_rate\">sampling_rate</a> = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#input\">input</a>, <a class=\"id\" href=\"#min_sampling_rate\">min_sampling_rate</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#store_io_is_busy\">store_io_is_busy</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#a\">a</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#b\">b</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\", &amp;<a class=\"id\" href=\"#input\">input</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#io_is_busy\">io_is_busy</a> = !!<a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#store_up_threshold\">store_up_threshold</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#a\">a</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#b\">b</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\", &amp;<a class=\"id\" href=\"#input\">input</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != 1 || <a class=\"id\" href=\"#input\">input</a> &gt; <a class=\"id\" href=\"#MAX_FREQUENCY_UP_THRESHOLD\">MAX_FREQUENCY_UP_THRESHOLD</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#input\">input</a> &lt; <a class=\"id\" href=\"#MIN_FREQUENCY_UP_THRESHOLD\">MIN_FREQUENCY_UP_THRESHOLD</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#up_threshold\">up_threshold</a> = <a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#store_ignore_nice_load\">store_ignore_nice_load</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#a\">a</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#b\">b</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\", &amp;<a class=\"id\" href=\"#input\">input</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#input\">input</a> &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#input\">input</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#input\">input</a> == <a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#ignore_nice\">ignore_nice</a>) { <span class=\"comment\">/* nothing to do */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#ignore_nice\">ignore_nice</a> = <a class=\"id\" href=\"#input\">input</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we need to re-evaluate prev_cpu_idle */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#j\">j</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a> *<a class=\"id\" href=\"#dbs_info\">dbs_info</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_info\">dbs_info</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#od_cpu_dbs_info\">od_cpu_dbs_info</a>, <a class=\"id\" href=\"#j\">j</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_idle\">prev_cpu_idle</a> = <a class=\"id\" href=\"#get_cpu_idle_time\">get_cpu_idle_time</a>(<a class=\"id\" href=\"#j\">j</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_wall\">prev_cpu_wall</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#ignore_nice\">ignore_nice</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_nice\">prev_cpu_nice</a> = <a class=\"id\" href=\"#kstat_cpu\">kstat_cpu</a>(<a class=\"id\" href=\"#j\">j</a>).<a class=\"id\" href=\"#cpustat\">cpustat</a>.<a class=\"id\" href=\"#nice\">nice</a>;", 
"", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#store_powersave_bias\">store_powersave_bias</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#a\">a</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#b\">b</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\", &amp;<a class=\"id\" href=\"#input\">input</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#input\">input</a> &gt; 1000)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#input\">input</a> = 1000;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#powersave_bias\">powersave_bias</a> = <a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ondemand_powersave_bias_init\">ondemand_powersave_bias_init</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#define_one_global_rw\">define_one_global_rw</a>(<a class=\"id\" href=\"#sampling_rate\">sampling_rate</a>);", 
"<a class=\"id\" href=\"#define_one_global_rw\">define_one_global_rw</a>(<a class=\"id\" href=\"#io_is_busy\">io_is_busy</a>);", 
"<a class=\"id\" href=\"#define_one_global_rw\">define_one_global_rw</a>(<a class=\"id\" href=\"#up_threshold\">up_threshold</a>);", 
"<a class=\"id\" href=\"#define_one_global_rw\">define_one_global_rw</a>(<a class=\"id\" href=\"#ignore_nice_load\">ignore_nice_load</a>);", 
"<a class=\"id\" href=\"#define_one_global_rw\">define_one_global_rw</a>(<a class=\"id\" href=\"#powersave_bias\">powersave_bias</a>);", 
"", 
"static struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#dbs_attributes\">dbs_attributes</a>[] = {", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#sampling_rate_max\">sampling_rate_max</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#sampling_rate_min\">sampling_rate_min</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#sampling_rate\">sampling_rate</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#up_threshold\">up_threshold</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#ignore_nice_load\">ignore_nice_load</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#powersave_bias\">powersave_bias</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#io_is_busy\">io_is_busy</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#attribute_group\">attribute_group</a> <a class=\"id\" href=\"#dbs_attr_group\">dbs_attr_group</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#attrs\">attrs</a> = <a class=\"id\" href=\"#dbs_attributes\">dbs_attributes</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> = \"ondemand\",", 
"};", 
"", 
"<span class=\"comment\">/*** delete after deprecation time ***/</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#write_one_old\">write_one_old</a>(<a class=\"id\" href=\"#file_name\">file_name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#store_\">store_</a>##<a class=\"id\" href=\"#file_name\">file_name</a>##<a class=\"id\" href=\"#_old\">_old</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#unused\">unused</a>, const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"       <a class=\"id\" href=\"#printk_once\">printk_once</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"CPUFREQ: Per core ondemand sysfs \"<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"interface is deprecated - \" #<a class=\"id\" href=\"#file_name\">file_name</a> \"\\n\");<span class=\"ts\"/>\\", 
"       return <a class=\"id\" href=\"#store_\">store_</a>##<a class=\"id\" href=\"#file_name\">file_name</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"}", 
"<a class=\"id\" href=\"#write_one_old\">write_one_old</a>(<a class=\"id\" href=\"#sampling_rate\">sampling_rate</a>);", 
"<a class=\"id\" href=\"#write_one_old\">write_one_old</a>(<a class=\"id\" href=\"#up_threshold\">up_threshold</a>);", 
"<a class=\"id\" href=\"#write_one_old\">write_one_old</a>(<a class=\"id\" href=\"#ignore_nice_load\">ignore_nice_load</a>);", 
"<a class=\"id\" href=\"#write_one_old\">write_one_old</a>(<a class=\"id\" href=\"#powersave_bias\">powersave_bias</a>);", 
"", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_rw_old\">cpufreq_freq_attr_rw_old</a>(<a class=\"id\" href=\"#sampling_rate\">sampling_rate</a>);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_rw_old\">cpufreq_freq_attr_rw_old</a>(<a class=\"id\" href=\"#up_threshold\">up_threshold</a>);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_rw_old\">cpufreq_freq_attr_rw_old</a>(<a class=\"id\" href=\"#ignore_nice_load\">ignore_nice_load</a>);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_rw_old\">cpufreq_freq_attr_rw_old</a>(<a class=\"id\" href=\"#powersave_bias\">powersave_bias</a>);", 
"", 
"static struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#dbs_attributes_old\">dbs_attributes_old</a>[] = {", 
"       &amp;<a class=\"id\" href=\"#sampling_rate_max_old\">sampling_rate_max_old</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"       &amp;<a class=\"id\" href=\"#sampling_rate_min_old\">sampling_rate_min_old</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"       &amp;<a class=\"id\" href=\"#sampling_rate_old\">sampling_rate_old</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"       &amp;<a class=\"id\" href=\"#up_threshold_old\">up_threshold_old</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"       &amp;<a class=\"id\" href=\"#ignore_nice_load_old\">ignore_nice_load_old</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"       &amp;<a class=\"id\" href=\"#powersave_bias_old\">powersave_bias_old</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"       <a class=\"id\" href=\"#NULL\">NULL</a>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#attribute_group\">attribute_group</a> <a class=\"id\" href=\"#dbs_attr_group_old\">dbs_attr_group_old</a> = {", 
"       .<a class=\"id\" href=\"#attrs\">attrs</a> = <a class=\"id\" href=\"#dbs_attributes_old\">dbs_attributes_old</a>,", 
"       .<a class=\"id\" href=\"#name\">name</a> = \"ondemand\",", 
"};", 
"", 
"<span class=\"comment\">/*** delete after deprecation time ***/</span>", 
"", 
"<span class=\"comment\">/************************** sysfs end ************************/</span>", 
"", 
"static void <a class=\"id\" href=\"#dbs_freq_increase\">dbs_freq_increase</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#p\">p</a>, unsigned int <a class=\"id\" href=\"#freq\">freq</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#powersave_bias\">powersave_bias</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freq\">freq</a> = <a class=\"id\" href=\"#powersave_bias_target\">powersave_bias_target</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#freq\">freq</a>, <a class=\"id\" href=\"#CPUFREQ_RELATION_H\">CPUFREQ_RELATION_H</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#cur\">cur</a> == <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#max\">max</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__cpufreq_driver_target\">__cpufreq_driver_target</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#freq\">freq</a>, <a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#powersave_bias\">powersave_bias</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CPUFREQ_RELATION_L\">CPUFREQ_RELATION_L</a> : <a class=\"id\" href=\"#CPUFREQ_RELATION_H\">CPUFREQ_RELATION_H</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dbs_check_cpu\">dbs_check_cpu</a>(struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a> *<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#max_load_freq\">max_load_freq</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#freq_lo\">freq_lo</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#cur_policy\">cur_policy</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Every sampling_rate, we check, if current idle time is less</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * than 20% (default), then we try to increase frequency</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Every sampling_rate, we look for a the lowest</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * frequency which can sustain the load while keeping idle time over</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 30%. If such a frequency exist, we try to decrease to this frequency.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Any frequency increase takes it to the maximum frequency.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Frequency reduction happens at minimum steps of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 5% (default) of current frequency</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get Absolute Load - in terms of freq */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_load_freq\">max_load_freq</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpus\">cpus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a> *<a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#cur_wall_time\">cur_wall_time</a>, <a class=\"id\" href=\"#cur_idle_time\">cur_idle_time</a>, <a class=\"id\" href=\"#cur_iowait_time\">cur_iowait_time</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#idle_time\">idle_time</a>, <a class=\"id\" href=\"#wall_time\">wall_time</a>, <a class=\"id\" href=\"#iowait_time\">iowait_time</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#load\">load</a>, <a class=\"id\" href=\"#load_freq\">load_freq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#freq_avg\">freq_avg</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#od_cpu_dbs_info\">od_cpu_dbs_info</a>, <a class=\"id\" href=\"#j\">j</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur_idle_time\">cur_idle_time</a> = <a class=\"id\" href=\"#get_cpu_idle_time\">get_cpu_idle_time</a>(<a class=\"id\" href=\"#j\">j</a>, &amp;<a class=\"id\" href=\"#cur_wall_time\">cur_wall_time</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur_iowait_time\">cur_iowait_time</a> = <a class=\"id\" href=\"#get_cpu_iowait_time\">get_cpu_iowait_time</a>(<a class=\"id\" href=\"#j\">j</a>, &amp;<a class=\"id\" href=\"#cur_wall_time\">cur_wall_time</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wall_time\">wall_time</a> = (unsigned int) <a class=\"id\" href=\"#cputime64_sub\">cputime64_sub</a>(<a class=\"id\" href=\"#cur_wall_time\">cur_wall_time</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_wall\">prev_cpu_wall</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_wall\">prev_cpu_wall</a> = <a class=\"id\" href=\"#cur_wall_time\">cur_wall_time</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idle_time\">idle_time</a> = (unsigned int) <a class=\"id\" href=\"#cputime64_sub\">cputime64_sub</a>(<a class=\"id\" href=\"#cur_idle_time\">cur_idle_time</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_idle\">prev_cpu_idle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_idle\">prev_cpu_idle</a> = <a class=\"id\" href=\"#cur_idle_time\">cur_idle_time</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowait_time\">iowait_time</a> = (unsigned int) <a class=\"id\" href=\"#cputime64_sub\">cputime64_sub</a>(<a class=\"id\" href=\"#cur_iowait_time\">cur_iowait_time</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_iowait\">prev_cpu_iowait</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_iowait\">prev_cpu_iowait</a> = <a class=\"id\" href=\"#cur_iowait_time\">cur_iowait_time</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#ignore_nice\">ignore_nice</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#cur_nice\">cur_nice</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#cur_nice_jiffies\">cur_nice_jiffies</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur_nice\">cur_nice</a> = <a class=\"id\" href=\"#cputime64_sub\">cputime64_sub</a>(<a class=\"id\" href=\"#kstat_cpu\">kstat_cpu</a>(<a class=\"id\" href=\"#j\">j</a>).<a class=\"id\" href=\"#cpustat\">cpustat</a>.<a class=\"id\" href=\"#nice\">nice</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_nice\">prev_cpu_nice</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Assumption: nice time between sampling periods will</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * be less than 2^32 jiffies for 32 bit sys</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur_nice_jiffies\">cur_nice_jiffies</a> = (unsigned long)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cputime64_to_jiffies64\">cputime64_to_jiffies64</a>(<a class=\"id\" href=\"#cur_nice\">cur_nice</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_nice\">prev_cpu_nice</a> = <a class=\"id\" href=\"#kstat_cpu\">kstat_cpu</a>(<a class=\"id\" href=\"#j\">j</a>).<a class=\"id\" href=\"#cpustat\">cpustat</a>.<a class=\"id\" href=\"#nice\">nice</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idle_time\">idle_time</a> += <a class=\"id\" href=\"#jiffies_to_usecs\">jiffies_to_usecs</a>(<a class=\"id\" href=\"#cur_nice_jiffies\">cur_nice_jiffies</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * For the purpose of ondemand, waiting for disk IO is an</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * indication that you're performance critical, and not that</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the system is actually idle. So subtract the iowait time</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * from the cpu idle time.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#io_is_busy\">io_is_busy</a> && <a class=\"id\" href=\"#idle_time\">idle_time</a> >= <a class=\"id\" href=\"#iowait_time\">iowait_time</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idle_time\">idle_time</a> -= <a class=\"id\" href=\"#iowait_time\">iowait_time</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#wall_time\">wall_time</a> || <a class=\"id\" href=\"#wall_time\">wall_time</a> &lt; <a class=\"id\" href=\"#idle_time\">idle_time</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#load\">load</a> = 100 * (<a class=\"id\" href=\"#wall_time\">wall_time</a> - <a class=\"id\" href=\"#idle_time\">idle_time</a>) / <a class=\"id\" href=\"#wall_time\">wall_time</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freq_avg\">freq_avg</a> = <a class=\"id\" href=\"#__cpufreq_driver_getavg\">__cpufreq_driver_getavg</a>(<a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#j\">j</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#freq_avg\">freq_avg</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freq_avg\">freq_avg</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cur\">cur</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#load_freq\">load_freq</a> = <a class=\"id\" href=\"#load\">load</a> * <a class=\"id\" href=\"#freq_avg\">freq_avg</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#load_freq\">load_freq</a> &gt; <a class=\"id\" href=\"#max_load_freq\">max_load_freq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_load_freq\">max_load_freq</a> = <a class=\"id\" href=\"#load_freq\">load_freq</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check for frequency increase */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#max_load_freq\">max_load_freq</a> &gt; <a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#up_threshold\">up_threshold</a> * <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cur\">cur</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_freq_increase\">dbs_freq_increase</a>(<a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#max\">max</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check for frequency decrease */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* if we cannot reduce the frequency anymore, break out early */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cur\">cur</a> == <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#min\">min</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The optimal frequency is the frequency that is the lowest that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * can support the current CPU usage without triggering the up</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * policy. To be safe, we focus 10 points under the threshold.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#max_load_freq\">max_load_freq</a> &lt;", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#up_threshold\">up_threshold</a> - <a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#down_differential\">down_differential</a>) *", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cur\">cur</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#freq_next\">freq_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freq_next\">freq_next</a> = <a class=\"id\" href=\"#max_load_freq\">max_load_freq</a> /", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#up_threshold\">up_threshold</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#down_differential\">down_differential</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#freq_next\">freq_next</a> &lt; <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#min\">min</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freq_next\">freq_next</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#min\">min</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#powersave_bias\">powersave_bias</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cpufreq_driver_target\">__cpufreq_driver_target</a>(<a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#freq_next\">freq_next</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CPUFREQ_RELATION_L\">CPUFREQ_RELATION_L</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#freq\">freq</a> = <a class=\"id\" href=\"#powersave_bias_target\">powersave_bias_target</a>(<a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#freq_next\">freq_next</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CPUFREQ_RELATION_L\">CPUFREQ_RELATION_L</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cpufreq_driver_target\">__cpufreq_driver_target</a>(<a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#freq\">freq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CPUFREQ_RELATION_L\">CPUFREQ_RELATION_L</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#do_dbs_timer\">do_dbs_timer</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a> *<a class=\"id\" href=\"#dbs_info\">dbs_info</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a>, <a class=\"id\" href=\"#work\">work</a>.<a class=\"id\" href=\"#work\">work</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#sample_type\">sample_type</a> = <a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#sample_type\">sample_type</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We want all CPUs to do sampling nearly on same jiffy */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#delay\">delay</a> = <a class=\"id\" href=\"#usecs_to_jiffies\">usecs_to_jiffies</a>(<a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#sampling_rate\">sampling_rate</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num_online_cpus\">num_online_cpus</a>() &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delay\">delay</a> -= <a class=\"id\" href=\"#jiffies\">jiffies</a> % <a class=\"id\" href=\"#delay\">delay</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#timer_mutex\">timer_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Common NORMAL_SAMPLE setup */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#sample_type\">sample_type</a> = <a class=\"id\" href=\"#DBS_NORMAL_SAMPLE\">DBS_NORMAL_SAMPLE</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#powersave_bias\">powersave_bias</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#sample_type\">sample_type</a> == <a class=\"id\" href=\"#DBS_NORMAL_SAMPLE\">DBS_NORMAL_SAMPLE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_check_cpu\">dbs_check_cpu</a>(<a class=\"id\" href=\"#dbs_info\">dbs_info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#freq_lo\">freq_lo</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Setup timer for SUB_SAMPLE */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#sample_type\">sample_type</a> = <a class=\"id\" href=\"#DBS_SUB_SAMPLE\">DBS_SUB_SAMPLE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delay\">delay</a> = <a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#freq_hi_jiffies\">freq_hi_jiffies</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cpufreq_driver_target\">__cpufreq_driver_target</a>(<a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#cur_policy\">cur_policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#freq_lo\">freq_lo</a>, <a class=\"id\" href=\"#CPUFREQ_RELATION_H\">CPUFREQ_RELATION_H</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue_delayed_work_on\">queue_delayed_work_on</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#kondemand_wq\">kondemand_wq</a>, &amp;<a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#work\">work</a>, <a class=\"id\" href=\"#delay\">delay</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#timer_mutex\">timer_mutex</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#dbs_timer_init\">dbs_timer_init</a>(struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a> *<a class=\"id\" href=\"#dbs_info\">dbs_info</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* We want all CPUs to do sampling nearly on same jiffy */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#delay\">delay</a> = <a class=\"id\" href=\"#usecs_to_jiffies\">usecs_to_jiffies</a>(<a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#sampling_rate\">sampling_rate</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num_online_cpus\">num_online_cpus</a>() &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delay\">delay</a> -= <a class=\"id\" href=\"#jiffies\">jiffies</a> % <a class=\"id\" href=\"#delay\">delay</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#sample_type\">sample_type</a> = <a class=\"id\" href=\"#DBS_NORMAL_SAMPLE\">DBS_NORMAL_SAMPLE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_DELAYED_WORK_DEFERRABLE\">INIT_DELAYED_WORK_DEFERRABLE</a>(&amp;<a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#work\">work</a>, <a class=\"id\" href=\"#do_dbs_timer\">do_dbs_timer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue_delayed_work_on\">queue_delayed_work_on</a>(<a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#kondemand_wq\">kondemand_wq</a>, &amp;<a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#work\">work</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delay\">delay</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#dbs_timer_exit\">dbs_timer_exit</a>(struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a> *<a class=\"id\" href=\"#dbs_info\">dbs_info</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cancel_delayed_work_sync\">cancel_delayed_work_sync</a>(&amp;<a class=\"id\" href=\"#dbs_info\">dbs_info</a>-><a class=\"id\" href=\"#work\">work</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Not all CPUs want IO time to be accounted as busy; this dependson how</span>", 
"<span class=\"comment\"> * efficient idling at a higher frequency/voltage is.</span>", 
"<span class=\"comment\"> * Pavel Machek says this is not so for various generations of AMD and old</span>", 
"<span class=\"comment\"> * Intel systems.</span>", 
"<span class=\"comment\"> * Mike Chan (androidlcom) calis this is also not true for ARM.</span>", 
"<span class=\"comment\"> * Because of this, whitelist specific known (series) of CPUs by default, and</span>", 
"<span class=\"comment\"> * leave all others up to the user.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#should_io_be_busy\">should_io_be_busy</a>(void)", 
"{", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86\">CONFIG_X86</a>)", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For Intel, Core 2 (model 15) andl later have an efficient idle.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_vendor\">x86_vendor</a> == <a class=\"id\" href=\"#X86_VENDOR_INTEL\">X86_VENDOR_INTEL</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a> == 6 &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_model\">x86_model</a> >= 15)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cpufreq_governor_dbs\">cpufreq_governor_dbs</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a> *<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#od_cpu_dbs_info\">od_cpu_dbs_info</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#event\">event</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPUFREQ_GOV_START\">CPUFREQ_GOV_START</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((!<a class=\"id\" href=\"#cpu_online\">cpu_online</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)) || (!<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cur\">cur</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sysfs_create_group\">sysfs_create_group</a>(&amp;<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#dbs_attr_group_old\">dbs_attr_group_old</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_enable\">dbs_enable</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpus\">cpus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a> *<a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#od_cpu_dbs_info\">od_cpu_dbs_info</a>, <a class=\"id\" href=\"#j\">j</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>-><a class=\"id\" href=\"#cur_policy\">cur_policy</a> = <a class=\"id\" href=\"#policy\">policy</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_idle\">prev_cpu_idle</a> = <a class=\"id\" href=\"#get_cpu_idle_time\">get_cpu_idle_time</a>(<a class=\"id\" href=\"#j\">j</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_wall\">prev_cpu_wall</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#ignore_nice\">ignore_nice</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_dbs_info\">j_dbs_info</a>-><a class=\"id\" href=\"#prev_cpu_nice\">prev_cpu_nice</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kstat_cpu\">kstat_cpu</a>(<a class=\"id\" href=\"#j\">j</a>).<a class=\"id\" href=\"#cpustat\">cpustat</a>.<a class=\"id\" href=\"#nice\">nice</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ondemand_powersave_bias_init_cpu\">ondemand_powersave_bias_init_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Start the timerschedule work, when this governor</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * is used for first time</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dbs_enable\">dbs_enable</a> == 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#latency\">latency</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sysfs_create_group\">sysfs_create_group</a>(<a class=\"id\" href=\"#cpufreq_global_kobject\">cpufreq_global_kobject</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dbs_attr_group\">dbs_attr_group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* policy latency is in nS. Convert it to uS first */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#latency\">latency</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpuinfo\">cpuinfo</a>.<a class=\"id\" href=\"#transition_latency\">transition_latency</a> / 1000;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#latency\">latency</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#latency\">latency</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Bring kernel and HW constraints together */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_sampling_rate\">min_sampling_rate</a> = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#min_sampling_rate\">min_sampling_rate</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MIN_LATENCY_MULTIPLIER\">MIN_LATENCY_MULTIPLIER</a> * <a class=\"id\" href=\"#latency\">latency</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#sampling_rate\">sampling_rate</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#min_sampling_rate\">min_sampling_rate</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#latency\">latency</a> * <a class=\"id\" href=\"#LATENCY_MULTIPLIER\">LATENCY_MULTIPLIER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#io_is_busy\">io_is_busy</a> = <a class=\"id\" href=\"#should_io_be_busy\">should_io_be_busy</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#timer_mutex\">timer_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_timer_init\">dbs_timer_init</a>(<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPUFREQ_GOV_STOP\">CPUFREQ_GOV_STOP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_timer_exit\">dbs_timer_exit</a>(<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_group\">sysfs_remove_group</a>(&amp;<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#dbs_attr_group_old\">dbs_attr_group_old</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_destroy\">mutex_destroy</a>(&amp;<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#timer_mutex\">timer_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_enable\">dbs_enable</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dbs_enable\">dbs_enable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_group\">sysfs_remove_group</a>(<a class=\"id\" href=\"#cpufreq_global_kobject\">cpufreq_global_kobject</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#dbs_attr_group\">dbs_attr_group</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPUFREQ_GOV_LIMITS\">CPUFREQ_GOV_LIMITS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#timer_mutex\">timer_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#max\">max</a> &lt; <a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#cur_policy\">cur_policy</a>-><a class=\"id\" href=\"#cur\">cur</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cpufreq_driver_target\">__cpufreq_driver_target</a>(<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#cur_policy\">cur_policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#max\">max</a>, <a class=\"id\" href=\"#CPUFREQ_RELATION_H\">CPUFREQ_RELATION_H</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#min\">min</a> &gt; <a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#cur_policy\">cur_policy</a>-><a class=\"id\" href=\"#cur\">cur</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cpufreq_driver_target\">__cpufreq_driver_target</a>(<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#cur_policy\">cur_policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#min\">min</a>, <a class=\"id\" href=\"#CPUFREQ_RELATION_L\">CPUFREQ_RELATION_L</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#this_dbs_info\">this_dbs_info</a>-><a class=\"id\" href=\"#timer_mutex\">timer_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#cpufreq_gov_dbs_init\">cpufreq_gov_dbs_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#wall\">wall</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#idle_time\">idle_time</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#get_cpu\">get_cpu</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idle_time\">idle_time</a> = <a class=\"id\" href=\"#get_cpu_idle_time_us\">get_cpu_idle_time_us</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, &amp;<a class=\"id\" href=\"#wall\">wall</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_cpu\">put_cpu</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idle_time\">idle_time</a> != -1ULL) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Idle micro accounting is supported. Use finer thresholds */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#up_threshold\">up_threshold</a> = <a class=\"id\" href=\"#MICRO_FREQUENCY_UP_THRESHOLD\">MICRO_FREQUENCY_UP_THRESHOLD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a>.<a class=\"id\" href=\"#down_differential\">down_differential</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MICRO_FREQUENCY_DOWN_DIFFERENTIAL\">MICRO_FREQUENCY_DOWN_DIFFERENTIAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * In no_hz/micro accounting case we set the minimum frequency</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * not depending on HZ, but fixed (very low). The deferred</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * timer might skip some samples if idle/sleeping as needed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_sampling_rate\">min_sampling_rate</a> = <a class=\"id\" href=\"#MICRO_FREQUENCY_MIN_SAMPLE_RATE\">MICRO_FREQUENCY_MIN_SAMPLE_RATE</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* For correct statistics, we need 10 ticks for each measure */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_sampling_rate\">min_sampling_rate</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MIN_SAMPLING_RATE_RATIO\">MIN_SAMPLING_RATE_RATIO</a> * <a class=\"id\" href=\"#jiffies_to_usecs\">jiffies_to_usecs</a>(10);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kondemand_wq\">kondemand_wq</a> = <a class=\"id\" href=\"#create_workqueue\">create_workqueue</a>(\"kondemand\");", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#kondemand_wq\">kondemand_wq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"Creation of kondemand failed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#cpufreq_register_governor\">cpufreq_register_governor</a>(&amp;<a class=\"id\" href=\"#cpufreq_gov_ondemand\">cpufreq_gov_ondemand</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#destroy_workqueue\">destroy_workqueue</a>(<a class=\"id\" href=\"#kondemand_wq\">kondemand_wq</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#cpufreq_gov_dbs_exit\">cpufreq_gov_dbs_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_unregister_governor\">cpufreq_unregister_governor</a>(&amp;<a class=\"id\" href=\"#cpufreq_gov_ondemand\">cpufreq_gov_ondemand</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destroy_workqueue\">destroy_workqueue</a>(<a class=\"id\" href=\"#kondemand_wq\">kondemand_wq</a>);", 
"}", 
"", 
"", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"Venkatesh Pallipadi <venkatesh.pallipadi@intel.com>\");", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"Alexey Starikovskiy <alexey.y.starikovskiy@intel.com>\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"'cpufreq_ondemand' - A dynamic cpufreq governor for \"", 
"<span class=\"ts\"/>\"Low Latency Frequency Transition capable processors\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND\">CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND</a>", 
"<a class=\"id\" href=\"#fs_initcall\">fs_initcall</a>(<a class=\"id\" href=\"#cpufreq_gov_dbs_init\">cpufreq_gov_dbs_init</a>);", 
"#else", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#cpufreq_gov_dbs_init\">cpufreq_gov_dbs_init</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#cpufreq_gov_dbs_exit\">cpufreq_gov_dbs_exit</a>);", 
];
xr_frag_insert('l/ed/18a118ed52554aeb482b8b3b4d4f25f5b1ed15.xr', __xr_tmp);
