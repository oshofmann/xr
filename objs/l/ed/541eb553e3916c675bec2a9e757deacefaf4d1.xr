var __xr_tmp = [
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Module Name: dsfield - Dispatcher field routines</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *****************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2000 - 2010, Intel Corp.</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Redistribution and use in source and binary forms, with or without</span>", 
"<span class=\"comment\"> * modification, are permitted provided that the following conditions</span>", 
"<span class=\"comment\"> * are met:</span>", 
"<span class=\"comment\"> * 1. Redistributions of source code must retain the above copyright</span>", 
"<span class=\"comment\"> *    notice, this list of conditions, and the following disclaimer,</span>", 
"<span class=\"comment\"> *    without modification.</span>", 
"<span class=\"comment\"> * 2. Redistributions in binary form must reproduce at minimum a disclaimer</span>", 
"<span class=\"comment\"> *    substantially similar to the \"NO WARRANTY\" disclaimer below</span>", 
"<span class=\"comment\"> *    (\"Disclaimer\") and any redistribution must be conditioned upon</span>", 
"<span class=\"comment\"> *    including a substantially similar Disclaimer requirement for further</span>", 
"<span class=\"comment\"> *    binary redistribution.</span>", 
"<span class=\"comment\"> * 3. Neither the names of the above-listed copyright holders nor the names</span>", 
"<span class=\"comment\"> *    of any contributors may be used to endorse or promote products derived</span>", 
"<span class=\"comment\"> *    from this software without specific prior written permission.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Alternatively, this software may be distributed under the terms of the</span>", 
"<span class=\"comment\"> * GNU General Public License (\"GPL\") version 2 as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NO WARRANTY</span>", 
"<span class=\"comment\"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span>", 
"<span class=\"comment\"> * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span>", 
"<span class=\"comment\"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR</span>", 
"<span class=\"comment\"> * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span>", 
"<span class=\"comment\"> * HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span>", 
"<span class=\"comment\"> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS</span>", 
"<span class=\"comment\"> * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)</span>", 
"<span class=\"comment\"> * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,</span>", 
"<span class=\"comment\"> * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING</span>", 
"<span class=\"comment\"> * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span>", 
"<span class=\"comment\"> * POSSIBILITY OF SUCH DAMAGES.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"accommon.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"amlcode.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acdispat.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acinterp.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acnamesp.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acparser.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_COMPONENT\">_COMPONENT</a>          <a class=\"id\" href=\"#ACPI_DISPATCHER\">ACPI_DISPATCHER</a>", 
"<a class=\"id\" href=\"#ACPI_MODULE_NAME\">ACPI_MODULE_NAME</a>(\"dsfield\")", 
"", 
"<span class=\"comment\">/* Local prototypes */</span>", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ds_get_field_names\">acpi_ds_get_field_names</a>(struct <a class=\"id\" href=\"#acpi_create_field_info\">acpi_create_field_info</a> *<a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_parse_object\">acpi_parse_object</a> *<a class=\"id\" href=\"#arg\">arg</a>);", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ds_create_buffer_field</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Op                  - Current parse op (create_xXField)</span>", 
"<span class=\"comment\"> *              walk_state          - Current state</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Execute the create_field operators:</span>", 
"<span class=\"comment\"> *              create_bit_field_op,</span>", 
"<span class=\"comment\"> *              create_byte_field_op,</span>", 
"<span class=\"comment\"> *              create_word_field_op,</span>", 
"<span class=\"comment\"> *              create_dword_field_op,</span>", 
"<span class=\"comment\"> *              create_qword_field_op,</span>", 
"<span class=\"comment\"> *              create_field_op     (all of which define a field in a buffer)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ds_create_buffer_field\">acpi_ds_create_buffer_field</a>(union <a class=\"id\" href=\"#acpi_parse_object\">acpi_parse_object</a> *<a class=\"id\" href=\"#op\">op</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_parse_object\">acpi_parse_object</a> *<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#obj_desc\">obj_desc</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#second_desc\">second_desc</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ds_create_buffer_field\">ds_create_buffer_field</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Get the name_string argument (name of the new buffer_field)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#aml_opcode\">aml_opcode</a> == <a class=\"id\" href=\"#AML_CREATE_FIELD_OP\">AML_CREATE_FIELD_OP</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* For create_field, name is the 4th argument */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a> = <a class=\"id\" href=\"#acpi_ps_get_arg\">acpi_ps_get_arg</a>(<a class=\"id\" href=\"#op\">op</a>, 3);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* For all other create_xXXField operators, name is the 3rd argument */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a> = <a class=\"id\" href=\"#acpi_ps_get_arg\">acpi_ps_get_arg</a>(<a class=\"id\" href=\"#op\">op</a>, 2);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#arg\">arg</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_NO_OPERAND\">AE_AML_NO_OPERAND</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#deferred_node\">deferred_node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#deferred_node\">deferred_node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Execute flag should always be set when this function is entered */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#parse_flags\">parse_flags</a> &amp; <a class=\"id\" href=\"#ACPI_PARSE_EXECUTE\">ACPI_PARSE_EXECUTE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_INTERNAL\">AE_AML_INTERNAL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Creating new namespace node, should not already exist */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#ACPI_NS_NO_UPSEARCH\">ACPI_NS_NO_UPSEARCH</a> | <a class=\"id\" href=\"#ACPI_NS_DONT_OPEN_SCOPE\">ACPI_NS_DONT_OPEN_SCOPE</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_NS_ERROR_IF_FOUND\">ACPI_NS_ERROR_IF_FOUND</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Mark node temporary if we are executing a normal control</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * method. (Don't mark if this is a module-level code method)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#method_node\">method_node</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#parse_flags\">parse_flags</a> &amp; <a class=\"id\" href=\"#ACPI_PARSE_MODULE_LEVEL\">ACPI_PARSE_MODULE_LEVEL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ACPI_NS_TEMPORARY\">ACPI_NS_TEMPORARY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Enter the name_string into the namespace */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_lookup\">acpi_ns_lookup</a>(<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#scope_info\">scope_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#string\">string</a>, <a class=\"id\" href=\"#ACPI_TYPE_ANY\">ACPI_TYPE_ANY</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ACPI_IMODE_LOAD_PASS1\">ACPI_IMODE_LOAD_PASS1</a>, <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#walk_state\">walk_state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR_NAMESPACE\">ACPI_ERROR_NAMESPACE</a>(<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#string\">string</a>, <a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We could put the returned object (Node) on the object stack for later,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * but for now, we will put it in the \"op\" object that the parser uses,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so we can get it again at the end of this scope.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If there is no object attached to the node, this node was just created</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and we need to create the field object. Otherwise, this was a lookup</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * of an existing node and we don't want to create the field object again.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a> = <a class=\"id\" href=\"#acpi_ns_get_attached_object\">acpi_ns_get_attached_object</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#obj_desc\">obj_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The Field definition is not fully parsed at this time.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (We must save the address of the AML for the buffer and index operands)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Create the buffer field object */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a> = <a class=\"id\" href=\"#acpi_ut_create_internal_object\">acpi_ut_create_internal_object</a>(<a class=\"id\" href=\"#ACPI_TYPE_BUFFER_FIELD\">ACPI_TYPE_BUFFER_FIELD</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#obj_desc\">obj_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Remember location in AML stream of the field unit opcode and operands --</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * since the buffer and index operands must be evaluated.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#second_desc\">second_desc</a> = <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#next_object\">next_object</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#second_desc\">second_desc</a>-><a class=\"id\" href=\"#extra\">extra</a>.<a class=\"id\" href=\"#aml_start\">aml_start</a> = <a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#named\">named</a>.<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#second_desc\">second_desc</a>-><a class=\"id\" href=\"#extra\">extra</a>.<a class=\"id\" href=\"#aml_length\">aml_length</a> = <a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#named\">named</a>.<a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#buffer_field\">buffer_field</a>.<a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Attach constructed field descriptors to parent node */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_attach_object\">acpi_ns_attach_object</a>(<a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#obj_desc\">obj_desc</a>, <a class=\"id\" href=\"#ACPI_TYPE_BUFFER_FIELD\">ACPI_TYPE_BUFFER_FIELD</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"", 
"      <a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Remove local reference to the object */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ds_get_field_names</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Info            - create_field info structure</span>", 
"<span class=\"comment\"> *  `           walk_state      - Current method state</span>", 
"<span class=\"comment\"> *              Arg             - First parser arg for the field name list</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Process all named fields in a field declaration.  Names are</span>", 
"<span class=\"comment\"> *              entered into the namespace.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ds_get_field_names\">acpi_ds_get_field_names</a>(struct <a class=\"id\" href=\"#acpi_create_field_info\">acpi_create_field_info</a> *<a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_parse_object\">acpi_parse_object</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#position\">position</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE_PTR\">ACPI_FUNCTION_TRACE_PTR</a>(<a class=\"id\" href=\"#ds_get_field_names\">ds_get_field_names</a>, <a class=\"id\" href=\"#info\">info</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* First field starts at bit zero */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_bit_position\">field_bit_position</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Process all elements in the field list (of parse nodes) */</span>", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#arg\">arg</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Three types of field elements are handled:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 1) Offset - specifies a bit offset</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 2) access_as - changes the access mode</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 3) Name - Enters a new named field into the namespace</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#aml_opcode\">aml_opcode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AML_INT_RESERVEDFIELD_OP\">AML_INT_RESERVEDFIELD_OP</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#position\">position</a> = (<a class=\"id\" href=\"#u64\">u64</a>) <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_bit_position\">field_bit_position</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    + (<a class=\"id\" href=\"#u64\">u64</a>) <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#position\">position</a> &gt; <a class=\"id\" href=\"#ACPI_UINT32_MAX\">ACPI_UINT32_MAX</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Bit offset within field too large (> 0xFFFFFFFF)\"));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_SUPPORT\">AE_SUPPORT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_bit_position\">field_bit_position</a> = (<a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#position\">position</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AML_INT_ACCESSFIELD_OP\">AML_INT_ACCESSFIELD_OP</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Get a new access_type and access_attribute -- to be used for all</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * field units that follow, until field end or another access_as</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * keyword.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * In field_flags, preserve the flag bits other than the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * ACCESS_TYPE bits</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_flags\">field_flags</a> = (<a class=\"id\" href=\"#u8\">u8</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#info\">info</a>->", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#field_flags\">field_flags</a> &amp; ~(<a class=\"id\" href=\"#AML_FIELD_ACCESS_TYPE_MASK\">AML_FIELD_ACCESS_TYPE_MASK</a>)) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     ((<a class=\"id\" href=\"#u8\">u8</a>) ((<a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#integer\">integer</a> >> 8)));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#attribute\">attribute</a> = (<a class=\"id\" href=\"#u8\">u8</a>) (<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#integer\">integer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AML_INT_NAMEDFIELD_OP\">AML_INT_NAMEDFIELD_OP</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Lookup the name, it should already exist */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_lookup\">acpi_ns_lookup</a>(<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#scope_info\">scope_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(char *)&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#named\">named</a>.<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_type\">field_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_IMODE_EXECUTE\">ACPI_IMODE_EXECUTE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_NS_DONT_OPEN_SCOPE\">ACPI_NS_DONT_OPEN_SCOPE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#walk_state\">walk_state</a>, &amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_node\">field_node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR_NAMESPACE\">ACPI_ERROR_NAMESPACE</a>((char *)&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#named\">named</a>.<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_node\">field_node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_bit_length\">field_bit_length</a> = <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If there is no object attached to the node, this node was</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * just created and we need to create the field object.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Otherwise, this was a lookup of an existing node and we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * don't want to create the field object again.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_ns_get_attached_object\">acpi_ns_get_attached_object</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_node\">field_node</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ex_prep_field_value\">acpi_ex_prep_field_value</a>(<a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Keep track of bit position for the next field */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#position\">position</a> = (<a class=\"id\" href=\"#u64\">u64</a>) <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_bit_position\">field_bit_position</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    + (<a class=\"id\" href=\"#u64\">u64</a>) <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#position\">position</a> &gt; <a class=\"id\" href=\"#ACPI_UINT32_MAX\">ACPI_UINT32_MAX</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Field [%4.4s] bit offset too large (> 0xFFFFFFFF)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(char,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_node\">field_node</a>->", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#name\">name</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_SUPPORT\">AE_SUPPORT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_bit_position\">field_bit_position</a> += <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#field_bit_length\">field_bit_length</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Invalid opcode in field list: 0x%X\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#aml_opcode\">aml_opcode</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_BAD_OPCODE\">AE_AML_BAD_OPCODE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a> = <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ds_create_field</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Op              - Op containing the Field definition and args</span>", 
"<span class=\"comment\"> *              region_node     - Object for the containing Operation Region</span>", 
"<span class=\"comment\"> *  `           walk_state      - Current method state</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Create a new field in the specified operation region</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ds_create_field\">acpi_ds_create_field</a>(union <a class=\"id\" href=\"#acpi_parse_object\">acpi_parse_object</a> *<a class=\"id\" href=\"#op\">op</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#region_node\">region_node</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_parse_object\">acpi_parse_object</a> *<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_create_field_info\">acpi_create_field_info</a> <a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE_PTR\">ACPI_FUNCTION_TRACE_PTR</a>(<a class=\"id\" href=\"#ds_create_field\">ds_create_field</a>, <a class=\"id\" href=\"#op\">op</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* First arg is the name of the parent op_region (must already exist) */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a> = <a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#region_node\">region_node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_lookup\">acpi_ns_lookup</a>(<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#scope_info\">scope_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#ACPI_TYPE_REGION\">ACPI_TYPE_REGION</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ACPI_IMODE_EXECUTE\">ACPI_IMODE_EXECUTE</a>, <a class=\"id\" href=\"#ACPI_NS_SEARCH_PARENT\">ACPI_NS_SEARCH_PARENT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#walk_state\">walk_state</a>, &amp;<a class=\"id\" href=\"#region_node\">region_node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR_NAMESPACE\">ACPI_ERROR_NAMESPACE</a>(<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Second arg is the field flags */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a> = <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#field_flags\">field_flags</a> = (<a class=\"id\" href=\"#u8\">u8</a>) <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#integer\">integer</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#attribute\">attribute</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Each remaining arg is a Named Field */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#field_type\">field_type</a> = <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_REGION_FIELD\">ACPI_TYPE_LOCAL_REGION_FIELD</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#region_node\">region_node</a> = <a class=\"id\" href=\"#region_node\">region_node</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ds_get_field_names\">acpi_ds_get_field_names</a>(&amp;<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#walk_state\">walk_state</a>, <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#next\">next</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ds_init_field_objects</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Op              - Op containing the Field definition and args</span>", 
"<span class=\"comment\"> *  `           walk_state      - Current method state</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: For each \"Field Unit\" name in the argument list that is</span>", 
"<span class=\"comment\"> *              part of the field declaration, enter the name into the</span>", 
"<span class=\"comment\"> *              namespace.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ds_init_field_objects\">acpi_ds_init_field_objects</a>(union <a class=\"id\" href=\"#acpi_parse_object\">acpi_parse_object</a> *<a class=\"id\" href=\"#op\">op</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_parse_object\">acpi_parse_object</a> *<a class=\"id\" href=\"#arg\">arg</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE_PTR\">ACPI_FUNCTION_TRACE_PTR</a>(<a class=\"id\" href=\"#ds_init_field_objects\">ds_init_field_objects</a>, <a class=\"id\" href=\"#op\">op</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Execute flag should always be set when this function is entered */</span>", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#parse_flags\">parse_flags</a> &amp; <a class=\"id\" href=\"#ACPI_PARSE_EXECUTE\">ACPI_PARSE_EXECUTE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#parse_flags\">parse_flags</a> &amp; <a class=\"id\" href=\"#ACPI_PARSE_DEFERRED_OP\">ACPI_PARSE_DEFERRED_OP</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bank_field Op is deferred, just return OK */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_INTERNAL\">AE_AML_INTERNAL</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Get the field_list argument for this opcode. This is the start of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * list of field elements.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#opcode\">opcode</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AML_FIELD_OP\">AML_FIELD_OP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a> = <a class=\"id\" href=\"#acpi_ps_get_arg\">acpi_ps_get_arg</a>(<a class=\"id\" href=\"#op\">op</a>, 2);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_REGION_FIELD\">ACPI_TYPE_LOCAL_REGION_FIELD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AML_BANK_FIELD_OP\">AML_BANK_FIELD_OP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a> = <a class=\"id\" href=\"#acpi_ps_get_arg\">acpi_ps_get_arg</a>(<a class=\"id\" href=\"#op\">op</a>, 4);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_BANK_FIELD\">ACPI_TYPE_LOCAL_BANK_FIELD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AML_INDEX_FIELD_OP\">AML_INDEX_FIELD_OP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a> = <a class=\"id\" href=\"#acpi_ps_get_arg\">acpi_ps_get_arg</a>(<a class=\"id\" href=\"#op\">op</a>, 3);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_INDEX_FIELD\">ACPI_TYPE_LOCAL_INDEX_FIELD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Creating new namespace node(s), should not already exist */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#ACPI_NS_NO_UPSEARCH\">ACPI_NS_NO_UPSEARCH</a> | <a class=\"id\" href=\"#ACPI_NS_DONT_OPEN_SCOPE\">ACPI_NS_DONT_OPEN_SCOPE</a> |", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_NS_ERROR_IF_FOUND\">ACPI_NS_ERROR_IF_FOUND</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Mark node(s) temporary if we are executing a normal control</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * method. (Don't mark if this is a module-level code method)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#method_node\">method_node</a> &&", 
"<span class=\"ts\"/>    !(<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#parse_flags\">parse_flags</a> &amp; <a class=\"id\" href=\"#ACPI_PARSE_MODULE_LEVEL\">ACPI_PARSE_MODULE_LEVEL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ACPI_NS_TEMPORARY\">ACPI_NS_TEMPORARY</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Walk the list of entries in the field_list</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note: field_list can be of zero length. In this case, Arg will be NULL.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#arg\">arg</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Ignore OFFSET and ACCESSAS terms here; we are only interested in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * field names in order to enter them into the namespace.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#aml_opcode\">aml_opcode</a> == <a class=\"id\" href=\"#AML_INT_NAMEDFIELD_OP\">AML_INT_NAMEDFIELD_OP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_lookup\">acpi_ns_lookup</a>(<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#scope_info\">scope_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(char *)&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#named\">named</a>.<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_IMODE_LOAD_PASS1\">ACPI_IMODE_LOAD_PASS1</a>, <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#walk_state\">walk_state</a>, &amp;<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR_NAMESPACE\">ACPI_ERROR_NAMESPACE</a>((char *)&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#named\">named</a>.<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> != <a class=\"id\" href=\"#AE_ALREADY_EXISTS\">AE_ALREADY_EXISTS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Name already exists, just ignore this error */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Get the next field element in the list */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a> = <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ds_create_bank_field</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Op              - Op containing the Field definition and args</span>", 
"<span class=\"comment\"> *              region_node     - Object for the containing Operation Region</span>", 
"<span class=\"comment\"> *              walk_state      - Current method state</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Create a new bank field in the specified operation region</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ds_create_bank_field\">acpi_ds_create_bank_field</a>(union <a class=\"id\" href=\"#acpi_parse_object\">acpi_parse_object</a> *<a class=\"id\" href=\"#op\">op</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#region_node\">region_node</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_parse_object\">acpi_parse_object</a> *<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_create_field_info\">acpi_create_field_info</a> <a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE_PTR\">ACPI_FUNCTION_TRACE_PTR</a>(<a class=\"id\" href=\"#ds_create_bank_field\">ds_create_bank_field</a>, <a class=\"id\" href=\"#op\">op</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* First arg is the name of the parent op_region (must already exist) */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a> = <a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#region_node\">region_node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_lookup\">acpi_ns_lookup</a>(<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#scope_info\">scope_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#ACPI_TYPE_REGION\">ACPI_TYPE_REGION</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ACPI_IMODE_EXECUTE\">ACPI_IMODE_EXECUTE</a>, <a class=\"id\" href=\"#ACPI_NS_SEARCH_PARENT\">ACPI_NS_SEARCH_PARENT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#walk_state\">walk_state</a>, &amp;<a class=\"id\" href=\"#region_node\">region_node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR_NAMESPACE\">ACPI_ERROR_NAMESPACE</a>(<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Second arg is the Bank Register (Field) (must already exist) */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a> = <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_lookup\">acpi_ns_lookup</a>(<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#scope_info\">scope_info</a>, <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#string\">string</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ACPI_TYPE_ANY\">ACPI_TYPE_ANY</a>, <a class=\"id\" href=\"#ACPI_IMODE_EXECUTE\">ACPI_IMODE_EXECUTE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ACPI_NS_SEARCH_PARENT\">ACPI_NS_SEARCH_PARENT</a>, <a class=\"id\" href=\"#walk_state\">walk_state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#register_node\">register_node</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR_NAMESPACE\">ACPI_ERROR_NAMESPACE</a>(<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#string\">string</a>, <a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Third arg is the bank_value</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This arg is a term_arg, not a constant</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It will be evaluated later, by acpi_ds_eval_bank_field_operands</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a> = <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Fourth arg is the field flags */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a> = <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#field_flags\">field_flags</a> = (<a class=\"id\" href=\"#u8\">u8</a>) <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#integer\">integer</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Each remaining arg is a Named Field */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#field_type\">field_type</a> = <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_BANK_FIELD\">ACPI_TYPE_LOCAL_BANK_FIELD</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#region_node\">region_node</a> = <a class=\"id\" href=\"#region_node\">region_node</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Use Info.data_register_node to store bank_field Op</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It's safe because data_register_node will never be used when create bank field</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We store aml_start and aml_length in the bank_field Op for late evaluation</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Used in acpi_ex_prep_field_value(Info)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * TBD: Or, should we add a field in struct acpi_create_field_info, like \"void *ParentOp\"?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#data_register_node\">data_register_node</a> = (struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *)<a class=\"id\" href=\"#op\">op</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ds_get_field_names\">acpi_ds_get_field_names</a>(&amp;<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#walk_state\">walk_state</a>, <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ds_create_index_field</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Op              - Op containing the Field definition and args</span>", 
"<span class=\"comment\"> *              region_node     - Object for the containing Operation Region</span>", 
"<span class=\"comment\"> *  `           walk_state      - Current method state</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Create a new index field in the specified operation region</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ds_create_index_field\">acpi_ds_create_index_field</a>(union <a class=\"id\" href=\"#acpi_parse_object\">acpi_parse_object</a> *<a class=\"id\" href=\"#op\">op</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#region_node\">region_node</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_parse_object\">acpi_parse_object</a> *<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_create_field_info\">acpi_create_field_info</a> <a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE_PTR\">ACPI_FUNCTION_TRACE_PTR</a>(<a class=\"id\" href=\"#ds_create_index_field\">ds_create_index_field</a>, <a class=\"id\" href=\"#op\">op</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* First arg is the name of the Index register (must already exist) */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a> = <a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_lookup\">acpi_ns_lookup</a>(<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#scope_info\">scope_info</a>, <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#string\">string</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ACPI_TYPE_ANY\">ACPI_TYPE_ANY</a>, <a class=\"id\" href=\"#ACPI_IMODE_EXECUTE\">ACPI_IMODE_EXECUTE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ACPI_NS_SEARCH_PARENT\">ACPI_NS_SEARCH_PARENT</a>, <a class=\"id\" href=\"#walk_state\">walk_state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#register_node\">register_node</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR_NAMESPACE\">ACPI_ERROR_NAMESPACE</a>(<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#string\">string</a>, <a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Second arg is the data register (must already exist) */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a> = <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_lookup\">acpi_ns_lookup</a>(<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#scope_info\">scope_info</a>, <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#string\">string</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ACPI_TYPE_ANY\">ACPI_TYPE_ANY</a>, <a class=\"id\" href=\"#ACPI_IMODE_EXECUTE\">ACPI_IMODE_EXECUTE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ACPI_NS_SEARCH_PARENT\">ACPI_NS_SEARCH_PARENT</a>, <a class=\"id\" href=\"#walk_state\">walk_state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#data_register_node\">data_register_node</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR_NAMESPACE\">ACPI_ERROR_NAMESPACE</a>(<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#string\">string</a>, <a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Next arg is the field flags */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a> = <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#field_flags\">field_flags</a> = (<a class=\"id\" href=\"#u8\">u8</a>) <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#value\">value</a>.<a class=\"id\" href=\"#integer\">integer</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Each remaining arg is a Named Field */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#field_type\">field_type</a> = <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_INDEX_FIELD\">ACPI_TYPE_LOCAL_INDEX_FIELD</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#region_node\">region_node</a> = <a class=\"id\" href=\"#region_node\">region_node</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ds_get_field_names\">acpi_ds_get_field_names</a>(&amp;<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#walk_state\">walk_state</a>, <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#next\">next</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
];
xr_frag_insert('l/ed/541eb553e3916c675bec2a9e757deacefaf4d1.xr', __xr_tmp);
