var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *    ata_piix.c - Intel PATA/SATA controllers</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *    Maintained by:  Jeff Garzik &lt;jgarzik@pobox.com&gt;</span>", 
"<span class=\"comment\"> *    <span class=\"ts\"/><span class=\"ts\"/>    Please ALWAYS copy linux-ide@vger.kernel.org</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>    on emails.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Copyright 2003-2005 Red Hat Inc</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Copyright 2003-2005 Jeff Garzik</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Copyright header from piix.c:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 1998-1999 Andrzej Krzysztofowicz, Author and Maintainer</span>", 
"<span class=\"comment\"> *  Copyright (C) 1998-2000 Andre Hedrick &lt;andre@linux-ide.org&gt;</span>", 
"<span class=\"comment\"> *  Copyright (C) 2003 Red Hat Inc</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *  it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> *  the Free Software Foundation; either version 2, or (at your option)</span>", 
"<span class=\"comment\"> *  any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> *  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> *  GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> *  along with this program; see the file COPYING.  If not, write to</span>", 
"<span class=\"comment\"> *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  libata documentation is available via 'make {ps|pdf}docs',</span>", 
"<span class=\"comment\"> *  as Documentation/DocBook/libata.*</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Hardware documentation available at http://developer.intel.com/</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Documentation</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Publically available from Intel web site. Errata documentation</span>", 
"<span class=\"comment\"> * is also publically available. As an aide to anyone hacking on this</span>", 
"<span class=\"comment\"> * driver the list of errata that are relevant is below, going back to</span>", 
"<span class=\"comment\"> * PIIX4. Older device documentation is now a bit tricky to find.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The chipsets all follow very much the same design. The original Triton</span>", 
"<span class=\"comment\"> * series chipsets do _not_ support independant device timings, but this</span>", 
"<span class=\"comment\"> * is fixed in Triton II. With the odd mobile exception the chips then</span>", 
"<span class=\"comment\"> * change little except in gaining more modes until SATA arrives. This</span>", 
"<span class=\"comment\"> * driver supports only the chips with independant timing (that is those</span>", 
"<span class=\"comment\"> * with SITRE and the 0x44 timing register). See pata_oldpiix and pata_mpiix</span>", 
"<span class=\"comment\"> * for the early chip drivers.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Errata of note:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Unfixable</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>PIIX4    errata #9<span class=\"ts\"/>- Only on ultra obscure hw</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ICH3<span class=\"ts\"/> errata #13     - Not observed to affect real hw</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  by Intel</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Things we must deal with</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>PIIX4<span class=\"ts\"/>errata #10<span class=\"ts\"/>- BM IDE hang with non UDMA</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (must stop/start dma to recover)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>440MX   errata #15<span class=\"ts\"/>- As PIIX4 errata #10</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>PIIX4<span class=\"ts\"/>errata #15<span class=\"ts\"/>- Must not read control registers</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  during a PIO transfer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>440MX   errata #13<span class=\"ts\"/>- As PIIX4 errata #15</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ICH2<span class=\"ts\"/>errata #21<span class=\"ts\"/>- DMA mode 0 doesn't work right</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ICH0/1  errata #55<span class=\"ts\"/>- As ICH2 errata #21</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ICH2<span class=\"ts\"/>spec c #9<span class=\"ts\"/>- Extra operations needed to handle</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  drive hotswap [NOT YET SUPPORTED]</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ICH2    spec c #20<span class=\"ts\"/>- IDE PRD must not cross a 64K boundary</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  and must be dword aligned</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ICH2    spec c #24<span class=\"ts\"/>- UDMA mode 4,5 t85/86 should be 6ns not 3.3</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ICH7<span class=\"ts\"/>errata #16<span class=\"ts\"/>- MWDMA1 timings are incorrect</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Should have been BIOS fixed:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>450NX:<span class=\"ts\"/>errata #19<span class=\"ts\"/>- DMA hangs on old 450NX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>450NX:  errata #20<span class=\"ts\"/>- DMA hangs on old 450NX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>450NX:  errata #25<span class=\"ts\"/>- Corruption with DMA on old 450NX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ICH3    errata #15      - IDE deadlock under high load</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (BIOS must set dev 31 fn 0 bit 23)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ICH3<span class=\"ts\"/>errata #18<span class=\"ts\"/>- Don't use native mode</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_host\">scsi_host</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#libata\">libata</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dmi\">dmi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DRV_NAME\">DRV_NAME</a><span class=\"ts\"/>\"ata_piix\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DRV_VERSION\">DRV_VERSION</a><span class=\"ts\"/>\"2.13\"", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PIIX_IOCFG\">PIIX_IOCFG</a><span class=\"ts\"/><span class=\"ts\"/>= 0x54, <span class=\"comment\">/* IDE I/O configuration register */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ICH5_PMR\">ICH5_PMR</a><span class=\"ts\"/><span class=\"ts\"/>= 0x90, <span class=\"comment\">/* port mapping register */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ICH5_PCS\">ICH5_PCS</a><span class=\"ts\"/><span class=\"ts\"/>= 0x92,<span class=\"ts\"/><span class=\"comment\">/* port control and status */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PIIX_SIDPR_BAR\">PIIX_SIDPR_BAR</a><span class=\"ts\"/><span class=\"ts\"/>= 5,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PIIX_SIDPR_LEN\">PIIX_SIDPR_LEN</a><span class=\"ts\"/><span class=\"ts\"/>= 16,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PIIX_SIDPR_IDX\">PIIX_SIDPR_IDX</a><span class=\"ts\"/><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PIIX_SIDPR_DATA\">PIIX_SIDPR_DATA</a><span class=\"ts\"/><span class=\"ts\"/>= 4,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PIIX_FLAG_CHECKINTR\">PIIX_FLAG_CHECKINTR</a><span class=\"ts\"/>= (1 << 28), <span class=\"comment\">/* make sure PCI INTx enabled */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PIIX_FLAG_SIDPR\">PIIX_FLAG_SIDPR</a><span class=\"ts\"/><span class=\"ts\"/>= (1 << 29), <span class=\"comment\">/* SATA idx/data pair regs */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PIIX_PATA_FLAGS\">PIIX_PATA_FLAGS</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_FLAG_SLAVE_POSS\">ATA_FLAG_SLAVE_POSS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PIIX_SATA_FLAGS\">PIIX_SATA_FLAGS</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_FLAG_SATA\">ATA_FLAG_SATA</a> | <a class=\"id\" href=\"#PIIX_FLAG_CHECKINTR\">PIIX_FLAG_CHECKINTR</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PIIX_80C_PRI\">PIIX_80C_PRI</a><span class=\"ts\"/><span class=\"ts\"/>= (1 << 5) | (1 << 4),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PIIX_80C_SEC\">PIIX_80C_SEC</a><span class=\"ts\"/><span class=\"ts\"/>= (1 << 7) | (1 << 6),", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* constants for mapping table */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#P0\">P0</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= 0,  <span class=\"comment\">/* port 0 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#P1\">P1</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= 1,  <span class=\"comment\">/* port 1 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#P2\">P2</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= 2,  <span class=\"comment\">/* port 2 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#P3\">P3</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= 3,  <span class=\"comment\">/* port 3 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IDE\">IDE</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= -1, <span class=\"comment\">/* IDE */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NA\">NA</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= -2, <span class=\"comment\">/* not avaliable */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#RV\">RV</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= -3, <span class=\"comment\">/* reserved */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PIIX_AHCI_DEVICE\">PIIX_AHCI_DEVICE</a><span class=\"ts\"/>= 6,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* host-&gt;flags bits */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PIIX_HOST_BROKEN_SUSPEND\">PIIX_HOST_BROKEN_SUSPEND</a> = (1 << 24),", 
"};", 
"", 
"enum <a class=\"id\" href=\"#piix_controller_ids\">piix_controller_ids</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* controller IDs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#piix_pata_mwdma\">piix_pata_mwdma</a>,<span class=\"ts\"/><span class=\"comment\">/* PIIX3 MWDMA only */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#piix_pata_33\">piix_pata_33</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PIIX4 at 33Mhz */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ich_pata_33\">ich_pata_33</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ICH up to UDMA 33 only */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ich_pata_66\">ich_pata_66</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ICH up to 66 Mhz */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ich_pata_100\">ich_pata_100</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ICH up to UDMA 100 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ich_pata_100_nomwdma1\">ich_pata_100_nomwdma1</a>,<span class=\"ts\"/><span class=\"comment\">/* ICH up to UDMA 100 but with no MWDMA1*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ich5_sata\">ich5_sata</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ich6_sata\">ich6_sata</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ich6m_sata\">ich6m_sata</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ich8_sata\">ich8_sata</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ich8_2port_sata\">ich8_2port_sata</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ich8m_apple_sata\">ich8m_apple_sata</a>,<span class=\"ts\"/><span class=\"comment\">/* locks up on second port enable */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tolapai_sata\">tolapai_sata</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#piix_pata_vmw\">piix_pata_vmw</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PIIX4 for VMware, spurious DMA_ERR */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#piix_map_db\">piix_map_db</a> {", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#port_enable\">port_enable</a>;", 
"<span class=\"ts\"/>const int <a class=\"id\" href=\"#map\">map</a>[][4];", 
"};", 
"", 
"struct <a class=\"id\" href=\"#piix_host_priv\">piix_host_priv</a> {", 
"<span class=\"ts\"/>const int *<a class=\"id\" href=\"#map\">map</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#saved_iocfg\">saved_iocfg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#sidpr_lock\">sidpr_lock</a>;<span class=\"ts\"/><span class=\"comment\">/* FIXME: remove once locking in EH is fixed */</span>", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#sidpr\">sidpr</a>;", 
"};", 
"", 
"static int <a class=\"id\" href=\"#piix_init_one\">piix_init_one</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> *<a class=\"id\" href=\"#ent\">ent</a>);", 
"static void <a class=\"id\" href=\"#piix_remove_one\">piix_remove_one</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"static int <a class=\"id\" href=\"#piix_pata_prereset\">piix_pata_prereset</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned long <a class=\"id\" href=\"#deadline\">deadline</a>);", 
"static void <a class=\"id\" href=\"#piix_set_piomode\">piix_set_piomode</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#adev\">adev</a>);", 
"static void <a class=\"id\" href=\"#piix_set_dmamode\">piix_set_dmamode</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#adev\">adev</a>);", 
"static void <a class=\"id\" href=\"#ich_set_dmamode\">ich_set_dmamode</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#adev\">adev</a>);", 
"static int <a class=\"id\" href=\"#ich_pata_cable_detect\">ich_pata_cable_detect</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"static <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#piix_vmw_bmdma_status\">piix_vmw_bmdma_status</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"static int <a class=\"id\" href=\"#piix_sidpr_scr_read\">piix_sidpr_scr_read</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#val\">val</a>);", 
"static int <a class=\"id\" href=\"#piix_sidpr_scr_write\">piix_sidpr_scr_write</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val\">val</a>);", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#piix_irq_check\">piix_irq_check</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM\">CONFIG_PM</a>", 
"static int <a class=\"id\" href=\"#piix_pci_device_suspend\">piix_pci_device_suspend</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#pm_message_t\">pm_message_t</a> <a class=\"id\" href=\"#mesg\">mesg</a>);", 
"static int <a class=\"id\" href=\"#piix_pci_device_resume\">piix_pci_device_resume</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static unsigned int <a class=\"id\" href=\"#in_module_init\">in_module_init</a> = 1;", 
"", 
"static const struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> <a class=\"id\" href=\"#piix_pci_tbl\">piix_pci_tbl</a>[] = {", 
"<span class=\"ts\"/><span class=\"comment\">/* Intel PIIX3 for the 430HX etc */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x7010, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#piix_pata_mwdma\">piix_pata_mwdma</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* VMware ICH4 */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x7111, 0x15ad, 0x1976, 0, 0, <a class=\"id\" href=\"#piix_pata_vmw\">piix_pata_vmw</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* Intel PIIX4 for the 430TX/440BX/MX chipset: UDMA 33 */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* Also PIIX4E (fn3 rev 2) and PIIX4M (fn3 rev 3) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x7111, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#piix_pata_33\">piix_pata_33</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* Intel PIIX4 */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x7199, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#piix_pata_33\">piix_pata_33</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* Intel PIIX4 */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x7601, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#piix_pata_33\">piix_pata_33</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* Intel PIIX */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x84CA, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#piix_pata_33\">piix_pata_33</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* Intel ICH (i810, i815, i840) UDMA 66*/</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x2411, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich_pata_66\">ich_pata_66</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* Intel ICH0 : UDMA 33*/</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x2421, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich_pata_33\">ich_pata_33</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* Intel ICH2M */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x244A, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich_pata_100\">ich_pata_100</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* Intel ICH2 (i810E2, i845, 850, 860) UDMA 100 */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x244B, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich_pata_100\">ich_pata_100</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/*  Intel ICH3M */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x248A, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich_pata_100\">ich_pata_100</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* Intel ICH3 (E7500/1) UDMA 100 */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x248B, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich_pata_100\">ich_pata_100</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* Intel ICH4 (i845GV, i845E, i852, i855) UDMA 100 */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x24CA, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich_pata_100\">ich_pata_100</a> },", 
"<span class=\"ts\"/>{ 0x8086, 0x24CB, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich_pata_100\">ich_pata_100</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* Intel ICH5 */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x24DB, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich_pata_100\">ich_pata_100</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* C-ICH (i810E2) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x245B, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich_pata_100\">ich_pata_100</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* ESB (855GME/875P + 6300ESB) UDMA 100  */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x25A2, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich_pata_100\">ich_pata_100</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* ICH6 (and 6) (i915) UDMA 100 */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x266F, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich_pata_100\">ich_pata_100</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* ICH7/7-R (i945, i975) UDMA 100*/</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x27DF, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich_pata_100_nomwdma1\">ich_pata_100_nomwdma1</a> },", 
"<span class=\"ts\"/>{ 0x8086, 0x269E, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich_pata_100_nomwdma1\">ich_pata_100_nomwdma1</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* ICH8 Mobile PATA Controller */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x2850, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich_pata_100\">ich_pata_100</a> },", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA ports */</span>", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"comment\">/* 82801EB (ICH5) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x24d1, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich5_sata\">ich5_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* 82801EB (ICH5) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x24df, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich5_sata\">ich5_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* 6300ESB (ICH5 variant with broken PCS present bits) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x25a3, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich5_sata\">ich5_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* 6300ESB pretending RAID */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x25b0, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich5_sata\">ich5_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* 82801FB/FW (ICH6/ICH6W) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x2651, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich6_sata\">ich6_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* 82801FR/FRW (ICH6R/ICH6RW) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x2652, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich6_sata\">ich6_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* 82801FBM ICH6M (ICH6R with only port 0 and 2 implemented).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Attach iff the controller is in IDE mode. */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x2653, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>,", 
"<span class=\"ts\"/>  <a class=\"id\" href=\"#PCI_CLASS_STORAGE_IDE\">PCI_CLASS_STORAGE_IDE</a> << 8, 0xffff00, <a class=\"id\" href=\"#ich6m_sata\">ich6m_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* 82801GB/GR/GH (ICH7, identical to ICH6) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x27c0, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich6_sata\">ich6_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* 2801GBM/GHM (ICH7M, identical to ICH6M) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x27c4, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich6m_sata\">ich6m_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* Enterprise Southbridge 2 (631xESB/632xESB) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x2680, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich6_sata\">ich6_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller 1 IDE (ICH8) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x2820, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_sata\">ich8_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller 2 IDE (ICH8) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x2825, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_2port_sata\">ich8_2port_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* Mobile SATA Controller IDE (ICH8M), Apple */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x2828, 0x106b, 0x00a0, 0, 0, <a class=\"id\" href=\"#ich8m_apple_sata\">ich8m_apple_sata</a> },", 
"<span class=\"ts\"/>{ 0x8086, 0x2828, 0x106b, 0x00a1, 0, 0, <a class=\"id\" href=\"#ich8m_apple_sata\">ich8m_apple_sata</a> },", 
"<span class=\"ts\"/>{ 0x8086, 0x2828, 0x106b, 0x00a3, 0, 0, <a class=\"id\" href=\"#ich8m_apple_sata\">ich8m_apple_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* Mobile SATA Controller IDE (ICH8M) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x2828, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_sata\">ich8_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (ICH9) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x2920, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_sata\">ich8_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (ICH9) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x2921, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_2port_sata\">ich8_2port_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (ICH9) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x2926, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_2port_sata\">ich8_2port_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (ICH9M) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x2928, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_2port_sata\">ich8_2port_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (ICH9M) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x292d, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_2port_sata\">ich8_2port_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (ICH9M) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x292e, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_sata\">ich8_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (Tolapai) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x5028, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#tolapai_sata\">tolapai_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (ICH10) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x3a00, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_sata\">ich8_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (ICH10) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x3a06, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_2port_sata\">ich8_2port_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (ICH10) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x3a20, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_sata\">ich8_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (ICH10) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x3a26, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_2port_sata\">ich8_2port_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (PCH) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x3b20, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_sata\">ich8_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (PCH) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x3b21, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_2port_sata\">ich8_2port_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (PCH) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x3b26, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_2port_sata\">ich8_2port_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (PCH) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x3b28, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_sata\">ich8_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (PCH) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x3b2d, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_2port_sata\">ich8_2port_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (PCH) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x3b2e, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_sata\">ich8_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (CPT) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x1c00, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_sata\">ich8_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (CPT) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x1c01, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_sata\">ich8_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (CPT) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x1c08, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_2port_sata\">ich8_2port_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (CPT) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x1c09, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_2port_sata\">ich8_2port_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (PBG) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x1d00, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_sata\">ich8_sata</a> },", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA Controller IDE (PBG) */</span>", 
"<span class=\"ts\"/>{ 0x8086, 0x1d08, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, <a class=\"id\" href=\"#ich8_2port_sata\">ich8_2port_sata</a> },", 
"<span class=\"ts\"/>{ }<span class=\"ts\"/><span class=\"comment\">/* terminate list */</span>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> <a class=\"id\" href=\"#piix_pci_driver\">piix_pci_driver</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#DRV_NAME\">DRV_NAME</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#id_table\">id_table</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#piix_pci_tbl\">piix_pci_tbl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#probe\">probe</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#piix_init_one\">piix_init_one</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#remove\">remove</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#piix_remove_one\">piix_remove_one</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM\">CONFIG_PM</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#suspend\">suspend</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#piix_pci_device_suspend\">piix_pci_device_suspend</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#resume\">resume</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#piix_pci_device_resume\">piix_pci_device_resume</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#scsi_host_template\">scsi_host_template</a> <a class=\"id\" href=\"#piix_sht\">piix_sht</a> = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_BMDMA_SHT\">ATA_BMDMA_SHT</a>(<a class=\"id\" href=\"#DRV_NAME\">DRV_NAME</a>),", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#ata_port_operations\">ata_port_operations</a> <a class=\"id\" href=\"#piix_sata_ops\">piix_sata_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#inherits\">inherits</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ata_bmdma32_port_ops\">ata_bmdma32_port_ops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sff_irq_check\">sff_irq_check</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#piix_irq_check\">piix_irq_check</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#ata_port_operations\">ata_port_operations</a> <a class=\"id\" href=\"#piix_pata_ops\">piix_pata_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#inherits\">inherits</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#piix_sata_ops\">piix_sata_ops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#cable_detect\">cable_detect</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_cable_40wire\">ata_cable_40wire</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_piomode\">set_piomode</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#piix_set_piomode\">piix_set_piomode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_dmamode\">set_dmamode</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#piix_set_dmamode\">piix_set_dmamode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#prereset\">prereset</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#piix_pata_prereset\">piix_pata_prereset</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#ata_port_operations\">ata_port_operations</a> <a class=\"id\" href=\"#piix_vmw_ops\">piix_vmw_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#inherits\">inherits</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#piix_pata_ops\">piix_pata_ops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#bmdma_status\">bmdma_status</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#piix_vmw_bmdma_status\">piix_vmw_bmdma_status</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#ata_port_operations\">ata_port_operations</a> <a class=\"id\" href=\"#ich_pata_ops\">ich_pata_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#inherits\">inherits</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#piix_pata_ops\">piix_pata_ops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#cable_detect\">cable_detect</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ich_pata_cable_detect\">ich_pata_cable_detect</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_dmamode\">set_dmamode</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ich_set_dmamode\">ich_set_dmamode</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#ata_port_operations\">ata_port_operations</a> <a class=\"id\" href=\"#piix_sidpr_sata_ops\">piix_sidpr_sata_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#inherits\">inherits</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#piix_sata_ops\">piix_sata_ops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#hardreset\">hardreset</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sata_std_hardreset\">sata_std_hardreset</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#scr_read\">scr_read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#piix_sidpr_scr_read\">piix_sidpr_scr_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#scr_write\">scr_write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#piix_sidpr_scr_write\">piix_sidpr_scr_write</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#piix_map_db\">piix_map_db</a> <a class=\"id\" href=\"#ich5_map_db\">ich5_map_db</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mask\">mask</a> = 0x7,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#port_enable\">port_enable</a> = 0x3,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#map\">map</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PM   PS   SM   SS       MAP  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#P0\">P0</a>,  <a class=\"id\" href=\"#NA\">NA</a>,  <a class=\"id\" href=\"#P1\">P1</a>,  <a class=\"id\" href=\"#NA\">NA</a> }, <span class=\"comment\">/* 000b */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#P1\">P1</a>,  <a class=\"id\" href=\"#NA\">NA</a>,  <a class=\"id\" href=\"#P0\">P0</a>,  <a class=\"id\" href=\"#NA\">NA</a> }, <span class=\"comment\">/* 001b */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a> },", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a> },", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#P0\">P0</a>,  <a class=\"id\" href=\"#P1\">P1</a>, <a class=\"id\" href=\"#IDE\">IDE</a>, <a class=\"id\" href=\"#IDE\">IDE</a> }, <span class=\"comment\">/* 100b */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#P1\">P1</a>,  <a class=\"id\" href=\"#P0\">P0</a>, <a class=\"id\" href=\"#IDE\">IDE</a>, <a class=\"id\" href=\"#IDE\">IDE</a> }, <span class=\"comment\">/* 101b */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{ <a class=\"id\" href=\"#IDE\">IDE</a>, <a class=\"id\" href=\"#IDE\">IDE</a>,  <a class=\"id\" href=\"#P0\">P0</a>,  <a class=\"id\" href=\"#P1\">P1</a> }, <span class=\"comment\">/* 110b */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{ <a class=\"id\" href=\"#IDE\">IDE</a>, <a class=\"id\" href=\"#IDE\">IDE</a>,  <a class=\"id\" href=\"#P1\">P1</a>,  <a class=\"id\" href=\"#P0\">P0</a> }, <span class=\"comment\">/* 111b */</span>", 
"<span class=\"ts\"/>},", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#piix_map_db\">piix_map_db</a> <a class=\"id\" href=\"#ich6_map_db\">ich6_map_db</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mask\">mask</a> = 0x3,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#port_enable\">port_enable</a> = 0xf,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#map\">map</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PM   PS   SM   SS       MAP */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#P0\">P0</a>,  <a class=\"id\" href=\"#P2\">P2</a>,  <a class=\"id\" href=\"#P1\">P1</a>,  <a class=\"id\" href=\"#P3\">P3</a> }, <span class=\"comment\">/* 00b */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{ <a class=\"id\" href=\"#IDE\">IDE</a>, <a class=\"id\" href=\"#IDE\">IDE</a>,  <a class=\"id\" href=\"#P1\">P1</a>,  <a class=\"id\" href=\"#P3\">P3</a> }, <span class=\"comment\">/* 01b */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#P0\">P0</a>,  <a class=\"id\" href=\"#P2\">P2</a>, <a class=\"id\" href=\"#IDE\">IDE</a>, <a class=\"id\" href=\"#IDE\">IDE</a> }, <span class=\"comment\">/* 10b */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a> },", 
"<span class=\"ts\"/>},", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#piix_map_db\">piix_map_db</a> <a class=\"id\" href=\"#ich6m_map_db\">ich6m_map_db</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mask\">mask</a> = 0x3,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#port_enable\">port_enable</a> = 0x5,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Map 01b isn't specified in the doc but some notebooks use</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it anyway.  MAP 01b have been spotted on both ICH6M and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ICH7M.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#map\">map</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PM   PS   SM   SS       MAP */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#P0\">P0</a>,  <a class=\"id\" href=\"#P2\">P2</a>,  <a class=\"id\" href=\"#NA\">NA</a>,  <a class=\"id\" href=\"#NA\">NA</a> }, <span class=\"comment\">/* 00b */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{ <a class=\"id\" href=\"#IDE\">IDE</a>, <a class=\"id\" href=\"#IDE\">IDE</a>,  <a class=\"id\" href=\"#P1\">P1</a>,  <a class=\"id\" href=\"#P3\">P3</a> }, <span class=\"comment\">/* 01b */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#P0\">P0</a>,  <a class=\"id\" href=\"#P2\">P2</a>, <a class=\"id\" href=\"#IDE\">IDE</a>, <a class=\"id\" href=\"#IDE\">IDE</a> }, <span class=\"comment\">/* 10b */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a> },", 
"<span class=\"ts\"/>},", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#piix_map_db\">piix_map_db</a> <a class=\"id\" href=\"#ich8_map_db\">ich8_map_db</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mask\">mask</a> = 0x3,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#port_enable\">port_enable</a> = 0xf,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#map\">map</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PM   PS   SM   SS       MAP */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#P0\">P0</a>,  <a class=\"id\" href=\"#P2\">P2</a>,  <a class=\"id\" href=\"#P1\">P1</a>,  <a class=\"id\" href=\"#P3\">P3</a> }, <span class=\"comment\">/* 00b (hardwired when in AHCI) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a> },", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#P0\">P0</a>,  <a class=\"id\" href=\"#P2\">P2</a>, <a class=\"id\" href=\"#IDE\">IDE</a>, <a class=\"id\" href=\"#IDE\">IDE</a> }, <span class=\"comment\">/* 10b (IDE mode) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a> },", 
"<span class=\"ts\"/>},", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#piix_map_db\">piix_map_db</a> <a class=\"id\" href=\"#ich8_2port_map_db\">ich8_2port_map_db</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mask\">mask</a> = 0x3,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#port_enable\">port_enable</a> = 0x3,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#map\">map</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PM   PS   SM   SS       MAP */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#P0\">P0</a>,  <a class=\"id\" href=\"#NA\">NA</a>,  <a class=\"id\" href=\"#P1\">P1</a>,  <a class=\"id\" href=\"#NA\">NA</a> }, <span class=\"comment\">/* 00b */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a> }, <span class=\"comment\">/* 01b */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a> }, <span class=\"comment\">/* 10b */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a> },", 
"<span class=\"ts\"/>},", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#piix_map_db\">piix_map_db</a> <a class=\"id\" href=\"#ich8m_apple_map_db\">ich8m_apple_map_db</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mask\">mask</a> = 0x3,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#port_enable\">port_enable</a> = 0x1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#map\">map</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PM   PS   SM   SS       MAP */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#P0\">P0</a>,  <a class=\"id\" href=\"#NA\">NA</a>,  <a class=\"id\" href=\"#NA\">NA</a>,  <a class=\"id\" href=\"#NA\">NA</a> }, <span class=\"comment\">/* 00b */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a> },", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#P0\">P0</a>,  <a class=\"id\" href=\"#P2\">P2</a>, <a class=\"id\" href=\"#IDE\">IDE</a>, <a class=\"id\" href=\"#IDE\">IDE</a> }, <span class=\"comment\">/* 10b */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a> },", 
"<span class=\"ts\"/>},", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#piix_map_db\">piix_map_db</a> <a class=\"id\" href=\"#tolapai_map_db\">tolapai_map_db</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mask\">mask</a> = 0x3,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#port_enable\">port_enable</a> = 0x3,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#map\">map</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PM   PS   SM   SS       MAP */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#P0\">P0</a>,  <a class=\"id\" href=\"#NA\">NA</a>,  <a class=\"id\" href=\"#P1\">P1</a>,  <a class=\"id\" href=\"#NA\">NA</a> }, <span class=\"comment\">/* 00b */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a> }, <span class=\"comment\">/* 01b */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a> }, <span class=\"comment\">/* 10b */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a>,  <a class=\"id\" href=\"#RV\">RV</a> },", 
"<span class=\"ts\"/>},", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#piix_map_db\">piix_map_db</a> *<a class=\"id\" href=\"#piix_map_db_table\">piix_map_db_table</a>[] = {", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#ich5_sata\">ich5_sata</a>]<span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ich5_map_db\">ich5_map_db</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#ich6_sata\">ich6_sata</a>]<span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ich6_map_db\">ich6_map_db</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#ich6m_sata\">ich6m_sata</a>]<span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ich6m_map_db\">ich6m_map_db</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#ich8_sata\">ich8_sata</a>]<span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ich8_map_db\">ich8_map_db</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#ich8_2port_sata\">ich8_2port_sata</a>]<span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ich8_2port_map_db\">ich8_2port_map_db</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#ich8m_apple_sata\">ich8m_apple_sata</a>]<span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ich8m_apple_map_db\">ich8m_apple_map_db</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#tolapai_sata\">tolapai_sata</a>]<span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#tolapai_map_db\">tolapai_map_db</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#ata_port_info\">ata_port_info</a> <a class=\"id\" href=\"#piix_port_info\">piix_port_info</a>[] = {", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#piix_pata_mwdma\">piix_pata_mwdma</a>] = <span class=\"ts\"/><span class=\"comment\">/* PIIX3 MWDMA only */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#PIIX_PATA_FLAGS\">PIIX_PATA_FLAGS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_MWDMA12_ONLY\">ATA_MWDMA12_ONLY</a>, <span class=\"comment\">/* mwdma1-2 ?? CHECK 0 should be ok but slow */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#piix_pata_ops\">piix_pata_ops</a>,", 
"<span class=\"ts\"/>},", 
"", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#piix_pata_33\">piix_pata_33</a>] =<span class=\"ts\"/><span class=\"comment\">/* PIIX4 at 33MHz */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#PIIX_PATA_FLAGS\">PIIX_PATA_FLAGS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_MWDMA12_ONLY\">ATA_MWDMA12_ONLY</a>, <span class=\"comment\">/* mwdma1-2 ?? CHECK 0 should be ok but slow */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA2\">ATA_UDMA2</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#piix_pata_ops\">piix_pata_ops</a>,", 
"<span class=\"ts\"/>},", 
"", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#ich_pata_33\">ich_pata_33</a>] = <span class=\"ts\"/><span class=\"comment\">/* ICH0 - ICH at 33Mhz*/</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#PIIX_PATA_FLAGS\">PIIX_PATA_FLAGS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a> <span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_MWDMA12_ONLY\">ATA_MWDMA12_ONLY</a>, <span class=\"comment\">/* Check: maybe MWDMA0 is ok  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA2\">ATA_UDMA2</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ich_pata_ops\">ich_pata_ops</a>,", 
"<span class=\"ts\"/>},", 
"", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#ich_pata_66\">ich_pata_66</a>] = <span class=\"ts\"/><span class=\"comment\">/* ICH controllers up to 66MHz */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#PIIX_PATA_FLAGS\">PIIX_PATA_FLAGS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a> <span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_MWDMA12_ONLY\">ATA_MWDMA12_ONLY</a>, <span class=\"comment\">/* MWDMA0 is broken on chip */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA4\">ATA_UDMA4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ich_pata_ops\">ich_pata_ops</a>,", 
"<span class=\"ts\"/>},", 
"", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#ich_pata_100\">ich_pata_100</a>] =", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#PIIX_PATA_FLAGS\">PIIX_PATA_FLAGS</a> | <a class=\"id\" href=\"#PIIX_FLAG_CHECKINTR\">PIIX_FLAG_CHECKINTR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_MWDMA12_ONLY\">ATA_MWDMA12_ONLY</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA5\">ATA_UDMA5</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ich_pata_ops\">ich_pata_ops</a>,", 
"<span class=\"ts\"/>},", 
"", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#ich_pata_100_nomwdma1\">ich_pata_100_nomwdma1</a>] =", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#PIIX_PATA_FLAGS\">PIIX_PATA_FLAGS</a> | <a class=\"id\" href=\"#PIIX_FLAG_CHECKINTR\">PIIX_FLAG_CHECKINTR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_MWDMA2_ONLY\">ATA_MWDMA2_ONLY</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA5\">ATA_UDMA5</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ich_pata_ops\">ich_pata_ops</a>,", 
"<span class=\"ts\"/>},", 
"", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#ich5_sata\">ich5_sata</a>] =", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#PIIX_SATA_FLAGS\">PIIX_SATA_FLAGS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_MWDMA2\">ATA_MWDMA2</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA6\">ATA_UDMA6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#piix_sata_ops\">piix_sata_ops</a>,", 
"<span class=\"ts\"/>},", 
"", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#ich6_sata\">ich6_sata</a>] =", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#PIIX_SATA_FLAGS\">PIIX_SATA_FLAGS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_MWDMA2\">ATA_MWDMA2</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA6\">ATA_UDMA6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#piix_sata_ops\">piix_sata_ops</a>,", 
"<span class=\"ts\"/>},", 
"", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#ich6m_sata\">ich6m_sata</a>] =", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#PIIX_SATA_FLAGS\">PIIX_SATA_FLAGS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_MWDMA2\">ATA_MWDMA2</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA6\">ATA_UDMA6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#piix_sata_ops\">piix_sata_ops</a>,", 
"<span class=\"ts\"/>},", 
"", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#ich8_sata\">ich8_sata</a>] =", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#PIIX_SATA_FLAGS\">PIIX_SATA_FLAGS</a> | <a class=\"id\" href=\"#PIIX_FLAG_SIDPR\">PIIX_FLAG_SIDPR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_MWDMA2\">ATA_MWDMA2</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA6\">ATA_UDMA6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#piix_sata_ops\">piix_sata_ops</a>,", 
"<span class=\"ts\"/>},", 
"", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#ich8_2port_sata\">ich8_2port_sata</a>] =", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#PIIX_SATA_FLAGS\">PIIX_SATA_FLAGS</a> | <a class=\"id\" href=\"#PIIX_FLAG_SIDPR\">PIIX_FLAG_SIDPR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_MWDMA2\">ATA_MWDMA2</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA6\">ATA_UDMA6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#piix_sata_ops\">piix_sata_ops</a>,", 
"<span class=\"ts\"/>},", 
"", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#tolapai_sata\">tolapai_sata</a>] =", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#PIIX_SATA_FLAGS\">PIIX_SATA_FLAGS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_MWDMA2\">ATA_MWDMA2</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA6\">ATA_UDMA6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#piix_sata_ops\">piix_sata_ops</a>,", 
"<span class=\"ts\"/>},", 
"", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#ich8m_apple_sata\">ich8m_apple_sata</a>] =", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#PIIX_SATA_FLAGS\">PIIX_SATA_FLAGS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_MWDMA2\">ATA_MWDMA2</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA6\">ATA_UDMA6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#piix_sata_ops\">piix_sata_ops</a>,", 
"<span class=\"ts\"/>},", 
"", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#piix_pata_vmw\">piix_pata_vmw</a>] =", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#PIIX_PATA_FLAGS\">PIIX_PATA_FLAGS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_MWDMA12_ONLY\">ATA_MWDMA12_ONLY</a>, <span class=\"comment\">/* mwdma1-2 ?? CHECK 0 should be ok but slow */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA2\">ATA_UDMA2</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#piix_vmw_ops\">piix_vmw_ops</a>,", 
"<span class=\"ts\"/>},", 
"", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#pci_bits\">pci_bits</a> <a class=\"id\" href=\"#piix_enable_bits\">piix_enable_bits</a>[] = {", 
"<span class=\"ts\"/>{ 0x41U, 1U, 0x80UL, 0x80UL },<span class=\"ts\"/><span class=\"comment\">/* port 0 */</span>", 
"<span class=\"ts\"/>{ 0x43U, 1U, 0x80UL, 0x80UL },<span class=\"ts\"/><span class=\"comment\">/* port 1 */</span>", 
"};", 
"", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"Andre Hedrick, Alan Cox, Andrzej Krzysztofowicz, Jeff Garzik\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"SCSI low-level driver for Intel PIIX/ICH ATA controllers\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"<a class=\"id\" href=\"#MODULE_DEVICE_TABLE\">MODULE_DEVICE_TABLE</a>(<a class=\"id\" href=\"#pci\">pci</a>, <a class=\"id\" href=\"#piix_pci_tbl\">piix_pci_tbl</a>);", 
"<a class=\"id\" href=\"#MODULE_VERSION\">MODULE_VERSION</a>(<a class=\"id\" href=\"#DRV_VERSION\">DRV_VERSION</a>);", 
"", 
"struct <a class=\"id\" href=\"#ich_laptop\">ich_laptop</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#subvendor\">subvendor</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#subdevice\">subdevice</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>List of laptops that use short cables rather than 80 wire</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static const struct <a class=\"id\" href=\"#ich_laptop\">ich_laptop</a> <a class=\"id\" href=\"#ich_laptop\">ich_laptop</a>[] = {", 
"<span class=\"ts\"/><span class=\"comment\">/* devid, subvendor, subdev */</span>", 
"<span class=\"ts\"/>{ 0x27DF, 0x0005, 0x0280 },<span class=\"ts\"/><span class=\"comment\">/* ICH7 on Acer 5602WLMi */</span>", 
"<span class=\"ts\"/>{ 0x27DF, 0x1025, 0x0102 },<span class=\"ts\"/><span class=\"comment\">/* ICH7 on Acer 5602aWLMi */</span>", 
"<span class=\"ts\"/>{ 0x27DF, 0x1025, 0x0110 },<span class=\"ts\"/><span class=\"comment\">/* ICH7 on Acer 3682WLMi */</span>", 
"<span class=\"ts\"/>{ 0x27DF, 0x1028, 0x02b0 },<span class=\"ts\"/><span class=\"comment\">/* ICH7 on unknown Dell */</span>", 
"<span class=\"ts\"/>{ 0x27DF, 0x1043, 0x1267 },<span class=\"ts\"/><span class=\"comment\">/* ICH7 on Asus W5F */</span>", 
"<span class=\"ts\"/>{ 0x27DF, 0x103C, 0x30A1 },<span class=\"ts\"/><span class=\"comment\">/* ICH7 on HP Compaq nc2400 */</span>", 
"<span class=\"ts\"/>{ 0x27DF, 0x103C, 0x361a },<span class=\"ts\"/><span class=\"comment\">/* ICH7 on unknown HP  */</span>", 
"<span class=\"ts\"/>{ 0x27DF, 0x1071, 0xD221 },<span class=\"ts\"/><span class=\"comment\">/* ICH7 on Hercules EC-900 */</span>", 
"<span class=\"ts\"/>{ 0x27DF, 0x152D, 0x0778 },<span class=\"ts\"/><span class=\"comment\">/* ICH7 on unknown Intel */</span>", 
"<span class=\"ts\"/>{ 0x24CA, 0x1025, 0x0061 },<span class=\"ts\"/><span class=\"comment\">/* ICH4 on ACER Aspire 2023WLMi */</span>", 
"<span class=\"ts\"/>{ 0x24CA, 0x1025, 0x003d },<span class=\"ts\"/><span class=\"comment\">/* ICH4 on ACER TM290 */</span>", 
"<span class=\"ts\"/>{ 0x266F, 0x1025, 0x0066 },<span class=\"ts\"/><span class=\"comment\">/* ICH6 on ACER Aspire 1694WLMi */</span>", 
"<span class=\"ts\"/>{ 0x2653, 0x1043, 0x82D8 },<span class=\"ts\"/><span class=\"comment\">/* ICH6M on Asus Eee 701 */</span>", 
"<span class=\"ts\"/>{ 0x27df, 0x104d, 0x900e },<span class=\"ts\"/><span class=\"comment\">/* ICH7 on Sony TZ-90 */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* end marker */</span>", 
"<span class=\"ts\"/>{ 0, }", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ich_pata_cable_detect - Probe host controller cable detect info</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: Port for which cable detect info is desired</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Read 80c cable indicator from ATA PCI device's PCI config</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>register.  This register is normally set by firmware (BIOS).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>None (inherited from caller).</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#ich_pata_cable_detect\">ich_pata_cable_detect</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#piix_host_priv\">piix_host_priv</a> *<a class=\"id\" href=\"#hpriv\">hpriv</a> = <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#ich_laptop\">ich_laptop</a> *<a class=\"id\" href=\"#lap\">lap</a> = &amp;<a class=\"id\" href=\"#ich_laptop\">ich_laptop</a>[0];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#mask\">mask</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check for specials - Acer Aspire 5602WLMi */</span>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#lap\">lap</a>-><a class=\"id\" href=\"#device\">device</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#lap\">lap</a>-><a class=\"id\" href=\"#device\">device</a> == <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#device\">device</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#lap\">lap</a>-><a class=\"id\" href=\"#subvendor\">subvendor</a> == <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#subsystem_vendor\">subsystem_vendor</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#lap\">lap</a>-><a class=\"id\" href=\"#subdevice\">subdevice</a> == <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#subsystem_device\">subsystem_device</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ATA_CBL_PATA40_SHORT\">ATA_CBL_PATA40_SHORT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lap\">lap</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check BIOS cable detect results */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#port_no\">port_no</a> == 0 ? <a class=\"id\" href=\"#PIIX_80C_PRI\">PIIX_80C_PRI</a> : <a class=\"id\" href=\"#PIIX_80C_SEC\">PIIX_80C_SEC</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#saved_iocfg\">saved_iocfg</a> &amp; <a class=\"id\" href=\"#mask\">mask</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ATA_CBL_PATA40\">ATA_CBL_PATA40</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ATA_CBL_PATA80\">ATA_CBL_PATA80</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>piix_pata_prereset - prereset for PATA host controller</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@link: Target link</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@deadline: deadline jiffies for the operation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>None (inherited from caller).</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#piix_pata_prereset\">piix_pata_prereset</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned long <a class=\"id\" href=\"#deadline\">deadline</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_test_config_bits\">pci_test_config_bits</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, &amp;<a class=\"id\" href=\"#piix_enable_bits\">piix_enable_bits</a>[<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#port_no\">port_no</a>]))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ata_sff_prereset\">ata_sff_prereset</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#deadline\">deadline</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#piix_lock\">piix_lock</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>piix_set_piomode - Initialize host controller PATA PIO timings</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: Port whose timings we are configuring</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@adev: um</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Set PIO mode for device, in host controller PCI config space.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>None (inherited from caller).</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#piix_set_piomode\">piix_set_piomode</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#adev\">adev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a><span class=\"ts\"/>= <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#pio\">pio</a><span class=\"ts\"/>= <a class=\"id\" href=\"#adev\">adev</a>-><a class=\"id\" href=\"#pio_mode\">pio_mode</a> - <a class=\"id\" href=\"#XFER_PIO_0\">XFER_PIO_0</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#is_slave\">is_slave</a><span class=\"ts\"/>= (<a class=\"id\" href=\"#adev\">adev</a>-><a class=\"id\" href=\"#devno\">devno</a> != 0);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#master_port\">master_port</a>= <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#port_no\">port_no</a> ? 0x42 : 0x40;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#slave_port\">slave_port</a><span class=\"ts\"/>= 0x44;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#master_data\">master_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#slave_data\">slave_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#udma_enable\">udma_enable</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#control\">control</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>See Intel Document 298600-004 for the timing programing rules</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>for ICH controllers.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>static const<span class=\"ts\"/> <span class=\"comment\">/* ISP  RTC */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#timings\">timings</a>[][2]<span class=\"ts\"/>= { { 0, 0 },", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    { 0, 0 },", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    { 1, 0 },", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    { 2, 1 },", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    { 2, 3 }, };", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pio\">pio</a> >= 2)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#control\">control</a> |= 1;<span class=\"ts\"/><span class=\"comment\">/* TIME1 enable */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_pio_need_iordy\">ata_pio_need_iordy</a>(<a class=\"id\" href=\"#adev\">adev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#control\">control</a> |= 2;<span class=\"ts\"/><span class=\"comment\">/* IE enable */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Intel specifies that the PPE functionality is for disk only */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#adev\">adev</a>-><a class=\"id\" href=\"#class\">class</a> == <a class=\"id\" href=\"#ATA_DEV_ATA\">ATA_DEV_ATA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#control\">control</a> |= 4;<span class=\"ts\"/><span class=\"comment\">/* PPE enable */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#piix_lock\">piix_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* PIO configuration clears DTE unconditionally.  It will be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * programmed in set_dmamode which is guaranteed to be called</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * after set_piomode if any DMA mode is available.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#master_port\">master_port</a>, &amp;<a class=\"id\" href=\"#master_data\">master_data</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_slave\">is_slave</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* clear TIME1|IE1|PPE1|DTE1 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#master_data\">master_data</a> &= 0xff0f;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Enable SITRE (separate slave timing register) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#master_data\">master_data</a> |= 0x4000;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* enable PPE1, IE1 and TIME1 as needed */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#master_data\">master_data</a> |= (<a class=\"id\" href=\"#control\">control</a> << 4);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_byte\">pci_read_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#slave_port\">slave_port</a>, &amp;<a class=\"id\" href=\"#slave_data\">slave_data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slave_data\">slave_data</a> &= (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#port_no\">port_no</a> ? 0x0f : 0xf0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Load the timing nibble for this slave */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slave_data\">slave_data</a> |= ((<a class=\"id\" href=\"#timings\">timings</a>[<a class=\"id\" href=\"#pio\">pio</a>][0] << 2) | <a class=\"id\" href=\"#timings\">timings</a>[<a class=\"id\" href=\"#pio\">pio</a>][1])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><< (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#port_no\">port_no</a> ? 4 : 0);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* clear ISP|RCT|TIME0|IE0|PPE0|DTE0 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#master_data\">master_data</a> &= 0xccf0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Enable PPE, IE and TIME as appropriate */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#master_data\">master_data</a> |= <a class=\"id\" href=\"#control\">control</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* load ISP and RCT */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#master_data\">master_data</a> |=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#timings\">timings</a>[<a class=\"id\" href=\"#pio\">pio</a>][0] << 12) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#timings\">timings</a>[<a class=\"id\" href=\"#pio\">pio</a>][1] << 8);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#master_port\">master_port</a>, <a class=\"id\" href=\"#master_data\">master_data</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_slave\">is_slave</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_byte\">pci_write_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#slave_port\">slave_port</a>, <a class=\"id\" href=\"#slave_data\">slave_data</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Ensure the UDMA bit is off - it will be turned back on if</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   UDMA is selected */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#udma_mask\">udma_mask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_byte\">pci_read_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0x48, &amp;<a class=\"id\" href=\"#udma_enable\">udma_enable</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udma_enable\">udma_enable</a> &= ~(1 << (2 * <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#port_no\">port_no</a> + <a class=\"id\" href=\"#adev\">adev</a>-><a class=\"id\" href=\"#devno\">devno</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_byte\">pci_write_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0x48, <a class=\"id\" href=\"#udma_enable\">udma_enable</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#piix_lock\">piix_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>do_pata_set_dmamode - Initialize host controller PATA PIO timings</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: Port whose timings we are configuring</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@adev: Drive in question</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@isich: set if the chip is an ICH device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Set UDMA mode for device, in host controller PCI config space.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>None (inherited from caller).</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#do_pata_set_dmamode\">do_pata_set_dmamode</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#adev\">adev</a>, int <a class=\"id\" href=\"#isich\">isich</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a><span class=\"ts\"/>= <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#master_port\">master_port</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#port_no\">port_no</a> ? 0x42 : 0x40;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#master_data\">master_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#speed\">speed</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#adev\">adev</a>-><a class=\"id\" href=\"#dma_mode\">dma_mode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#devid\">devid</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#adev\">adev</a>-><a class=\"id\" href=\"#devno\">devno</a> + 2 * <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#port_no\">port_no</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#udma_enable\">udma_enable</a><span class=\"ts\"/><span class=\"ts\"/>= 0;", 
"", 
"<span class=\"ts\"/>static const<span class=\"ts\"/> <span class=\"comment\">/* ISP  RTC */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#timings\">timings</a>[][2]<span class=\"ts\"/>= { { 0, 0 },", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    { 0, 0 },", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    { 1, 0 },", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    { 2, 1 },", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    { 2, 3 }, };", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#piix_lock\">piix_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#master_port\">master_port</a>, &amp;<a class=\"id\" href=\"#master_data\">master_data</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#udma_mask\">udma_mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_byte\">pci_read_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0x48, &amp;<a class=\"id\" href=\"#udma_enable\">udma_enable</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#speed\">speed</a> >= <a class=\"id\" href=\"#XFER_UDMA_0\">XFER_UDMA_0</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#udma\">udma</a> = <a class=\"id\" href=\"#adev\">adev</a>-><a class=\"id\" href=\"#dma_mode\">dma_mode</a> - <a class=\"id\" href=\"#XFER_UDMA_0\">XFER_UDMA_0</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#udma_timing\">udma_timing</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#ideconf\">ideconf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#u_clock\">u_clock</a>, <a class=\"id\" href=\"#u_speed\">u_speed</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * UDMA is handled by a combination of clock switching and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * selection of dividers</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Handy rule: Odd modes are UDMATIMx 01, even are 02</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>       except UDMA0 which is 00</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u_speed\">u_speed</a> = <a class=\"id\" href=\"#min\">min</a>(2 - (<a class=\"id\" href=\"#udma\">udma</a> &amp; 1), <a class=\"id\" href=\"#udma\">udma</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#udma\">udma</a> == 5)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u_clock\">u_clock</a> = 0x1000;<span class=\"ts\"/><span class=\"comment\">/* 100Mhz */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#udma\">udma</a> &gt; 2)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u_clock\">u_clock</a> = 1;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 66Mhz */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u_clock\">u_clock</a> = 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 33Mhz */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udma_enable\">udma_enable</a> |= (1 << <a class=\"id\" href=\"#devid\">devid</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Load the CT/RP selection */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0x4A, &amp;<a class=\"id\" href=\"#udma_timing\">udma_timing</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udma_timing\">udma_timing</a> &= ~(3 << (4 * <a class=\"id\" href=\"#devid\">devid</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udma_timing\">udma_timing</a> |= <a class=\"id\" href=\"#u_speed\">u_speed</a> << (4 * <a class=\"id\" href=\"#devid\">devid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0x4A, <a class=\"id\" href=\"#udma_timing\">udma_timing</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#isich\">isich</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Select a 33/66/100Mhz clock */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0x54, &amp;<a class=\"id\" href=\"#ideconf\">ideconf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ideconf\">ideconf</a> &= ~(0x1001 << <a class=\"id\" href=\"#devid\">devid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ideconf\">ideconf</a> |= <a class=\"id\" href=\"#u_clock\">u_clock</a> << <a class=\"id\" href=\"#devid\">devid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* For ICH or later we should set bit 10 for better</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   performance (WR_PingPong_En) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0x54, <a class=\"id\" href=\"#ideconf\">ideconf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * MWDMA is driven by the PIO timings. We must also enable</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * IORDY unconditionally along with TIME1. PPE has already</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * been set when the PIO timing was set.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mwdma\">mwdma</a><span class=\"ts\"/>= <a class=\"id\" href=\"#adev\">adev</a>-><a class=\"id\" href=\"#dma_mode\">dma_mode</a> - <a class=\"id\" href=\"#XFER_MW_DMA_0\">XFER_MW_DMA_0</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#control\">control</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#slave_data\">slave_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>const unsigned int <a class=\"id\" href=\"#needed_pio\">needed_pio</a>[3] = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFER_PIO_0\">XFER_PIO_0</a>, <a class=\"id\" href=\"#XFER_PIO_3\">XFER_PIO_3</a>, <a class=\"id\" href=\"#XFER_PIO_4\">XFER_PIO_4</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>};", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#pio\">pio</a> = <a class=\"id\" href=\"#needed_pio\">needed_pio</a>[<a class=\"id\" href=\"#mwdma\">mwdma</a>] - <a class=\"id\" href=\"#XFER_PIO_0\">XFER_PIO_0</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#control\">control</a> = 3;<span class=\"ts\"/><span class=\"comment\">/* IORDY|TIME1 */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If the drive MWDMA is faster than it can do PIO then</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   we must force PIO into PIO0 */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#adev\">adev</a>-><a class=\"id\" href=\"#pio_mode\">pio_mode</a> &lt; <a class=\"id\" href=\"#needed_pio\">needed_pio</a>[<a class=\"id\" href=\"#mwdma\">mwdma</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Enable DMA timing only */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#control\">control</a> |= 8;<span class=\"ts\"/><span class=\"comment\">/* PIO cycles in PIO0 */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#adev\">adev</a>-><a class=\"id\" href=\"#devno\">devno</a>) {<span class=\"ts\"/><span class=\"comment\">/* Slave */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#master_data\">master_data</a> &= 0xFF4F;  <span class=\"comment\">/* Mask out IORDY|TIME1|DMAONLY */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#master_data\">master_data</a> |= <a class=\"id\" href=\"#control\">control</a> << 4;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_byte\">pci_read_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0x44, &amp;<a class=\"id\" href=\"#slave_data\">slave_data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slave_data\">slave_data</a> &= (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#port_no\">port_no</a> ? 0x0f : 0xf0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Load the matching timing */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slave_data\">slave_data</a> |= ((<a class=\"id\" href=\"#timings\">timings</a>[<a class=\"id\" href=\"#pio\">pio</a>][0] << 2) | <a class=\"id\" href=\"#timings\">timings</a>[<a class=\"id\" href=\"#pio\">pio</a>][1]) << (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#port_no\">port_no</a> ? 4 : 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_byte\">pci_write_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0x44, <a class=\"id\" href=\"#slave_data\">slave_data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else { <span class=\"ts\"/><span class=\"comment\">/* Master */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#master_data\">master_data</a> &= 0xCCF4;<span class=\"ts\"/><span class=\"comment\">/* Mask out IORDY|TIME1|DMAONLY</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   and master timing bits */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#master_data\">master_data</a> |= <a class=\"id\" href=\"#control\">control</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#master_data\">master_data</a> |=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#timings\">timings</a>[<a class=\"id\" href=\"#pio\">pio</a>][0] << 12) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#timings\">timings</a>[<a class=\"id\" href=\"#pio\">pio</a>][1] << 8);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#udma_mask\">udma_mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udma_enable\">udma_enable</a> &= ~(1 << <a class=\"id\" href=\"#devid\">devid</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#master_port\">master_port</a>, <a class=\"id\" href=\"#master_data\">master_data</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't scribble on 0x48 if the controller does not support UDMA */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#udma_mask\">udma_mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_byte\">pci_write_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0x48, <a class=\"id\" href=\"#udma_enable\">udma_enable</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#piix_lock\">piix_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>piix_set_dmamode - Initialize host controller PATA DMA timings</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: Port whose timings we are configuring</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@adev: um</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Set MW/UDMA mode for device, in host controller PCI config space.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>None (inherited from caller).</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#piix_set_dmamode\">piix_set_dmamode</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#adev\">adev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_pata_set_dmamode\">do_pata_set_dmamode</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#adev\">adev</a>, 0);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ich_set_dmamode - Initialize host controller PATA DMA timings</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: Port whose timings we are configuring</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@adev: um</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Set MW/UDMA mode for device, in host controller PCI config space.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>None (inherited from caller).</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#ich_set_dmamode\">ich_set_dmamode</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#adev\">adev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_pata_set_dmamode\">do_pata_set_dmamode</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#adev\">adev</a>, 1);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Serial ATA Index/Data Pair Superset Registers access</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Beginning from ICH8, there's a sane way to access SCRs using index</span>", 
"<span class=\"comment\"> * and data register pair located at BAR5 which means that we have</span>", 
"<span class=\"comment\"> * separate SCRs for master and slave.  This is handled using libata</span>", 
"<span class=\"comment\"> * slave_link facility.</span>", 
"<span class=\"comment\"> */</span>", 
"static const int <a class=\"id\" href=\"#piix_sidx_map\">piix_sidx_map</a>[] = {", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#SCR_STATUS\">SCR_STATUS</a>]<span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#SCR_ERROR\">SCR_ERROR</a>]<span class=\"ts\"/>= 2,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#SCR_CONTROL\">SCR_CONTROL</a>]<span class=\"ts\"/>= 1,", 
"};", 
"", 
"static void <a class=\"id\" href=\"#piix_sidpr_sel\">piix_sidpr_sel</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned int <a class=\"id\" href=\"#reg\">reg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#piix_host_priv\">piix_host_priv</a> *<a class=\"id\" href=\"#hpriv\">hpriv</a> = <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iowrite32\">iowrite32</a>(((<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#port_no\">port_no</a> * 2 + <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#pmp\">pmp</a>) << 8) | <a class=\"id\" href=\"#piix_sidx_map\">piix_sidx_map</a>[<a class=\"id\" href=\"#reg\">reg</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#sidpr\">sidpr</a> + <a class=\"id\" href=\"#PIIX_SIDPR_IDX\">PIIX_SIDPR_IDX</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#piix_sidpr_scr_read\">piix_sidpr_scr_read</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#piix_host_priv\">piix_host_priv</a> *<a class=\"id\" href=\"#hpriv\">hpriv</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#reg\">reg</a> >= <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#piix_sidx_map\">piix_sidx_map</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#sidpr_lock\">sidpr_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#piix_sidpr_sel\">piix_sidpr_sel</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#reg\">reg</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#ioread32\">ioread32</a>(<a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#sidpr\">sidpr</a> + <a class=\"id\" href=\"#PIIX_SIDPR_DATA\">PIIX_SIDPR_DATA</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#sidpr_lock\">sidpr_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#piix_sidpr_scr_write\">piix_sidpr_scr_write</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#piix_host_priv\">piix_host_priv</a> *<a class=\"id\" href=\"#hpriv\">hpriv</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#reg\">reg</a> >= <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#piix_sidx_map\">piix_sidx_map</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#sidpr_lock\">sidpr_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#piix_sidpr_sel\">piix_sidpr_sel</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#reg\">reg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iowrite32\">iowrite32</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#sidpr\">sidpr</a> + <a class=\"id\" href=\"#PIIX_SIDPR_DATA\">PIIX_SIDPR_DATA</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#sidpr_lock\">sidpr_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#piix_irq_check\">piix_irq_check</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a>.<a class=\"id\" href=\"#bmdma_addr\">bmdma_addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#bmdma_status\">bmdma_status</a>(<a class=\"id\" href=\"#ap\">ap</a>) &amp; <a class=\"id\" href=\"#ATA_DMA_INTR\">ATA_DMA_INTR</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM\">CONFIG_PM</a>", 
"static int <a class=\"id\" href=\"#piix_broken_suspend\">piix_broken_suspend</a>(void)", 
"{", 
"<span class=\"ts\"/>static const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> <a class=\"id\" href=\"#sysids\">sysids</a>[] = {", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"TECRA M3\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"TOSHIBA\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"TECRA M3\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"TECRA M3\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"TOSHIBA\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"Tecra M3\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"TECRA M4\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"TOSHIBA\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"Tecra M4\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"TECRA M4\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"TOSHIBA\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"TECRA M4\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"TECRA M5\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"TOSHIBA\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"TECRA M5\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"TECRA M6\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"TOSHIBA\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"TECRA M6\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"TECRA M7\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"TOSHIBA\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"TECRA M7\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"TECRA A8\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"TOSHIBA\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"TECRA A8\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"Satellite R20\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"TOSHIBA\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"Satellite R20\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"Satellite R25\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"TOSHIBA\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"Satellite R25\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"Satellite U200\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"TOSHIBA\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"Satellite U200\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"Satellite U200\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"TOSHIBA\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"SATELLITE U200\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"Satellite Pro U200\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"TOSHIBA\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"SATELLITE PRO U200\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"Satellite U205\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"TOSHIBA\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"Satellite U205\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"SATELLITE U205\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"TOSHIBA\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"SATELLITE U205\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"Portege M500\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"TOSHIBA\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"PORTEGE M500\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"VGN-BX297XP\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"Sony Corporation\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"VGN-BX297XP\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>{ }<span class=\"ts\"/><span class=\"comment\">/* terminate list */</span>", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>static const char *<a class=\"id\" href=\"#oemstrs\">oemstrs</a>[] = {", 
"<span class=\"ts\"/><span class=\"ts\"/>\"Tecra M3,\",", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dmi_check_system\">dmi_check_system</a>(<a class=\"id\" href=\"#sysids\">sysids</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#oemstrs\">oemstrs</a>); <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dmi_find_device\">dmi_find_device</a>(<a class=\"id\" href=\"#DMI_DEV_TYPE_OEM_STRING\">DMI_DEV_TYPE_OEM_STRING</a>, <a class=\"id\" href=\"#oemstrs\">oemstrs</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* TECRA M4 sometimes forgets its identify and reports bogus</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * DMI information.  As the bogus information is a bit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * generic, match as many entries as possible.  This manual</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * matching is necessary because dmi_system_id.matches is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * limited to four entries.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dmi_match\">dmi_match</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"TOSHIBA\") &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dmi_match\">dmi_match</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"000000\") &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dmi_match\">dmi_match</a>(<a class=\"id\" href=\"#DMI_PRODUCT_VERSION\">DMI_PRODUCT_VERSION</a>, \"000000\") &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dmi_match\">dmi_match</a>(<a class=\"id\" href=\"#DMI_PRODUCT_SERIAL\">DMI_PRODUCT_SERIAL</a>, \"000000\") &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dmi_match\">dmi_match</a>(<a class=\"id\" href=\"#DMI_BOARD_VENDOR\">DMI_BOARD_VENDOR</a>, \"TOSHIBA\") &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dmi_match\">dmi_match</a>(<a class=\"id\" href=\"#DMI_BOARD_NAME\">DMI_BOARD_NAME</a>, \"Portable PC\") &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dmi_match\">dmi_match</a>(<a class=\"id\" href=\"#DMI_BOARD_VERSION\">DMI_BOARD_VERSION</a>, \"Version A0\"))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#piix_pci_device_suspend\">piix_pci_device_suspend</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#pm_message_t\">pm_message_t</a> <a class=\"id\" href=\"#mesg\">mesg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a> = <a class=\"id\" href=\"#dev_get_drvdata\">dev_get_drvdata</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ata_host_suspend\">ata_host_suspend</a>(<a class=\"id\" href=\"#host\">host</a>, <a class=\"id\" href=\"#mesg\">mesg</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Some braindamaged ACPI suspend implementations expect the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * controller to be awake on entry; otherwise, it burns cpu</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cycles and power trying to do something to the sleeping</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * beauty.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#piix_broken_suspend\">piix_broken_suspend</a>() && (<a class=\"id\" href=\"#mesg\">mesg</a>.<a class=\"id\" href=\"#event\">event</a> &amp; <a class=\"id\" href=\"#PM_EVENT_SLEEP\">PM_EVENT_SLEEP</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_save_state\">pci_save_state</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* mark its power state as \"unknown\", since we don't</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * know if e.g. the BIOS will change its device state</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * when we suspend.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> == <a class=\"id\" href=\"#PCI_D0\">PCI_D0</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> = <a class=\"id\" href=\"#PCI_UNKNOWN\">PCI_UNKNOWN</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* tell resume that it's waking up from broken suspend */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#PIIX_HOST_BROKEN_SUSPEND\">PIIX_HOST_BROKEN_SUSPEND</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_pci_device_do_suspend\">ata_pci_device_do_suspend</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#mesg\">mesg</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#piix_pci_device_resume\">piix_pci_device_resume</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a> = <a class=\"id\" href=\"#dev_get_drvdata\">dev_get_drvdata</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#PIIX_HOST_BROKEN_SUSPEND\">PIIX_HOST_BROKEN_SUSPEND</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#PIIX_HOST_BROKEN_SUSPEND\">PIIX_HOST_BROKEN_SUSPEND</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_set_power_state\">pci_set_power_state</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#PCI_D0\">PCI_D0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_restore_state\">pci_restore_state</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PCI device wasn't disabled during suspend.  Use</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * pci_reenable_device() to avoid affecting the enable</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * count.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#pci_reenable_device\">pci_reenable_device</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"failed to enable \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"device after resume (%d)\\n\", <a class=\"id\" href=\"#rc\">rc</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ata_pci_device_do_resume\">ata_pci_device_do_resume</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_host_resume\">ata_host_resume</a>(<a class=\"id\" href=\"#host\">host</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#piix_vmw_bmdma_status\">piix_vmw_bmdma_status</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ata_bmdma_status\">ata_bmdma_status</a>(<a class=\"id\" href=\"#ap\">ap</a>) &amp; ~<a class=\"id\" href=\"#ATA_DMA_ERR\">ATA_DMA_ERR</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AHCI_PCI_BAR\">AHCI_PCI_BAR</a> 5", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AHCI_GLOBAL_CTL\">AHCI_GLOBAL_CTL</a> 0x04", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AHCI_ENABLE\">AHCI_ENABLE</a> (1 << 31)", 
"static int <a class=\"id\" href=\"#piix_disable_ahci\">piix_disable_ahci</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#mmio\">mmio</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* BUG: pci_enable_device has not yet been called.  This</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * works because this device is usually set up by BIOS.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_resource_start\">pci_resource_start</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#AHCI_PCI_BAR\">AHCI_PCI_BAR</a>) ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#pci_resource_len\">pci_resource_len</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#AHCI_PCI_BAR\">AHCI_PCI_BAR</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mmio\">mmio</a> = <a class=\"id\" href=\"#pci_iomap\">pci_iomap</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#AHCI_PCI_BAR\">AHCI_PCI_BAR</a>, 64);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mmio\">mmio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#ioread32\">ioread32</a>(<a class=\"id\" href=\"#mmio\">mmio</a> + <a class=\"id\" href=\"#AHCI_GLOBAL_CTL\">AHCI_GLOBAL_CTL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp\">tmp</a> &amp; <a class=\"id\" href=\"#AHCI_ENABLE\">AHCI_ENABLE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> &= ~<a class=\"id\" href=\"#AHCI_ENABLE\">AHCI_ENABLE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite32\">iowrite32</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#mmio\">mmio</a> + <a class=\"id\" href=\"#AHCI_GLOBAL_CTL\">AHCI_GLOBAL_CTL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#ioread32\">ioread32</a>(<a class=\"id\" href=\"#mmio\">mmio</a> + <a class=\"id\" href=\"#AHCI_GLOBAL_CTL\">AHCI_GLOBAL_CTL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp\">tmp</a> &amp; <a class=\"id\" href=\"#AHCI_ENABLE\">AHCI_ENABLE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_iounmap\">pci_iounmap</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#mmio\">mmio</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>piix_check_450nx_errata<span class=\"ts\"/>-<span class=\"ts\"/>Check for problem 450NX setup</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ata_dev: the PCI device to check</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Check for the present of 450NX errata #19 and errata #25. If</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>they are found return an error code so we can turn off DMA</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#__devinit\">__devinit</a> <a class=\"id\" href=\"#piix_check_450nx_errata\">piix_check_450nx_errata</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#ata_dev\">ata_dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#cfg\">cfg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#no_piix_dma\">no_piix_dma</a> = 0;", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#pci_get_device\">pci_get_device</a>(<a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>, <a class=\"id\" href=\"#PCI_DEVICE_ID_INTEL_82454NX\">PCI_DEVICE_ID_INTEL_82454NX</a>, <a class=\"id\" href=\"#pdev\">pdev</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Look for 450NX PXB. Check for problem configurations</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   A PCI quirk checks bit 6 already */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, 0x41, &amp;<a class=\"id\" href=\"#cfg\">cfg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Only on the original revision: IDE DMA can hang */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#revision\">revision</a> == 0x00)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#no_piix_dma\">no_piix_dma</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* On all revisions below 5 PXB bus lock must be disabled for IDE */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#cfg\">cfg</a> &amp; (1<<14) && <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#revision\">revision</a> &lt; 5)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#no_piix_dma\">no_piix_dma</a> = 2;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#no_piix_dma\">no_piix_dma</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, &amp;<a class=\"id\" href=\"#ata_dev\">ata_dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"450NX errata present, disabling IDE DMA.\\n\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#no_piix_dma\">no_piix_dma</a> == 2)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, &amp;<a class=\"id\" href=\"#ata_dev\">ata_dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"A BIOS update may resolve this.\\n\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#no_piix_dma\">no_piix_dma</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__devinit\">__devinit</a> <a class=\"id\" href=\"#piix_init_pcs\">piix_init_pcs</a>(struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const struct <a class=\"id\" href=\"#piix_map_db\">piix_map_db</a> *<a class=\"id\" href=\"#map_db\">map_db</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#pcs\">pcs</a>, <a class=\"id\" href=\"#new_pcs\">new_pcs</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#ICH5_PCS\">ICH5_PCS</a>, &amp;<a class=\"id\" href=\"#pcs\">pcs</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_pcs\">new_pcs</a> = <a class=\"id\" href=\"#pcs\">pcs</a> | <a class=\"id\" href=\"#map_db\">map_db</a>-><a class=\"id\" href=\"#port_enable\">port_enable</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_pcs\">new_pcs</a> != <a class=\"id\" href=\"#pcs\">pcs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"updating PCS from 0x%x to 0x%x\\n\", <a class=\"id\" href=\"#pcs\">pcs</a>, <a class=\"id\" href=\"#new_pcs\">new_pcs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#ICH5_PCS\">ICH5_PCS</a>, <a class=\"id\" href=\"#new_pcs\">new_pcs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msleep\">msleep</a>(150);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static const int *<a class=\"id\" href=\"#__devinit\">__devinit</a> <a class=\"id\" href=\"#piix_init_sata_map\">piix_init_sata_map</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ata_port_info\">ata_port_info</a> *<a class=\"id\" href=\"#pinfo\">pinfo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#piix_map_db\">piix_map_db</a> *<a class=\"id\" href=\"#map_db\">map_db</a>)", 
"{", 
"<span class=\"ts\"/>const int *<a class=\"id\" href=\"#map\">map</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#invalid_map\">invalid_map</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#map_value\">map_value</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_byte\">pci_read_config_byte</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#ICH5_PMR\">ICH5_PMR</a>, &amp;<a class=\"id\" href=\"#map_value\">map_value</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a> = <a class=\"id\" href=\"#map_db\">map_db</a>-><a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#map_value\">map_value</a> &amp; <a class=\"id\" href=\"#map_db\">map_db</a>-><a class=\"id\" href=\"#mask\">mask</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"MAP [\");", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 4; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#RV\">RV</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#invalid_map\">invalid_map</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\" XX\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#NA\">NA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\" --\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IDE\">IDE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>((<a class=\"id\" href=\"#i\">i</a> &amp; 1) || <a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a> + 1] != <a class=\"id\" href=\"#IDE\">IDE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pinfo\">pinfo</a>[<a class=\"id\" href=\"#i\">i</a> / 2] = <a class=\"id\" href=\"#piix_port_info\">piix_port_info</a>[<a class=\"id\" href=\"#ich_pata_100\">ich_pata_100</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\" IDE IDE\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\" P%d\", <a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> &amp; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pinfo\">pinfo</a>[<a class=\"id\" href=\"#i\">i</a> / 2].<a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ATA_FLAG_SLAVE_POSS\">ATA_FLAG_SLAVE_POSS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\" ]\\n\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#invalid_map\">invalid_map</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"invalid MAP value %u\\n\", <a class=\"id\" href=\"#map_value\">map_value</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#map\">map</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#piix_no_sidpr\">piix_no_sidpr</a>(struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Samsung DB-P70 only has three ATA ports exposed and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * curiously the unconnected first port reports link online</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * while not responding to SRST protocol causing excessive</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * detection delay.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Unfortunately, the system doesn't carry enough DMI</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * information to identify the machine but does have subsystem</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * vendor and device set.  As it's unclear whether the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * subsystem vendor/device is used only for this specific</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * board, the port can't be disabled solely with the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * information; however, turning off SIDPR access works around</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the problem.  Turn it off.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This problem is reported in bnc#441240.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * https://bugzilla.novell.com/show_bug.cgi?id=441420</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#vendor\">vendor</a> == <a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a> && <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#device\">device</a> == 0x2920 &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#subsystem_vendor\">subsystem_vendor</a> == <a class=\"id\" href=\"#PCI_VENDOR_ID_SAMSUNG\">PCI_VENDOR_ID_SAMSUNG</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#subsystem_device\">subsystem_device</a> == 0xb049) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"Samsung DB-P70 detected, disabling SIDPR\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__devinit\">__devinit</a> <a class=\"id\" href=\"#piix_init_sidpr\">piix_init_sidpr</a>(struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#piix_host_priv\">piix_host_priv</a> *<a class=\"id\" href=\"#hpriv\">hpriv</a> = <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link0\">link0</a> = &amp;<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#ports\">ports</a>[0]-><a class=\"id\" href=\"#link\">link</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#scontrol\">scontrol</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check for availability */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 4; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>] == <a class=\"id\" href=\"#IDE\">IDE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* is it blacklisted? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#piix_no_sidpr\">piix_no_sidpr</a>(<a class=\"id\" href=\"#host\">host</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#ports\">ports</a>[0]-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#PIIX_FLAG_SIDPR\">PIIX_FLAG_SIDPR</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_resource_start\">pci_resource_start</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#PIIX_SIDPR_BAR\">PIIX_SIDPR_BAR</a>) == 0 ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#pci_resource_len\">pci_resource_len</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#PIIX_SIDPR_BAR\">PIIX_SIDPR_BAR</a>) != <a class=\"id\" href=\"#PIIX_SIDPR_LEN\">PIIX_SIDPR_LEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pcim_iomap_regions\">pcim_iomap_regions</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, 1 << <a class=\"id\" href=\"#PIIX_SIDPR_BAR\">PIIX_SIDPR_BAR</a>, <a class=\"id\" href=\"#DRV_NAME\">DRV_NAME</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#sidpr\">sidpr</a> = <a class=\"id\" href=\"#pcim_iomap_table\">pcim_iomap_table</a>(<a class=\"id\" href=\"#pdev\">pdev</a>)[<a class=\"id\" href=\"#PIIX_SIDPR_BAR\">PIIX_SIDPR_BAR</a>];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* SCR access via SIDPR doesn't work on some configurations.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Give it a test drive by inhibiting power save modes which</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we'll do anyway.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#piix_sidpr_scr_read\">piix_sidpr_scr_read</a>(<a class=\"id\" href=\"#link0\">link0</a>, <a class=\"id\" href=\"#SCR_CONTROL\">SCR_CONTROL</a>, &amp;<a class=\"id\" href=\"#scontrol\">scontrol</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if IPM is already 3, SCR access is probably working.  Don't</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * un-inhibit power save modes as BIOS might have inhibited</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * them for a reason.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#scontrol\">scontrol</a> &amp; 0xf00) != 0x300) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scontrol\">scontrol</a> |= 0x300;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#piix_sidpr_scr_write\">piix_sidpr_scr_write</a>(<a class=\"id\" href=\"#link0\">link0</a>, <a class=\"id\" href=\"#SCR_CONTROL\">SCR_CONTROL</a>, <a class=\"id\" href=\"#scontrol\">scontrol</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#piix_sidpr_scr_read\">piix_sidpr_scr_read</a>(<a class=\"id\" href=\"#link0\">link0</a>, <a class=\"id\" href=\"#SCR_CONTROL\">SCR_CONTROL</a>, &amp;<a class=\"id\" href=\"#scontrol\">scontrol</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#scontrol\">scontrol</a> &amp; 0xf00) != 0x300) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"SCR access via \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"SIDPR is available but doesn't work\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* okay, SCRs available, set ops and ask libata for slave_link */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 2; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#ports\">ports</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a> = &amp;<a class=\"id\" href=\"#piix_sidpr_sata_ops\">piix_sidpr_sata_ops</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_FLAG_SLAVE_POSS\">ATA_FLAG_SLAVE_POSS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ata_slave_link_init\">ata_slave_link_init</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#piix_iocfg_bit18_quirk\">piix_iocfg_bit18_quirk</a>(struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a>)", 
"{", 
"<span class=\"ts\"/>static const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> <a class=\"id\" href=\"#sysids\">sysids</a>[] = {", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Clevo M570U sets IOCFG bit 18 if the cdrom</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * isn't used to boot the system which</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * disables the channel.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"M570U\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"Clevo Co.\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"M570U\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>{ }<span class=\"ts\"/><span class=\"comment\">/* terminate list */</span>", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#piix_host_priv\">piix_host_priv</a> *<a class=\"id\" href=\"#hpriv\">hpriv</a> = <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dmi_check_system\">dmi_check_system</a>(<a class=\"id\" href=\"#sysids\">sysids</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The datasheet says that bit 18 is NOOP but certain systems</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * seem to use it to disable a channel.  Clear the bit on the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * affected systems.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#saved_iocfg\">saved_iocfg</a> &amp; (1 << 18)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"applying IOCFG bit18 quirk\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#PIIX_IOCFG\">PIIX_IOCFG</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#saved_iocfg\">saved_iocfg</a> &amp; ~(1 << 18));", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#piix_broken_system_poweroff\">piix_broken_system_poweroff</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>static const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> <a class=\"id\" href=\"#broken_systems\">broken_systems</a>[] = {", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"HP Compaq 2510p\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"Hewlett-Packard\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"HP Compaq 2510p\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PCI slot number of the controller */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#driver_data\">driver_data</a> = (void *)0x1FUL,", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"HP Compaq nc6000\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"Hewlett-Packard\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"HP Compaq nc6000\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PCI slot number of the controller */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#driver_data\">driver_data</a> = (void *)0x1FUL,", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>{ }<span class=\"ts\"/><span class=\"comment\">/* terminate list */</span>", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> *<a class=\"id\" href=\"#dmi\">dmi</a> = <a class=\"id\" href=\"#dmi_first_match\">dmi_first_match</a>(<a class=\"id\" href=\"#broken_systems\">broken_systems</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dmi\">dmi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#slot\">slot</a> = (unsigned long)<a class=\"id\" href=\"#dmi\">dmi</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* apply the quirk only to on-board controllers */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#slot\">slot</a> == <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#devfn\">devfn</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>piix_init_one - Register PIIX ATA PCI device with kernel services</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@pdev: PCI device to register</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ent: Entry in piix_pci_tbl matching with @pdev</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Called from kernel PCI layer.  We probe for combined mode (sigh),</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and then hand over control to libata, for it to do the rest.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from PCI layer (may sleep).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Zero on success, or -ERRNO value.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#__devinit\">__devinit</a> <a class=\"id\" href=\"#piix_init_one\">piix_init_one</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> *<a class=\"id\" href=\"#ent\">ent</a>)", 
"{", 
"<span class=\"ts\"/>static int <a class=\"id\" href=\"#printed_version\">printed_version</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a> = &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port_info\">ata_port_info</a> <a class=\"id\" href=\"#port_info\">port_info</a>[2];", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#ata_port_info\">ata_port_info</a> *<a class=\"id\" href=\"#ppi\">ppi</a>[] = { &amp;<a class=\"id\" href=\"#port_info\">port_info</a>[0], &amp;<a class=\"id\" href=\"#port_info\">port_info</a>[1] };", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#port_flags\">port_flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#piix_host_priv\">piix_host_priv</a> *<a class=\"id\" href=\"#hpriv\">hpriv</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#printed_version\">printed_version</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>, &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"version \" <a class=\"id\" href=\"#DRV_VERSION\">DRV_VERSION</a> \"\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* no hotplugging support for later devices (FIXME) */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#in_module_init\">in_module_init</a> && <a class=\"id\" href=\"#ent\">ent</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a> >= <a class=\"id\" href=\"#ich5_sata\">ich5_sata</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#piix_broken_system_poweroff\">piix_broken_system_poweroff</a>(<a class=\"id\" href=\"#pdev\">pdev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#piix_port_info\">piix_port_info</a>[<a class=\"id\" href=\"#ent\">ent</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>].<a class=\"id\" href=\"#flags\">flags</a> |=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_FLAG_NO_POWEROFF_SPINDOWN\">ATA_FLAG_NO_POWEROFF_SPINDOWN</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_FLAG_NO_HIBERNATE_SPINDOWN\">ATA_FLAG_NO_HIBERNATE_SPINDOWN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"quirky BIOS, skipping spindown \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"on poweroff and hibernation\\n\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port_info\">port_info</a>[0] = <a class=\"id\" href=\"#piix_port_info\">piix_port_info</a>[<a class=\"id\" href=\"#ent\">ent</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port_info\">port_info</a>[1] = <a class=\"id\" href=\"#piix_port_info\">piix_port_info</a>[<a class=\"id\" href=\"#ent\">ent</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port_flags\">port_flags</a> = <a class=\"id\" href=\"#port_info\">port_info</a>[0].<a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* enable device and prepare host */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#pcim_enable_device\">pcim_enable_device</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpriv\">hpriv</a> = <a class=\"id\" href=\"#devm_kzalloc\">devm_kzalloc</a>(<a class=\"id\" href=\"#dev\">dev</a>, sizeof(*<a class=\"id\" href=\"#hpriv\">hpriv</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hpriv\">hpriv</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#sidpr_lock\">sidpr_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Save IOCFG, this will be used for cable detection, quirk</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * detection and restoration on detach.  This is necessary</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * because some ACPI implementations mess up cable related</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * bits on _STM.  Reported on kernel bz#11879.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#PIIX_IOCFG\">PIIX_IOCFG</a>, &amp;<a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#saved_iocfg\">saved_iocfg</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ICH6R may be driven by either ata_piix or ahci driver</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * regardless of BIOS configuration.  Make sure AHCI mode is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * off.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#vendor\">vendor</a> == <a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a> && <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#device\">device</a> == 0x2652) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#piix_disable_ahci\">piix_disable_ahci</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* SATA map init can change port_info, do it before prepping host */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port_flags\">port_flags</a> &amp; <a class=\"id\" href=\"#ATA_FLAG_SATA\">ATA_FLAG_SATA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#map\">map</a> = <a class=\"id\" href=\"#piix_init_sata_map\">piix_init_sata_map</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#port_info\">port_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#piix_map_db_table\">piix_map_db_table</a>[<a class=\"id\" href=\"#ent\">ent</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ata_pci_bmdma_prepare_host\">ata_pci_bmdma_prepare_host</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#ppi\">ppi</a>, &amp;<a class=\"id\" href=\"#host\">host</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#private_data\">private_data</a> = <a class=\"id\" href=\"#hpriv\">hpriv</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* initialize controller */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port_flags\">port_flags</a> &amp; <a class=\"id\" href=\"#ATA_FLAG_SATA\">ATA_FLAG_SATA</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#piix_init_pcs\">piix_init_pcs</a>(<a class=\"id\" href=\"#host\">host</a>, <a class=\"id\" href=\"#piix_map_db_table\">piix_map_db_table</a>[<a class=\"id\" href=\"#ent\">ent</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#piix_init_sidpr\">piix_init_sidpr</a>(<a class=\"id\" href=\"#host\">host</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* apply IOCFG bit18 quirk */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#piix_iocfg_bit18_quirk\">piix_iocfg_bit18_quirk</a>(<a class=\"id\" href=\"#host\">host</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* On ICH5, some BIOSen disable the interrupt using the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * PCI_COMMAND_INTX_DISABLE bit added in PCI 2.3.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * On ICH6, this bit has the same effect, but only when</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * MSI is disabled (and it is disabled, as we don't use</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * message-signalled interrupts currently).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port_flags\">port_flags</a> &amp; <a class=\"id\" href=\"#PIIX_FLAG_CHECKINTR\">PIIX_FLAG_CHECKINTR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_intx\">pci_intx</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, 1);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#piix_check_450nx_errata\">piix_check_450nx_errata</a>(<a class=\"id\" href=\"#pdev\">pdev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This writes into the master table but it does not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   really matter for this errata as we will apply it to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   all the PIIX devices on the board */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#ports\">ports</a>[0]-><a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#ports\">ports</a>[0]-><a class=\"id\" href=\"#udma_mask\">udma_mask</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#ports\">ports</a>[1]-><a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#ports\">ports</a>[1]-><a class=\"id\" href=\"#udma_mask\">udma_mask</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ATA_HOST_PARALLEL_SCAN\">ATA_HOST_PARALLEL_SCAN</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_set_master\">pci_set_master</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ata_pci_sff_activate_host\">ata_pci_sff_activate_host</a>(<a class=\"id\" href=\"#host\">host</a>, <a class=\"id\" href=\"#ata_bmdma_interrupt\">ata_bmdma_interrupt</a>, &amp;<a class=\"id\" href=\"#piix_sht\">piix_sht</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#piix_remove_one\">piix_remove_one</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a> = <a class=\"id\" href=\"#dev_get_drvdata\">dev_get_drvdata</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#piix_host_priv\">piix_host_priv</a> *<a class=\"id\" href=\"#hpriv\">hpriv</a> = <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#PIIX_IOCFG\">PIIX_IOCFG</a>, <a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#saved_iocfg\">saved_iocfg</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_pci_remove_one\">ata_pci_remove_one</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#piix_init\">piix_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"pci_register_driver\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#pci_register_driver\">pci_register_driver</a>(&amp;<a class=\"id\" href=\"#piix_pci_driver\">piix_pci_driver</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_module_init\">in_module_init</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"done\\n\");", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#piix_exit\">piix_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_unregister_driver\">pci_unregister_driver</a>(&amp;<a class=\"id\" href=\"#piix_pci_driver\">piix_pci_driver</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#piix_init\">piix_init</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#piix_exit\">piix_exit</a>);", 
];
xr_frag_insert('l/ed/8e21789d28d6cde0e34f9ce9f44a8ced5ea14b.xr', __xr_tmp);
