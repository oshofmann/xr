var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Virtio PCI driver</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This module allows virtio devices to be used over a virtual PCI device.</span>", 
"<span class=\"comment\"> * This can be used with QEMU based VMMs like KVM or Xen.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright IBM Corp. 2007</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:</span>", 
"<span class=\"comment\"> *  Anthony Liguori  &lt;aliguori@us.ibm.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This work is licensed under the terms of the GNU GPL, version 2 or later.</span>", 
"<span class=\"comment\"> * See the COPYING file in the top-level directory.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#virtio\">virtio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#virtio_config\">virtio_config</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#virtio_ring\">virtio_ring</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#virtio_pci\">virtio_pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#highmem\">highmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"Anthony Liguori <aliguori@us.ibm.com>\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"virtio-pci\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"<a class=\"id\" href=\"#MODULE_VERSION\">MODULE_VERSION</a>(\"1\");", 
"", 
"<span class=\"comment\">/* Our device structure */</span>", 
"struct <a class=\"id\" href=\"#virtio_pci_device\">virtio_pci_device</a>", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> <a class=\"id\" href=\"#vdev\">vdev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* the IO mapping for the PCI config space */</span>", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#ioaddr\">ioaddr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* a list of queues so we can dispatch IRQs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#lock\">lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#virtqueues\">virtqueues</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* MSI-X support */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#msix_enabled\">msix_enabled</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#intx_enabled\">intx_enabled</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#msix_entry\">msix_entry</a> *<a class=\"id\" href=\"#msix_entries\">msix_entries</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Name strings for interrupts. This size should be enough,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and I'm too lazy to allocate each name separately. */</span>", 
"<span class=\"ts\"/>char (*<a class=\"id\" href=\"#msix_names\">msix_names</a>)[256];", 
"<span class=\"ts\"/><span class=\"comment\">/* Number of available vectors */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#msix_vectors\">msix_vectors</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Vectors allocated, excluding per-vq vectors if any */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#msix_used_vectors\">msix_used_vectors</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Whether we have vector per vq */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#per_vq_vectors\">per_vq_vectors</a>;", 
"};", 
"", 
"<span class=\"comment\">/* Constants for MSI-X */</span>", 
"<span class=\"comment\">/* Use first vector for configuration changes, second and the rest for</span>", 
"<span class=\"comment\"> * virtqueues Thus, we need at least 2 vectors for MSI. */</span>", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VP_MSIX_CONFIG_VECTOR\">VP_MSIX_CONFIG_VECTOR</a> = 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VP_MSIX_VQ_VECTOR\">VP_MSIX_VQ_VECTOR</a> = 1,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#virtio_pci_vq_info\">virtio_pci_vq_info</a>", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* the actual virtqueue */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtqueue\">virtqueue</a> *<a class=\"id\" href=\"#vq\">vq</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* the number of entries in the queue */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#num\">num</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* the index of the queue */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#queue_index\">queue_index</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* the virtual address of the ring queue */</span>", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#queue\">queue</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* the list node for the virtqueues list */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* MSI-X vector (or none) */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#msix_vector\">msix_vector</a>;", 
"};", 
"", 
"<span class=\"comment\">/* Qumranet donated their vendor ID for devices 0x1000 thru 0x10FF. */</span>", 
"static struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> <a class=\"id\" href=\"#virtio_pci_id_table\">virtio_pci_id_table</a>[] = {", 
"<span class=\"ts\"/>{ 0x1af4, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0, 0 },", 
"<span class=\"ts\"/>{ 0 },", 
"};", 
"", 
"<a class=\"id\" href=\"#MODULE_DEVICE_TABLE\">MODULE_DEVICE_TABLE</a>(<a class=\"id\" href=\"#pci\">pci</a>, <a class=\"id\" href=\"#virtio_pci_id_table\">virtio_pci_id_table</a>);", 
"", 
"<span class=\"comment\">/* A PCI device has it's own struct device and so does a virtio device so</span>", 
"<span class=\"comment\"> * we create a place for the virtio devices to show up in sysfs.  I think it</span>", 
"<span class=\"comment\"> * would make more sense for virtio to not insist on having it's own device. */</span>", 
"static struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#virtio_pci_root\">virtio_pci_root</a>;", 
"", 
"<span class=\"comment\">/* Convert a generic virtio device to our structure */</span>", 
"static struct <a class=\"id\" href=\"#virtio_pci_device\">virtio_pci_device</a> *<a class=\"id\" href=\"#to_vp_device\">to_vp_device</a>(struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#vdev\">vdev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, struct <a class=\"id\" href=\"#virtio_pci_device\">virtio_pci_device</a>, <a class=\"id\" href=\"#vdev\">vdev</a>);", 
"}", 
"", 
"<span class=\"comment\">/* virtio config-&gt;get_features() implementation */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#vp_get_features\">vp_get_features</a>(struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#vdev\">vdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_pci_device\">virtio_pci_device</a> *<a class=\"id\" href=\"#vp_dev\">vp_dev</a> = <a class=\"id\" href=\"#to_vp_device\">to_vp_device</a>(<a class=\"id\" href=\"#vdev\">vdev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* When someone needs more than 32 feature bits, we'll need to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * steal a bit to indicate that the rest are somewhere else. */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ioread32\">ioread32</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a> + <a class=\"id\" href=\"#VIRTIO_PCI_HOST_FEATURES\">VIRTIO_PCI_HOST_FEATURES</a>);", 
"}", 
"", 
"<span class=\"comment\">/* virtio config-&gt;finalize_features() implementation */</span>", 
"static void <a class=\"id\" href=\"#vp_finalize_features\">vp_finalize_features</a>(struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#vdev\">vdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_pci_device\">virtio_pci_device</a> *<a class=\"id\" href=\"#vp_dev\">vp_dev</a> = <a class=\"id\" href=\"#to_vp_device\">to_vp_device</a>(<a class=\"id\" href=\"#vdev\">vdev</a>);", 
"", 
];
xr_frag_insert('l/ed/9a657787382b6d5126ac4f3556d69b96203d8a.xr', __xr_tmp);
