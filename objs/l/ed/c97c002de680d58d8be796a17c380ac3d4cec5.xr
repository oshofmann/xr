var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__LINUX_PAGE_CGROUP_H\">__LINUX_PAGE_CGROUP_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__LINUX_PAGE_CGROUP_H\">__LINUX_PAGE_CGROUP_H</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CGROUP_MEM_RES_CTLR\">CONFIG_CGROUP_MEM_RES_CTLR</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bit_spinlock\">bit_spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Page Cgroup can be considered as an extended mem_map.</span>", 
"<span class=\"comment\"> * A page_cgroup page is associated with every page descriptor. The</span>", 
"<span class=\"comment\"> * page_cgroup helps us identify information about the cgroup</span>", 
"<span class=\"comment\"> * All page cgroups are allocated at boot or memory hotplug event,</span>", 
"<span class=\"comment\"> * then the page cgroup for pfn always exists.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#lru\">lru</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* per cgroup LRU list */</span>", 
"};", 
"", 
"void <a class=\"id\" href=\"#__meminit\">__meminit</a> <a class=\"id\" href=\"#pgdat_page_cgroup_init\">pgdat_page_cgroup_init</a>(struct <a class=\"id\" href=\"#pglist_data\">pglist_data</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SPARSEMEM\">CONFIG_SPARSEMEM</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#page_cgroup_init_flatmem\">page_cgroup_init_flatmem</a>(void)", 
"{", 
"}", 
"extern void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#page_cgroup_init\">page_cgroup_init</a>(void);", 
"#else", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#page_cgroup_init_flatmem\">page_cgroup_init_flatmem</a>(void);", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#page_cgroup_init\">page_cgroup_init</a>(void)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"struct <a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> *<a class=\"id\" href=\"#lookup_page_cgroup\">lookup_page_cgroup</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"enum {", 
"<span class=\"ts\"/><span class=\"comment\">/* flags for mem_cgroup */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCG_LOCK\">PCG_LOCK</a>,  <span class=\"comment\">/* page cgroup is locked */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCG_CACHE\">PCG_CACHE</a>, <span class=\"comment\">/* charged as cache */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCG_USED\">PCG_USED</a>, <span class=\"comment\">/* this object is in use. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCG_ACCT_LRU\">PCG_ACCT_LRU</a>, <span class=\"comment\">/* page has been accounted for */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCG_FILE_MAPPED\">PCG_FILE_MAPPED</a>, <span class=\"comment\">/* page is accounted as \"mapped\" */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCG_MIGRATION\">PCG_MIGRATION</a>, <span class=\"comment\">/* under page migration */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TESTPCGFLAG\">TESTPCGFLAG</a>(<a class=\"id\" href=\"#uname\">uname</a>, <a class=\"id\" href=\"#lname\">lname</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#PageCgroup\">PageCgroup</a>##<a class=\"id\" href=\"#uname\">uname</a>(struct <a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> *<a class=\"id\" href=\"#pc\">pc</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>{ return <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#PCG_\">PCG_</a>##<a class=\"id\" href=\"#lname\">lname</a>, &amp;<a class=\"id\" href=\"#pc\">pc</a>-><a class=\"id\" href=\"#flags\">flags</a>); }", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SETPCGFLAG\">SETPCGFLAG</a>(<a class=\"id\" href=\"#uname\">uname</a>, <a class=\"id\" href=\"#lname\">lname</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#SetPageCgroup\">SetPageCgroup</a>##<a class=\"id\" href=\"#uname\">uname</a>(struct <a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> *<a class=\"id\" href=\"#pc\">pc</a>)\\", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#PCG_\">PCG_</a>##<a class=\"id\" href=\"#lname\">lname</a>, &amp;<a class=\"id\" href=\"#pc\">pc</a>-><a class=\"id\" href=\"#flags\">flags</a>);  }", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CLEARPCGFLAG\">CLEARPCGFLAG</a>(<a class=\"id\" href=\"#uname\">uname</a>, <a class=\"id\" href=\"#lname\">lname</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ClearPageCgroup\">ClearPageCgroup</a>##<a class=\"id\" href=\"#uname\">uname</a>(struct <a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> *<a class=\"id\" href=\"#pc\">pc</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#PCG_\">PCG_</a>##<a class=\"id\" href=\"#lname\">lname</a>, &amp;<a class=\"id\" href=\"#pc\">pc</a>-><a class=\"id\" href=\"#flags\">flags</a>);  }", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TESTCLEARPCGFLAG\">TESTCLEARPCGFLAG</a>(<a class=\"id\" href=\"#uname\">uname</a>, <a class=\"id\" href=\"#lname\">lname</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#TestClearPageCgroup\">TestClearPageCgroup</a>##<a class=\"id\" href=\"#uname\">uname</a>(struct <a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> *<a class=\"id\" href=\"#pc\">pc</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>{ return <a class=\"id\" href=\"#test_and_clear_bit\">test_and_clear_bit</a>(<a class=\"id\" href=\"#PCG_\">PCG_</a>##<a class=\"id\" href=\"#lname\">lname</a>, &amp;<a class=\"id\" href=\"#pc\">pc</a>-><a class=\"id\" href=\"#flags\">flags</a>);  }", 
"", 
"<a class=\"id\" href=\"#TESTPCGFLAG\">TESTPCGFLAG</a>(<a class=\"id\" href=\"#Locked\">Locked</a>, <a class=\"id\" href=\"#LOCK\">LOCK</a>)", 
"", 
"<span class=\"comment\">/* Cache flag is set only once (at allocation) */</span>", 
"<a class=\"id\" href=\"#TESTPCGFLAG\">TESTPCGFLAG</a>(<a class=\"id\" href=\"#Cache\">Cache</a>, <a class=\"id\" href=\"#CACHE\">CACHE</a>)", 
"<a class=\"id\" href=\"#CLEARPCGFLAG\">CLEARPCGFLAG</a>(<a class=\"id\" href=\"#Cache\">Cache</a>, <a class=\"id\" href=\"#CACHE\">CACHE</a>)", 
"<a class=\"id\" href=\"#SETPCGFLAG\">SETPCGFLAG</a>(<a class=\"id\" href=\"#Cache\">Cache</a>, <a class=\"id\" href=\"#CACHE\">CACHE</a>)", 
"", 
"<a class=\"id\" href=\"#TESTPCGFLAG\">TESTPCGFLAG</a>(<a class=\"id\" href=\"#Used\">Used</a>, <a class=\"id\" href=\"#USED\">USED</a>)", 
"<a class=\"id\" href=\"#CLEARPCGFLAG\">CLEARPCGFLAG</a>(<a class=\"id\" href=\"#Used\">Used</a>, <a class=\"id\" href=\"#USED\">USED</a>)", 
"<a class=\"id\" href=\"#SETPCGFLAG\">SETPCGFLAG</a>(<a class=\"id\" href=\"#Used\">Used</a>, <a class=\"id\" href=\"#USED\">USED</a>)", 
"", 
"<a class=\"id\" href=\"#SETPCGFLAG\">SETPCGFLAG</a>(<a class=\"id\" href=\"#AcctLRU\">AcctLRU</a>, <a class=\"id\" href=\"#ACCT_LRU\">ACCT_LRU</a>)", 
"<a class=\"id\" href=\"#CLEARPCGFLAG\">CLEARPCGFLAG</a>(<a class=\"id\" href=\"#AcctLRU\">AcctLRU</a>, <a class=\"id\" href=\"#ACCT_LRU\">ACCT_LRU</a>)", 
"<a class=\"id\" href=\"#TESTPCGFLAG\">TESTPCGFLAG</a>(<a class=\"id\" href=\"#AcctLRU\">AcctLRU</a>, <a class=\"id\" href=\"#ACCT_LRU\">ACCT_LRU</a>)", 
"<a class=\"id\" href=\"#TESTCLEARPCGFLAG\">TESTCLEARPCGFLAG</a>(<a class=\"id\" href=\"#AcctLRU\">AcctLRU</a>, <a class=\"id\" href=\"#ACCT_LRU\">ACCT_LRU</a>)", 
"", 
"", 
"<a class=\"id\" href=\"#SETPCGFLAG\">SETPCGFLAG</a>(<a class=\"id\" href=\"#FileMapped\">FileMapped</a>, <a class=\"id\" href=\"#FILE_MAPPED\">FILE_MAPPED</a>)", 
"<a class=\"id\" href=\"#CLEARPCGFLAG\">CLEARPCGFLAG</a>(<a class=\"id\" href=\"#FileMapped\">FileMapped</a>, <a class=\"id\" href=\"#FILE_MAPPED\">FILE_MAPPED</a>)", 
"<a class=\"id\" href=\"#TESTPCGFLAG\">TESTPCGFLAG</a>(<a class=\"id\" href=\"#FileMapped\">FileMapped</a>, <a class=\"id\" href=\"#FILE_MAPPED\">FILE_MAPPED</a>)", 
"", 
"<a class=\"id\" href=\"#SETPCGFLAG\">SETPCGFLAG</a>(<a class=\"id\" href=\"#Migration\">Migration</a>, <a class=\"id\" href=\"#MIGRATION\">MIGRATION</a>)", 
"<a class=\"id\" href=\"#CLEARPCGFLAG\">CLEARPCGFLAG</a>(<a class=\"id\" href=\"#Migration\">Migration</a>, <a class=\"id\" href=\"#MIGRATION\">MIGRATION</a>)", 
"<a class=\"id\" href=\"#TESTPCGFLAG\">TESTPCGFLAG</a>(<a class=\"id\" href=\"#Migration\">Migration</a>, <a class=\"id\" href=\"#MIGRATION\">MIGRATION</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#page_cgroup_nid\">page_cgroup_nid</a>(struct <a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> *<a class=\"id\" href=\"#pc\">pc</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#page_to_nid\">page_to_nid</a>(<a class=\"id\" href=\"#pc\">pc</a>-><a class=\"id\" href=\"#page\">page</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> enum <a class=\"id\" href=\"#zone_type\">zone_type</a> <a class=\"id\" href=\"#page_cgroup_zid\">page_cgroup_zid</a>(struct <a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> *<a class=\"id\" href=\"#pc\">pc</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#page_zonenum\">page_zonenum</a>(<a class=\"id\" href=\"#pc\">pc</a>-><a class=\"id\" href=\"#page\">page</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#lock_page_cgroup\">lock_page_cgroup</a>(struct <a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> *<a class=\"id\" href=\"#pc\">pc</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bit_spin_lock\">bit_spin_lock</a>(<a class=\"id\" href=\"#PCG_LOCK\">PCG_LOCK</a>, &amp;<a class=\"id\" href=\"#pc\">pc</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unlock_page_cgroup\">unlock_page_cgroup</a>(struct <a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> *<a class=\"id\" href=\"#pc\">pc</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bit_spin_unlock\">bit_spin_unlock</a>(<a class=\"id\" href=\"#PCG_LOCK\">PCG_LOCK</a>, &amp;<a class=\"id\" href=\"#pc\">pc</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"#else <span class=\"comment\">/* CONFIG_CGROUP_MEM_RES_CTLR */</span>", 
"struct <a class=\"id\" href=\"#page_cgroup\">page_cgroup</a>;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__meminit\">__meminit</a> <a class=\"id\" href=\"#pgdat_page_cgroup_init\">pgdat_page_cgroup_init</a>(struct <a class=\"id\" href=\"#pglist_data\">pglist_data</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> *<a class=\"id\" href=\"#lookup_page_cgroup\">lookup_page_cgroup</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#page_cgroup_init\">page_cgroup_init</a>(void)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#page_cgroup_init_flatmem\">page_cgroup_init_flatmem</a>(void)", 
"{", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CGROUP_MEM_RES_CTLR_SWAP\">CONFIG_CGROUP_MEM_RES_CTLR_SWAP</a>", 
"extern unsigned short <a class=\"id\" href=\"#swap_cgroup_cmpxchg\">swap_cgroup_cmpxchg</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> <a class=\"id\" href=\"#ent\">ent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#old\">old</a>, unsigned short <a class=\"id\" href=\"#new\">new</a>);", 
"extern unsigned short <a class=\"id\" href=\"#swap_cgroup_record\">swap_cgroup_record</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> <a class=\"id\" href=\"#ent\">ent</a>, unsigned short <a class=\"id\" href=\"#id\">id</a>);", 
"extern unsigned short <a class=\"id\" href=\"#lookup_swap_cgroup\">lookup_swap_cgroup</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> <a class=\"id\" href=\"#ent\">ent</a>);", 
"extern int <a class=\"id\" href=\"#swap_cgroup_swapon\">swap_cgroup_swapon</a>(int <a class=\"id\" href=\"#type\">type</a>, unsigned long <a class=\"id\" href=\"#max_pages\">max_pages</a>);", 
"extern void <a class=\"id\" href=\"#swap_cgroup_swapoff\">swap_cgroup_swapoff</a>(int <a class=\"id\" href=\"#type\">type</a>);", 
"#else", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a>", 
"unsigned short <a class=\"id\" href=\"#swap_cgroup_record\">swap_cgroup_record</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> <a class=\"id\" href=\"#ent\">ent</a>, unsigned short <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a>", 
"unsigned short <a class=\"id\" href=\"#lookup_swap_cgroup\">lookup_swap_cgroup</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> <a class=\"id\" href=\"#ent\">ent</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#swap_cgroup_swapon\">swap_cgroup_swapon</a>(int <a class=\"id\" href=\"#type\">type</a>, unsigned long <a class=\"id\" href=\"#max_pages\">max_pages</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#swap_cgroup_swapoff\">swap_cgroup_swapoff</a>(int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/ed/c97c002de680d58d8be796a17c380ac3d4cec5.xr', __xr_tmp);
