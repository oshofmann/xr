var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * firmware_class.c - Multi purpose firmware loading support</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (c) 2003 Manuel Estrada Sainz</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Please see Documentation/firmware_class/ for more information.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#vmalloc\">vmalloc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kthread\">kthread</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#highmem\">highmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#firmware\">firmware</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#to_dev\">to_dev</a>(<a class=\"id\" href=\"#obj\">obj</a>) <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#obj\">obj</a>, struct <a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#kobj\">kobj</a>)", 
"", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"Manuel Estrada Sainz\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"Multi purpose firmware loading support\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"", 
"<span class=\"comment\">/* Builtin firmware support */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FW_LOADER\">CONFIG_FW_LOADER</a>", 
"", 
"extern struct <a class=\"id\" href=\"#builtin_fw\">builtin_fw</a> <a class=\"id\" href=\"#__start_builtin_fw\">__start_builtin_fw</a>[];", 
"extern struct <a class=\"id\" href=\"#builtin_fw\">builtin_fw</a> <a class=\"id\" href=\"#__end_builtin_fw\">__end_builtin_fw</a>[];", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#fw_get_builtin_firmware\">fw_get_builtin_firmware</a>(struct <a class=\"id\" href=\"#firmware\">firmware</a> *<a class=\"id\" href=\"#fw\">fw</a>, const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#builtin_fw\">builtin_fw</a> *<a class=\"id\" href=\"#b_fw\">b_fw</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#b_fw\">b_fw</a> = <a class=\"id\" href=\"#__start_builtin_fw\">__start_builtin_fw</a>; <a class=\"id\" href=\"#b_fw\">b_fw</a> != <a class=\"id\" href=\"#__end_builtin_fw\">__end_builtin_fw</a>; <a class=\"id\" href=\"#b_fw\">b_fw</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#b_fw\">b_fw</a>-><a class=\"id\" href=\"#name\">name</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fw\">fw</a>-><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#b_fw\">b_fw</a>-><a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fw\">fw</a>-><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#b_fw\">b_fw</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#fw_is_builtin_firmware\">fw_is_builtin_firmware</a>(const struct <a class=\"id\" href=\"#firmware\">firmware</a> *<a class=\"id\" href=\"#fw\">fw</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#builtin_fw\">builtin_fw</a> *<a class=\"id\" href=\"#b_fw\">b_fw</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#b_fw\">b_fw</a> = <a class=\"id\" href=\"#__start_builtin_fw\">__start_builtin_fw</a>; <a class=\"id\" href=\"#b_fw\">b_fw</a> != <a class=\"id\" href=\"#__end_builtin_fw\">__end_builtin_fw</a>; <a class=\"id\" href=\"#b_fw\">b_fw</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fw\">fw</a>-><a class=\"id\" href=\"#data\">data</a> == <a class=\"id\" href=\"#b_fw\">b_fw</a>-><a class=\"id\" href=\"#data\">data</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"#else <span class=\"comment\">/* Module case - no builtin firmware support */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#fw_get_builtin_firmware\">fw_get_builtin_firmware</a>(struct <a class=\"id\" href=\"#firmware\">firmware</a> *<a class=\"id\" href=\"#fw\">fw</a>, const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#fw_is_builtin_firmware\">fw_is_builtin_firmware</a>(const struct <a class=\"id\" href=\"#firmware\">firmware</a> *<a class=\"id\" href=\"#fw\">fw</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FW_STATUS_LOADING\">FW_STATUS_LOADING</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FW_STATUS_DONE\">FW_STATUS_DONE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FW_STATUS_ABORT\">FW_STATUS_ABORT</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#loading_timeout\">loading_timeout</a> = 60;<span class=\"ts\"/><span class=\"comment\">/* In seconds */</span>", 
"", 
"<span class=\"comment\">/* fw_lock could be moved to 'struct firmware_priv' but since it is just</span>", 
"<span class=\"comment\"> * guarding for corner cases a global lock should be OK */</span>", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#fw_lock\">fw_lock</a>);", 
"", 
"struct <a class=\"id\" href=\"#firmware_priv\">firmware_priv</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#completion\">completion</a> <a class=\"id\" href=\"#completion\">completion</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#firmware\">firmware</a> *<a class=\"id\" href=\"#fw\">fw</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#pages\">pages</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nr_pages\">nr_pages</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#page_array_size\">page_array_size</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timer_list\">timer_list</a> <a class=\"id\" href=\"#timeout\">timeout</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#nowait\">nowait</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#fw_id\">fw_id</a>[];", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#firmware_priv\">firmware_priv</a> *<a class=\"id\" href=\"#to_firmware_priv\">to_firmware_priv</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#firmware_priv\">firmware_priv</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#fw_load_abort\">fw_load_abort</a>(struct <a class=\"id\" href=\"#firmware_priv\">firmware_priv</a> *<a class=\"id\" href=\"#fw_priv\">fw_priv</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#FW_STATUS_ABORT\">FW_STATUS_ABORT</a>, &amp;<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wmb\">wmb</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#complete\">complete</a>(&amp;<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#completion\">completion</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#firmware_timeout_show\">firmware_timeout_show</a>(struct <a class=\"id\" href=\"#class\">class</a> *<a class=\"id\" href=\"#class\">class</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#class_attribute\">class_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%d\\n\", <a class=\"id\" href=\"#loading_timeout\">loading_timeout</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * firmware_timeout_store - set number of seconds to wait for firmware</span>", 
"<span class=\"comment\"> * @class: device class pointer</span>", 
"<span class=\"comment\"> * @attr: device attribute pointer</span>", 
"<span class=\"comment\"> * @buf: buffer to scan for timeout value</span>", 
"<span class=\"comment\"> * @count: number of bytes in @buf</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Sets the number of seconds to wait for the firmware.  Once</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>this expires an error will be returned to the driver and no</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>firmware will be provided.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Note: zero means 'wait forever'.</span>", 
"<span class=\"comment\"> **/</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#firmware_timeout_store\">firmware_timeout_store</a>(struct <a class=\"id\" href=\"#class\">class</a> *<a class=\"id\" href=\"#class\">class</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#class_attribute\">class_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loading_timeout\">loading_timeout</a> = <a class=\"id\" href=\"#simple_strtol\">simple_strtol</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 10);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#loading_timeout\">loading_timeout</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loading_timeout\">loading_timeout</a> = 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#class_attribute\">class_attribute</a> <a class=\"id\" href=\"#firmware_class_attrs\">firmware_class_attrs</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#timeout\">timeout</a>, <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a> | <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#firmware_timeout_show\">firmware_timeout_show</a>, <a class=\"id\" href=\"#firmware_timeout_store\">firmware_timeout_store</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR_NULL\">__ATTR_NULL</a>", 
"};", 
"", 
"static void <a class=\"id\" href=\"#fw_dev_release\">fw_dev_release</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#firmware_priv\">firmware_priv</a> *<a class=\"id\" href=\"#fw_priv\">fw_priv</a> = <a class=\"id\" href=\"#to_firmware_priv\">to_firmware_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__free_page\">__free_page</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#pages\">pages</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#firmware_uevent\">firmware_uevent</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#kobj_uevent_env\">kobj_uevent_env</a> *<a class=\"id\" href=\"#env\">env</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#firmware_priv\">firmware_priv</a> *<a class=\"id\" href=\"#fw_priv\">fw_priv</a> = <a class=\"id\" href=\"#to_firmware_priv\">to_firmware_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"FIRMWARE=%s\", <a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#fw_id\">fw_id</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"TIMEOUT=%i\", <a class=\"id\" href=\"#loading_timeout\">loading_timeout</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"ASYNC=%d\", <a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#nowait\">nowait</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#class\">class</a> <a class=\"id\" href=\"#firmware_class\">firmware_class</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"firmware\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#class_attrs\">class_attrs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#firmware_class_attrs\">firmware_class_attrs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dev_uevent\">dev_uevent</a><span class=\"ts\"/>= <a class=\"id\" href=\"#firmware_uevent\">firmware_uevent</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dev_release\">dev_release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#fw_dev_release\">fw_dev_release</a>,", 
"};", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#firmware_loading_show\">firmware_loading_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#firmware_priv\">firmware_priv</a> *<a class=\"id\" href=\"#fw_priv\">fw_priv</a> = <a class=\"id\" href=\"#to_firmware_priv\">to_firmware_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#loading\">loading</a> = <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#FW_STATUS_LOADING\">FW_STATUS_LOADING</a>, &amp;<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#status\">status</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%d\\n\", <a class=\"id\" href=\"#loading\">loading</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#firmware_free_data\">firmware_free_data</a>(const struct <a class=\"id\" href=\"#firmware\">firmware</a> *<a class=\"id\" href=\"#fw\">fw</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vunmap\">vunmap</a>(<a class=\"id\" href=\"#fw\">fw</a>-><a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fw\">fw</a>-><a class=\"id\" href=\"#pages\">pages</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#PFN_UP\">PFN_UP</a>(<a class=\"id\" href=\"#fw\">fw</a>-><a class=\"id\" href=\"#size\">size</a>); <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__free_page\">__free_page</a>(<a class=\"id\" href=\"#fw\">fw</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#fw\">fw</a>-><a class=\"id\" href=\"#pages\">pages</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* Some architectures don't have PAGE_KERNEL_RO */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#PAGE_KERNEL_RO\">PAGE_KERNEL_RO</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PAGE_KERNEL_RO\">PAGE_KERNEL_RO</a> <a class=\"id\" href=\"#PAGE_KERNEL\">PAGE_KERNEL</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * firmware_loading_store - set value in the 'loading' control file</span>", 
"<span class=\"comment\"> * @dev: device pointer</span>", 
"<span class=\"comment\"> * @attr: device attribute pointer</span>", 
"<span class=\"comment\"> * @buf: buffer to scan for loading control value</span>", 
"<span class=\"comment\"> * @count: number of bytes in @buf</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The relevant values are:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> 1: Start a load, discarding any previous partial load.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> 0: Conclude the load and hand the data to the driver code.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>-1: Conclude the load with an error and discard any written data.</span>", 
"<span class=\"comment\"> **/</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#firmware_loading_store\">firmware_loading_store</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#firmware_priv\">firmware_priv</a> *<a class=\"id\" href=\"#fw_priv\">fw_priv</a> = <a class=\"id\" href=\"#to_firmware_priv\">to_firmware_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#loading\">loading</a> = <a class=\"id\" href=\"#simple_strtol\">simple_strtol</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 10);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#loading\">loading</a>) {", 
"<span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#fw_lock\">fw_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#fw\">fw</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#fw_lock\">fw_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#firmware_free_data\">firmware_free_data</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#fw\">fw</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#fw\">fw</a>, 0, sizeof(struct <a class=\"id\" href=\"#firmware\">firmware</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If the pages are not owned by 'struct firmware' */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__free_page\">__free_page</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#pages\">pages</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#pages\">pages</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#page_array_size\">page_array_size</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#FW_STATUS_LOADING\">FW_STATUS_LOADING</a>, &amp;<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#fw_lock\">fw_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#FW_STATUS_LOADING\">FW_STATUS_LOADING</a>, &amp;<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vunmap\">vunmap</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#fw\">fw</a>-><a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#fw\">fw</a>-><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#vmap\">vmap</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#pages\">pages</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> 0, <a class=\"id\" href=\"#PAGE_KERNEL_RO\">PAGE_KERNEL_RO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#fw\">fw</a>-><a class=\"id\" href=\"#data\">data</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_err\">dev_err</a>(<a class=\"id\" href=\"#dev\">dev</a>, \"%s: vmap() failed\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Pages are now owned by 'struct firmware' */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#fw\">fw</a>-><a class=\"id\" href=\"#pages\">pages</a> = <a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#pages\">pages</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#pages\">pages</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#page_array_size\">page_array_size</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#complete\">complete</a>(&amp;<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#completion\">completion</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#FW_STATUS_LOADING\">FW_STATUS_LOADING</a>, &amp;<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fallthrough */</span>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_err\">dev_err</a>(<a class=\"id\" href=\"#dev\">dev</a>, \"%s: unexpected value (%d)\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#loading\">loading</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fallthrough */</span>", 
"<span class=\"ts\"/>case -1:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fw_load_abort\">fw_load_abort</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#DEVICE_ATTR\">DEVICE_ATTR</a>(<a class=\"id\" href=\"#loading\">loading</a>, 0644, <a class=\"id\" href=\"#firmware_loading_show\">firmware_loading_show</a>, <a class=\"id\" href=\"#firmware_loading_store\">firmware_loading_store</a>);", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#firmware_data_read\">firmware_data_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#bin_attribute\">bin_attribute</a> *<a class=\"id\" href=\"#bin_attr\">bin_attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  char *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#to_dev\">to_dev</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#firmware_priv\">firmware_priv</a> *<a class=\"id\" href=\"#fw_priv\">fw_priv</a> = <a class=\"id\" href=\"#to_firmware_priv\">to_firmware_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#firmware\">firmware</a> *<a class=\"id\" href=\"#fw\">fw</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret_count\">ret_count</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#fw_lock\">fw_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fw\">fw</a> = <a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#fw\">fw</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fw\">fw</a> || <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#FW_STATUS_DONE\">FW_STATUS_DONE</a>, &amp;<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_count\">ret_count</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> &gt; <a class=\"id\" href=\"#fw\">fw</a>-><a class=\"id\" href=\"#size\">size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_count\">ret_count</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &gt; <a class=\"id\" href=\"#fw\">fw</a>-><a class=\"id\" href=\"#size\">size</a> - <a class=\"id\" href=\"#offset\">offset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#fw\">fw</a>-><a class=\"id\" href=\"#size\">size</a> - <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret_count\">ret_count</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#count\">count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#page_data\">page_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#page_nr\">page_nr</a> = <a class=\"id\" href=\"#offset\">offset</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#page_ofs\">page_ofs</a> = <a class=\"id\" href=\"#offset\">offset</a> &amp; (<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>-1);", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#page_cnt\">page_cnt</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(<a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#page_ofs\">page_ofs</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_data\">page_data</a> = <a class=\"id\" href=\"#kmap\">kmap</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#page_nr\">page_nr</a>]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#page_data\">page_data</a> + <a class=\"id\" href=\"#page_ofs\">page_ofs</a>, <a class=\"id\" href=\"#page_cnt\">page_cnt</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap\">kunmap</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#page_nr\">page_nr</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a> += <a class=\"id\" href=\"#page_cnt\">page_cnt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#page_cnt\">page_cnt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> -= <a class=\"id\" href=\"#page_cnt\">page_cnt</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#fw_lock\">fw_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret_count\">ret_count</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#fw_realloc_buffer\">fw_realloc_buffer</a>(struct <a class=\"id\" href=\"#firmware_priv\">firmware_priv</a> *<a class=\"id\" href=\"#fw_priv\">fw_priv</a>, int <a class=\"id\" href=\"#min_size\">min_size</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pages_needed\">pages_needed</a> = <a class=\"id\" href=\"#ALIGN\">ALIGN</a>(<a class=\"id\" href=\"#min_size\">min_size</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If the array of pages is too small, grow it... */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#page_array_size\">page_array_size</a> &lt; <a class=\"id\" href=\"#pages_needed\">pages_needed</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#new_array_size\">new_array_size</a> = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#pages_needed\">pages_needed</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#page_array_size\">page_array_size</a> * 2);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#new_pages\">new_pages</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_pages\">new_pages</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#new_array_size\">new_array_size</a> * sizeof(void *),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_pages\">new_pages</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fw_load_abort\">fw_load_abort</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#new_pages\">new_pages</a>, <a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#pages\">pages</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#page_array_size\">page_array_size</a> * sizeof(void *));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#new_pages\">new_pages</a>[<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#page_array_size\">page_array_size</a>], 0, sizeof(void *) *", 
"<span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#new_array_size\">new_array_size</a> - <a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#page_array_size\">page_array_size</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#pages\">pages</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#pages\">pages</a> = <a class=\"id\" href=\"#new_pages\">new_pages</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#page_array_size\">page_array_size</a> = <a class=\"id\" href=\"#new_array_size\">new_array_size</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a> &lt; <a class=\"id\" href=\"#pages_needed\">pages_needed</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a>] =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alloc_page\">alloc_page</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a> | <a class=\"id\" href=\"#__GFP_HIGHMEM\">__GFP_HIGHMEM</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fw_load_abort\">fw_load_abort</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * firmware_data_write - write method for firmware</span>", 
"<span class=\"comment\"> * @filp: open sysfs file</span>", 
"<span class=\"comment\"> * @kobj: kobject for the device</span>", 
"<span class=\"comment\"> * @bin_attr: bin_attr structure</span>", 
"<span class=\"comment\"> * @buffer: buffer being written</span>", 
"<span class=\"comment\"> * @offset: buffer offset for write in total data store area</span>", 
"<span class=\"comment\"> * @count: buffer size</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Data written to the 'data' attribute will be later handed to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the driver as a firmware image.</span>", 
"<span class=\"comment\"> **/</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#firmware_data_write\">firmware_data_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#bin_attribute\">bin_attribute</a> *<a class=\"id\" href=\"#bin_attr\">bin_attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   char *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#to_dev\">to_dev</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#firmware_priv\">firmware_priv</a> *<a class=\"id\" href=\"#fw_priv\">fw_priv</a> = <a class=\"id\" href=\"#to_firmware_priv\">to_firmware_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#firmware\">firmware</a> *<a class=\"id\" href=\"#fw\">fw</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_RAWIO\">CAP_SYS_RAWIO</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#fw_lock\">fw_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fw\">fw</a> = <a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#fw\">fw</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fw\">fw</a> || <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#FW_STATUS_DONE\">FW_STATUS_DONE</a>, &amp;<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#fw_realloc_buffer\">fw_realloc_buffer</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>, <a class=\"id\" href=\"#offset\">offset</a> + <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#count\">count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#page_data\">page_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#page_nr\">page_nr</a> = <a class=\"id\" href=\"#offset\">offset</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#page_ofs\">page_ofs</a> = <a class=\"id\" href=\"#offset\">offset</a> &amp; (<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#page_cnt\">page_cnt</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(<a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#page_ofs\">page_ofs</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_data\">page_data</a> = <a class=\"id\" href=\"#kmap\">kmap</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#page_nr\">page_nr</a>]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#page_data\">page_data</a> + <a class=\"id\" href=\"#page_ofs\">page_ofs</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#page_cnt\">page_cnt</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap\">kunmap</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#page_nr\">page_nr</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a> += <a class=\"id\" href=\"#page_cnt\">page_cnt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#page_cnt\">page_cnt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> -= <a class=\"id\" href=\"#page_cnt\">page_cnt</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fw\">fw</a>-><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#max_t\">max_t</a>(<a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#fw\">fw</a>-><a class=\"id\" href=\"#size\">size</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#fw_lock\">fw_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#bin_attribute\">bin_attribute</a> <a class=\"id\" href=\"#firmware_attr_data\">firmware_attr_data</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#attr\">attr</a> = { .<a class=\"id\" href=\"#name\">name</a> = \"data\", .<a class=\"id\" href=\"#mode\">mode</a> = 0644 },", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#size\">size</a> = 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#firmware_data_read\">firmware_data_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a> = <a class=\"id\" href=\"#firmware_data_write\">firmware_data_write</a>,", 
"};", 
"", 
"static void <a class=\"id\" href=\"#firmware_class_timeout\">firmware_class_timeout</a>(<a class=\"id\" href=\"#u_long\">u_long</a> <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#firmware_priv\">firmware_priv</a> *<a class=\"id\" href=\"#fw_priv\">fw_priv</a> = (struct <a class=\"id\" href=\"#firmware_priv\">firmware_priv</a> *) <a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fw_load_abort\">fw_load_abort</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#firmware_priv\">firmware_priv</a> *", 
"<a class=\"id\" href=\"#fw_create_instance\">fw_create_instance</a>(struct <a class=\"id\" href=\"#firmware\">firmware</a> *<a class=\"id\" href=\"#firmware\">firmware</a>, const char *<a class=\"id\" href=\"#fw_name\">fw_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#uevent\">uevent</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#nowait\">nowait</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#firmware_priv\">firmware_priv</a> *<a class=\"id\" href=\"#fw_priv\">fw_priv</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#f_dev\">f_dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fw_priv\">fw_priv</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#fw_priv\">fw_priv</a>) + <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#fw_name\">fw_name</a>) + 1 , <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fw_priv\">fw_priv</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_err\">dev_err</a>(<a class=\"id\" href=\"#device\">device</a>, \"%s: kmalloc failed\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#fw\">fw</a> = <a class=\"id\" href=\"#firmware\">firmware</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#nowait\">nowait</a> = <a class=\"id\" href=\"#nowait\">nowait</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strcpy\">strcpy</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#fw_id\">fw_id</a>, <a class=\"id\" href=\"#fw_name\">fw_name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_completion\">init_completion</a>(&amp;<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#completion\">completion</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_timer\">setup_timer</a>(&amp;<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#timeout\">timeout</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#firmware_class_timeout\">firmware_class_timeout</a>, (<a class=\"id\" href=\"#u_long\">u_long</a>) <a class=\"id\" href=\"#fw_priv\">fw_priv</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#f_dev\">f_dev</a> = &amp;<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_initialize\">device_initialize</a>(<a class=\"id\" href=\"#f_dev\">f_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_set_name\">dev_set_name</a>(<a class=\"id\" href=\"#f_dev\">f_dev</a>, \"%s\", <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#device\">device</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#f_dev\">f_dev</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#f_dev\">f_dev</a>-><a class=\"id\" href=\"#class\">class</a> = &amp;<a class=\"id\" href=\"#firmware_class\">firmware_class</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_set_uevent_suppress\">dev_set_uevent_suppress</a>(<a class=\"id\" href=\"#f_dev\">f_dev</a>, <a class=\"id\" href=\"#true\">true</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Need to pin this module until class device is destroyed */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__module_get\">__module_get</a>(<a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_add\">device_add</a>(<a class=\"id\" href=\"#f_dev\">f_dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_err\">dev_err</a>(<a class=\"id\" href=\"#device\">device</a>, \"%s: device_register failed\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_put_dev\">err_put_dev</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_create_bin_file\">device_create_bin_file</a>(<a class=\"id\" href=\"#f_dev\">f_dev</a>, &amp;<a class=\"id\" href=\"#firmware_attr_data\">firmware_attr_data</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_err\">dev_err</a>(<a class=\"id\" href=\"#device\">device</a>, \"%s: sysfs_create_bin_file failed\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_del_dev\">err_del_dev</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_create_file\">device_create_file</a>(<a class=\"id\" href=\"#f_dev\">f_dev</a>, &amp;<a class=\"id\" href=\"#dev_attr_loading\">dev_attr_loading</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_err\">dev_err</a>(<a class=\"id\" href=\"#device\">device</a>, \"%s: device_create_file failed\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_del_bin_attr\">err_del_bin_attr</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uevent\">uevent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_set_uevent_suppress\">dev_set_uevent_suppress</a>(<a class=\"id\" href=\"#f_dev\">f_dev</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#fw_priv\">fw_priv</a>;", 
"", 
"<a class=\"id\" href=\"#err_del_bin_attr\">err_del_bin_attr</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_remove_bin_file\">device_remove_bin_file</a>(<a class=\"id\" href=\"#f_dev\">f_dev</a>, &amp;<a class=\"id\" href=\"#firmware_attr_data\">firmware_attr_data</a>);", 
"<a class=\"id\" href=\"#err_del_dev\">err_del_dev</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_del\">device_del</a>(<a class=\"id\" href=\"#f_dev\">f_dev</a>);", 
"<a class=\"id\" href=\"#err_put_dev\">err_put_dev</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#f_dev\">f_dev</a>);", 
"<a class=\"id\" href=\"#err_out\">err_out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#error\">error</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#fw_destroy_instance\">fw_destroy_instance</a>(struct <a class=\"id\" href=\"#firmware_priv\">firmware_priv</a> *<a class=\"id\" href=\"#fw_priv\">fw_priv</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#f_dev\">f_dev</a> = &amp;<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_remove_file\">device_remove_file</a>(<a class=\"id\" href=\"#f_dev\">f_dev</a>, &amp;<a class=\"id\" href=\"#dev_attr_loading\">dev_attr_loading</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_remove_bin_file\">device_remove_bin_file</a>(<a class=\"id\" href=\"#f_dev\">f_dev</a>, &amp;<a class=\"id\" href=\"#firmware_attr_data\">firmware_attr_data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_unregister\">device_unregister</a>(<a class=\"id\" href=\"#f_dev\">f_dev</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#_request_firmware\">_request_firmware</a>(const struct <a class=\"id\" href=\"#firmware\">firmware</a> **<a class=\"id\" href=\"#firmware_p\">firmware_p</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const char *<a class=\"id\" href=\"#name\">name</a>, struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#device\">device</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#uevent\">uevent</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#nowait\">nowait</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#firmware_priv\">firmware_priv</a> *<a class=\"id\" href=\"#fw_priv\">fw_priv</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#firmware\">firmware</a> *<a class=\"id\" href=\"#firmware\">firmware</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#firmware_p\">firmware_p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#firmware_p\">firmware_p</a> = <a class=\"id\" href=\"#firmware\">firmware</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#firmware\">firmware</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#firmware\">firmware</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_err\">dev_err</a>(<a class=\"id\" href=\"#device\">device</a>, \"%s: kmalloc(struct firmware) failed\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fw_get_builtin_firmware\">fw_get_builtin_firmware</a>(<a class=\"id\" href=\"#firmware\">firmware</a>, <a class=\"id\" href=\"#name\">name</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_dbg\">dev_dbg</a>(<a class=\"id\" href=\"#device\">device</a>, \"firmware: using built-in firmware %s\\n\", <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uevent\">uevent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_dbg\">dev_dbg</a>(<a class=\"id\" href=\"#device\">device</a>, \"firmware: requesting %s\\n\", <a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fw_priv\">fw_priv</a> = <a class=\"id\" href=\"#fw_create_instance\">fw_create_instance</a>(<a class=\"id\" href=\"#firmware\">firmware</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#uevent\">uevent</a>, <a class=\"id\" href=\"#nowait\">nowait</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uevent\">uevent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#loading_timeout\">loading_timeout</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#timeout\">timeout</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#round_jiffies_up\">round_jiffies_up</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#loading_timeout\">loading_timeout</a> * <a class=\"id\" href=\"#HZ\">HZ</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>(&amp;<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#KOBJ_ADD\">KOBJ_ADD</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_for_completion\">wait_for_completion</a>(&amp;<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#completion\">completion</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#FW_STATUS_DONE\">FW_STATUS_DONE</a>, &amp;<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#del_timer_sync\">del_timer_sync</a>(&amp;<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#timeout\">timeout</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#fw_lock\">fw_lock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#fw\">fw</a>-><a class=\"id\" href=\"#size\">size</a> || <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#FW_STATUS_ABORT\">FW_STATUS_ABORT</a>, &amp;<a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#status\">status</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fw_priv\">fw_priv</a>-><a class=\"id\" href=\"#fw\">fw</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#fw_lock\">fw_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fw_destroy_instance\">fw_destroy_instance</a>(<a class=\"id\" href=\"#fw_priv\">fw_priv</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_firmware\">release_firmware</a>(<a class=\"id\" href=\"#firmware\">firmware</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#firmware_p\">firmware_p</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * request_firmware: - send firmware request and wait for it</span>", 
"<span class=\"comment\"> * @firmware_p: pointer to firmware image</span>", 
"<span class=\"comment\"> * @name: name of firmware file</span>", 
"<span class=\"comment\"> * @device: device for which firmware is being loaded</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *      @firmware_p will be used to return a firmware image by the name</span>", 
"<span class=\"comment\"> *      of @name for device @device.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *      Should be called from user context where sleeping is allowed.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *      @name will be used as $FIRMWARE in the uevent environment and</span>", 
"<span class=\"comment\"> *      should be distinctive enough not to be confused with any other</span>", 
"<span class=\"comment\"> *      firmware image for this or any other device.</span>", 
"<span class=\"comment\"> **/</span>", 
"int", 
"<a class=\"id\" href=\"#request_firmware\">request_firmware</a>(const struct <a class=\"id\" href=\"#firmware\">firmware</a> **<a class=\"id\" href=\"#firmware_p\">firmware_p</a>, const char *<a class=\"id\" href=\"#name\">name</a>,", 
"                 struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#device\">device</a>)", 
"{", 
"        int <a class=\"id\" href=\"#uevent\">uevent</a> = 1;", 
"        return <a class=\"id\" href=\"#_request_firmware\">_request_firmware</a>(<a class=\"id\" href=\"#firmware_p\">firmware_p</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#uevent\">uevent</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * release_firmware: - release the resource associated with a firmware image</span>", 
"<span class=\"comment\"> * @fw: firmware resource to release</span>", 
"<span class=\"comment\"> **/</span>", 
"void <a class=\"id\" href=\"#release_firmware\">release_firmware</a>(const struct <a class=\"id\" href=\"#firmware\">firmware</a> *<a class=\"id\" href=\"#fw\">fw</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fw\">fw</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#fw_is_builtin_firmware\">fw_is_builtin_firmware</a>(<a class=\"id\" href=\"#fw\">fw</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#firmware_free_data\">firmware_free_data</a>(<a class=\"id\" href=\"#fw\">fw</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#fw\">fw</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* Async support */</span>", 
"struct <a class=\"id\" href=\"#firmware_work\">firmware_work</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#work_struct\">work_struct</a> <a class=\"id\" href=\"#work\">work</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#module\">module</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#context\">context</a>;", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#cont\">cont</a>)(const struct <a class=\"id\" href=\"#firmware\">firmware</a> *<a class=\"id\" href=\"#fw\">fw</a>, void *<a class=\"id\" href=\"#context\">context</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#uevent\">uevent</a>;", 
"};", 
"", 
"static int <a class=\"id\" href=\"#request_firmware_work_func\">request_firmware_work_func</a>(void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#firmware_work\">firmware_work</a> *<a class=\"id\" href=\"#fw_work\">fw_work</a> = <a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#firmware\">firmware</a> *<a class=\"id\" href=\"#fw\">fw</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#arg\">arg</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#_request_firmware\">_request_firmware</a>(&amp;<a class=\"id\" href=\"#fw\">fw</a>, <a class=\"id\" href=\"#fw_work\">fw_work</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#fw_work\">fw_work</a>-><a class=\"id\" href=\"#device\">device</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fw_work\">fw_work</a>-><a class=\"id\" href=\"#uevent\">uevent</a>, <a class=\"id\" href=\"#true\">true</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fw_work\">fw_work</a>-><a class=\"id\" href=\"#cont\">cont</a>(<a class=\"id\" href=\"#fw\">fw</a>, <a class=\"id\" href=\"#fw_work\">fw_work</a>-><a class=\"id\" href=\"#context\">context</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#fw_work\">fw_work</a>-><a class=\"id\" href=\"#module\">module</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#fw_work\">fw_work</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * request_firmware_nowait - asynchronous version of request_firmware</span>", 
"<span class=\"comment\"> * @module: module requesting the firmware</span>", 
"<span class=\"comment\"> * @uevent: sends uevent to copy the firmware image if this flag</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is non-zero else the firmware copy must be done manually.</span>", 
"<span class=\"comment\"> * @name: name of firmware file</span>", 
"<span class=\"comment\"> * @device: device for which firmware is being loaded</span>", 
"<span class=\"comment\"> * @gfp: allocation flags</span>", 
"<span class=\"comment\"> * @context: will be passed over to @cont, and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@fw may be %NULL if firmware request fails.</span>", 
"<span class=\"comment\"> * @cont: function will be called asynchronously when the firmware</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>request is over.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Asynchronous variant of request_firmware() for user contexts where</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>it is not possible to sleep for long time. It can't be called</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>in atomic contexts.</span>", 
"<span class=\"comment\"> **/</span>", 
"int", 
"<a class=\"id\" href=\"#request_firmware_nowait\">request_firmware_nowait</a>(", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#module\">module</a>, int <a class=\"id\" href=\"#uevent\">uevent</a>,", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a>, struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>, void *<a class=\"id\" href=\"#context\">context</a>,", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#cont\">cont</a>)(const struct <a class=\"id\" href=\"#firmware\">firmware</a> *<a class=\"id\" href=\"#fw\">fw</a>, void *<a class=\"id\" href=\"#context\">context</a>))", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#firmware_work\">firmware_work</a> *<a class=\"id\" href=\"#fw_work\">fw_work</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fw_work\">fw_work</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof (struct <a class=\"id\" href=\"#firmware_work\">firmware_work</a>), <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fw_work\">fw_work</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fw_work\">fw_work</a>-><a class=\"id\" href=\"#module\">module</a> = <a class=\"id\" href=\"#module\">module</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fw_work\">fw_work</a>-><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fw_work\">fw_work</a>-><a class=\"id\" href=\"#device\">device</a> = <a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fw_work\">fw_work</a>-><a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#context\">context</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fw_work\">fw_work</a>-><a class=\"id\" href=\"#cont\">cont</a> = <a class=\"id\" href=\"#cont\">cont</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fw_work\">fw_work</a>-><a class=\"id\" href=\"#uevent\">uevent</a> = <a class=\"id\" href=\"#uevent\">uevent</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#try_module_get\">try_module_get</a>(<a class=\"id\" href=\"#module\">module</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#fw_work\">fw_work</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#kthread_run\">kthread_run</a>(<a class=\"id\" href=\"#request_firmware_work_func\">request_firmware_work_func</a>, <a class=\"id\" href=\"#fw_work\">fw_work</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"firmware/%s\", <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#task\">task</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fw_work\">fw_work</a>-><a class=\"id\" href=\"#cont\">cont</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#fw_work\">fw_work</a>-><a class=\"id\" href=\"#context\">context</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#fw_work\">fw_work</a>-><a class=\"id\" href=\"#module\">module</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#fw_work\">fw_work</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#firmware_class_init\">firmware_class_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#class_register\">class_register</a>(&amp;<a class=\"id\" href=\"#firmware_class\">firmware_class</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#firmware_class_exit\">firmware_class_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#class_unregister\">class_unregister</a>(&amp;<a class=\"id\" href=\"#firmware_class\">firmware_class</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#fs_initcall\">fs_initcall</a>(<a class=\"id\" href=\"#firmware_class_init\">firmware_class_init</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#firmware_class_exit\">firmware_class_exit</a>);", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#release_firmware\">release_firmware</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#request_firmware\">request_firmware</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#request_firmware_nowait\">request_firmware_nowait</a>);", 
];
xr_frag_insert('l/ed/ce2d6555f44a0cd5494fd34c3b0e5bc74e4641.xr', __xr_tmp);
