var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Routing netlink socket interface: protocol independent part.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Alexey Kuznetsov, &lt;kuznet@ms2.inr.ac.ru&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Fixes:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Vitaly E. Lavrov<span class=\"ts\"/><span class=\"ts\"/>RTA_OK arithmetics was wrong.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sockios\">sockios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fcntl\">fcntl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_addr\">if_addr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inet\">inet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#arp\">arp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#route\">route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#udp\">udp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#pkt_sched\">pkt_sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#fib_rules\">fib_rules</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#rtnetlink\">rtnetlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#rtnl_link\">rtnl_link</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_doit_func\">rtnl_doit_func</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#doit\">doit</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_dumpit_func\">rtnl_dumpit_func</a><span class=\"ts\"/><a class=\"id\" href=\"#dumpit\">dumpit</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#rtnl_mutex\">rtnl_mutex</a>);", 
"", 
"void <a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#rtnl_mutex\">rtnl_mutex</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>);", 
"", 
"void <a class=\"id\" href=\"#__rtnl_unlock\">__rtnl_unlock</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rtnl_mutex\">rtnl_mutex</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* This fellow will unlock it for us. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netdev_run_todo\">netdev_run_todo</a>();", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>);", 
"", 
"int <a class=\"id\" href=\"#rtnl_trylock\">rtnl_trylock</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mutex_trylock\">mutex_trylock</a>(&amp;<a class=\"id\" href=\"#rtnl_mutex\">rtnl_mutex</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rtnl_trylock\">rtnl_trylock</a>);", 
"", 
"int <a class=\"id\" href=\"#rtnl_is_locked\">rtnl_is_locked</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mutex_is_locked\">mutex_is_locked</a>(&amp;<a class=\"id\" href=\"#rtnl_mutex\">rtnl_mutex</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rtnl_is_locked\">rtnl_is_locked</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROVE_LOCKING\">CONFIG_PROVE_LOCKING</a>", 
"int <a class=\"id\" href=\"#lockdep_rtnl_is_held\">lockdep_rtnl_is_held</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#lockdep_is_held\">lockdep_is_held</a>(&amp;<a class=\"id\" href=\"#rtnl_mutex\">rtnl_mutex</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#lockdep_rtnl_is_held\">lockdep_rtnl_is_held</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* #ifdef CONFIG_PROVE_LOCKING */</span>", 
"", 
"static struct <a class=\"id\" href=\"#rtnl_link\">rtnl_link</a> *<a class=\"id\" href=\"#rtnl_msg_handlers\">rtnl_msg_handlers</a>[<a class=\"id\" href=\"#RTNL_FAMILY_MAX\">RTNL_FAMILY_MAX</a> + 1];", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rtm_msgindex\">rtm_msgindex</a>(int <a class=\"id\" href=\"#msgtype\">msgtype</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#msgindex\">msgindex</a> = <a class=\"id\" href=\"#msgtype\">msgtype</a> - <a class=\"id\" href=\"#RTM_BASE\">RTM_BASE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * msgindex &lt; 0 implies someone tried to register a netlink</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * control code. msgindex &gt;= RTM_NR_MSGTYPES may indicate that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the message type has not been added to linux/rtnetlink.h</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#msgindex\">msgindex</a> &lt; 0 || <a class=\"id\" href=\"#msgindex\">msgindex</a> >= <a class=\"id\" href=\"#RTM_NR_MSGTYPES\">RTM_NR_MSGTYPES</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#msgindex\">msgindex</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#rtnl_doit_func\">rtnl_doit_func</a> <a class=\"id\" href=\"#rtnl_get_doit\">rtnl_get_doit</a>(int <a class=\"id\" href=\"#protocol\">protocol</a>, int <a class=\"id\" href=\"#msgindex\">msgindex</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtnl_link\">rtnl_link</a> *<a class=\"id\" href=\"#tab\">tab</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#protocol\">protocol</a> <= <a class=\"id\" href=\"#RTNL_FAMILY_MAX\">RTNL_FAMILY_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tab\">tab</a> = <a class=\"id\" href=\"#rtnl_msg_handlers\">rtnl_msg_handlers</a>[<a class=\"id\" href=\"#protocol\">protocol</a>];", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tab\">tab</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tab\">tab</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || <a class=\"id\" href=\"#tab\">tab</a>[<a class=\"id\" href=\"#msgindex\">msgindex</a>].<a class=\"id\" href=\"#doit\">doit</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tab\">tab</a> = <a class=\"id\" href=\"#rtnl_msg_handlers\">rtnl_msg_handlers</a>[<a class=\"id\" href=\"#PF_UNSPEC\">PF_UNSPEC</a>];", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tab\">tab</a> ? <a class=\"id\" href=\"#tab\">tab</a>[<a class=\"id\" href=\"#msgindex\">msgindex</a>].<a class=\"id\" href=\"#doit\">doit</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#rtnl_dumpit_func\">rtnl_dumpit_func</a> <a class=\"id\" href=\"#rtnl_get_dumpit\">rtnl_get_dumpit</a>(int <a class=\"id\" href=\"#protocol\">protocol</a>, int <a class=\"id\" href=\"#msgindex\">msgindex</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtnl_link\">rtnl_link</a> *<a class=\"id\" href=\"#tab\">tab</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#protocol\">protocol</a> <= <a class=\"id\" href=\"#RTNL_FAMILY_MAX\">RTNL_FAMILY_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tab\">tab</a> = <a class=\"id\" href=\"#rtnl_msg_handlers\">rtnl_msg_handlers</a>[<a class=\"id\" href=\"#protocol\">protocol</a>];", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tab\">tab</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tab\">tab</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || <a class=\"id\" href=\"#tab\">tab</a>[<a class=\"id\" href=\"#msgindex\">msgindex</a>].<a class=\"id\" href=\"#dumpit\">dumpit</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tab\">tab</a> = <a class=\"id\" href=\"#rtnl_msg_handlers\">rtnl_msg_handlers</a>[<a class=\"id\" href=\"#PF_UNSPEC\">PF_UNSPEC</a>];", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tab\">tab</a> ? <a class=\"id\" href=\"#tab\">tab</a>[<a class=\"id\" href=\"#msgindex\">msgindex</a>].<a class=\"id\" href=\"#dumpit\">dumpit</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __rtnl_register - Register a rtnetlink message type</span>", 
"<span class=\"comment\"> * @protocol: Protocol family or PF_UNSPEC</span>", 
"<span class=\"comment\"> * @msgtype: rtnetlink message type</span>", 
"<span class=\"comment\"> * @doit: Function pointer called for each request message</span>", 
"<span class=\"comment\"> * @dumpit: Function pointer called for each dump request (NLM_F_DUMP) message</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Registers the specified function pointers (at least one of them has</span>", 
"<span class=\"comment\"> * to be non-NULL) to be called whenever a request message for the</span>", 
"<span class=\"comment\"> * specified protocol family and message type is received.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The special protocol family PF_UNSPEC may be used to define fallback</span>", 
"<span class=\"comment\"> * function pointers for the case when no entry for the specific protocol</span>", 
"<span class=\"comment\"> * family exists.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success or a negative error code.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__rtnl_register\">__rtnl_register</a>(int <a class=\"id\" href=\"#protocol\">protocol</a>, int <a class=\"id\" href=\"#msgtype\">msgtype</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#rtnl_doit_func\">rtnl_doit_func</a> <a class=\"id\" href=\"#doit\">doit</a>, <a class=\"id\" href=\"#rtnl_dumpit_func\">rtnl_dumpit_func</a> <a class=\"id\" href=\"#dumpit\">dumpit</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtnl_link\">rtnl_link</a> *<a class=\"id\" href=\"#tab\">tab</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#msgindex\">msgindex</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#protocol\">protocol</a> &lt; 0 || <a class=\"id\" href=\"#protocol\">protocol</a> &gt; <a class=\"id\" href=\"#RTNL_FAMILY_MAX\">RTNL_FAMILY_MAX</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msgindex\">msgindex</a> = <a class=\"id\" href=\"#rtm_msgindex\">rtm_msgindex</a>(<a class=\"id\" href=\"#msgtype\">msgtype</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tab\">tab</a> = <a class=\"id\" href=\"#rtnl_msg_handlers\">rtnl_msg_handlers</a>[<a class=\"id\" href=\"#protocol\">protocol</a>];", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tab\">tab</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tab\">tab</a> = <a class=\"id\" href=\"#kcalloc\">kcalloc</a>(<a class=\"id\" href=\"#RTM_NR_MSGTYPES\">RTM_NR_MSGTYPES</a>, sizeof(*<a class=\"id\" href=\"#tab\">tab</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tab\">tab</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_msg_handlers\">rtnl_msg_handlers</a>[<a class=\"id\" href=\"#protocol\">protocol</a>] = <a class=\"id\" href=\"#tab\">tab</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#doit\">doit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tab\">tab</a>[<a class=\"id\" href=\"#msgindex\">msgindex</a>].<a class=\"id\" href=\"#doit\">doit</a> = <a class=\"id\" href=\"#doit\">doit</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dumpit\">dumpit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tab\">tab</a>[<a class=\"id\" href=\"#msgindex\">msgindex</a>].<a class=\"id\" href=\"#dumpit\">dumpit</a> = <a class=\"id\" href=\"#dumpit\">dumpit</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__rtnl_register\">__rtnl_register</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * rtnl_register - Register a rtnetlink message type</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Identical to __rtnl_register() but panics on failure. This is useful</span>", 
"<span class=\"comment\"> * as failure of this function is very unlikely, it can only happen due</span>", 
"<span class=\"comment\"> * to lack of memory when allocating the chain to store all message</span>", 
"<span class=\"comment\"> * handlers for a protocol. Meant for use in init functions where lack</span>", 
"<span class=\"comment\"> * of memory implies no sense in continueing.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#rtnl_register\">rtnl_register</a>(int <a class=\"id\" href=\"#protocol\">protocol</a>, int <a class=\"id\" href=\"#msgtype\">msgtype</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#rtnl_doit_func\">rtnl_doit_func</a> <a class=\"id\" href=\"#doit\">doit</a>, <a class=\"id\" href=\"#rtnl_dumpit_func\">rtnl_dumpit_func</a> <a class=\"id\" href=\"#dumpit\">dumpit</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__rtnl_register\">__rtnl_register</a>(<a class=\"id\" href=\"#protocol\">protocol</a>, <a class=\"id\" href=\"#msgtype\">msgtype</a>, <a class=\"id\" href=\"#doit\">doit</a>, <a class=\"id\" href=\"#dumpit\">dumpit</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"Unable to register rtnetlink message handler, \"", 
"<span class=\"ts\"/><span class=\"ts\"/>      \"protocol = %d, message type = %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#protocol\">protocol</a>, <a class=\"id\" href=\"#msgtype\">msgtype</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#rtnl_register\">rtnl_register</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * rtnl_unregister - Unregister a rtnetlink message type</span>", 
"<span class=\"comment\"> * @protocol: Protocol family or PF_UNSPEC</span>", 
"<span class=\"comment\"> * @msgtype: rtnetlink message type</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success or a negative error code.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#rtnl_unregister\">rtnl_unregister</a>(int <a class=\"id\" href=\"#protocol\">protocol</a>, int <a class=\"id\" href=\"#msgtype\">msgtype</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#msgindex\">msgindex</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#protocol\">protocol</a> &lt; 0 || <a class=\"id\" href=\"#protocol\">protocol</a> &gt; <a class=\"id\" href=\"#RTNL_FAMILY_MAX\">RTNL_FAMILY_MAX</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msgindex\">msgindex</a> = <a class=\"id\" href=\"#rtm_msgindex\">rtm_msgindex</a>(<a class=\"id\" href=\"#msgtype\">msgtype</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rtnl_msg_handlers\">rtnl_msg_handlers</a>[<a class=\"id\" href=\"#protocol\">protocol</a>] == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_msg_handlers\">rtnl_msg_handlers</a>[<a class=\"id\" href=\"#protocol\">protocol</a>][<a class=\"id\" href=\"#msgindex\">msgindex</a>].<a class=\"id\" href=\"#doit\">doit</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_msg_handlers\">rtnl_msg_handlers</a>[<a class=\"id\" href=\"#protocol\">protocol</a>][<a class=\"id\" href=\"#msgindex\">msgindex</a>].<a class=\"id\" href=\"#dumpit\">dumpit</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#rtnl_unregister\">rtnl_unregister</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * rtnl_unregister_all - Unregister all rtnetlink message type of a protocol</span>", 
"<span class=\"comment\"> * @protocol : Protocol family or PF_UNSPEC</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Identical to calling rtnl_unregster() for all registered message types</span>", 
"<span class=\"comment\"> * of a certain protocol family.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#rtnl_unregister_all\">rtnl_unregister_all</a>(int <a class=\"id\" href=\"#protocol\">protocol</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#protocol\">protocol</a> &lt; 0 || <a class=\"id\" href=\"#protocol\">protocol</a> &gt; <a class=\"id\" href=\"#RTNL_FAMILY_MAX\">RTNL_FAMILY_MAX</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#rtnl_msg_handlers\">rtnl_msg_handlers</a>[<a class=\"id\" href=\"#protocol\">protocol</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_msg_handlers\">rtnl_msg_handlers</a>[<a class=\"id\" href=\"#protocol\">protocol</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#rtnl_unregister_all\">rtnl_unregister_all</a>);", 
"", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#link_ops\">link_ops</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __rtnl_link_register - Register rtnl_link_ops with rtnetlink.</span>", 
"<span class=\"comment\"> * @ops: struct rtnl_link_ops * to register</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The caller must hold the rtnl_mutex. This function should be used</span>", 
"<span class=\"comment\"> * by drivers that create devices during module initialization. It</span>", 
"<span class=\"comment\"> * must be called before registering the devices.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success or a negative error code.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__rtnl_link_register\">__rtnl_link_register</a>(struct <a class=\"id\" href=\"#rtnl_link_ops\">rtnl_link_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#dellink\">dellink</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#dellink\">dellink</a> = <a class=\"id\" href=\"#unregister_netdevice_queue\">unregister_netdevice_queue</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#link_ops\">link_ops</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__rtnl_link_register\">__rtnl_link_register</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * rtnl_link_register - Register rtnl_link_ops with rtnetlink.</span>", 
"<span class=\"comment\"> * @ops: struct rtnl_link_ops * to register</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success or a negative error code.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#rtnl_link_register\">rtnl_link_register</a>(struct <a class=\"id\" href=\"#rtnl_link_ops\">rtnl_link_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#__rtnl_link_register\">__rtnl_link_register</a>(<a class=\"id\" href=\"#ops\">ops</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#rtnl_link_register\">rtnl_link_register</a>);", 
"", 
"static void <a class=\"id\" href=\"#__rtnl_kill_links\">__rtnl_kill_links</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#rtnl_link_ops\">rtnl_link_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#list_kill\">list_kill</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_netdev\">for_each_netdev</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#rtnl_link_ops\">rtnl_link_ops</a> == <a class=\"id\" href=\"#ops\">ops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#dellink\">dellink</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#list_kill\">list_kill</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_netdevice_many\">unregister_netdevice_many</a>(&amp;<a class=\"id\" href=\"#list_kill\">list_kill</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#rtnl_kill_links\">rtnl_kill_links</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#rtnl_link_ops\">rtnl_link_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__rtnl_kill_links\">__rtnl_kill_links</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ops\">ops</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#rtnl_kill_links\">rtnl_kill_links</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __rtnl_link_unregister - Unregister rtnl_link_ops from rtnetlink.</span>", 
"<span class=\"comment\"> * @ops: struct rtnl_link_ops * to unregister</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The caller must hold the rtnl_mutex.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__rtnl_link_unregister\">__rtnl_link_unregister</a>(struct <a class=\"id\" href=\"#rtnl_link_ops\">rtnl_link_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_net\">for_each_net</a>(<a class=\"id\" href=\"#net\">net</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rtnl_kill_links\">__rtnl_kill_links</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ops\">ops</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__rtnl_link_unregister\">__rtnl_link_unregister</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * rtnl_link_unregister - Unregister rtnl_link_ops from rtnetlink.</span>", 
"<span class=\"comment\"> * @ops: struct rtnl_link_ops * to unregister</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#rtnl_link_unregister\">rtnl_link_unregister</a>(struct <a class=\"id\" href=\"#rtnl_link_ops\">rtnl_link_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__rtnl_link_unregister\">__rtnl_link_unregister</a>(<a class=\"id\" href=\"#ops\">ops</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#rtnl_link_unregister\">rtnl_link_unregister</a>);", 
"", 
"static const struct <a class=\"id\" href=\"#rtnl_link_ops\">rtnl_link_ops</a> *<a class=\"id\" href=\"#rtnl_link_ops_get\">rtnl_link_ops_get</a>(const char *<a class=\"id\" href=\"#kind\">kind</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#rtnl_link_ops\">rtnl_link_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#ops\">ops</a>, &amp;<a class=\"id\" href=\"#link_ops\">link_ops</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#kind\">kind</a>, <a class=\"id\" href=\"#kind\">kind</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#rtnl_link_get_size\">rtnl_link_get_size</a>(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#rtnl_link_ops\">rtnl_link_ops</a> *<a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#rtnl_link_ops\">rtnl_link_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ops\">ops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#nlmsg_total_size\">nlmsg_total_size</a>(sizeof(struct <a class=\"id\" href=\"#nlattr\">nlattr</a>)) + <span class=\"comment\">/* IFLA_LINKINFO */</span>", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#nlmsg_total_size\">nlmsg_total_size</a>(<a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#kind\">kind</a>) + 1);<span class=\"ts\"/> <span class=\"comment\">/* IFLA_INFO_KIND */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#get_size\">get_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IFLA_INFO_DATA + nested data */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> += <a class=\"id\" href=\"#nlmsg_total_size\">nlmsg_total_size</a>(sizeof(struct <a class=\"id\" href=\"#nlattr\">nlattr</a>)) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#get_size\">get_size</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#get_xstats_size\">get_xstats_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> += <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#get_xstats_size\">get_xstats_size</a>(<a class=\"id\" href=\"#dev\">dev</a>);<span class=\"ts\"/><span class=\"comment\">/* IFLA_INFO_XSTATS */</span>", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#size\">size</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#rtnl_link_fill\">rtnl_link_fill</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#rtnl_link_ops\">rtnl_link_ops</a> *<a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#rtnl_link_ops\">rtnl_link_ops</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#linkinfo\">linkinfo</a>, *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#linkinfo\">linkinfo</a> = <a class=\"id\" href=\"#nla_nest_start\">nla_nest_start</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#IFLA_LINKINFO\">IFLA_LINKINFO</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#linkinfo\">linkinfo</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nla_put_string\">nla_put_string</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#IFLA_INFO_KIND\">IFLA_INFO_KIND</a>, <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#kind\">kind</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_cancel_link\">err_cancel_link</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#fill_xstats\">fill_xstats</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#fill_xstats\">fill_xstats</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_cancel_link\">err_cancel_link</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#fill_info\">fill_info</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#nla_nest_start\">nla_nest_start</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#IFLA_INFO_DATA\">IFLA_INFO_DATA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_cancel_link\">err_cancel_link</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#fill_info\">fill_info</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_cancel_data\">err_cancel_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla_nest_end\">nla_nest_end</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nla_nest_end\">nla_nest_end</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#linkinfo\">linkinfo</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#err_cancel_data\">err_cancel_data</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nla_nest_cancel\">nla_nest_cancel</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"<a class=\"id\" href=\"#err_cancel_link\">err_cancel_link</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nla_nest_cancel\">nla_nest_cancel</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#linkinfo\">linkinfo</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static const int <a class=\"id\" href=\"#rtm_min\">rtm_min</a>[<a class=\"id\" href=\"#RTM_NR_FAMILIES\">RTM_NR_FAMILIES</a>] =", 
"{", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RTM_FAM\">RTM_FAM</a>(<a class=\"id\" href=\"#RTM_NEWLINK\">RTM_NEWLINK</a>)]      = <a class=\"id\" href=\"#NLMSG_LENGTH\">NLMSG_LENGTH</a>(sizeof(struct <a class=\"id\" href=\"#ifinfomsg\">ifinfomsg</a>)),", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RTM_FAM\">RTM_FAM</a>(<a class=\"id\" href=\"#RTM_NEWADDR\">RTM_NEWADDR</a>)]      = <a class=\"id\" href=\"#NLMSG_LENGTH\">NLMSG_LENGTH</a>(sizeof(struct <a class=\"id\" href=\"#ifaddrmsg\">ifaddrmsg</a>)),", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RTM_FAM\">RTM_FAM</a>(<a class=\"id\" href=\"#RTM_NEWROUTE\">RTM_NEWROUTE</a>)]     = <a class=\"id\" href=\"#NLMSG_LENGTH\">NLMSG_LENGTH</a>(sizeof(struct <a class=\"id\" href=\"#rtmsg\">rtmsg</a>)),", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RTM_FAM\">RTM_FAM</a>(<a class=\"id\" href=\"#RTM_NEWRULE\">RTM_NEWRULE</a>)]      = <a class=\"id\" href=\"#NLMSG_LENGTH\">NLMSG_LENGTH</a>(sizeof(struct <a class=\"id\" href=\"#fib_rule_hdr\">fib_rule_hdr</a>)),", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RTM_FAM\">RTM_FAM</a>(<a class=\"id\" href=\"#RTM_NEWQDISC\">RTM_NEWQDISC</a>)]     = <a class=\"id\" href=\"#NLMSG_LENGTH\">NLMSG_LENGTH</a>(sizeof(struct <a class=\"id\" href=\"#tcmsg\">tcmsg</a>)),", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RTM_FAM\">RTM_FAM</a>(<a class=\"id\" href=\"#RTM_NEWTCLASS\">RTM_NEWTCLASS</a>)]    = <a class=\"id\" href=\"#NLMSG_LENGTH\">NLMSG_LENGTH</a>(sizeof(struct <a class=\"id\" href=\"#tcmsg\">tcmsg</a>)),", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RTM_FAM\">RTM_FAM</a>(<a class=\"id\" href=\"#RTM_NEWTFILTER\">RTM_NEWTFILTER</a>)]   = <a class=\"id\" href=\"#NLMSG_LENGTH\">NLMSG_LENGTH</a>(sizeof(struct <a class=\"id\" href=\"#tcmsg\">tcmsg</a>)),", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RTM_FAM\">RTM_FAM</a>(<a class=\"id\" href=\"#RTM_NEWACTION\">RTM_NEWACTION</a>)]    = <a class=\"id\" href=\"#NLMSG_LENGTH\">NLMSG_LENGTH</a>(sizeof(struct <a class=\"id\" href=\"#tcamsg\">tcamsg</a>)),", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RTM_FAM\">RTM_FAM</a>(<a class=\"id\" href=\"#RTM_GETMULTICAST\">RTM_GETMULTICAST</a>)] = <a class=\"id\" href=\"#NLMSG_LENGTH\">NLMSG_LENGTH</a>(sizeof(struct <a class=\"id\" href=\"#rtgenmsg\">rtgenmsg</a>)),", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RTM_FAM\">RTM_FAM</a>(<a class=\"id\" href=\"#RTM_GETANYCAST\">RTM_GETANYCAST</a>)]   = <a class=\"id\" href=\"#NLMSG_LENGTH\">NLMSG_LENGTH</a>(sizeof(struct <a class=\"id\" href=\"#rtgenmsg\">rtgenmsg</a>)),", 
"};", 
"", 
"static const int <a class=\"id\" href=\"#rta_max\">rta_max</a>[<a class=\"id\" href=\"#RTM_NR_FAMILIES\">RTM_NR_FAMILIES</a>] =", 
"{", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RTM_FAM\">RTM_FAM</a>(<a class=\"id\" href=\"#RTM_NEWLINK\">RTM_NEWLINK</a>)]      = <a class=\"id\" href=\"#IFLA_MAX\">IFLA_MAX</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RTM_FAM\">RTM_FAM</a>(<a class=\"id\" href=\"#RTM_NEWADDR\">RTM_NEWADDR</a>)]      = <a class=\"id\" href=\"#IFA_MAX\">IFA_MAX</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RTM_FAM\">RTM_FAM</a>(<a class=\"id\" href=\"#RTM_NEWROUTE\">RTM_NEWROUTE</a>)]     = <a class=\"id\" href=\"#RTA_MAX\">RTA_MAX</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RTM_FAM\">RTM_FAM</a>(<a class=\"id\" href=\"#RTM_NEWRULE\">RTM_NEWRULE</a>)]      = <a class=\"id\" href=\"#FRA_MAX\">FRA_MAX</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RTM_FAM\">RTM_FAM</a>(<a class=\"id\" href=\"#RTM_NEWQDISC\">RTM_NEWQDISC</a>)]     = <a class=\"id\" href=\"#TCA_MAX\">TCA_MAX</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RTM_FAM\">RTM_FAM</a>(<a class=\"id\" href=\"#RTM_NEWTCLASS\">RTM_NEWTCLASS</a>)]    = <a class=\"id\" href=\"#TCA_MAX\">TCA_MAX</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RTM_FAM\">RTM_FAM</a>(<a class=\"id\" href=\"#RTM_NEWTFILTER\">RTM_NEWTFILTER</a>)]   = <a class=\"id\" href=\"#TCA_MAX\">TCA_MAX</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#RTM_FAM\">RTM_FAM</a>(<a class=\"id\" href=\"#RTM_NEWACTION\">RTM_NEWACTION</a>)]    = <a class=\"id\" href=\"#TCAA_MAX\">TCAA_MAX</a>,", 
"};", 
"", 
"void <a class=\"id\" href=\"#__rta_fill\">__rta_fill</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#attrtype\">attrtype</a>, int <a class=\"id\" href=\"#attrlen\">attrlen</a>, const void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtattr\">rtattr</a> *<a class=\"id\" href=\"#rta\">rta</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#RTA_LENGTH\">RTA_LENGTH</a>(<a class=\"id\" href=\"#attrlen\">attrlen</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rta\">rta</a> = (struct <a class=\"id\" href=\"#rtattr\">rtattr</a> *)<a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#RTA_ALIGN\">RTA_ALIGN</a>(<a class=\"id\" href=\"#size\">size</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rta\">rta</a>-><a class=\"id\" href=\"#rta_type\">rta_type</a> = <a class=\"id\" href=\"#attrtype\">attrtype</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rta\">rta</a>-><a class=\"id\" href=\"#rta_len\">rta_len</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#RTA_DATA\">RTA_DATA</a>(<a class=\"id\" href=\"#rta\">rta</a>), <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#attrlen\">attrlen</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#RTA_DATA\">RTA_DATA</a>(<a class=\"id\" href=\"#rta\">rta</a>) + <a class=\"id\" href=\"#attrlen\">attrlen</a>, 0, <a class=\"id\" href=\"#RTA_ALIGN\">RTA_ALIGN</a>(<a class=\"id\" href=\"#size\">size</a>) - <a class=\"id\" href=\"#size\">size</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__rta_fill\">__rta_fill</a>);", 
"", 
"int <a class=\"id\" href=\"#rtnetlink_send\">rtnetlink_send</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>, unsigned <a class=\"id\" href=\"#group\">group</a>, int <a class=\"id\" href=\"#echo\">echo</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#rtnl\">rtnl</a> = <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#rtnl\">rtnl</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NETLINK_CB\">NETLINK_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>).<a class=\"id\" href=\"#dst_group\">dst_group</a> = <a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#echo\">echo</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#users\">users</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_broadcast\">netlink_broadcast</a>(<a class=\"id\" href=\"#rtnl\">rtnl</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#echo\">echo</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#netlink_unicast\">netlink_unicast</a>(<a class=\"id\" href=\"#rtnl\">rtnl</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#MSG_DONTWAIT\">MSG_DONTWAIT</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#rtnl_unicast\">rtnl_unicast</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#rtnl\">rtnl</a> = <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#rtnl\">rtnl</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nlmsg_unicast\">nlmsg_unicast</a>(<a class=\"id\" href=\"#rtnl\">rtnl</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pid\">pid</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rtnl_unicast\">rtnl_unicast</a>);", 
"", 
"void <a class=\"id\" href=\"#rtnl_notify\">rtnl_notify</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#group\">group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#rtnl\">rtnl</a> = <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#rtnl\">rtnl</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#report\">report</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nlh\">nlh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#report\">report</a> = <a class=\"id\" href=\"#nlmsg_report\">nlmsg_report</a>(<a class=\"id\" href=\"#nlh\">nlh</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlmsg_notify\">nlmsg_notify</a>(<a class=\"id\" href=\"#rtnl\">rtnl</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#report\">report</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rtnl_notify\">rtnl_notify</a>);", 
"", 
"void <a class=\"id\" href=\"#rtnl_set_sk_err\">rtnl_set_sk_err</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#group\">group</a>, int <a class=\"id\" href=\"#error\">error</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#rtnl\">rtnl</a> = <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#rtnl\">rtnl</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_set_err\">netlink_set_err</a>(<a class=\"id\" href=\"#rtnl\">rtnl</a>, 0, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rtnl_set_sk_err\">rtnl_set_sk_err</a>);", 
"", 
"int <a class=\"id\" href=\"#rtnetlink_put_metrics\">rtnetlink_put_metrics</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#metrics\">metrics</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#mx\">mx</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#valid\">valid</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mx\">mx</a> = <a class=\"id\" href=\"#nla_nest_start\">nla_nest_start</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#RTA_METRICS\">RTA_METRICS</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mx\">mx</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#RTAX_MAX\">RTAX_MAX</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#metrics\">metrics</a>[<a class=\"id\" href=\"#i\">i</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#valid\">valid</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_U32\">NLA_PUT_U32</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#i\">i</a>+1, <a class=\"id\" href=\"#metrics\">metrics</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#valid\">valid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla_nest_cancel\">nla_nest_cancel</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#mx\">mx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nla_nest_end\">nla_nest_end</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#mx\">mx</a>);", 
"", 
"<a class=\"id\" href=\"#nla_put_failure\">nla_put_failure</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nla_nest_cancel\">nla_nest_cancel</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#mx\">mx</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rtnetlink_put_metrics\">rtnetlink_put_metrics</a>);", 
"", 
"int <a class=\"id\" href=\"#rtnl_put_cacheinfo\">rtnl_put_cacheinfo</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#id\">id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ts\">ts</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tsage\">tsage</a>, long <a class=\"id\" href=\"#expires\">expires</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#error\">error</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rta_cacheinfo\">rta_cacheinfo</a> <a class=\"id\" href=\"#ci\">ci</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#rta_lastuse\">rta_lastuse</a> = <a class=\"id\" href=\"#jiffies_to_clock_t\">jiffies_to_clock_t</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a> - <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#lastuse\">lastuse</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#rta_used\">rta_used</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#__use\">__use</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#rta_clntref\">rta_clntref</a> = <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#__refcnt\">__refcnt</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#rta_error\">rta_error</a> = <a class=\"id\" href=\"#error\">error</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#rta_id\">rta_id</a> =  <a class=\"id\" href=\"#id\">id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#rta_ts\">rta_ts</a> = <a class=\"id\" href=\"#ts\">ts</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#rta_tsage\">rta_tsage</a> = <a class=\"id\" href=\"#tsage\">tsage</a>,", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#expires\">expires</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ci\">ci</a>.<a class=\"id\" href=\"#rta_expires\">rta_expires</a> = <a class=\"id\" href=\"#jiffies_to_clock_t\">jiffies_to_clock_t</a>(<a class=\"id\" href=\"#expires\">expires</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nla_put\">nla_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#RTA_CACHEINFO\">RTA_CACHEINFO</a>, sizeof(<a class=\"id\" href=\"#ci\">ci</a>), &amp;<a class=\"id\" href=\"#ci\">ci</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#rtnl_put_cacheinfo\">rtnl_put_cacheinfo</a>);", 
"", 
"static void <a class=\"id\" href=\"#set_operstate\">set_operstate</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned char <a class=\"id\" href=\"#transition\">transition</a>)", 
"{", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#operstate\">operstate</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#operstate\">operstate</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#transition\">transition</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IF_OPER_UP\">IF_OPER_UP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#operstate\">operstate</a> == <a class=\"id\" href=\"#IF_OPER_DORMANT\">IF_OPER_DORMANT</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#operstate\">operstate</a> == <a class=\"id\" href=\"#IF_OPER_UNKNOWN\">IF_OPER_UNKNOWN</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#netif_dormant\">netif_dormant</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#operstate\">operstate</a> = <a class=\"id\" href=\"#IF_OPER_UP\">IF_OPER_UP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IF_OPER_DORMANT\">IF_OPER_DORMANT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#operstate\">operstate</a> == <a class=\"id\" href=\"#IF_OPER_UP\">IF_OPER_UP</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#operstate\">operstate</a> == <a class=\"id\" href=\"#IF_OPER_UNKNOWN\">IF_OPER_UNKNOWN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#operstate\">operstate</a> = <a class=\"id\" href=\"#IF_OPER_DORMANT\">IF_OPER_DORMANT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#operstate\">operstate</a> != <a class=\"id\" href=\"#operstate\">operstate</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#dev_base_lock\">dev_base_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#operstate\">operstate</a> = <a class=\"id\" href=\"#operstate\">operstate</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#dev_base_lock\">dev_base_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netdev_state_change\">netdev_state_change</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#rtnl_dev_combine_flags\">rtnl_dev_combine_flags</a>(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#ifinfomsg\">ifinfomsg</a> *<a class=\"id\" href=\"#ifm\">ifm</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#ifm\">ifm</a>-><a class=\"id\" href=\"#ifi_flags\">ifi_flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* bugwards compatibility: ifi_change == 0 is treated as ~0 */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifm\">ifm</a>-><a class=\"id\" href=\"#ifi_change\">ifi_change</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ifm\">ifm</a>-><a class=\"id\" href=\"#ifi_change\">ifi_change</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; ~<a class=\"id\" href=\"#ifm\">ifm</a>-><a class=\"id\" href=\"#ifi_change\">ifi_change</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#flags\">flags</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#copy_rtnl_link_stats\">copy_rtnl_link_stats</a>(struct <a class=\"id\" href=\"#rtnl_link_stats\">rtnl_link_stats</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#rtnl_link_stats64\">rtnl_link_stats64</a> *<a class=\"id\" href=\"#b\">b</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#rx_packets\">rx_packets</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rx_packets\">rx_packets</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#tx_packets\">tx_packets</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tx_packets\">tx_packets</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#rx_bytes\">rx_bytes</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rx_bytes\">rx_bytes</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#tx_bytes\">tx_bytes</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tx_bytes\">tx_bytes</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#rx_errors\">rx_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rx_errors\">rx_errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#tx_errors\">tx_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tx_errors\">tx_errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#rx_dropped\">rx_dropped</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rx_dropped\">rx_dropped</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#tx_dropped\">tx_dropped</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tx_dropped\">tx_dropped</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#multicast\">multicast</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#multicast\">multicast</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#collisions\">collisions</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#collisions\">collisions</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#rx_length_errors\">rx_length_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rx_length_errors\">rx_length_errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#rx_over_errors\">rx_over_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rx_over_errors\">rx_over_errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#rx_crc_errors\">rx_crc_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rx_crc_errors\">rx_crc_errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#rx_frame_errors\">rx_frame_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rx_frame_errors\">rx_frame_errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#rx_fifo_errors\">rx_fifo_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rx_fifo_errors\">rx_fifo_errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#rx_missed_errors\">rx_missed_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rx_missed_errors\">rx_missed_errors</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#tx_aborted_errors\">tx_aborted_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tx_aborted_errors\">tx_aborted_errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#tx_carrier_errors\">tx_carrier_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tx_carrier_errors\">tx_carrier_errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#tx_fifo_errors\">tx_fifo_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tx_fifo_errors\">tx_fifo_errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#tx_heartbeat_errors\">tx_heartbeat_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tx_heartbeat_errors\">tx_heartbeat_errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#tx_window_errors\">tx_window_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tx_window_errors\">tx_window_errors</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#rx_compressed\">rx_compressed</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rx_compressed\">rx_compressed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#tx_compressed\">tx_compressed</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tx_compressed\">tx_compressed</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#copy_rtnl_link_stats64\">copy_rtnl_link_stats64</a>(void *<a class=\"id\" href=\"#v\">v</a>, const struct <a class=\"id\" href=\"#rtnl_link_stats64\">rtnl_link_stats64</a> *<a class=\"id\" href=\"#b\">b</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtnl_link_stats64\">rtnl_link_stats64</a> <a class=\"id\" href=\"#a\">a</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#rx_packets\">rx_packets</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rx_packets\">rx_packets</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#tx_packets\">tx_packets</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tx_packets\">tx_packets</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#rx_bytes\">rx_bytes</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rx_bytes\">rx_bytes</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#tx_bytes\">tx_bytes</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tx_bytes\">tx_bytes</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#rx_errors\">rx_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rx_errors\">rx_errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#tx_errors\">tx_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tx_errors\">tx_errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#rx_dropped\">rx_dropped</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rx_dropped\">rx_dropped</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#tx_dropped\">tx_dropped</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tx_dropped\">tx_dropped</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#multicast\">multicast</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#multicast\">multicast</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#collisions\">collisions</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#collisions\">collisions</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#rx_length_errors\">rx_length_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rx_length_errors\">rx_length_errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#rx_over_errors\">rx_over_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rx_over_errors\">rx_over_errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#rx_crc_errors\">rx_crc_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rx_crc_errors\">rx_crc_errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#rx_frame_errors\">rx_frame_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rx_frame_errors\">rx_frame_errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#rx_fifo_errors\">rx_fifo_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rx_fifo_errors\">rx_fifo_errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#rx_missed_errors\">rx_missed_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rx_missed_errors\">rx_missed_errors</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#tx_aborted_errors\">tx_aborted_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tx_aborted_errors\">tx_aborted_errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#tx_carrier_errors\">tx_carrier_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tx_carrier_errors\">tx_carrier_errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#tx_fifo_errors\">tx_fifo_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tx_fifo_errors\">tx_fifo_errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#tx_heartbeat_errors\">tx_heartbeat_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tx_heartbeat_errors\">tx_heartbeat_errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#tx_window_errors\">tx_window_errors</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tx_window_errors\">tx_window_errors</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#rx_compressed\">rx_compressed</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rx_compressed\">rx_compressed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#tx_compressed\">tx_compressed</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tx_compressed\">tx_compressed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#v\">v</a>, &amp;<a class=\"id\" href=\"#a\">a</a>, sizeof(<a class=\"id\" href=\"#a\">a</a>));", 
"}", 
"", 
"<span class=\"comment\">/* All VF info */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rtnl_vfinfo_size\">rtnl_vfinfo_size</a>(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a> && <a class=\"id\" href=\"#dev_is_pci\">dev_is_pci</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#num_vfs\">num_vfs</a> = <a class=\"id\" href=\"#dev_num_vf\">dev_num_vf</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(sizeof(struct <a class=\"id\" href=\"#nlattr\">nlattr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> += <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(<a class=\"id\" href=\"#num_vfs\">num_vfs</a> * sizeof(struct <a class=\"id\" href=\"#nlattr\">nlattr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> += <a class=\"id\" href=\"#num_vfs\">num_vfs</a> *", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(sizeof(struct <a class=\"id\" href=\"#ifla_vf_mac\">ifla_vf_mac</a>)) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(sizeof(struct <a class=\"id\" href=\"#ifla_vf_vlan\">ifla_vf_vlan</a>)) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(sizeof(struct <a class=\"id\" href=\"#ifla_vf_tx_rate\">ifla_vf_tx_rate</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#rtnl_port_size\">rtnl_port_size</a>(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#port_size\">port_size</a> = <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(4)<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PORT_VF */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(<a class=\"id\" href=\"#PORT_PROFILE_MAX\">PORT_PROFILE_MAX</a>)<span class=\"ts\"/><span class=\"comment\">/* PORT_PROFILE */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(sizeof(struct <a class=\"id\" href=\"#ifla_port_vsi\">ifla_port_vsi</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PORT_VSI_TYPE */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(<a class=\"id\" href=\"#PORT_UUID_MAX\">PORT_UUID_MAX</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PORT_INSTANCE_UUID */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(<a class=\"id\" href=\"#PORT_UUID_MAX\">PORT_UUID_MAX</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PORT_HOST_UUID */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(1)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PROT_VDP_REQUEST */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(2);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PORT_VDP_RESPONSE */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#vf_ports_size\">vf_ports_size</a> = <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(sizeof(struct <a class=\"id\" href=\"#nlattr\">nlattr</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#vf_port_size\">vf_port_size</a> = <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(sizeof(struct <a class=\"id\" href=\"#nlattr\">nlattr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#port_size\">port_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#port_self_size\">port_self_size</a> = <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(sizeof(struct <a class=\"id\" href=\"#nlattr\">nlattr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#port_size\">port_size</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#netdev_ops\">netdev_ops</a>-><a class=\"id\" href=\"#ndo_get_vf_port\">ndo_get_vf_port</a> || !<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev_num_vf\">dev_num_vf</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#port_self_size\">port_self_size</a> + <a class=\"id\" href=\"#vf_ports_size\">vf_ports_size</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vf_port_size\">vf_port_size</a> * <a class=\"id\" href=\"#dev_num_vf\">dev_num_vf</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#port_self_size\">port_self_size</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#noinline\">noinline</a> <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#if_nlmsg_size\">if_nlmsg_size</a>(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NLMSG_ALIGN\">NLMSG_ALIGN</a>(sizeof(struct <a class=\"id\" href=\"#ifinfomsg\">ifinfomsg</a>))", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(<a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>) <span class=\"comment\">/* IFLA_IFNAME */</span>", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(<a class=\"id\" href=\"#IFALIASZ\">IFALIASZ</a>) <span class=\"comment\">/* IFLA_IFALIAS */</span>", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(<a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>) <span class=\"comment\">/* IFLA_QDISC */</span>", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(sizeof(struct <a class=\"id\" href=\"#rtnl_link_ifmap\">rtnl_link_ifmap</a>))", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(sizeof(struct <a class=\"id\" href=\"#rtnl_link_stats\">rtnl_link_stats</a>))", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(sizeof(struct <a class=\"id\" href=\"#rtnl_link_stats64\">rtnl_link_stats64</a>))", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(<a class=\"id\" href=\"#MAX_ADDR_LEN\">MAX_ADDR_LEN</a>) <span class=\"comment\">/* IFLA_ADDRESS */</span>", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(<a class=\"id\" href=\"#MAX_ADDR_LEN\">MAX_ADDR_LEN</a>) <span class=\"comment\">/* IFLA_BROADCAST */</span>", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(4) <span class=\"comment\">/* IFLA_TXQLEN */</span>", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(4) <span class=\"comment\">/* IFLA_WEIGHT */</span>", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(4) <span class=\"comment\">/* IFLA_MTU */</span>", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(4) <span class=\"comment\">/* IFLA_LINK */</span>", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(4) <span class=\"comment\">/* IFLA_MASTER */</span>", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(1) <span class=\"comment\">/* IFLA_OPERSTATE */</span>", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(1) <span class=\"comment\">/* IFLA_LINKMODE */</span>", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(4) <span class=\"comment\">/* IFLA_NUM_VF */</span>", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#rtnl_vfinfo_size\">rtnl_vfinfo_size</a>(<a class=\"id\" href=\"#dev\">dev</a>) <span class=\"comment\">/* IFLA_VFINFO_LIST */</span>", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#rtnl_port_size\">rtnl_port_size</a>(<a class=\"id\" href=\"#dev\">dev</a>) <span class=\"comment\">/* IFLA_VF_PORTS + IFLA_PORT_SELF */</span>", 
"<span class=\"ts\"/>       + <a class=\"id\" href=\"#rtnl_link_get_size\">rtnl_link_get_size</a>(<a class=\"id\" href=\"#dev\">dev</a>); <span class=\"comment\">/* IFLA_LINKINFO */</span>", 
"}", 
"", 
"static int <a class=\"id\" href=\"#rtnl_vf_ports_fill\">rtnl_vf_ports_fill</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#vf_ports\">vf_ports</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#vf_port\">vf_port</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#vf\">vf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vf_ports\">vf_ports</a> = <a class=\"id\" href=\"#nla_nest_start\">nla_nest_start</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#IFLA_VF_PORTS\">IFLA_VF_PORTS</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vf_ports\">vf_ports</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#vf\">vf</a> = 0; <a class=\"id\" href=\"#vf\">vf</a> &lt; <a class=\"id\" href=\"#dev_num_vf\">dev_num_vf</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>); <a class=\"id\" href=\"#vf\">vf</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vf_port\">vf_port</a> = <a class=\"id\" href=\"#nla_nest_start\">nla_nest_start</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#IFLA_VF_PORT\">IFLA_VF_PORT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#vf_port\">vf_port</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#nla_put_failure\">nla_put_failure</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_U32\">NLA_PUT_U32</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#IFLA_PORT_VF\">IFLA_PORT_VF</a>, <a class=\"id\" href=\"#vf\">vf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#netdev_ops\">netdev_ops</a>-><a class=\"id\" href=\"#ndo_get_vf_port\">ndo_get_vf_port</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#vf\">vf</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#nla_put_failure\">nla_put_failure</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla_nest_cancel\">nla_nest_cancel</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#vf_port\">vf_port</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla_nest_end\">nla_nest_end</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#vf_port\">vf_port</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nla_nest_end\">nla_nest_end</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#vf_ports\">vf_ports</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#nla_put_failure\">nla_put_failure</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nla_nest_cancel\">nla_nest_cancel</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#vf_ports\">vf_ports</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#rtnl_port_self_fill\">rtnl_port_self_fill</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#port_self\">port_self</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port_self\">port_self</a> = <a class=\"id\" href=\"#nla_nest_start\">nla_nest_start</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#IFLA_PORT_SELF\">IFLA_PORT_SELF</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#port_self\">port_self</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#netdev_ops\">netdev_ops</a>-><a class=\"id\" href=\"#ndo_get_vf_port\">ndo_get_vf_port</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PORT_SELF_VF\">PORT_SELF_VF</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla_nest_cancel\">nla_nest_cancel</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#port_self\">port_self</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>) ? <a class=\"id\" href=\"#err\">err</a> : 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nla_nest_end\">nla_nest_end</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#port_self\">port_self</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#rtnl_port_fill\">rtnl_port_fill</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#netdev_ops\">netdev_ops</a>-><a class=\"id\" href=\"#ndo_get_vf_port\">ndo_get_vf_port</a> || !<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rtnl_port_self_fill\">rtnl_port_self_fill</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev_num_vf\">dev_num_vf</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rtnl_vf_ports_fill\">rtnl_vf_ports_fill</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
];
xr_frag_insert('l/ef/2f72d723d64cf90668a4b632326d00f81d20ae.xr', __xr_tmp);
