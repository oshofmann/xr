var __xr_tmp = [
"<span class=\"comment\">/* A small wrapper to also acknowledge the interrupt when it's handled.</span>", 
"<span class=\"comment\"> * I really need an EIO hook for the vring so I can ack the interrupt once we</span>", 
"<span class=\"comment\"> * know that we'll be handling the IRQ but before we invoke the callback since</span>", 
"<span class=\"comment\"> * the callback may notify the host which results in the host attempting to</span>", 
"<span class=\"comment\"> * raise an interrupt that we would then mask once we acknowledged the</span>", 
"<span class=\"comment\"> * interrupt. */</span>", 
"static <a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#vp_interrupt\">vp_interrupt</a>(int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#opaque\">opaque</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_pci_device\">virtio_pci_device</a> *<a class=\"id\" href=\"#vp_dev\">vp_dev</a> = <a class=\"id\" href=\"#opaque\">opaque</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#isr\">isr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* reading the ISR has the effect of also clearing it so it's very</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * important to save off the value. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isr\">isr</a> = <a class=\"id\" href=\"#ioread8\">ioread8</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a> + <a class=\"id\" href=\"#VIRTIO_PCI_ISR\">VIRTIO_PCI_ISR</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* It's definitely not us if the ISR was not high */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#isr\">isr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#IRQ_NONE\">IRQ_NONE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Configuration change?  Tell driver if it wants to know. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#isr\">isr</a> &amp; <a class=\"id\" href=\"#VIRTIO_PCI_ISR_CONFIG\">VIRTIO_PCI_ISR_CONFIG</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vp_config_changed\">vp_config_changed</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#opaque\">opaque</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#vp_vring_interrupt\">vp_vring_interrupt</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#opaque\">opaque</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#vp_free_vectors\">vp_free_vectors</a>(struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#vdev\">vdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_pci_device\">virtio_pci_device</a> *<a class=\"id\" href=\"#vp_dev\">vp_dev</a> = <a class=\"id\" href=\"#to_vp_device\">to_vp_device</a>(<a class=\"id\" href=\"#vdev\">vdev</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#intx_enabled\">intx_enabled</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_irq\">free_irq</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#vp_dev\">vp_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#intx_enabled\">intx_enabled</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_used_vectors\">msix_used_vectors</a>; ++<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_irq\">free_irq</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_entries\">msix_entries</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#vector\">vector</a>, <a class=\"id\" href=\"#vp_dev\">vp_dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_enabled\">msix_enabled</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Disable the vector used for configuration */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite16\">iowrite16</a>(<a class=\"id\" href=\"#VIRTIO_MSI_NO_VECTOR\">VIRTIO_MSI_NO_VECTOR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a> + <a class=\"id\" href=\"#VIRTIO_MSI_CONFIG_VECTOR\">VIRTIO_MSI_CONFIG_VECTOR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Flush the write out to device */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ioread16\">ioread16</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a> + <a class=\"id\" href=\"#VIRTIO_MSI_CONFIG_VECTOR\">VIRTIO_MSI_CONFIG_VECTOR</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_disable_msix\">pci_disable_msix</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_enabled\">msix_enabled</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_vectors\">msix_vectors</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_used_vectors\">msix_used_vectors</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_names\">msix_names</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_names\">msix_names</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_entries\">msix_entries</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_entries\">msix_entries</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#vp_request_msix_vectors\">vp_request_msix_vectors</a>(struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#vdev\">vdev</a>, int <a class=\"id\" href=\"#nvectors\">nvectors</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#per_vq_vectors\">per_vq_vectors</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_pci_device\">virtio_pci_device</a> *<a class=\"id\" href=\"#vp_dev\">vp_dev</a> = <a class=\"id\" href=\"#to_vp_device\">to_vp_device</a>(<a class=\"id\" href=\"#vdev\">vdev</a>);", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#dev_name\">dev_name</a>(&amp;<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#vdev\">vdev</a>.<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_entries\">msix_entries</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#nvectors\">nvectors</a> * sizeof *<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_entries\">msix_entries</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_entries\">msix_entries</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_names\">msix_names</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#nvectors\">nvectors</a> * sizeof *<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_names\">msix_names</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_names\">msix_names</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nvectors\">nvectors</a>; ++<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_entries\">msix_entries</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* pci_enable_msix returns positive if we can't get this many. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#pci_enable_msix\">pci_enable_msix</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#pci_dev\">pci_dev</a>, <a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_entries\">msix_entries</a>, <a class=\"id\" href=\"#nvectors\">nvectors</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_vectors\">msix_vectors</a> = <a class=\"id\" href=\"#nvectors\">nvectors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_enabled\">msix_enabled</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set the vector used for configuration */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a> = <a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_used_vectors\">msix_used_vectors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_names\">msix_names</a>[<a class=\"id\" href=\"#v\">v</a>], sizeof *<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_names\">msix_names</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> \"%s-config\", <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#request_irq\">request_irq</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_entries\">msix_entries</a>[<a class=\"id\" href=\"#v\">v</a>].<a class=\"id\" href=\"#vector\">vector</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#vp_config_changed\">vp_config_changed</a>, 0, <a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_names\">msix_names</a>[<a class=\"id\" href=\"#v\">v</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#vp_dev\">vp_dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>++<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_used_vectors\">msix_used_vectors</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iowrite16\">iowrite16</a>(<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a> + <a class=\"id\" href=\"#VIRTIO_MSI_CONFIG_VECTOR\">VIRTIO_MSI_CONFIG_VECTOR</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Verify we had enough resources to assign the vector */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a> = <a class=\"id\" href=\"#ioread16\">ioread16</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a> + <a class=\"id\" href=\"#VIRTIO_MSI_CONFIG_VECTOR\">VIRTIO_MSI_CONFIG_VECTOR</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> == <a class=\"id\" href=\"#VIRTIO_MSI_NO_VECTOR\">VIRTIO_MSI_NO_VECTOR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#per_vq_vectors\">per_vq_vectors</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Shared vector for all VQs */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a> = <a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_used_vectors\">msix_used_vectors</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_names\">msix_names</a>[<a class=\"id\" href=\"#v\">v</a>], sizeof *<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_names\">msix_names</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"%s-virtqueues\", <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#request_irq\">request_irq</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_entries\">msix_entries</a>[<a class=\"id\" href=\"#v\">v</a>].<a class=\"id\" href=\"#vector\">vector</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#vp_vring_interrupt\">vp_vring_interrupt</a>, 0, <a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_names\">msix_names</a>[<a class=\"id\" href=\"#v\">v</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#vp_dev\">vp_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_used_vectors\">msix_used_vectors</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vp_free_vectors\">vp_free_vectors</a>(<a class=\"id\" href=\"#vdev\">vdev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#vp_request_intx\">vp_request_intx</a>(struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#vdev\">vdev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_pci_device\">virtio_pci_device</a> *<a class=\"id\" href=\"#vp_dev\">vp_dev</a> = <a class=\"id\" href=\"#to_vp_device\">to_vp_device</a>(<a class=\"id\" href=\"#vdev\">vdev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#request_irq\">request_irq</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#vp_interrupt\">vp_interrupt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#IRQF_SHARED\">IRQF_SHARED</a>, <a class=\"id\" href=\"#dev_name\">dev_name</a>(&amp;<a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#vp_dev\">vp_dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#intx_enabled\">intx_enabled</a> = 1;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#virtqueue\">virtqueue</a> *<a class=\"id\" href=\"#setup_vq\">setup_vq</a>(struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#vdev\">vdev</a>, unsigned <a class=\"id\" href=\"#index\">index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  void (*<a class=\"id\" href=\"#callback\">callback</a>)(struct <a class=\"id\" href=\"#virtqueue\">virtqueue</a> *<a class=\"id\" href=\"#vq\">vq</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const char *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#msix_vec\">msix_vec</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_pci_device\">virtio_pci_device</a> *<a class=\"id\" href=\"#vp_dev\">vp_dev</a> = <a class=\"id\" href=\"#to_vp_device\">to_vp_device</a>(<a class=\"id\" href=\"#vdev\">vdev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_pci_vq_info\">virtio_pci_vq_info</a> *<a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtqueue\">virtqueue</a> *<a class=\"id\" href=\"#vq\">vq</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Select the queue we're interested in */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iowrite16\">iowrite16</a>(<a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a> + <a class=\"id\" href=\"#VIRTIO_PCI_QUEUE_SEL\">VIRTIO_PCI_QUEUE_SEL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check if queue is either not available or already active. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a> = <a class=\"id\" href=\"#ioread16\">ioread16</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a> + <a class=\"id\" href=\"#VIRTIO_PCI_QUEUE_NUM\">VIRTIO_PCI_QUEUE_NUM</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#num\">num</a> || <a class=\"id\" href=\"#ioread32\">ioread32</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a> + <a class=\"id\" href=\"#VIRTIO_PCI_QUEUE_PFN\">VIRTIO_PCI_QUEUE_PFN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOENT\">ENOENT</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* allocate and fill out our structure the represents an active</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * queue */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(struct <a class=\"id\" href=\"#virtio_pci_vq_info\">virtio_pci_vq_info</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#queue_index\">queue_index</a> = <a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#num\">num</a> = <a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#msix_vector\">msix_vector</a> = <a class=\"id\" href=\"#msix_vec\">msix_vec</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#PAGE_ALIGN\">PAGE_ALIGN</a>(<a class=\"id\" href=\"#vring_size\">vring_size</a>(<a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#VIRTIO_PCI_VRING_ALIGN\">VIRTIO_PCI_VRING_ALIGN</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#queue\">queue</a> = <a class=\"id\" href=\"#alloc_pages_exact\">alloc_pages_exact</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>|<a class=\"id\" href=\"#__GFP_ZERO\">__GFP_ZERO</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#queue\">queue</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_info\">out_info</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* activate the queue */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iowrite32\">iowrite32</a>(<a class=\"id\" href=\"#virt_to_phys\">virt_to_phys</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#queue\">queue</a>) >> <a class=\"id\" href=\"#VIRTIO_PCI_QUEUE_ADDR_SHIFT\">VIRTIO_PCI_QUEUE_ADDR_SHIFT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a> + <a class=\"id\" href=\"#VIRTIO_PCI_QUEUE_PFN\">VIRTIO_PCI_QUEUE_PFN</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* create the vring */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vq\">vq</a> = <a class=\"id\" href=\"#vring_new_virtqueue\">vring_new_virtqueue</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#VIRTIO_PCI_VRING_ALIGN\">VIRTIO_PCI_VRING_ALIGN</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#queue\">queue</a>, <a class=\"id\" href=\"#vp_notify\">vp_notify</a>, <a class=\"id\" href=\"#callback\">callback</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vq\">vq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_activate_queue\">out_activate_queue</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vq\">vq</a>-><a class=\"id\" href=\"#priv\">priv</a> = <a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#vq\">vq</a> = <a class=\"id\" href=\"#vq\">vq</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#msix_vec\">msix_vec</a> != <a class=\"id\" href=\"#VIRTIO_MSI_NO_VECTOR\">VIRTIO_MSI_NO_VECTOR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite16\">iowrite16</a>(<a class=\"id\" href=\"#msix_vec\">msix_vec</a>, <a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a> + <a class=\"id\" href=\"#VIRTIO_MSI_QUEUE_VECTOR\">VIRTIO_MSI_QUEUE_VECTOR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msix_vec\">msix_vec</a> = <a class=\"id\" href=\"#ioread16\">ioread16</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a> + <a class=\"id\" href=\"#VIRTIO_MSI_QUEUE_VECTOR\">VIRTIO_MSI_QUEUE_VECTOR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#msix_vec\">msix_vec</a> == <a class=\"id\" href=\"#VIRTIO_MSI_NO_VECTOR\">VIRTIO_MSI_NO_VECTOR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_assign\">out_assign</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#virtqueues\">virtqueues</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#vq\">vq</a>;", 
"", 
"<a class=\"id\" href=\"#out_assign\">out_assign</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vring_del_virtqueue\">vring_del_virtqueue</a>(<a class=\"id\" href=\"#vq\">vq</a>);", 
"<a class=\"id\" href=\"#out_activate_queue\">out_activate_queue</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iowrite32\">iowrite32</a>(0, <a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a> + <a class=\"id\" href=\"#VIRTIO_PCI_QUEUE_PFN\">VIRTIO_PCI_QUEUE_PFN</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_pages_exact\">free_pages_exact</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#queue\">queue</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<a class=\"id\" href=\"#out_info\">out_info</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#vp_del_vq\">vp_del_vq</a>(struct <a class=\"id\" href=\"#virtqueue\">virtqueue</a> *<a class=\"id\" href=\"#vq\">vq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_pci_device\">virtio_pci_device</a> *<a class=\"id\" href=\"#vp_dev\">vp_dev</a> = <a class=\"id\" href=\"#to_vp_device\">to_vp_device</a>(<a class=\"id\" href=\"#vq\">vq</a>-><a class=\"id\" href=\"#vdev\">vdev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_pci_vq_info\">virtio_pci_vq_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#vq\">vq</a>-><a class=\"id\" href=\"#priv\">priv</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iowrite16\">iowrite16</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#queue_index\">queue_index</a>, <a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a> + <a class=\"id\" href=\"#VIRTIO_PCI_QUEUE_SEL\">VIRTIO_PCI_QUEUE_SEL</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_enabled\">msix_enabled</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iowrite16\">iowrite16</a>(<a class=\"id\" href=\"#VIRTIO_MSI_NO_VECTOR\">VIRTIO_MSI_NO_VECTOR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a> + <a class=\"id\" href=\"#VIRTIO_MSI_QUEUE_VECTOR\">VIRTIO_MSI_QUEUE_VECTOR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Flush the write out to device */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ioread8\">ioread8</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a> + <a class=\"id\" href=\"#VIRTIO_PCI_ISR\">VIRTIO_PCI_ISR</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vring_del_virtqueue\">vring_del_virtqueue</a>(<a class=\"id\" href=\"#vq\">vq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Select and deactivate the queue */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iowrite32\">iowrite32</a>(0, <a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a> + <a class=\"id\" href=\"#VIRTIO_PCI_QUEUE_PFN\">VIRTIO_PCI_QUEUE_PFN</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#PAGE_ALIGN\">PAGE_ALIGN</a>(<a class=\"id\" href=\"#vring_size\">vring_size</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#VIRTIO_PCI_VRING_ALIGN\">VIRTIO_PCI_VRING_ALIGN</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_pages_exact\">free_pages_exact</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#queue\">queue</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#info\">info</a>);", 
"}", 
"", 
"<span class=\"comment\">/* the config-&gt;del_vqs() implementation */</span>", 
"static void <a class=\"id\" href=\"#vp_del_vqs\">vp_del_vqs</a>(struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#vdev\">vdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_pci_device\">virtio_pci_device</a> *<a class=\"id\" href=\"#vp_dev\">vp_dev</a> = <a class=\"id\" href=\"#to_vp_device\">to_vp_device</a>(<a class=\"id\" href=\"#vdev\">vdev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtqueue\">virtqueue</a> *<a class=\"id\" href=\"#vq\">vq</a>, *<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_pci_vq_info\">virtio_pci_vq_info</a> *<a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#vq\">vq</a>, <a class=\"id\" href=\"#n\">n</a>, &amp;<a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#vqs\">vqs</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#vq\">vq</a>-><a class=\"id\" href=\"#priv\">priv</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#per_vq_vectors\">per_vq_vectors</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#msix_vector\">msix_vector</a> != <a class=\"id\" href=\"#VIRTIO_MSI_NO_VECTOR\">VIRTIO_MSI_NO_VECTOR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_irq\">free_irq</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_entries\">msix_entries</a>[<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#msix_vector\">msix_vector</a>].<a class=\"id\" href=\"#vector\">vector</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#vq\">vq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vp_del_vq\">vp_del_vq</a>(<a class=\"id\" href=\"#vq\">vq</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#per_vq_vectors\">per_vq_vectors</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vp_free_vectors\">vp_free_vectors</a>(<a class=\"id\" href=\"#vdev\">vdev</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#vp_try_to_find_vqs\">vp_try_to_find_vqs</a>(struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#vdev\">vdev</a>, unsigned <a class=\"id\" href=\"#nvqs\">nvqs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#virtqueue\">virtqueue</a> *<a class=\"id\" href=\"#vqs\">vqs</a>[],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#vq_callback_t\">vq_callback_t</a> *<a class=\"id\" href=\"#callbacks\">callbacks</a>[],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const char *<a class=\"id\" href=\"#names\">names</a>[],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#use_msix\">use_msix</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#per_vq_vectors\">per_vq_vectors</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_pci_device\">virtio_pci_device</a> *<a class=\"id\" href=\"#vp_dev\">vp_dev</a> = <a class=\"id\" href=\"#to_vp_device\">to_vp_device</a>(<a class=\"id\" href=\"#vdev\">vdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#msix_vec\">msix_vec</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#nvectors\">nvectors</a>, <a class=\"id\" href=\"#allocated_vectors\">allocated_vectors</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#use_msix\">use_msix</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Old style: one normal interrupt for change and all vqs. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#vp_request_intx\">vp_request_intx</a>(<a class=\"id\" href=\"#vdev\">vdev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_request\">error_request</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#per_vq_vectors\">per_vq_vectors</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Best option: one for change interrupt, one per vq. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nvectors\">nvectors</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nvqs\">nvqs</a>; ++<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#callbacks\">callbacks</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#nvectors\">nvectors</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Second best: one for change, shared for all vqs. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nvectors\">nvectors</a> = 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#vp_request_msix_vectors\">vp_request_msix_vectors</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#nvectors\">nvectors</a>, <a class=\"id\" href=\"#per_vq_vectors\">per_vq_vectors</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_request\">error_request</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#per_vq_vectors\">per_vq_vectors</a> = <a class=\"id\" href=\"#per_vq_vectors\">per_vq_vectors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#allocated_vectors\">allocated_vectors</a> = <a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_used_vectors\">msix_used_vectors</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nvqs\">nvqs</a>; ++<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#callbacks\">callbacks</a>[<a class=\"id\" href=\"#i\">i</a>] || !<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_enabled\">msix_enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msix_vec\">msix_vec</a> = <a class=\"id\" href=\"#VIRTIO_MSI_NO_VECTOR\">VIRTIO_MSI_NO_VECTOR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#per_vq_vectors\">per_vq_vectors</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msix_vec\">msix_vec</a> = <a class=\"id\" href=\"#allocated_vectors\">allocated_vectors</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msix_vec\">msix_vec</a> = <a class=\"id\" href=\"#VP_MSIX_VQ_VECTOR\">VP_MSIX_VQ_VECTOR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vqs\">vqs</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#setup_vq\">setup_vq</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#callbacks\">callbacks</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#msix_vec\">msix_vec</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#vqs\">vqs</a>[<a class=\"id\" href=\"#i\">i</a>])) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#vqs\">vqs</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_find\">error_find</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#per_vq_vectors\">per_vq_vectors</a> || <a class=\"id\" href=\"#msix_vec\">msix_vec</a> == <a class=\"id\" href=\"#VIRTIO_MSI_NO_VECTOR\">VIRTIO_MSI_NO_VECTOR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* allocate per-vq irq if available and necessary */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_names\">msix_names</a>[<a class=\"id\" href=\"#msix_vec\">msix_vec</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> sizeof *<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_names\">msix_names</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"%s-%s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dev_name\">dev_name</a>(&amp;<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#vdev\">vdev</a>.<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#request_irq\">request_irq</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_entries\">msix_entries</a>[<a class=\"id\" href=\"#msix_vec\">msix_vec</a>].<a class=\"id\" href=\"#vector\">vector</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#vring_interrupt\">vring_interrupt</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#msix_names\">msix_names</a>[<a class=\"id\" href=\"#msix_vec\">msix_vec</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#vqs\">vqs</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vp_del_vq\">vp_del_vq</a>(<a class=\"id\" href=\"#vqs\">vqs</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_find\">error_find</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#error_find\">error_find</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vp_del_vqs\">vp_del_vqs</a>(<a class=\"id\" href=\"#vdev\">vdev</a>);", 
"", 
"<a class=\"id\" href=\"#error_request\">error_request</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/* the config-&gt;find_vqs() implementation */</span>", 
"static int <a class=\"id\" href=\"#vp_find_vqs\">vp_find_vqs</a>(struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#vdev\">vdev</a>, unsigned <a class=\"id\" href=\"#nvqs\">nvqs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#virtqueue\">virtqueue</a> *<a class=\"id\" href=\"#vqs\">vqs</a>[],", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#vq_callback_t\">vq_callback_t</a> *<a class=\"id\" href=\"#callbacks\">callbacks</a>[],", 
"<span class=\"ts\"/><span class=\"ts\"/>       const char *<a class=\"id\" href=\"#names\">names</a>[])", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Try MSI-X with one vector per queue. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#vp_try_to_find_vqs\">vp_try_to_find_vqs</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#nvqs\">nvqs</a>, <a class=\"id\" href=\"#vqs\">vqs</a>, <a class=\"id\" href=\"#callbacks\">callbacks</a>, <a class=\"id\" href=\"#names\">names</a>, <a class=\"id\" href=\"#true\">true</a>, <a class=\"id\" href=\"#true\">true</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"comment\">/* Fallback: MSI-X with one vector for config, one shared for queues. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#vp_try_to_find_vqs\">vp_try_to_find_vqs</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#nvqs\">nvqs</a>, <a class=\"id\" href=\"#vqs\">vqs</a>, <a class=\"id\" href=\"#callbacks\">callbacks</a>, <a class=\"id\" href=\"#names\">names</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#true\">true</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"comment\">/* Finally fall back to regular interrupts. */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#vp_try_to_find_vqs\">vp_try_to_find_vqs</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#nvqs\">nvqs</a>, <a class=\"id\" href=\"#vqs\">vqs</a>, <a class=\"id\" href=\"#callbacks\">callbacks</a>, <a class=\"id\" href=\"#names\">names</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#false\">false</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#virtio_config_ops\">virtio_config_ops</a> <a class=\"id\" href=\"#virtio_pci_config_ops\">virtio_pci_config_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get\">get</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#vp_get\">vp_get</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set\">set</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#vp_set\">vp_set</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_status\">get_status</a><span class=\"ts\"/>= <a class=\"id\" href=\"#vp_get_status\">vp_get_status</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_status\">set_status</a><span class=\"ts\"/>= <a class=\"id\" href=\"#vp_set_status\">vp_set_status</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#reset\">reset</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#vp_reset\">vp_reset</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#find_vqs\">find_vqs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#vp_find_vqs\">vp_find_vqs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#del_vqs\">del_vqs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#vp_del_vqs\">vp_del_vqs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_features\">get_features</a><span class=\"ts\"/>= <a class=\"id\" href=\"#vp_get_features\">vp_get_features</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#finalize_features\">finalize_features</a> = <a class=\"id\" href=\"#vp_finalize_features\">vp_finalize_features</a>,", 
"};", 
"", 
"static void <a class=\"id\" href=\"#virtio_pci_release_dev\">virtio_pci_release_dev</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#_d\">_d</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#_d\">_d</a>, struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_pci_device\">virtio_pci_device</a> *<a class=\"id\" href=\"#vp_dev\">vp_dev</a> = <a class=\"id\" href=\"#to_vp_device\">to_vp_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#pci_dev\">pci_dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vp_del_vqs\">vp_del_vqs</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_set_drvdata\">pci_set_drvdata</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_iounmap\">pci_iounmap</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>, <a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_release_regions\">pci_release_regions</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_disable_device\">pci_disable_device</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/* the PCI probing function */</span>", 
"static int <a class=\"id\" href=\"#__devinit\">__devinit</a> <a class=\"id\" href=\"#virtio_pci_probe\">virtio_pci_probe</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_pci_device\">virtio_pci_device</a> *<a class=\"id\" href=\"#vp_dev\">vp_dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We only own devices &gt;= 0x1000 and &lt;= 0x103f: leave the rest. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#device\">device</a> &lt; 0x1000 || <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#device\">device</a> &gt; 0x103f)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#revision\">revision</a> != <a class=\"id\" href=\"#VIRTIO_PCI_ABI_VERSION\">VIRTIO_PCI_ABI_VERSION</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"virtio_pci: expected ABI version %d, got %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#VIRTIO_PCI_ABI_VERSION\">VIRTIO_PCI_ABI_VERSION</a>, <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#revision\">revision</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* allocate our structure and fill it out */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vp_dev\">vp_dev</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#virtio_pci_device\">virtio_pci_device</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vp_dev\">vp_dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#vdev\">vdev</a>.<a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#virtio_pci_root\">virtio_pci_root</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#vdev\">vdev</a>.<a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#virtio_pci_release_dev\">virtio_pci_release_dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#vdev\">vdev</a>.<a class=\"id\" href=\"#config\">config</a> = &amp;<a class=\"id\" href=\"#virtio_pci_config_ops\">virtio_pci_config_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#pci_dev\">pci_dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#virtqueues\">virtqueues</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Disable MSI/MSIX to bring device to a known good state. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_msi_off\">pci_msi_off</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* enable the device */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#pci_enable_device\">pci_enable_device</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#pci_request_regions\">pci_request_regions</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>, \"virtio-pci\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_enable_device\">out_enable_device</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a> = <a class=\"id\" href=\"#pci_iomap\">pci_iomap</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>, 0, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_req_regions\">out_req_regions</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_set_drvdata\">pci_set_drvdata</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>, <a class=\"id\" href=\"#vp_dev\">vp_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_set_master\">pci_set_master</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we use the subsystem vendor/device id as the virtio vendor/device</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * id.  this allows us to use the same PCI vendor/device id for all</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * virtio devices and to identify the particular virtio driver by</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the subsystem ids */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#vdev\">vdev</a>.<a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#vendor\">vendor</a> = <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#subsystem_vendor\">subsystem_vendor</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#vdev\">vdev</a>.<a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#device\">device</a> = <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#subsystem_device\">subsystem_device</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* finally register the virtio device */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#register_virtio_device\">register_virtio_device</a>(&amp;<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#vdev\">vdev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_set_drvdata\">out_set_drvdata</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out_set_drvdata\">out_set_drvdata</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_set_drvdata\">pci_set_drvdata</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_iounmap\">pci_iounmap</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>, <a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#ioaddr\">ioaddr</a>);", 
"<a class=\"id\" href=\"#out_req_regions\">out_req_regions</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_release_regions\">pci_release_regions</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<a class=\"id\" href=\"#out_enable_device\">out_enable_device</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_disable_device\">pci_disable_device</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#vp_dev\">vp_dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__devexit\">__devexit</a> <a class=\"id\" href=\"#virtio_pci_remove\">virtio_pci_remove</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_pci_device\">virtio_pci_device</a> *<a class=\"id\" href=\"#vp_dev\">vp_dev</a> = <a class=\"id\" href=\"#pci_get_drvdata\">pci_get_drvdata</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_virtio_device\">unregister_virtio_device</a>(&amp;<a class=\"id\" href=\"#vp_dev\">vp_dev</a>-><a class=\"id\" href=\"#vdev\">vdev</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM\">CONFIG_PM</a>", 
"static int <a class=\"id\" href=\"#virtio_pci_suspend\">virtio_pci_suspend</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a>, <a class=\"id\" href=\"#pm_message_t\">pm_message_t</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_save_state\">pci_save_state</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_set_power_state\">pci_set_power_state</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>, <a class=\"id\" href=\"#PCI_D3hot\">PCI_D3hot</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#virtio_pci_resume\">virtio_pci_resume</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_restore_state\">pci_restore_state</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_set_power_state\">pci_set_power_state</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>, <a class=\"id\" href=\"#PCI_D0\">PCI_D0</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> <a class=\"id\" href=\"#virtio_pci_driver\">virtio_pci_driver</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"virtio-pci\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#id_table\">id_table</a><span class=\"ts\"/>= <a class=\"id\" href=\"#virtio_pci_id_table\">virtio_pci_id_table</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#probe\">probe</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#virtio_pci_probe\">virtio_pci_probe</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#remove\">remove</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#__devexit_p\">__devexit_p</a>(<a class=\"id\" href=\"#virtio_pci_remove\">virtio_pci_remove</a>),", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM\">CONFIG_PM</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#suspend\">suspend</a><span class=\"ts\"/>= <a class=\"id\" href=\"#virtio_pci_suspend\">virtio_pci_suspend</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#resume\">resume</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#virtio_pci_resume\">virtio_pci_resume</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#virtio_pci_init\">virtio_pci_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#virtio_pci_root\">virtio_pci_root</a> = <a class=\"id\" href=\"#root_device_register\">root_device_register</a>(\"virtio-pci\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#virtio_pci_root\">virtio_pci_root</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#virtio_pci_root\">virtio_pci_root</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#pci_register_driver\">pci_register_driver</a>(&amp;<a class=\"id\" href=\"#virtio_pci_driver\">virtio_pci_driver</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#root_device_unregister\">root_device_unregister</a>(<a class=\"id\" href=\"#virtio_pci_root\">virtio_pci_root</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#virtio_pci_init\">virtio_pci_init</a>);", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#virtio_pci_exit\">virtio_pci_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_unregister_driver\">pci_unregister_driver</a>(&amp;<a class=\"id\" href=\"#virtio_pci_driver\">virtio_pci_driver</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root_device_unregister\">root_device_unregister</a>(<a class=\"id\" href=\"#virtio_pci_root\">virtio_pci_root</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#virtio_pci_exit\">virtio_pci_exit</a>);", 
];
xr_frag_insert('l/ef/7e75d3f8e028ef5765229c45c7f58a295beebb.xr', __xr_tmp);
