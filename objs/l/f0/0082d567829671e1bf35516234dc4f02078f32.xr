var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_RESOURCE_H\">_LINUX_RESOURCE_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_RESOURCE_H\">_LINUX_RESOURCE_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Resource control/accounting header file for linux</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Definition of struct rusage taken from BSD 4.3 Reno</span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> * We don't support all of these yet, but we might as well have them....</span>", 
"<span class=\"comment\"> * Otherwise, each time we add new items, programs which depend on this</span>", 
"<span class=\"comment\"> * structure will lose.  This reduces the chances of that happening.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#RUSAGE_SELF\">RUSAGE_SELF</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#RUSAGE_CHILDREN\">RUSAGE_CHILDREN</a><span class=\"ts\"/>(-1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RUSAGE_BOTH\">RUSAGE_BOTH</a><span class=\"ts\"/>(-2)<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* sys_wait4() uses this */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#RUSAGE_THREAD\">RUSAGE_THREAD</a><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* only the calling thread */</span>", 
"", 
"struct<span class=\"ts\"/><a class=\"id\" href=\"#rusage\">rusage</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timeval\">timeval</a> <a class=\"id\" href=\"#ru_utime\">ru_utime</a>;<span class=\"ts\"/><span class=\"comment\">/* user time used */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timeval\">timeval</a> <a class=\"id\" href=\"#ru_stime\">ru_stime</a>;<span class=\"ts\"/><span class=\"comment\">/* system time used */</span>", 
"<span class=\"ts\"/>long<span class=\"ts\"/><a class=\"id\" href=\"#ru_maxrss\">ru_maxrss</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* maximum resident set size */</span>", 
"<span class=\"ts\"/>long<span class=\"ts\"/><a class=\"id\" href=\"#ru_ixrss\">ru_ixrss</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* integral shared memory size */</span>", 
"<span class=\"ts\"/>long<span class=\"ts\"/><a class=\"id\" href=\"#ru_idrss\">ru_idrss</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* integral unshared data size */</span>", 
"<span class=\"ts\"/>long<span class=\"ts\"/><a class=\"id\" href=\"#ru_isrss\">ru_isrss</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* integral unshared stack size */</span>", 
"<span class=\"ts\"/>long<span class=\"ts\"/><a class=\"id\" href=\"#ru_minflt\">ru_minflt</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* page reclaims */</span>", 
"<span class=\"ts\"/>long<span class=\"ts\"/><a class=\"id\" href=\"#ru_majflt\">ru_majflt</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* page faults */</span>", 
"<span class=\"ts\"/>long<span class=\"ts\"/><a class=\"id\" href=\"#ru_nswap\">ru_nswap</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* swaps */</span>", 
"<span class=\"ts\"/>long<span class=\"ts\"/><a class=\"id\" href=\"#ru_inblock\">ru_inblock</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* block input operations */</span>", 
"<span class=\"ts\"/>long<span class=\"ts\"/><a class=\"id\" href=\"#ru_oublock\">ru_oublock</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* block output operations */</span>", 
"<span class=\"ts\"/>long<span class=\"ts\"/><a class=\"id\" href=\"#ru_msgsnd\">ru_msgsnd</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* messages sent */</span>", 
"<span class=\"ts\"/>long<span class=\"ts\"/><a class=\"id\" href=\"#ru_msgrcv\">ru_msgrcv</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* messages received */</span>", 
"<span class=\"ts\"/>long<span class=\"ts\"/><a class=\"id\" href=\"#ru_nsignals\">ru_nsignals</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* signals received */</span>", 
"<span class=\"ts\"/>long<span class=\"ts\"/><a class=\"id\" href=\"#ru_nvcsw\">ru_nvcsw</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* voluntary context switches */</span>", 
"<span class=\"ts\"/>long<span class=\"ts\"/><a class=\"id\" href=\"#ru_nivcsw\">ru_nivcsw</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* involuntary \" */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#rlimit\">rlimit</a> {", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#rlim_cur\">rlim_cur</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#rlim_max\">rlim_max</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RLIM64_INFINITY\">RLIM64_INFINITY</a><span class=\"ts\"/><span class=\"ts\"/>(~0ULL)", 
"", 
"struct <a class=\"id\" href=\"#rlimit64\">rlimit64</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#rlim_cur\">rlim_cur</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#rlim_max\">rlim_max</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#PRIO_MIN\">PRIO_MIN</a><span class=\"ts\"/>(-20)", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#PRIO_MAX\">PRIO_MAX</a><span class=\"ts\"/>20", 
"", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#PRIO_PROCESS\">PRIO_PROCESS</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#PRIO_PGRP\">PRIO_PGRP</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#PRIO_USER\">PRIO_USER</a><span class=\"ts\"/>2", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Limit the stack by to some sane default: root can always</span>", 
"<span class=\"comment\"> * increase this limit if needed..  8MB seems reasonable.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_STK_LIM\">_STK_LIM</a><span class=\"ts\"/>(8*1024*1024)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * GPG2 wants 64kB of mlocked memory, to make sure pass phrases</span>", 
"<span class=\"comment\"> * and other sensitive information are never written to disk.</span>", 
"<span class=\"comment\"> */</span>", 
];
xr_frag_insert('l/f0/0082d567829671e1bf35516234dc4f02078f32.xr', __xr_tmp);
