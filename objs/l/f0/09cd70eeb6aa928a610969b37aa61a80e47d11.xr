var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Generic INET transport hashtables</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Lotsa people, from code originally in tcp</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *      modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *      as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *      2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#random\">random</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#wait\">wait</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_hashtables\">inet_hashtables</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Allocate and initialize a new local port bind bucket.</span>", 
"<span class=\"comment\"> * The bindhash mutex for snum's hash chain must be held here.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#inet_bind_bucket\">inet_bind_bucket</a> *<a class=\"id\" href=\"#inet_bind_bucket_create\">inet_bind_bucket_create</a>(struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#cachep\">cachep</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#inet_bind_hashbucket\">inet_bind_hashbucket</a> *<a class=\"id\" href=\"#head\">head</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const unsigned short <a class=\"id\" href=\"#snum\">snum</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_bind_bucket\">inet_bind_bucket</a> *<a class=\"id\" href=\"#tb\">tb</a> = <a class=\"id\" href=\"#kmem_cache_alloc\">kmem_cache_alloc</a>(<a class=\"id\" href=\"#cachep\">cachep</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tb\">tb</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_pnet\">write_pnet</a>(&amp;<a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#ib_net\">ib_net</a>, <a class=\"id\" href=\"#hold_net\">hold_net</a>(<a class=\"id\" href=\"#net\">net</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#port\">port</a>      = <a class=\"id\" href=\"#snum\">snum</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#fastreuse\">fastreuse</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#num_owners\">num_owners</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_HLIST_HEAD\">INIT_HLIST_HEAD</a>(&amp;<a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#owners\">owners</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_add_head\">hlist_add_head</a>(&amp;<a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#chain\">chain</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tb\">tb</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Caller must hold hashbucket lock for this tb with local BH disabled</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#inet_bind_bucket_destroy\">inet_bind_bucket_destroy</a>(struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#cachep\">cachep</a>, struct <a class=\"id\" href=\"#inet_bind_bucket\">inet_bind_bucket</a> *<a class=\"id\" href=\"#tb\">tb</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hlist_empty\">hlist_empty</a>(&amp;<a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#owners\">owners</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__hlist_del\">__hlist_del</a>(&amp;<a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_net\">release_net</a>(<a class=\"id\" href=\"#ib_net\">ib_net</a>(<a class=\"id\" href=\"#tb\">tb</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#cachep\">cachep</a>, <a class=\"id\" href=\"#tb\">tb</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#inet_bind_hash\">inet_bind_hash</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#inet_bind_bucket\">inet_bind_bucket</a> *<a class=\"id\" href=\"#tb\">tb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    const unsigned short <a class=\"id\" href=\"#snum\">snum</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_hashinfo\">inet_hashinfo</a> *<a class=\"id\" href=\"#hashinfo\">hashinfo</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#h\">h</a>.<a class=\"id\" href=\"#hashinfo\">hashinfo</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#bsockets\">bsockets</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#inet_num\">inet_num</a> = <a class=\"id\" href=\"#snum\">snum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_add_bind_node\">sk_add_bind_node</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#owners\">owners</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#num_owners\">num_owners</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_bind_hash\">icsk_bind_hash</a> = <a class=\"id\" href=\"#tb\">tb</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Get rid of any references to a local port held by the given sock.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__inet_put_port\">__inet_put_port</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_hashinfo\">inet_hashinfo</a> *<a class=\"id\" href=\"#hashinfo\">hashinfo</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#h\">h</a>.<a class=\"id\" href=\"#hashinfo\">hashinfo</a>;", 
"<span class=\"ts\"/>const int <a class=\"id\" href=\"#bhash\">bhash</a> = <a class=\"id\" href=\"#inet_bhashfn\">inet_bhashfn</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#inet_num\">inet_num</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#bhash_size\">bhash_size</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_bind_hashbucket\">inet_bind_hashbucket</a> *<a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#bhash\">bhash</a>[<a class=\"id\" href=\"#bhash\">bhash</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_bind_bucket\">inet_bind_bucket</a> *<a class=\"id\" href=\"#tb\">tb</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#bsockets\">bsockets</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tb\">tb</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_bind_hash\">icsk_bind_hash</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__sk_del_bind_node\">__sk_del_bind_node</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#num_owners\">num_owners</a>--;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_bind_hash\">icsk_bind_hash</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#inet_num\">inet_num</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_bind_bucket_destroy\">inet_bind_bucket_destroy</a>(<a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#bind_bucket_cachep\">bind_bucket_cachep</a>, <a class=\"id\" href=\"#tb\">tb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#inet_put_port\">inet_put_port</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_disable\">local_bh_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__inet_put_port\">__inet_put_port</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_enable\">local_bh_enable</a>();", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_put_port\">inet_put_port</a>);", 
"", 
"void <a class=\"id\" href=\"#__inet_inherit_port\">__inet_inherit_port</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#child\">child</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_hashinfo\">inet_hashinfo</a> *<a class=\"id\" href=\"#table\">table</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#h\">h</a>.<a class=\"id\" href=\"#hashinfo\">hashinfo</a>;", 
"<span class=\"ts\"/>const int <a class=\"id\" href=\"#bhash\">bhash</a> = <a class=\"id\" href=\"#inet_bhashfn\">inet_bhashfn</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#child\">child</a>)-><a class=\"id\" href=\"#inet_num\">inet_num</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#bhash_size\">bhash_size</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_bind_hashbucket\">inet_bind_hashbucket</a> *<a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#bhash\">bhash</a>[<a class=\"id\" href=\"#bhash\">bhash</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_bind_bucket\">inet_bind_bucket</a> *<a class=\"id\" href=\"#tb\">tb</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tb\">tb</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_bind_hash\">icsk_bind_hash</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_add_bind_node\">sk_add_bind_node</a>(<a class=\"id\" href=\"#child\">child</a>, &amp;<a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#owners\">owners</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#child\">child</a>)-><a class=\"id\" href=\"#icsk_bind_hash\">icsk_bind_hash</a> = <a class=\"id\" href=\"#tb\">tb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__inet_inherit_port\">__inet_inherit_port</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#compute_score\">compute_score</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const unsigned short <a class=\"id\" href=\"#hnum\">hnum</a>, const <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const int <a class=\"id\" href=\"#dif\">dif</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#score\">score</a> = -1;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#net\">net</a>) && <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_num\">inet_num</a> == <a class=\"id\" href=\"#hnum\">hnum</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#ipv6_only_sock\">ipv6_only_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#rcv_saddr\">rcv_saddr</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_rcv_saddr\">inet_rcv_saddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a> == <a class=\"id\" href=\"#PF_INET\">PF_INET</a> ? 1 : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rcv_saddr\">rcv_saddr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rcv_saddr\">rcv_saddr</a> != <a class=\"id\" href=\"#daddr\">daddr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a> += 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a> != <a class=\"id\" href=\"#dif\">dif</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a> += 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#score\">score</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Don't inline this cruft. Here are some nice properties to exploit here. The</span>", 
"<span class=\"comment\"> * BSD API does not allow a listening sock to specify the remote port nor the</span>", 
"<span class=\"comment\"> * remote address for the connection. So always assume those are both</span>", 
"<span class=\"comment\"> * wildcarded during the search since they can never be otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"", 
"struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#__inet_lookup_listener\">__inet_lookup_listener</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#inet_hashinfo\">inet_hashinfo</a> *<a class=\"id\" href=\"#hashinfo\">hashinfo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#daddr\">daddr</a>, const unsigned short <a class=\"id\" href=\"#hnum\">hnum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const int <a class=\"id\" href=\"#dif\">dif</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, *<a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_nulls_node\">hlist_nulls_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#inet_lhashfn\">inet_lhashfn</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hnum\">hnum</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_listen_hashbucket\">inet_listen_hashbucket</a> *<a class=\"id\" href=\"#ilb\">ilb</a> = &amp;<a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#listening_hash\">listening_hash</a>[<a class=\"id\" href=\"#hash\">hash</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#score\">score</a>, <a class=\"id\" href=\"#hiscore\">hiscore</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<a class=\"id\" href=\"#begin\">begin</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hiscore\">hiscore</a> = -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_nulls_for_each_rcu\">sk_nulls_for_each_rcu</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#ilb\">ilb</a>-><a class=\"id\" href=\"#head\">head</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a> = <a class=\"id\" href=\"#compute_score\">compute_score</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hnum\">hnum</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#dif\">dif</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#score\">score</a> &gt; <a class=\"id\" href=\"#hiscore\">hiscore</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hiscore\">hiscore</a> = <a class=\"id\" href=\"#score\">score</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if the nulls value we got at the end of this lookup is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * not the expected one, we must restart lookup.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We probably met an item that was moved to another chain.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#get_nulls_value\">get_nulls_value</a>(<a class=\"id\" href=\"#node\">node</a>) != <a class=\"id\" href=\"#hash\">hash</a> + <a class=\"id\" href=\"#LISTENING_NULLS_BASE\">LISTENING_NULLS_BASE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#begin\">begin</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#atomic_inc_not_zero\">atomic_inc_not_zero</a>(&amp;<a class=\"id\" href=\"#result\">result</a>-><a class=\"id\" href=\"#sk_refcnt\">sk_refcnt</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#compute_score\">compute_score</a>(<a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hnum\">hnum</a>, <a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#dif\">dif</a>) &lt; <a class=\"id\" href=\"#hiscore\">hiscore</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#result\">result</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#begin\">begin</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__inet_lookup_listener\">__inet_lookup_listener</a>);", 
"", 
"struct <a class=\"id\" href=\"#sock\">sock</a> * <a class=\"id\" href=\"#__inet_lookup_established\">__inet_lookup_established</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#inet_hashinfo\">inet_hashinfo</a> *<a class=\"id\" href=\"#hashinfo\">hashinfo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#saddr\">saddr</a>, const <a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#sport\">sport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#daddr\">daddr</a>, const <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#hnum\">hnum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const int <a class=\"id\" href=\"#dif\">dif</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INET_ADDR_COOKIE\">INET_ADDR_COOKIE</a>(<a class=\"id\" href=\"#acookie\">acookie</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>)", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#__portpair\">__portpair</a> <a class=\"id\" href=\"#ports\">ports</a> = <a class=\"id\" href=\"#INET_COMBINED_PORTS\">INET_COMBINED_PORTS</a>(<a class=\"id\" href=\"#sport\">sport</a>, <a class=\"id\" href=\"#hnum\">hnum</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#hlist_nulls_node\">hlist_nulls_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Optimize here for direct hit, only listening connections can</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * have wildcards anyways.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#inet_ehashfn\">inet_ehashfn</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#hnum\">hnum</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#sport\">sport</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#slot\">slot</a> = <a class=\"id\" href=\"#hash\">hash</a> &amp; <a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#ehash_mask\">ehash_mask</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_ehash_bucket\">inet_ehash_bucket</a> *<a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#ehash\">ehash</a>[<a class=\"id\" href=\"#slot\">slot</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<a class=\"id\" href=\"#begin\">begin</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_nulls_for_each_rcu\">sk_nulls_for_each_rcu</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#chain\">chain</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#INET_MATCH\">INET_MATCH</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#acookie\">acookie</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#ports\">ports</a>, <a class=\"id\" href=\"#dif\">dif</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#atomic_inc_not_zero\">atomic_inc_not_zero</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_refcnt\">sk_refcnt</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#begintw\">begintw</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#INET_MATCH\">INET_MATCH</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#acookie\">acookie</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#ports\">ports</a>, <a class=\"id\" href=\"#dif\">dif</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#begin\">begin</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if the nulls value we got at the end of this lookup is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * not the expected one, we must restart lookup.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We probably met an item that was moved to another chain.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#get_nulls_value\">get_nulls_value</a>(<a class=\"id\" href=\"#node\">node</a>) != <a class=\"id\" href=\"#slot\">slot</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#begin\">begin</a>;", 
"", 
"<a class=\"id\" href=\"#begintw\">begintw</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* Must check for a TIME_WAIT'er before going to listener hash. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_nulls_for_each_rcu\">sk_nulls_for_each_rcu</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#twchain\">twchain</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#INET_TW_MATCH\">INET_TW_MATCH</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#acookie\">acookie</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#ports\">ports</a>, <a class=\"id\" href=\"#dif\">dif</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#atomic_inc_not_zero\">atomic_inc_not_zero</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_refcnt\">sk_refcnt</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#INET_TW_MATCH\">INET_TW_MATCH</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#acookie\">acookie</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#ports\">ports</a>, <a class=\"id\" href=\"#dif\">dif</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#begintw\">begintw</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if the nulls value we got at the end of this lookup is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * not the expected one, we must restart lookup.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We probably met an item that was moved to another chain.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#get_nulls_value\">get_nulls_value</a>(<a class=\"id\" href=\"#node\">node</a>) != <a class=\"id\" href=\"#slot\">slot</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#begintw\">begintw</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sk\">sk</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__inet_lookup_established\">__inet_lookup_established</a>);", 
"", 
"<span class=\"comment\">/* called with local bh disabled */</span>", 
"static int <a class=\"id\" href=\"#__inet_check_established\">__inet_check_established</a>(struct <a class=\"id\" href=\"#inet_timewait_death_row\">inet_timewait_death_row</a> *<a class=\"id\" href=\"#death_row\">death_row</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#lport\">lport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> **<a class=\"id\" href=\"#twp\">twp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_hashinfo\">inet_hashinfo</a> *<a class=\"id\" href=\"#hinfo\">hinfo</a> = <a class=\"id\" href=\"#death_row\">death_row</a>-><a class=\"id\" href=\"#hashinfo\">hashinfo</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_rcv_saddr\">inet_rcv_saddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_daddr\">inet_daddr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#dif\">dif</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INET_ADDR_COOKIE\">INET_ADDR_COOKIE</a>(<a class=\"id\" href=\"#acookie\">acookie</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>)", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#__portpair\">__portpair</a> <a class=\"id\" href=\"#ports\">ports</a> = <a class=\"id\" href=\"#INET_COMBINED_PORTS\">INET_COMBINED_PORTS</a>(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a>, <a class=\"id\" href=\"#lport\">lport</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#inet_ehashfn\">inet_ehashfn</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#lport\">lport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_ehash_bucket\">inet_ehash_bucket</a> *<a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#inet_ehash_bucket\">inet_ehash_bucket</a>(<a class=\"id\" href=\"#hinfo\">hinfo</a>, <a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a> = <a class=\"id\" href=\"#inet_ehash_lockp\">inet_ehash_lockp</a>(<a class=\"id\" href=\"#hinfo\">hinfo</a>, <a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk2\">sk2</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#hlist_nulls_node\">hlist_nulls_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#twrefcnt\">twrefcnt</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check TIME-WAIT sockets first. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_nulls_for_each\">sk_nulls_for_each</a>(<a class=\"id\" href=\"#sk2\">sk2</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#twchain\">twchain</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a> = <a class=\"id\" href=\"#inet_twsk\">inet_twsk</a>(<a class=\"id\" href=\"#sk2\">sk2</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#INET_TW_MATCH\">INET_TW_MATCH</a>(<a class=\"id\" href=\"#sk2\">sk2</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#acookie\">acookie</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#ports\">ports</a>, <a class=\"id\" href=\"#dif\">dif</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#twsk_unique\">twsk_unique</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#sk2\">sk2</a>, <a class=\"id\" href=\"#twp\">twp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unique\">unique</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#not_unique\">not_unique</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* And established part... */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_nulls_for_each\">sk_nulls_for_each</a>(<a class=\"id\" href=\"#sk2\">sk2</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#chain\">chain</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#INET_MATCH\">INET_MATCH</a>(<a class=\"id\" href=\"#sk2\">sk2</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#acookie\">acookie</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#ports\">ports</a>, <a class=\"id\" href=\"#dif\">dif</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#not_unique\">not_unique</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#unique\">unique</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* Must record num and sport now. Otherwise we will see</span>", 
];
xr_frag_insert('l/f0/09cd70eeb6aa928a610969b37aa61a80e47d11.xr', __xr_tmp);
