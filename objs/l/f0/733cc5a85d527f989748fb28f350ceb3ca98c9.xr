var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#new_option\">new_option</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#min\">min</a> += <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_option\">new_option</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#max\">max</a> += <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#new_option\">new_option</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#option\">option</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"added ioport region %#llx-%#llx to set %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>(unsigned long long) <a class=\"id\" href=\"#new_option\">new_option</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#min\">min</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>(unsigned long long) <a class=\"id\" href=\"#new_option\">new_option</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#max\">max</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pnp_option_set\">pnp_option_set</a>(<a class=\"id\" href=\"#option\">option</a>));", 
"}", 
"", 
"static void <a class=\"id\" href=\"#quirk_awe32_resources\">quirk_awe32_resources</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_option\">pnp_option</a> *<a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#set\">set</a> = ~0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Add two extra ioport regions (at offset 0x400 and 0x800 from the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * one given) to every dependent option set.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#option\">option</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#options\">options</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pnp_option_is_dependent\">pnp_option_is_dependent</a>(<a class=\"id\" href=\"#option\">option</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#pnp_option_set\">pnp_option_set</a>(<a class=\"id\" href=\"#option\">option</a>) != <a class=\"id\" href=\"#set\">set</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set\">set</a> = <a class=\"id\" href=\"#pnp_option_set\">pnp_option_set</a>(<a class=\"id\" href=\"#option\">option</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quirk_awe32_add_ports\">quirk_awe32_add_ports</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#option\">option</a>, 0x800);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quirk_awe32_add_ports\">quirk_awe32_add_ports</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#option\">option</a>, 0x400);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#quirk_cmi8330_resources\">quirk_cmi8330_resources</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_option\">pnp_option</a> *<a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_irq\">pnp_irq</a> *<a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_dma\">pnp_dma</a> *<a class=\"id\" href=\"#dma\">dma</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#option\">option</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#options\">options</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pnp_option_is_dependent\">pnp_option_is_dependent</a>(<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#option\">option</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#IORESOURCE_IRQ\">IORESOURCE_IRQ</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = &amp;<a class=\"id\" href=\"#option\">option</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bitmap_zero\">bitmap_zero</a>(<a class=\"id\" href=\"#irq\">irq</a>-><a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#bits\">bits</a>, <a class=\"id\" href=\"#PNP_IRQ_NR\">PNP_IRQ_NR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__set_bit\">__set_bit</a>(5, <a class=\"id\" href=\"#irq\">irq</a>-><a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#bits\">bits</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__set_bit\">__set_bit</a>(7, <a class=\"id\" href=\"#irq\">irq</a>-><a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#bits\">bits</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__set_bit\">__set_bit</a>(10, <a class=\"id\" href=\"#irq\">irq</a>-><a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#bits\">bits</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"set possible IRQs in \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"option set %d to 5, 7, 10\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#pnp_option_set\">pnp_option_set</a>(<a class=\"id\" href=\"#option\">option</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#option\">option</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#IORESOURCE_DMA\">IORESOURCE_DMA</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma\">dma</a> = &amp;<a class=\"id\" href=\"#option\">option</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#dma\">dma</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#dma\">dma</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IORESOURCE_DMA_TYPE_MASK\">IORESOURCE_DMA_TYPE_MASK</a>) ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IORESOURCE_DMA_8BIT\">IORESOURCE_DMA_8BIT</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#dma\">dma</a>-><a class=\"id\" href=\"#map\">map</a> != 0x0A) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"changing possible \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"DMA channel mask in option set %d \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"from %#02x to 0x0A (1, 3)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#pnp_option_set\">pnp_option_set</a>(<a class=\"id\" href=\"#option\">option</a>), <a class=\"id\" href=\"#dma\">dma</a>-><a class=\"id\" href=\"#map\">map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma\">dma</a>-><a class=\"id\" href=\"#map\">map</a> = 0x0A;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#quirk_sb16audio_resources\">quirk_sb16audio_resources</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_option\">pnp_option</a> *<a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#prev_option_flags\">prev_option_flags</a> = ~0, <a class=\"id\" href=\"#n\">n</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_port\">pnp_port</a> *<a class=\"id\" href=\"#port\">port</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The default range on the OPL port for these devices is 0x388-0x388.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Here we increase that range so that two such cards can be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * auto-configured.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#option\">option</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#options\">options</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#prev_option_flags\">prev_option_flags</a> != <a class=\"id\" href=\"#option\">option</a>-><a class=\"id\" href=\"#flags\">flags</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev_option_flags\">prev_option_flags</a> = <a class=\"id\" href=\"#option\">option</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pnp_option_is_dependent\">pnp_option_is_dependent</a>(<a class=\"id\" href=\"#option\">option</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#option\">option</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#option\">option</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a> == 3 && <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#min\">min</a> == <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#max\">max</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#max\">max</a> += 0x70;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"increased option port \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"range from %#llx-%#llx to \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"%#llx-%#llx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (unsigned long long) <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#min\">min</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (unsigned long long) <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#min\">min</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (unsigned long long) <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#min\">min</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (unsigned long long) <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#max\">max</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pnp_option\">pnp_option</a> *<a class=\"id\" href=\"#pnp_clone_dependent_set\">pnp_clone_dependent_set</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#set\">set</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_option\">pnp_option</a> *<a class=\"id\" href=\"#tail\">tail</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#first_new_option\">first_new_option</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_option\">pnp_option</a> *<a class=\"id\" href=\"#option\">option</a>, *<a class=\"id\" href=\"#new_option\">new_option</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#option\">option</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#options\">options</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pnp_option_is_dependent\">pnp_option_is_dependent</a>(<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tail\">tail</a> = <a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tail\">tail</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_err\">dev_err</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"no dependent option sets\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#pnp_new_dependent_set\">pnp_new_dependent_set</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PNP_RES_PRIORITY_FUNCTIONAL\">PNP_RES_PRIORITY_FUNCTIONAL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#option\">option</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#options\">options</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pnp_option_is_dependent\">pnp_option_is_dependent</a>(<a class=\"id\" href=\"#option\">option</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#pnp_option_set\">pnp_option_set</a>(<a class=\"id\" href=\"#option\">option</a>) == <a class=\"id\" href=\"#set\">set</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_option\">new_option</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(struct <a class=\"id\" href=\"#pnp_option\">pnp_option</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_option\">new_option</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_err\">dev_err</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"couldn't clone dependent \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"set %d\\n\", <a class=\"id\" href=\"#set\">set</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#new_option\">new_option</a> = *<a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_option\">new_option</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#first_new_option\">first_new_option</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first_new_option\">first_new_option</a> = <a class=\"id\" href=\"#new_option\">new_option</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#new_option\">new_option</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#tail\">tail</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tail\">tail</a> = <a class=\"id\" href=\"#new_option\">new_option</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#first_new_option\">first_new_option</a>;", 
"}", 
"", 
"", 
"static void <a class=\"id\" href=\"#quirk_add_irq_optional_dependent_sets\">quirk_add_irq_optional_dependent_sets</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_option\">pnp_option</a> *<a class=\"id\" href=\"#new_option\">new_option</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#num_sets\">num_sets</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#set\">set</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_irq\">pnp_irq</a> *<a class=\"id\" href=\"#irq\">irq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num_sets\">num_sets</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#num_dependent_sets\">num_dependent_sets</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_sets\">num_sets</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_option\">new_option</a> = <a class=\"id\" href=\"#pnp_clone_dependent_set\">pnp_clone_dependent_set</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_option\">new_option</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set\">set</a> = <a class=\"id\" href=\"#pnp_option_set\">pnp_option_set</a>(<a class=\"id\" href=\"#new_option\">new_option</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#new_option\">new_option</a> && <a class=\"id\" href=\"#pnp_option_set\">pnp_option_set</a>(<a class=\"id\" href=\"#new_option\">new_option</a>) == <a class=\"id\" href=\"#set\">set</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_option\">new_option</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#IORESOURCE_IRQ\">IORESOURCE_IRQ</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = &amp;<a class=\"id\" href=\"#new_option\">new_option</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IORESOURCE_IRQ_OPTIONAL\">IORESOURCE_IRQ_OPTIONAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbg_pnp_show_option\">dbg_pnp_show_option</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#new_option\">new_option</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_option\">new_option</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#new_option\">new_option</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#next\">next</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_option\">pnp_option</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"added dependent option set %d (same as \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"set %d except IRQ optional)\\n\", <a class=\"id\" href=\"#set\">set</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#quirk_ad1815_mpu_resources\">quirk_ad1815_mpu_resources</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_option\">pnp_option</a> *<a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_irq\">pnp_irq</a> *<a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#independent_irqs\">independent_irqs</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#option\">option</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#options\">options</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#option\">option</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#IORESOURCE_IRQ\">IORESOURCE_IRQ</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#pnp_option_is_dependent\">pnp_option_is_dependent</a>(<a class=\"id\" href=\"#option\">option</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#independent_irqs\">independent_irqs</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = &amp;<a class=\"id\" href=\"#option\">option</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#independent_irqs\">independent_irqs</a> != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IORESOURCE_IRQ_OPTIONAL\">IORESOURCE_IRQ_OPTIONAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"made independent IRQ optional\\n\");", 
"}", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static void <a class=\"id\" href=\"#quirk_system_pci_resources\">quirk_system_pci_resources</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#resource_size_t\">resource_size_t</a> <a class=\"id\" href=\"#pnp_start\">pnp_start</a>, <a class=\"id\" href=\"#pnp_end\">pnp_end</a>, <a class=\"id\" href=\"#pci_start\">pci_start</a>, <a class=\"id\" href=\"#pci_end\">pci_end</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Some BIOSes have PNP motherboard devices with resources that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * partially overlap PCI BARs.  The PNP system driver claims these</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * motherboard resources, which prevents the normal PCI driver from</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * requesting them later.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This patch disables the PNP resources that conflict with PCI BARs</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so they won't be claimed by the PNP system driver.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_pci_dev\">for_each_pci_dev</a>(<a class=\"id\" href=\"#pdev\">pdev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#DEVICE_COUNT_RESOURCE\">DEVICE_COUNT_RESOURCE</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#type\">type</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#pci_resource_flags\">pci_resource_flags</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#i\">i</a>) &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a> | <a class=\"id\" href=\"#IORESOURCE_MEM\">IORESOURCE_MEM</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#type\">type</a> || <a class=\"id\" href=\"#pci_resource_len\">pci_resource_len</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#i\">i</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_start\">pci_start</a> = <a class=\"id\" href=\"#pci_resource_start\">pci_resource_start</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_end\">pci_end</a> = <a class=\"id\" href=\"#pci_resource_end\">pci_resource_end</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (<a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#pnp_get_resource\">pnp_get_resource</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#j\">j</a>)); <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a> == 0 && <a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#end\">end</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pnp_start\">pnp_start</a> = <a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pnp_end\">pnp_end</a> = <a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If the PNP region doesn't overlap the PCI</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * region at all, there's no problem.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pnp_end\">pnp_end</a> &lt; <a class=\"id\" href=\"#pci_start\">pci_start</a> || <a class=\"id\" href=\"#pnp_start\">pnp_start</a> &gt; <a class=\"id\" href=\"#pci_end\">pci_end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If the PNP region completely encloses (or is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * at least as large as) the PCI region, that's</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * also OK.  For example, this happens when the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * PNP device describes a bridge with PCI</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * behind it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pnp_start\">pnp_start</a> <= <a class=\"id\" href=\"#pci_start\">pci_start</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#pnp_end\">pnp_end</a> >= <a class=\"id\" href=\"#pci_end\">pci_end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Otherwise, the PNP region overlaps *part* of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the PCI region, and that might prevent a PCI</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * driver from requesting its resources.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_warn\">dev_warn</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"disabling %pR because it overlaps \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"%s BAR %d %pR\\n\", <a class=\"id\" href=\"#res\">res</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#pci_name\">pci_name</a>(<a class=\"id\" href=\"#pdev\">pdev</a>), <a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#resource\">resource</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IORESOURCE_DISABLED\">IORESOURCE_DISABLED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  PnP Quirks</span>", 
"<span class=\"comment\"> *  Cards or devices that need some tweaking due to incomplete resource info</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static struct <a class=\"id\" href=\"#pnp_fixup\">pnp_fixup</a> <a class=\"id\" href=\"#pnp_fixups\">pnp_fixups</a>[] = {", 
"<span class=\"ts\"/><span class=\"comment\">/* Soundblaster awe io port quirk */</span>", 
"<span class=\"ts\"/>{\"CTL0021\", <a class=\"id\" href=\"#quirk_awe32_resources\">quirk_awe32_resources</a>},", 
"<span class=\"ts\"/>{\"CTL0022\", <a class=\"id\" href=\"#quirk_awe32_resources\">quirk_awe32_resources</a>},", 
"<span class=\"ts\"/>{\"CTL0023\", <a class=\"id\" href=\"#quirk_awe32_resources\">quirk_awe32_resources</a>},", 
"<span class=\"ts\"/><span class=\"comment\">/* CMI 8330 interrupt and dma fix */</span>", 
"<span class=\"ts\"/>{\"@X@0001\", <a class=\"id\" href=\"#quirk_cmi8330_resources\">quirk_cmi8330_resources</a>},", 
"<span class=\"ts\"/><span class=\"comment\">/* Soundblaster audio device io port range quirk */</span>", 
"<span class=\"ts\"/>{\"CTL0001\", <a class=\"id\" href=\"#quirk_sb16audio_resources\">quirk_sb16audio_resources</a>},", 
"<span class=\"ts\"/>{\"CTL0031\", <a class=\"id\" href=\"#quirk_sb16audio_resources\">quirk_sb16audio_resources</a>},", 
"<span class=\"ts\"/>{\"CTL0041\", <a class=\"id\" href=\"#quirk_sb16audio_resources\">quirk_sb16audio_resources</a>},", 
"<span class=\"ts\"/>{\"CTL0042\", <a class=\"id\" href=\"#quirk_sb16audio_resources\">quirk_sb16audio_resources</a>},", 
"<span class=\"ts\"/>{\"CTL0043\", <a class=\"id\" href=\"#quirk_sb16audio_resources\">quirk_sb16audio_resources</a>},", 
"<span class=\"ts\"/>{\"CTL0044\", <a class=\"id\" href=\"#quirk_sb16audio_resources\">quirk_sb16audio_resources</a>},", 
"<span class=\"ts\"/>{\"CTL0045\", <a class=\"id\" href=\"#quirk_sb16audio_resources\">quirk_sb16audio_resources</a>},", 
"<span class=\"ts\"/><span class=\"comment\">/* Add IRQ-optional MPU options */</span>", 
"<span class=\"ts\"/>{\"ADS7151\", <a class=\"id\" href=\"#quirk_ad1815_mpu_resources\">quirk_ad1815_mpu_resources</a>},", 
"<span class=\"ts\"/>{\"ADS7181\", <a class=\"id\" href=\"#quirk_add_irq_optional_dependent_sets\">quirk_add_irq_optional_dependent_sets</a>},", 
"<span class=\"ts\"/>{\"AZT0002\", <a class=\"id\" href=\"#quirk_add_irq_optional_dependent_sets\">quirk_add_irq_optional_dependent_sets</a>},", 
"<span class=\"ts\"/><span class=\"comment\">/* PnP resources that might overlap PCI BARs */</span>", 
"<span class=\"ts\"/>{\"PNP0c01\", <a class=\"id\" href=\"#quirk_system_pci_resources\">quirk_system_pci_resources</a>},", 
"<span class=\"ts\"/>{\"PNP0c02\", <a class=\"id\" href=\"#quirk_system_pci_resources\">quirk_system_pci_resources</a>},", 
"<span class=\"ts\"/>{\"\"}", 
"};", 
"", 
"void <a class=\"id\" href=\"#pnp_fixup_device\">pnp_fixup_device</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_fixup\">pnp_fixup</a> *<a class=\"id\" href=\"#f\">f</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#f\">f</a> = <a class=\"id\" href=\"#pnp_fixups\">pnp_fixups</a>; *<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#id\">id</a>; <a class=\"id\" href=\"#f\">f</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#compare_pnp_id\">compare_pnp_id</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#id\">id</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pnp_dbg\">pnp_dbg</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"%s: calling %pF\\n\", <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#id\">id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#quirk_function\">quirk_function</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#quirk_function\">quirk_function</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"}", 
];
xr_frag_insert('l/f0/733cc5a85d527f989748fb28f350ceb3ca98c9.xr', __xr_tmp);
