var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Algorithm testing framework and tests.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (c) 2002 James Morris &lt;jmorris@intercode.com.au&gt;</span>", 
"<span class=\"comment\"> * Copyright (c) 2002 Jean-Francois Dive &lt;jef@linuxbe.org&gt;</span>", 
"<span class=\"comment\"> * Copyright (c) 2007 Nokia Siemens Networks</span>", 
"<span class=\"comment\"> * Copyright (c) 2008 Herbert Xu &lt;herbert@gondor.apana.org.au&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify it</span>", 
"<span class=\"comment\"> * under the terms of the GNU General Public License as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation; either version 2 of the License, or (at your option)</span>", 
"<span class=\"comment\"> * any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#crypto\">crypto</a>/<a class=\"id\" href=\"#hash\">hash</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#err\">err</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#scatterlist\">scatterlist</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#crypto\">crypto</a>/<a class=\"id\" href=\"#rng\">rng</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"internal.h\"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CRYPTO_MANAGER_DISABLE_TESTS\">CONFIG_CRYPTO_MANAGER_DISABLE_TESTS</a>", 
"", 
"<span class=\"comment\">/* a perfect nop */</span>", 
"int <a class=\"id\" href=\"#alg_test\">alg_test</a>(const char *<a class=\"id\" href=\"#driver\">driver</a>, const char *<a class=\"id\" href=\"#alg\">alg</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#else", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"testmgr.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Need slab memory for testing (size in number of pages).</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#XBUFSIZE\">XBUFSIZE</a><span class=\"ts\"/>8", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Indexes into the xbuf to simulate cross-page access.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IDX1\">IDX1</a><span class=\"ts\"/><span class=\"ts\"/>32", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IDX2\">IDX2</a><span class=\"ts\"/><span class=\"ts\"/>32400", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IDX3\">IDX3</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IDX4\">IDX4</a><span class=\"ts\"/><span class=\"ts\"/>8193", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IDX5\">IDX5</a><span class=\"ts\"/><span class=\"ts\"/>22222", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IDX6\">IDX6</a><span class=\"ts\"/><span class=\"ts\"/>17101", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IDX7\">IDX7</a><span class=\"ts\"/><span class=\"ts\"/>27333", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IDX8\">IDX8</a><span class=\"ts\"/><span class=\"ts\"/>3000", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\">* Used by test_cipher()</span>", 
"<span class=\"comment\">*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ENCRYPT\">ENCRYPT</a> 1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DECRYPT\">DECRYPT</a> 0", 
"", 
"struct <a class=\"id\" href=\"#tcrypt_result\">tcrypt_result</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#completion\">completion</a> <a class=\"id\" href=\"#completion\">completion</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#aead_test_suite\">aead_test_suite</a> {", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#aead_testvec\">aead_testvec</a> *<a class=\"id\" href=\"#vecs\">vecs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#enc\">enc</a>, <a class=\"id\" href=\"#dec\">dec</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#cipher_test_suite\">cipher_test_suite</a> {", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cipher_testvec\">cipher_testvec</a> *<a class=\"id\" href=\"#vecs\">vecs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#enc\">enc</a>, <a class=\"id\" href=\"#dec\">dec</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#comp_test_suite\">comp_test_suite</a> {", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#comp_testvec\">comp_testvec</a> *<a class=\"id\" href=\"#vecs\">vecs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#comp\">comp</a>, <a class=\"id\" href=\"#decomp\">decomp</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#pcomp_test_suite\">pcomp_test_suite</a> {", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pcomp_testvec\">pcomp_testvec</a> *<a class=\"id\" href=\"#vecs\">vecs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#comp\">comp</a>, <a class=\"id\" href=\"#decomp\">decomp</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#hash_test_suite\">hash_test_suite</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hash_testvec\">hash_testvec</a> *<a class=\"id\" href=\"#vecs\">vecs</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#count\">count</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#cprng_test_suite\">cprng_test_suite</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cprng_testvec\">cprng_testvec</a> *<a class=\"id\" href=\"#vecs\">vecs</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#count\">count</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#alg_test_desc\">alg_test_desc</a> {", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#alg\">alg</a>;", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#test\">test</a>)(const struct <a class=\"id\" href=\"#alg_test_desc\">alg_test_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, const char *<a class=\"id\" href=\"#driver\">driver</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fips_allowed\">fips_allowed</a>;<span class=\"ts\"/><span class=\"comment\">/* set if alg is allowed in fips mode */</span>", 
"", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#aead_test_suite\">aead_test_suite</a> <a class=\"id\" href=\"#aead\">aead</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cipher_test_suite\">cipher_test_suite</a> <a class=\"id\" href=\"#cipher\">cipher</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#comp_test_suite\">comp_test_suite</a> <a class=\"id\" href=\"#comp\">comp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pcomp_test_suite\">pcomp_test_suite</a> <a class=\"id\" href=\"#pcomp\">pcomp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hash_test_suite\">hash_test_suite</a> <a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cprng_test_suite\">cprng_test_suite</a> <a class=\"id\" href=\"#cprng\">cprng</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#suite\">suite</a>;", 
"};", 
"", 
"static unsigned int <a class=\"id\" href=\"#IDX\">IDX</a>[8] = { <a class=\"id\" href=\"#IDX1\">IDX1</a>, <a class=\"id\" href=\"#IDX2\">IDX2</a>, <a class=\"id\" href=\"#IDX3\">IDX3</a>, <a class=\"id\" href=\"#IDX4\">IDX4</a>, <a class=\"id\" href=\"#IDX5\">IDX5</a>, <a class=\"id\" href=\"#IDX6\">IDX6</a>, <a class=\"id\" href=\"#IDX7\">IDX7</a>, <a class=\"id\" href=\"#IDX8\">IDX8</a> };", 
"", 
"static void <a class=\"id\" href=\"#hexdump\">hexdump</a>(unsigned char *<a class=\"id\" href=\"#buf\">buf</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#print_hex_dump\">print_hex_dump</a>(<a class=\"id\" href=\"#KERN_CONT\">KERN_CONT</a>, \"\", <a class=\"id\" href=\"#DUMP_PREFIX_OFFSET\">DUMP_PREFIX_OFFSET</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>16, 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tcrypt_complete\">tcrypt_complete</a>(struct <a class=\"id\" href=\"#crypto_async_request\">crypto_async_request</a> *<a class=\"id\" href=\"#req\">req</a>, int <a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcrypt_result\">tcrypt_result</a> *<a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EINPROGRESS\">EINPROGRESS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#complete\">complete</a>(&amp;<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#completion\">completion</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#testmgr_alloc_buf\">testmgr_alloc_buf</a>(char *<a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#XBUFSIZE\">XBUFSIZE</a>])", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#XBUFSIZE\">XBUFSIZE</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>] = (void *)<a class=\"id\" href=\"#__get_free_page\">__get_free_page</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_free_buf\">err_free_buf</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#err_free_buf\">err_free_buf</a>:", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#i\">i</a>-- &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long)<a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#testmgr_free_buf\">testmgr_free_buf</a>(char *<a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#XBUFSIZE\">XBUFSIZE</a>])", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#XBUFSIZE\">XBUFSIZE</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long)<a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#do_one_async_hash_op\">do_one_async_hash_op</a>(struct <a class=\"id\" href=\"#ahash_request\">ahash_request</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcrypt_result\">tcrypt_result</a> *<a class=\"id\" href=\"#tr\">tr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == -<a class=\"id\" href=\"#EINPROGRESS\">EINPROGRESS</a> || <a class=\"id\" href=\"#ret\">ret</a> == -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#wait_for_completion_interruptible\">wait_for_completion_interruptible</a>(&amp;<a class=\"id\" href=\"#tr\">tr</a>-><a class=\"id\" href=\"#completion\">completion</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#tr\">tr</a>-><a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_COMPLETION\">INIT_COMPLETION</a>(<a class=\"id\" href=\"#tr\">tr</a>-><a class=\"id\" href=\"#completion\">completion</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#test_hash\">test_hash</a>(struct <a class=\"id\" href=\"#crypto_ahash\">crypto_ahash</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, struct <a class=\"id\" href=\"#hash_testvec\">hash_testvec</a> *<a class=\"id\" href=\"#template\">template</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     unsigned int <a class=\"id\" href=\"#tcount\">tcount</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#use_digest\">use_digest</a>)", 
"{", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#algo\">algo</a> = <a class=\"id\" href=\"#crypto_tfm_alg_driver_name\">crypto_tfm_alg_driver_name</a>(<a class=\"id\" href=\"#crypto_ahash_tfm\">crypto_ahash_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#temp\">temp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> <a class=\"id\" href=\"#sg\">sg</a>[8];", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#result\">result</a>[64];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ahash_request\">ahash_request</a> *<a class=\"id\" href=\"#req\">req</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcrypt_result\">tcrypt_result</a> <a class=\"id\" href=\"#tresult\">tresult</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#hash_buff\">hash_buff</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#xbuf\">xbuf</a>[<a class=\"id\" href=\"#XBUFSIZE\">XBUFSIZE</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#testmgr_alloc_buf\">testmgr_alloc_buf</a>(<a class=\"id\" href=\"#xbuf\">xbuf</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_nobuf\">out_nobuf</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_completion\">init_completion</a>(&amp;<a class=\"id\" href=\"#tresult\">tresult</a>.<a class=\"id\" href=\"#completion\">completion</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a> = <a class=\"id\" href=\"#ahash_request_alloc\">ahash_request_alloc</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#req\">req</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: hash: Failed to allocate request for \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"%s\\n\", <a class=\"id\" href=\"#algo\">algo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_noreq\">out_noreq</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ahash_request_set_callback\">ahash_request_set_callback</a>(<a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#CRYPTO_TFM_REQ_MAY_BACKLOG\">CRYPTO_TFM_REQ_MAY_BACKLOG</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#tcrypt_complete\">tcrypt_complete</a>, &amp;<a class=\"id\" href=\"#tresult\">tresult</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#tcount\">tcount</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#np\">np</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#result\">result</a>, 0, 64);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash_buff\">hash_buff</a> = <a class=\"id\" href=\"#xbuf\">xbuf</a>[0];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#hash_buff\">hash_buff</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#plaintext\">plaintext</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#psize\">psize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_init_one\">sg_init_one</a>(&amp;<a class=\"id\" href=\"#sg\">sg</a>[0], <a class=\"id\" href=\"#hash_buff\">hash_buff</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#psize\">psize</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#ksize\">ksize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_ahash_clear_flags\">crypto_ahash_clear_flags</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, ~0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#crypto_ahash_setkey\">crypto_ahash_setkey</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#ksize\">ksize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: hash: setkey failed on \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"test %d for %s: ret=%d\\n\", <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#algo\">algo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       -<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ahash_request_set_crypt\">ahash_request_set_crypt</a>(<a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#psize\">psize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#use_digest\">use_digest</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_one_async_hash_op\">do_one_async_hash_op</a>(<a class=\"id\" href=\"#req\">req</a>, &amp;<a class=\"id\" href=\"#tresult\">tresult</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#crypto_ahash_digest\">crypto_ahash_digest</a>(<a class=\"id\" href=\"#req\">req</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"alg: hash: digest failed on test %d \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"for %s: ret=%d\\n\", <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#algo\">algo</a>, -<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_one_async_hash_op\">do_one_async_hash_op</a>(<a class=\"id\" href=\"#req\">req</a>, &amp;<a class=\"id\" href=\"#tresult\">tresult</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#crypto_ahash_init\">crypto_ahash_init</a>(<a class=\"id\" href=\"#req\">req</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"alt: hash: init failed on test %d \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"for %s: ret=%d\\n\", <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#algo\">algo</a>, -<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_one_async_hash_op\">do_one_async_hash_op</a>(<a class=\"id\" href=\"#req\">req</a>, &amp;<a class=\"id\" href=\"#tresult\">tresult</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#crypto_ahash_update\">crypto_ahash_update</a>(<a class=\"id\" href=\"#req\">req</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"alt: hash: update failed on test %d \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"for %s: ret=%d\\n\", <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#algo\">algo</a>, -<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_one_async_hash_op\">do_one_async_hash_op</a>(<a class=\"id\" href=\"#req\">req</a>, &amp;<a class=\"id\" href=\"#tresult\">tresult</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#crypto_ahash_final\">crypto_ahash_final</a>(<a class=\"id\" href=\"#req\">req</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"alt: hash: final failed on test %d \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"for %s: ret=%d\\n\", <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#algo\">algo</a>, -<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#digest\">digest</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#crypto_ahash_digestsize\">crypto_ahash_digestsize</a>(<a class=\"id\" href=\"#tfm\">tfm</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: hash: Test %d failed for %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#algo\">algo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hexdump\">hexdump</a>(<a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#crypto_ahash_digestsize\">crypto_ahash_digestsize</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#tcount\">tcount</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#np\">np</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#result\">result</a>, 0, 64);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#temp\">temp</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_init_table\">sg_init_table</a>(<a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#np\">np</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#np\">np</a>; <a class=\"id\" href=\"#k\">k</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#offset_in_page\">offset_in_page</a>(<a class=\"id\" href=\"#IDX\">IDX</a>[<a class=\"id\" href=\"#k\">k</a>]) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#tap\">tap</a>[<a class=\"id\" href=\"#k\">k</a>] &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_set_buf\">sg_set_buf</a>(&amp;<a class=\"id\" href=\"#sg\">sg</a>[<a class=\"id\" href=\"#k\">k</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#xbuf\">xbuf</a>[<a class=\"id\" href=\"#IDX\">IDX</a>[<a class=\"id\" href=\"#k\">k</a>] >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>] +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#offset_in_page\">offset_in_page</a>(<a class=\"id\" href=\"#IDX\">IDX</a>[<a class=\"id\" href=\"#k\">k</a>]),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#plaintext\">plaintext</a> + <a class=\"id\" href=\"#temp\">temp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#tap\">tap</a>[<a class=\"id\" href=\"#k\">k</a>]),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#tap\">tap</a>[<a class=\"id\" href=\"#k\">k</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#temp\">temp</a> += <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#tap\">tap</a>[<a class=\"id\" href=\"#k\">k</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#ksize\">ksize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_ahash_clear_flags\">crypto_ahash_clear_flags</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, ~0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#crypto_ahash_setkey\">crypto_ahash_setkey</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#ksize\">ksize</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: hash: setkey \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"failed on chunking test %d \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"for %s: ret=%d\\n\", <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#algo\">algo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       -<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ahash_request_set_crypt\">ahash_request_set_crypt</a>(<a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#result\">result</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#psize\">psize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#crypto_ahash_digest\">crypto_ahash_digest</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case -<a class=\"id\" href=\"#EINPROGRESS\">EINPROGRESS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#wait_for_completion_interruptible\">wait_for_completion_interruptible</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#tresult\">tresult</a>.<a class=\"id\" href=\"#completion\">completion</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a> && !(<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#tresult\">tresult</a>.<a class=\"id\" href=\"#err\">err</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_COMPLETION\">INIT_COMPLETION</a>(<a class=\"id\" href=\"#tresult\">tresult</a>.<a class=\"id\" href=\"#completion\">completion</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: hash: digest failed \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"on chunking test %d for %s: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"ret=%d\\n\", <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#algo\">algo</a>, -<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#digest\">digest</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#crypto_ahash_digestsize\">crypto_ahash_digestsize</a>(<a class=\"id\" href=\"#tfm\">tfm</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: hash: Chunking test %d \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"failed for %s\\n\", <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#algo\">algo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hexdump\">hexdump</a>(<a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#crypto_ahash_digestsize\">crypto_ahash_digestsize</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ahash_request_free\">ahash_request_free</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"<a class=\"id\" href=\"#out_noreq\">out_noreq</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#testmgr_free_buf\">testmgr_free_buf</a>(<a class=\"id\" href=\"#xbuf\">xbuf</a>);", 
"<a class=\"id\" href=\"#out_nobuf\">out_nobuf</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#test_aead\">test_aead</a>(struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, int <a class=\"id\" href=\"#enc\">enc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#aead_testvec\">aead_testvec</a> *<a class=\"id\" href=\"#template\">template</a>, unsigned int <a class=\"id\" href=\"#tcount\">tcount</a>)", 
"{", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#algo\">algo</a> = <a class=\"id\" href=\"#crypto_tfm_alg_driver_name\">crypto_tfm_alg_driver_name</a>(<a class=\"id\" href=\"#crypto_aead_tfm\">crypto_aead_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#temp\">temp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#q\">q</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#aead_request\">aead_request</a> *<a class=\"id\" href=\"#req\">req</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> <a class=\"id\" href=\"#sg\">sg</a>[8];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> <a class=\"id\" href=\"#asg\">asg</a>[8];", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcrypt_result\">tcrypt_result</a> <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#authsize\">authsize</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#assoc\">assoc</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#iv\">iv</a>[<a class=\"id\" href=\"#MAX_IVLEN\">MAX_IVLEN</a>];", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#xbuf\">xbuf</a>[<a class=\"id\" href=\"#XBUFSIZE\">XBUFSIZE</a>];", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#axbuf\">axbuf</a>[<a class=\"id\" href=\"#XBUFSIZE\">XBUFSIZE</a>];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#testmgr_alloc_buf\">testmgr_alloc_buf</a>(<a class=\"id\" href=\"#xbuf\">xbuf</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_noxbuf\">out_noxbuf</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#testmgr_alloc_buf\">testmgr_alloc_buf</a>(<a class=\"id\" href=\"#axbuf\">axbuf</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_noaxbuf\">out_noaxbuf</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#enc\">enc</a> == <a class=\"id\" href=\"#ENCRYPT\">ENCRYPT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = \"encryption\";", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = \"decryption\";", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_completion\">init_completion</a>(&amp;<a class=\"id\" href=\"#result\">result</a>.<a class=\"id\" href=\"#completion\">completion</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a> = <a class=\"id\" href=\"#aead_request_alloc\">aead_request_alloc</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#req\">req</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: aead: Failed to allocate request for \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"%s\\n\", <a class=\"id\" href=\"#algo\">algo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#aead_request_set_callback\">aead_request_set_callback</a>(<a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#CRYPTO_TFM_REQ_MAY_BACKLOG\">CRYPTO_TFM_REQ_MAY_BACKLOG</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tcrypt_complete\">tcrypt_complete</a>, &amp;<a class=\"id\" href=\"#result\">result</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0, <a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#tcount\">tcount</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#np\">np</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* some tepmplates have no input data but they will</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * touch input</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#input\">input</a> = <a class=\"id\" href=\"#xbuf\">xbuf</a>[0];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#assoc\">assoc</a> = <a class=\"id\" href=\"#axbuf\">axbuf</a>[0];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#ilen\">ilen</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#alen\">alen</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#input\">input</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#input\">input</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#ilen\">ilen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#assoc\">assoc</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#assoc\">assoc</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#alen\">alen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iv\">iv</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#MAX_IVLEN\">MAX_IVLEN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#iv\">iv</a>, 0, <a class=\"id\" href=\"#MAX_IVLEN\">MAX_IVLEN</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_aead_clear_flags\">crypto_aead_clear_flags</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, ~0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#wk\">wk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_aead_set_flags\">crypto_aead_set_flags</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#CRYPTO_TFM_REQ_WEAK_KEY\">CRYPTO_TFM_REQ_WEAK_KEY</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#key\">key</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#crypto_aead_setkey\">crypto_aead_setkey</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#klen\">klen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a> == <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#fail\">fail</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: aead: setkey failed on \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"test %d for %s: flags=%x\\n\", <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#algo\">algo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#crypto_aead_get_flags\">crypto_aead_get_flags</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#authsize\">authsize</a> = <a class=\"id\" href=\"#abs\">abs</a>(<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#rlen\">rlen</a> - <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#ilen\">ilen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#crypto_aead_setauthsize\">crypto_aead_setauthsize</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#authsize\">authsize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: aead: Failed to set \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"authsize to %u on test %d for %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#authsize\">authsize</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#algo\">algo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_init_one\">sg_init_one</a>(&amp;<a class=\"id\" href=\"#sg\">sg</a>[0], <a class=\"id\" href=\"#input\">input</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#ilen\">ilen</a> + (<a class=\"id\" href=\"#enc\">enc</a> ? <a class=\"id\" href=\"#authsize\">authsize</a> : 0));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_init_one\">sg_init_one</a>(&amp;<a class=\"id\" href=\"#asg\">asg</a>[0], <a class=\"id\" href=\"#assoc\">assoc</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#alen\">alen</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aead_request_set_crypt\">aead_request_set_crypt</a>(<a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#sg\">sg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#ilen\">ilen</a>, <a class=\"id\" href=\"#iv\">iv</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aead_request_set_assoc\">aead_request_set_assoc</a>(<a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#asg\">asg</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#alen\">alen</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#enc\">enc</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_aead_encrypt\">crypto_aead_encrypt</a>(<a class=\"id\" href=\"#req\">req</a>) :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_aead_decrypt\">crypto_aead_decrypt</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#novrfy\">novrfy</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* verification was supposed to fail */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: aead: %s failed \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"on test %d for %s: ret was 0, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"expected -EBADMSG\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#algo\">algo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* so really, we got a bad message */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBADMSG\">EBADMSG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case -<a class=\"id\" href=\"#EINPROGRESS\">EINPROGRESS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#wait_for_completion_interruptible\">wait_for_completion_interruptible</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#result\">result</a>.<a class=\"id\" href=\"#completion\">completion</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a> && !(<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#result\">result</a>.<a class=\"id\" href=\"#err\">err</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_COMPLETION\">INIT_COMPLETION</a>(<a class=\"id\" href=\"#result\">result</a>.<a class=\"id\" href=\"#completion\">completion</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case -<a class=\"id\" href=\"#EBADMSG\">EBADMSG</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#novrfy\">novrfy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* verification failure was expected */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: aead: %s failed on test \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"%d for %s: ret=%d\\n\", <a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#algo\">algo</a>, -<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#rlen\">rlen</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: aead: Test %d failed on \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"%s for %s\\n\", <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#algo\">algo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hexdump\">hexdump</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#rlen\">rlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0, <a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#tcount\">tcount</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#np\">np</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iv\">iv</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#MAX_IVLEN\">MAX_IVLEN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#iv\">iv</a>, 0, <a class=\"id\" href=\"#MAX_IVLEN\">MAX_IVLEN</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_aead_clear_flags\">crypto_aead_clear_flags</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, ~0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#wk\">wk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_aead_set_flags\">crypto_aead_set_flags</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#CRYPTO_TFM_REQ_WEAK_KEY\">CRYPTO_TFM_REQ_WEAK_KEY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#key\">key</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#crypto_aead_setkey\">crypto_aead_setkey</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#klen\">klen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a> == <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#fail\">fail</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: aead: setkey failed on \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"chunk test %d for %s: flags=%x\\n\", <a class=\"id\" href=\"#j\">j</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#algo\">algo</a>, <a class=\"id\" href=\"#crypto_aead_get_flags\">crypto_aead_get_flags</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#authsize\">authsize</a> = <a class=\"id\" href=\"#abs\">abs</a>(<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#rlen\">rlen</a> - <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#ilen\">ilen</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_init_table\">sg_init_table</a>(<a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#np\">np</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0, <a class=\"id\" href=\"#temp\">temp</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#np\">np</a>; <a class=\"id\" href=\"#k\">k</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#offset_in_page\">offset_in_page</a>(<a class=\"id\" href=\"#IDX\">IDX</a>[<a class=\"id\" href=\"#k\">k</a>]) +", 
];
xr_frag_insert('l/f1/3fab17bec8c1650533d651743ad1ba4fed5e4f.xr', __xr_tmp);
