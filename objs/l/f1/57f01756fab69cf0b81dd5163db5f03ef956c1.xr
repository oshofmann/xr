var __xr_tmp = [
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#lasterr_pos\">lasterr_pos</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>, *<a class=\"id\" href=\"#pbuf\">pbuf</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = (char *)<a class=\"id\" href=\"#__get_free_page\">__get_free_page</a>(<a class=\"id\" href=\"#GFP_TEMPORARY\">GFP_TEMPORARY</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buf\">buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#append_filter_string\">append_filter_string</a>(<a class=\"id\" href=\"#filter\">filter</a>, \"\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#buf\">buf</a>, ' ', <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 128)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#pos\">pos</a>] = '^';", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pbuf\">pbuf</a> = &amp;<a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#pos\">pos</a>] + 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#pbuf\">pbuf</a>, \"\\nparse_error: %s\\n\", <a class=\"id\" href=\"#err_text\">err_text</a>[<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#lasterr\">lasterr</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#append_filter_string\">append_filter_string</a>(<a class=\"id\" href=\"#filter\">filter</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long) <a class=\"id\" href=\"#buf\">buf</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#print_event_filter\">print_event_filter</a>(struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>, struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#event_filter\">event_filter</a> *<a class=\"id\" href=\"#filter\">filter</a> = <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#filter\">filter</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#filter\">filter</a> && <a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#filter_string\">filter_string</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%s\\n\", <a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#filter_string\">filter_string</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"none\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#print_subsystem_event_filter\">print_subsystem_event_filter</a>(struct <a class=\"id\" href=\"#event_subsystem\">event_subsystem</a> *<a class=\"id\" href=\"#system\">system</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#event_filter\">event_filter</a> *<a class=\"id\" href=\"#filter\">filter</a> = <a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#filter\">filter</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#filter\">filter</a> && <a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#filter_string\">filter_string</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%s\\n\", <a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#filter_string\">filter_string</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"none\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#ftrace_event_field\">ftrace_event_field</a> *", 
"<a class=\"id\" href=\"#__find_event_field\">__find_event_field</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#head\">head</a>, char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_field\">ftrace_event_field</a> *<a class=\"id\" href=\"#field\">field</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#link\">link</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#name\">name</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#field\">field</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#ftrace_event_field\">ftrace_event_field</a> *", 
"<a class=\"id\" href=\"#find_event_field\">find_event_field</a>(struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>, char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_field\">ftrace_event_field</a> *<a class=\"id\" href=\"#field\">field</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#field\">field</a> = <a class=\"id\" href=\"#__find_event_field\">__find_event_field</a>(&amp;<a class=\"id\" href=\"#ftrace_common_fields\">ftrace_common_fields</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#field\">field</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#field\">field</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#trace_get_fields\">trace_get_fields</a>(<a class=\"id\" href=\"#call\">call</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__find_event_field\">__find_event_field</a>(<a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#filter_free_pred\">filter_free_pred</a>(struct <a class=\"id\" href=\"#filter_pred\">filter_pred</a> *<a class=\"id\" href=\"#pred\">pred</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pred\">pred</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#field_name\">field_name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pred\">pred</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#filter_clear_pred\">filter_clear_pred</a>(struct <a class=\"id\" href=\"#filter_pred\">filter_pred</a> *<a class=\"id\" href=\"#pred\">pred</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#field_name\">field_name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#field_name\">field_name</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#regex\">regex</a>.<a class=\"id\" href=\"#len\">len</a> = 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#filter_set_pred\">filter_set_pred</a>(struct <a class=\"id\" href=\"#filter_pred\">filter_pred</a> *<a class=\"id\" href=\"#dest\">dest</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#filter_pred\">filter_pred</a> *<a class=\"id\" href=\"#src\">src</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#filter_pred_fn_t\">filter_pred_fn_t</a> <a class=\"id\" href=\"#fn\">fn</a>)", 
"{", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#dest\">dest</a> = *<a class=\"id\" href=\"#src\">src</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#field_name\">field_name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dest\">dest</a>-><a class=\"id\" href=\"#field_name\">field_name</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#field_name\">field_name</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dest\">dest</a>-><a class=\"id\" href=\"#field_name\">field_name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dest\">dest</a>-><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#fn\">fn</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#filter_disable_preds\">filter_disable_preds</a>(struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#event_filter\">event_filter</a> *<a class=\"id\" href=\"#filter\">filter</a> = <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#filter\">filter</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#TRACE_EVENT_FL_FILTERED\">TRACE_EVENT_FL_FILTERED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#n_preds\">n_preds</a> = 0;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAX_FILTER_PRED\">MAX_FILTER_PRED</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#preds\">preds</a>[<a class=\"id\" href=\"#i\">i</a>]-><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#filter_pred_none\">filter_pred_none</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__free_preds\">__free_preds</a>(struct <a class=\"id\" href=\"#event_filter\">event_filter</a> *<a class=\"id\" href=\"#filter\">filter</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#filter\">filter</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAX_FILTER_PRED\">MAX_FILTER_PRED</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#preds\">preds</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filter_free_pred\">filter_free_pred</a>(<a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#preds\">preds</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#preds\">preds</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#filter_string\">filter_string</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#filter\">filter</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#destroy_preds\">destroy_preds</a>(struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__free_preds\">__free_preds</a>(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#filter\">filter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#filter\">filter</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#TRACE_EVENT_FL_FILTERED\">TRACE_EVENT_FL_FILTERED</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#event_filter\">event_filter</a> *<a class=\"id\" href=\"#__alloc_preds\">__alloc_preds</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#event_filter\">event_filter</a> *<a class=\"id\" href=\"#filter\">filter</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#filter_pred\">filter_pred</a> *<a class=\"id\" href=\"#pred\">pred</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filter\">filter</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#filter\">filter</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#filter\">filter</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#n_preds\">n_preds</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#preds\">preds</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#MAX_FILTER_PRED\">MAX_FILTER_PRED</a> * sizeof(<a class=\"id\" href=\"#pred\">pred</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#preds\">preds</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#oom\">oom</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAX_FILTER_PRED\">MAX_FILTER_PRED</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pred\">pred</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#pred\">pred</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pred\">pred</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#oom\">oom</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#filter_pred_none\">filter_pred_none</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#preds\">preds</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#pred\">pred</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#filter\">filter</a>;", 
"", 
"<a class=\"id\" href=\"#oom\">oom</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__free_preds\">__free_preds</a>(<a class=\"id\" href=\"#filter\">filter</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#init_preds\">init_preds</a>(struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#filter\">filter</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#TRACE_EVENT_FL_FILTERED\">TRACE_EVENT_FL_FILTERED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#filter\">filter</a> = <a class=\"id\" href=\"#__alloc_preds\">__alloc_preds</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#filter\">filter</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#filter\">filter</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#init_subsystem_preds\">init_subsystem_preds</a>(struct <a class=\"id\" href=\"#event_subsystem\">event_subsystem</a> *<a class=\"id\" href=\"#system\">system</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#call\">call</a>, &amp;<a class=\"id\" href=\"#ftrace_events\">ftrace_events</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#system\">system</a>, <a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#name\">name</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#init_preds\">init_preds</a>(<a class=\"id\" href=\"#call\">call</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#filter_free_subsystem_preds\">filter_free_subsystem_preds</a>(struct <a class=\"id\" href=\"#event_subsystem\">event_subsystem</a> *<a class=\"id\" href=\"#system\">system</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#call\">call</a>, &amp;<a class=\"id\" href=\"#ftrace_events\">ftrace_events</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#system\">system</a>, <a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#name\">name</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filter_disable_preds\">filter_disable_preds</a>(<a class=\"id\" href=\"#call\">call</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remove_filter_string\">remove_filter_string</a>(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#filter\">filter</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#filter_add_pred_fn\">filter_add_pred_fn</a>(struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#event_filter\">event_filter</a> *<a class=\"id\" href=\"#filter\">filter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#filter_pred\">filter_pred</a> *<a class=\"id\" href=\"#pred\">pred</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#filter_pred_fn_t\">filter_pred_fn_t</a> <a class=\"id\" href=\"#fn\">fn</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#idx\">idx</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#n_preds\">n_preds</a> == <a class=\"id\" href=\"#MAX_FILTER_PRED\">MAX_FILTER_PRED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parse_error\">parse_error</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#FILT_ERR_TOO_MANY_PREDS\">FILT_ERR_TOO_MANY_PREDS</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> = <a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#n_preds\">n_preds</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filter_clear_pred\">filter_clear_pred</a>(<a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#preds\">preds</a>[<a class=\"id\" href=\"#idx\">idx</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#filter_set_pred\">filter_set_pred</a>(<a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#preds\">preds</a>[<a class=\"id\" href=\"#idx\">idx</a>], <a class=\"id\" href=\"#pred\">pred</a>, <a class=\"id\" href=\"#fn\">fn</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filter\">filter</a>-><a class=\"id\" href=\"#n_preds\">n_preds</a>++;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#filter_assign_type\">filter_assign_type</a>(const char *<a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strstr\">strstr</a>(<a class=\"id\" href=\"#type\">type</a>, \"__data_loc\") && <a class=\"id\" href=\"#strstr\">strstr</a>(<a class=\"id\" href=\"#type\">type</a>, \"char\"))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#FILTER_DYN_STRING\">FILTER_DYN_STRING</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strchr\">strchr</a>(<a class=\"id\" href=\"#type\">type</a>, '[') && <a class=\"id\" href=\"#strstr\">strstr</a>(<a class=\"id\" href=\"#type\">type</a>, \"char\"))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#FILTER_STATIC_STRING\">FILTER_STATIC_STRING</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#FILTER_OTHER\">FILTER_OTHER</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_string_field\">is_string_field</a>(struct <a class=\"id\" href=\"#ftrace_event_field\">ftrace_event_field</a> *<a class=\"id\" href=\"#field\">field</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#filter_type\">filter_type</a> == <a class=\"id\" href=\"#FILTER_DYN_STRING\">FILTER_DYN_STRING</a> ||", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#filter_type\">filter_type</a> == <a class=\"id\" href=\"#FILTER_STATIC_STRING\">FILTER_STATIC_STRING</a> ||", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#filter_type\">filter_type</a> == <a class=\"id\" href=\"#FILTER_PTR_STRING\">FILTER_PTR_STRING</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#is_legal_op\">is_legal_op</a>(struct <a class=\"id\" href=\"#ftrace_event_field\">ftrace_event_field</a> *<a class=\"id\" href=\"#field\">field</a>, int <a class=\"id\" href=\"#op\">op</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_string_field\">is_string_field</a>(<a class=\"id\" href=\"#field\">field</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#op\">op</a> != <a class=\"id\" href=\"#OP_EQ\">OP_EQ</a> && <a class=\"id\" href=\"#op\">op</a> != <a class=\"id\" href=\"#OP_NE\">OP_NE</a> && <a class=\"id\" href=\"#op\">op</a> != <a class=\"id\" href=\"#OP_GLOB\">OP_GLOB</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_string_field\">is_string_field</a>(<a class=\"id\" href=\"#field\">field</a>) && <a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#OP_GLOB\">OP_GLOB</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#filter_pred_fn_t\">filter_pred_fn_t</a> <a class=\"id\" href=\"#select_comparison_fn\">select_comparison_fn</a>(int <a class=\"id\" href=\"#op\">op</a>, int <a class=\"id\" href=\"#field_size\">field_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#field_is_signed\">field_is_signed</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filter_pred_fn_t\">filter_pred_fn_t</a> <a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#field_size\">field_size</a>) {", 
"<span class=\"ts\"/>case 8:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#OP_EQ\">OP_EQ</a> || <a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#OP_NE\">OP_NE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#filter_pred_64\">filter_pred_64</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#field_is_signed\">field_is_signed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#filter_pred_s64\">filter_pred_s64</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#filter_pred_u64\">filter_pred_u64</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 4:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#OP_EQ\">OP_EQ</a> || <a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#OP_NE\">OP_NE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#filter_pred_32\">filter_pred_32</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#field_is_signed\">field_is_signed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#filter_pred_s32\">filter_pred_s32</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#filter_pred_u32\">filter_pred_u32</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 2:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#OP_EQ\">OP_EQ</a> || <a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#OP_NE\">OP_NE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#filter_pred_16\">filter_pred_16</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#field_is_signed\">field_is_signed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#filter_pred_s16\">filter_pred_s16</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#filter_pred_u16\">filter_pred_u16</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#OP_EQ\">OP_EQ</a> || <a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#OP_NE\">OP_NE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#filter_pred_8\">filter_pred_8</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#field_is_signed\">field_is_signed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#filter_pred_s8\">filter_pred_s8</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#filter_pred_u8\">filter_pred_u8</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#fn\">fn</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#filter_add_pred\">filter_add_pred</a>(struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#event_filter\">event_filter</a> *<a class=\"id\" href=\"#filter\">filter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#filter_pred\">filter_pred</a> *<a class=\"id\" href=\"#pred\">pred</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#dry_run\">dry_run</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_field\">ftrace_event_field</a> *<a class=\"id\" href=\"#field\">field</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filter_pred_fn_t\">filter_pred_fn_t</a> <a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#filter_pred_none\">filter_pred_none</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#OP_AND\">OP_AND</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#pop_n\">pop_n</a> = 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#filter_pred_and\">filter_pred_and</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#add_pred_fn\">add_pred_fn</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#OP_OR\">OP_OR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#pop_n\">pop_n</a> = 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#filter_pred_or\">filter_pred_or</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#add_pred_fn\">add_pred_fn</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#field\">field</a> = <a class=\"id\" href=\"#find_event_field\">find_event_field</a>(<a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#field_name\">field_name</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#field\">field</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parse_error\">parse_error</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#FILT_ERR_FIELD_NOT_FOUND\">FILT_ERR_FIELD_NOT_FOUND</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_legal_op\">is_legal_op</a>(<a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#op\">op</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parse_error\">parse_error</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#FILT_ERR_ILLEGAL_FIELD_OP\">FILT_ERR_ILLEGAL_FIELD_OP</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_string_field\">is_string_field</a>(<a class=\"id\" href=\"#field\">field</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filter_build_regex\">filter_build_regex</a>(<a class=\"id\" href=\"#pred\">pred</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#filter_type\">filter_type</a> == <a class=\"id\" href=\"#FILTER_STATIC_STRING\">FILTER_STATIC_STRING</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#filter_pred_string\">filter_pred_string</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#regex\">regex</a>.<a class=\"id\" href=\"#field_len\">field_len</a> = <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#filter_type\">filter_type</a> == <a class=\"id\" href=\"#FILTER_DYN_STRING\">FILTER_DYN_STRING</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#filter_pred_strloc\">filter_pred_strloc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#filter_pred_pchar\">filter_pred_pchar</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#is_signed\">is_signed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#strict_strtoll\">strict_strtoll</a>(<a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#regex\">regex</a>.<a class=\"id\" href=\"#pattern\">pattern</a>, 0, &amp;<a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#strict_strtoull\">strict_strtoull</a>(<a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#regex\">regex</a>.<a class=\"id\" href=\"#pattern\">pattern</a>, 0, &amp;<a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parse_error\">parse_error</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#FILT_ERR_ILLEGAL_INTVAL\">FILT_ERR_ILLEGAL_INTVAL</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#val\">val</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#select_comparison_fn\">select_comparison_fn</a>(<a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#is_signed\">is_signed</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#fn\">fn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parse_error\">parse_error</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#FILT_ERR_INVALID_OP\">FILT_ERR_INVALID_OP</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#OP_NE\">OP_NE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#not\">not</a> = 1;", 
"", 
"<a class=\"id\" href=\"#add_pred_fn\">add_pred_fn</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dry_run\">dry_run</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#filter_add_pred_fn\">filter_add_pred_fn</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#filter\">filter</a>, <a class=\"id\" href=\"#pred\">pred</a>, <a class=\"id\" href=\"#fn\">fn</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#parse_init\">parse_init</a>(struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#filter_op\">filter_op</a> *<a class=\"id\" href=\"#ops\">ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       char *<a class=\"id\" href=\"#infix_string\">infix_string</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#ps\">ps</a>, '\\0', sizeof(*<a class=\"id\" href=\"#ps\">ps</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#infix\">infix</a>.<a class=\"id\" href=\"#string\">string</a> = <a class=\"id\" href=\"#infix_string\">infix_string</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#infix\">infix</a>.<a class=\"id\" href=\"#cnt\">cnt</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#infix_string\">infix_string</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#ops\">ops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#opstack\">opstack</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#postfix\">postfix</a>);", 
"}", 
"", 
"static char <a class=\"id\" href=\"#infix_next\">infix_next</a>(struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#infix\">infix</a>.<a class=\"id\" href=\"#cnt\">cnt</a>--;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#infix\">infix</a>.<a class=\"id\" href=\"#string\">string</a>[<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#infix\">infix</a>.<a class=\"id\" href=\"#tail\">tail</a>++];", 
"}", 
"", 
"static char <a class=\"id\" href=\"#infix_peek\">infix_peek</a>(struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#infix\">infix</a>.<a class=\"id\" href=\"#tail\">tail</a> == <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#infix\">infix</a>.<a class=\"id\" href=\"#string\">string</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#infix\">infix</a>.<a class=\"id\" href=\"#string\">string</a>[<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#infix\">infix</a>.<a class=\"id\" href=\"#tail\">tail</a>];", 
"}", 
"", 
"static void <a class=\"id\" href=\"#infix_advance\">infix_advance</a>(struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#infix\">infix</a>.<a class=\"id\" href=\"#cnt\">cnt</a>--;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#infix\">infix</a>.<a class=\"id\" href=\"#tail\">tail</a>++;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#is_precedence_lower\">is_precedence_lower</a>(struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#a\">a</a>, int <a class=\"id\" href=\"#b\">b</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ops\">ops</a>[<a class=\"id\" href=\"#a\">a</a>].<a class=\"id\" href=\"#precedence\">precedence</a> &lt; <a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ops\">ops</a>[<a class=\"id\" href=\"#b\">b</a>].<a class=\"id\" href=\"#precedence\">precedence</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#is_op_char\">is_op_char</a>(struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>, char <a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ops\">ops</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#string\">string</a>, \"OP_NONE\"); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ops\">ops</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#string\">string</a>[0] == <a class=\"id\" href=\"#c\">c</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#infix_get_op\">infix_get_op</a>(struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>, char <a class=\"id\" href=\"#firstc\">firstc</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#nextc\">nextc</a> = <a class=\"id\" href=\"#infix_peek\">infix_peek</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#opstr\">opstr</a>[3];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opstr\">opstr</a>[0] = <a class=\"id\" href=\"#firstc\">firstc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opstr\">opstr</a>[1] = <a class=\"id\" href=\"#nextc\">nextc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opstr\">opstr</a>[2] = '\\0';", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ops\">ops</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#string\">string</a>, \"OP_NONE\"); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#opstr\">opstr</a>, <a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ops\">ops</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#string\">string</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#infix_advance\">infix_advance</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ops\">ops</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opstr\">opstr</a>[1] = '\\0';", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ops\">ops</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#string\">string</a>, \"OP_NONE\"); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#opstr\">opstr</a>, <a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ops\">ops</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#string\">string</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ops\">ops</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#OP_NONE\">OP_NONE</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#clear_operand_string\">clear_operand_string</a>(struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#operand\">operand</a>.<a class=\"id\" href=\"#string\">string</a>, '\\0', <a class=\"id\" href=\"#MAX_FILTER_STR_VAL\">MAX_FILTER_STR_VAL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#operand\">operand</a>.<a class=\"id\" href=\"#tail\">tail</a> = 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#append_operand_char\">append_operand_char</a>(struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>, char <a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#operand\">operand</a>.<a class=\"id\" href=\"#tail\">tail</a> == <a class=\"id\" href=\"#MAX_FILTER_STR_VAL\">MAX_FILTER_STR_VAL</a> - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#operand\">operand</a>.<a class=\"id\" href=\"#string\">string</a>[<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#operand\">operand</a>.<a class=\"id\" href=\"#tail\">tail</a>++] = <a class=\"id\" href=\"#c\">c</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#filter_opstack_push\">filter_opstack_push</a>(struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>, int <a class=\"id\" href=\"#op\">op</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#opstack_op\">opstack_op</a> *<a class=\"id\" href=\"#opstack_op\">opstack_op</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opstack_op\">opstack_op</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#opstack_op\">opstack_op</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#opstack_op\">opstack_op</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opstack_op\">opstack_op</a>-><a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#op\">op</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#opstack_op\">opstack_op</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#opstack\">opstack</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#filter_opstack_empty\">filter_opstack_empty</a>(struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#opstack\">opstack</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#filter_opstack_top\">filter_opstack_top</a>(struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#opstack_op\">opstack_op</a> *<a class=\"id\" href=\"#opstack_op\">opstack_op</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#filter_opstack_empty\">filter_opstack_empty</a>(<a class=\"id\" href=\"#ps\">ps</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#OP_NONE\">OP_NONE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opstack_op\">opstack_op</a> = <a class=\"id\" href=\"#list_first_entry\">list_first_entry</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#opstack\">opstack</a>, struct <a class=\"id\" href=\"#opstack_op\">opstack_op</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#opstack_op\">opstack_op</a>-><a class=\"id\" href=\"#op\">op</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#filter_opstack_pop\">filter_opstack_pop</a>(struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#opstack_op\">opstack_op</a> *<a class=\"id\" href=\"#opstack_op\">opstack_op</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#op\">op</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#filter_opstack_empty\">filter_opstack_empty</a>(<a class=\"id\" href=\"#ps\">ps</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#OP_NONE\">OP_NONE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opstack_op\">opstack_op</a> = <a class=\"id\" href=\"#list_first_entry\">list_first_entry</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#opstack\">opstack</a>, struct <a class=\"id\" href=\"#opstack_op\">opstack_op</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#opstack_op\">opstack_op</a>-><a class=\"id\" href=\"#op\">op</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#opstack_op\">opstack_op</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#opstack_op\">opstack_op</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#op\">op</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#filter_opstack_clear\">filter_opstack_clear</a>(struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>)", 
"{", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#filter_opstack_empty\">filter_opstack_empty</a>(<a class=\"id\" href=\"#ps\">ps</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filter_opstack_pop\">filter_opstack_pop</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"}", 
"", 
"static char *<a class=\"id\" href=\"#curr_operand\">curr_operand</a>(struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#operand\">operand</a>.<a class=\"id\" href=\"#string\">string</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#postfix_append_operand\">postfix_append_operand</a>(struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>, char *<a class=\"id\" href=\"#operand\">operand</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#postfix_elt\">postfix_elt</a> *<a class=\"id\" href=\"#elt\">elt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elt\">elt</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#elt\">elt</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#elt\">elt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elt\">elt</a>-><a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#OP_NONE\">OP_NONE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elt\">elt</a>-><a class=\"id\" href=\"#operand\">operand</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#operand\">operand</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#elt\">elt</a>-><a class=\"id\" href=\"#operand\">operand</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#elt\">elt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#elt\">elt</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#postfix\">postfix</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#postfix_append_op\">postfix_append_op</a>(struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>, int <a class=\"id\" href=\"#op\">op</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#postfix_elt\">postfix_elt</a> *<a class=\"id\" href=\"#elt\">elt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elt\">elt</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#elt\">elt</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#elt\">elt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elt\">elt</a>-><a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#op\">op</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elt\">elt</a>-><a class=\"id\" href=\"#operand\">operand</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#elt\">elt</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#postfix\">postfix</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#postfix_clear\">postfix_clear</a>(struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#postfix_elt\">postfix_elt</a> *<a class=\"id\" href=\"#elt\">elt</a>;", 
"", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#postfix\">postfix</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elt\">elt</a> = <a class=\"id\" href=\"#list_first_entry\">list_first_entry</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#postfix\">postfix</a>, struct <a class=\"id\" href=\"#postfix_elt\">postfix_elt</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#elt\">elt</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#elt\">elt</a>-><a class=\"id\" href=\"#operand\">operand</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#elt\">elt</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#filter_parse\">filter_parse</a>(struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#in_string\">in_string</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#top_op\">top_op</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#ch\">ch</a>;", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#ch\">ch</a> = <a class=\"id\" href=\"#infix_next\">infix_next</a>(<a class=\"id\" href=\"#ps\">ps</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ch\">ch</a> == '\"') {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_string\">in_string</a> ^= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in_string\">in_string</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#parse_operand\">parse_operand</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#isspace\">isspace</a>(<a class=\"id\" href=\"#ch\">ch</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_op_char\">is_op_char</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#ch\">ch</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#infix_get_op\">infix_get_op</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#ch\">ch</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#OP_NONE\">OP_NONE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parse_error\">parse_error</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#FILT_ERR_INVALID_OP\">FILT_ERR_INVALID_OP</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#curr_operand\">curr_operand</a>(<a class=\"id\" href=\"#ps\">ps</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#postfix_append_operand\">postfix_append_operand</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#curr_operand\">curr_operand</a>(<a class=\"id\" href=\"#ps\">ps</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_operand_string\">clear_operand_string</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (!<a class=\"id\" href=\"#filter_opstack_empty\">filter_opstack_empty</a>(<a class=\"id\" href=\"#ps\">ps</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#top_op\">top_op</a> = <a class=\"id\" href=\"#filter_opstack_top\">filter_opstack_top</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_precedence_lower\">is_precedence_lower</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#top_op\">top_op</a>, <a class=\"id\" href=\"#op\">op</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#top_op\">top_op</a> = <a class=\"id\" href=\"#filter_opstack_pop\">filter_opstack_pop</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#postfix_append_op\">postfix_append_op</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#top_op\">top_op</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filter_opstack_push\">filter_opstack_push</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#op\">op</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ch\">ch</a> == '(') {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filter_opstack_push\">filter_opstack_push</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#OP_OPEN_PAREN\">OP_OPEN_PAREN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ch\">ch</a> == ')') {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#curr_operand\">curr_operand</a>(<a class=\"id\" href=\"#ps\">ps</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#postfix_append_operand\">postfix_append_operand</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#curr_operand\">curr_operand</a>(<a class=\"id\" href=\"#ps\">ps</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_operand_string\">clear_operand_string</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#top_op\">top_op</a> = <a class=\"id\" href=\"#filter_opstack_pop\">filter_opstack_pop</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#top_op\">top_op</a> != <a class=\"id\" href=\"#OP_NONE\">OP_NONE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#top_op\">top_op</a> == <a class=\"id\" href=\"#OP_OPEN_PAREN\">OP_OPEN_PAREN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#postfix_append_op\">postfix_append_op</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#top_op\">top_op</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#top_op\">top_op</a> = <a class=\"id\" href=\"#filter_opstack_pop\">filter_opstack_pop</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#top_op\">top_op</a> == <a class=\"id\" href=\"#OP_NONE\">OP_NONE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parse_error\">parse_error</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#FILT_ERR_UNBALANCED_PAREN\">FILT_ERR_UNBALANCED_PAREN</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#parse_operand\">parse_operand</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#append_operand_char\">append_operand_char</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#ch\">ch</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parse_error\">parse_error</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#FILT_ERR_OPERAND_TOO_LONG\">FILT_ERR_OPERAND_TOO_LONG</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#curr_operand\">curr_operand</a>(<a class=\"id\" href=\"#ps\">ps</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#postfix_append_operand\">postfix_append_operand</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#curr_operand\">curr_operand</a>(<a class=\"id\" href=\"#ps\">ps</a>));", 
"", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#filter_opstack_empty\">filter_opstack_empty</a>(<a class=\"id\" href=\"#ps\">ps</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#top_op\">top_op</a> = <a class=\"id\" href=\"#filter_opstack_pop\">filter_opstack_pop</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#top_op\">top_op</a> == <a class=\"id\" href=\"#OP_NONE\">OP_NONE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#top_op\">top_op</a> == <a class=\"id\" href=\"#OP_OPEN_PAREN\">OP_OPEN_PAREN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parse_error\">parse_error</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#FILT_ERR_UNBALANCED_PAREN\">FILT_ERR_UNBALANCED_PAREN</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#postfix_append_op\">postfix_append_op</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#top_op\">top_op</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#filter_pred\">filter_pred</a> *<a class=\"id\" href=\"#create_pred\">create_pred</a>(int <a class=\"id\" href=\"#op\">op</a>, char *<a class=\"id\" href=\"#operand1\">operand1</a>, char *<a class=\"id\" href=\"#operand2\">operand2</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#filter_pred\">filter_pred</a> *<a class=\"id\" href=\"#pred\">pred</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pred\">pred</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#pred\">pred</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pred\">pred</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#field_name\">field_name</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#operand1\">operand1</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#field_name\">field_name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pred\">pred</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strcpy\">strcpy</a>(<a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#regex\">regex</a>.<a class=\"id\" href=\"#pattern\">pattern</a>, <a class=\"id\" href=\"#operand2\">operand2</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#regex\">regex</a>.<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#regex\">regex</a>.<a class=\"id\" href=\"#pattern\">pattern</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#op\">op</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pred\">pred</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#filter_pred\">filter_pred</a> *<a class=\"id\" href=\"#create_logical_pred\">create_logical_pred</a>(int <a class=\"id\" href=\"#op\">op</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#filter_pred\">filter_pred</a> *<a class=\"id\" href=\"#pred\">pred</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pred\">pred</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#pred\">pred</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pred\">pred</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pred\">pred</a>-><a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#op\">op</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pred\">pred</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#check_preds\">check_preds</a>(struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n_normal_preds\">n_normal_preds</a> = 0, <a class=\"id\" href=\"#n_logical_preds\">n_logical_preds</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#postfix_elt\">postfix_elt</a> *<a class=\"id\" href=\"#elt\">elt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#elt\">elt</a>, &amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#postfix\">postfix</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#elt\">elt</a>-><a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#OP_NONE\">OP_NONE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#elt\">elt</a>-><a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#OP_AND\">OP_AND</a> || <a class=\"id\" href=\"#elt\">elt</a>-><a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#OP_OR\">OP_OR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n_logical_preds\">n_logical_preds</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n_normal_preds\">n_normal_preds</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#n_normal_preds\">n_normal_preds</a> || <a class=\"id\" href=\"#n_logical_preds\">n_logical_preds</a> >= <a class=\"id\" href=\"#n_normal_preds\">n_normal_preds</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parse_error\">parse_error</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#FILT_ERR_INVALID_FILTER\">FILT_ERR_INVALID_FILTER</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#replace_preds\">replace_preds</a>(struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#event_filter\">event_filter</a> *<a class=\"id\" href=\"#filter\">filter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> char *<a class=\"id\" href=\"#filter_string\">filter_string</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#dry_run\">dry_run</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#operand1\">operand1</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#operand2\">operand2</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#filter_pred\">filter_pred</a> *<a class=\"id\" href=\"#pred\">pred</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#postfix_elt\">postfix_elt</a> *<a class=\"id\" href=\"#elt\">elt</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n_preds\">n_preds</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#check_preds\">check_preds</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#elt\">elt</a>, &amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#postfix\">postfix</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#elt\">elt</a>-><a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#OP_NONE\">OP_NONE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#operand1\">operand1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#operand1\">operand1</a> = <a class=\"id\" href=\"#elt\">elt</a>-><a class=\"id\" href=\"#operand\">operand</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (!<a class=\"id\" href=\"#operand2\">operand2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#operand2\">operand2</a> = <a class=\"id\" href=\"#elt\">elt</a>-><a class=\"id\" href=\"#operand\">operand</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parse_error\">parse_error</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#FILT_ERR_TOO_MANY_OPERANDS\">FILT_ERR_TOO_MANY_OPERANDS</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n_preds\">n_preds</a>++ == <a class=\"id\" href=\"#MAX_FILTER_PRED\">MAX_FILTER_PRED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parse_error\">parse_error</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#FILT_ERR_TOO_MANY_PREDS\">FILT_ERR_TOO_MANY_PREDS</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#elt\">elt</a>-><a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#OP_AND\">OP_AND</a> || <a class=\"id\" href=\"#elt\">elt</a>-><a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#OP_OR\">OP_OR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pred\">pred</a> = <a class=\"id\" href=\"#create_logical_pred\">create_logical_pred</a>(<a class=\"id\" href=\"#elt\">elt</a>-><a class=\"id\" href=\"#op\">op</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#add_pred\">add_pred</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#operand1\">operand1</a> || !<a class=\"id\" href=\"#operand2\">operand2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parse_error\">parse_error</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#FILT_ERR_MISSING_FIELD\">FILT_ERR_MISSING_FIELD</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pred\">pred</a> = <a class=\"id\" href=\"#create_pred\">create_pred</a>(<a class=\"id\" href=\"#elt\">elt</a>-><a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#operand1\">operand1</a>, <a class=\"id\" href=\"#operand2\">operand2</a>);", 
"<a class=\"id\" href=\"#add_pred\">add_pred</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pred\">pred</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#filter_add_pred\">filter_add_pred</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#filter\">filter</a>, <a class=\"id\" href=\"#pred\">pred</a>, <a class=\"id\" href=\"#dry_run\">dry_run</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filter_free_pred\">filter_free_pred</a>(<a class=\"id\" href=\"#pred\">pred</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#operand1\">operand1</a> = <a class=\"id\" href=\"#operand2\">operand2</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#replace_system_preds\">replace_system_preds</a>(struct <a class=\"id\" href=\"#event_subsystem\">event_subsystem</a> *<a class=\"id\" href=\"#system\">system</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#filter_string\">filter_string</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#fail\">fail</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#call\">call</a>, &amp;<a class=\"id\" href=\"#ftrace_events\">ftrace_events</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#event_filter\">event_filter</a> *<a class=\"id\" href=\"#filter\">filter</a> = <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#filter\">filter</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#system\">system</a>, <a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#name\">name</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* try to see if the filter can be applied */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#replace_preds\">replace_preds</a>(<a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#filter\">filter</a>, <a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#filter_string\">filter_string</a>, <a class=\"id\" href=\"#true\">true</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* really apply the filter */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filter_disable_preds\">filter_disable_preds</a>(<a class=\"id\" href=\"#call\">call</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#replace_preds\">replace_preds</a>(<a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#filter\">filter</a>, <a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#filter_string\">filter_string</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filter_disable_preds\">filter_disable_preds</a>(<a class=\"id\" href=\"#call\">call</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#TRACE_EVENT_FL_FILTERED\">TRACE_EVENT_FL_FILTERED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#replace_filter_string\">replace_filter_string</a>(<a class=\"id\" href=\"#filter\">filter</a>, <a class=\"id\" href=\"#filter_string\">filter_string</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fail\">fail</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fail\">fail</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parse_error\">parse_error</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#FILT_ERR_BAD_SUBSYS_FILTER\">FILT_ERR_BAD_SUBSYS_FILTER</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#apply_event_filter\">apply_event_filter</a>(struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>, char *<a class=\"id\" href=\"#filter_string\">filter_string</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#init_preds\">init_preds</a>(<a class=\"id\" href=\"#call\">call</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#strstrip\">strstrip</a>(<a class=\"id\" href=\"#filter_string\">filter_string</a>), \"0\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filter_disable_preds\">filter_disable_preds</a>(<a class=\"id\" href=\"#call\">call</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remove_filter_string\">remove_filter_string</a>(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#filter\">filter</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ps\">ps</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#ps\">ps</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ps\">ps</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filter_disable_preds\">filter_disable_preds</a>(<a class=\"id\" href=\"#call\">call</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#replace_filter_string\">replace_filter_string</a>(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#filter\">filter</a>, <a class=\"id\" href=\"#filter_string\">filter_string</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parse_init\">parse_init</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#filter_ops\">filter_ops</a>, <a class=\"id\" href=\"#filter_string\">filter_string</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#filter_parse\">filter_parse</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#append_filter_err\">append_filter_err</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#filter\">filter</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#replace_preds\">replace_preds</a>(<a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#filter\">filter</a>, <a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#filter_string\">filter_string</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#append_filter_err\">append_filter_err</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#filter\">filter</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#TRACE_EVENT_FL_FILTERED\">TRACE_EVENT_FL_FILTERED</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filter_opstack_clear\">filter_opstack_clear</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#postfix_clear\">postfix_clear</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#apply_subsystem_event_filter\">apply_subsystem_event_filter</a>(struct <a class=\"id\" href=\"#event_subsystem\">event_subsystem</a> *<a class=\"id\" href=\"#system\">system</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> char *<a class=\"id\" href=\"#filter_string\">filter_string</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#init_subsystem_preds\">init_subsystem_preds</a>(<a class=\"id\" href=\"#system\">system</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#strstrip\">strstrip</a>(<a class=\"id\" href=\"#filter_string\">filter_string</a>), \"0\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filter_free_subsystem_preds\">filter_free_subsystem_preds</a>(<a class=\"id\" href=\"#system\">system</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remove_filter_string\">remove_filter_string</a>(<a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#filter\">filter</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ps\">ps</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#ps\">ps</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ps\">ps</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#replace_filter_string\">replace_filter_string</a>(<a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#filter\">filter</a>, <a class=\"id\" href=\"#filter_string\">filter_string</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parse_init\">parse_init</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#filter_ops\">filter_ops</a>, <a class=\"id\" href=\"#filter_string\">filter_string</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#filter_parse\">filter_parse</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#append_filter_err\">append_filter_err</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#filter\">filter</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#replace_system_preds\">replace_system_preds</a>(<a class=\"id\" href=\"#system\">system</a>, <a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#filter_string\">filter_string</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#append_filter_err\">append_filter_err</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#filter\">filter</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filter_opstack_clear\">filter_opstack_clear</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#postfix_clear\">postfix_clear</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PERF_EVENTS\">CONFIG_PERF_EVENTS</a>", 
"", 
"void <a class=\"id\" href=\"#ftrace_profile_free_filter\">ftrace_profile_free_filter</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#event_filter\">event_filter</a> *<a class=\"id\" href=\"#filter\">filter</a> = <a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#filter\">filter</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#filter\">filter</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__free_preds\">__free_preds</a>(<a class=\"id\" href=\"#filter\">filter</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#ftrace_profile_set_filter\">ftrace_profile_set_filter</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#event\">event</a>, int <a class=\"id\" href=\"#event_id\">event_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      char *<a class=\"id\" href=\"#filter_str\">filter_str</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#event_filter\">event_filter</a> *<a class=\"id\" href=\"#filter\">filter</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#filter_parse_state\">filter_parse_state</a> *<a class=\"id\" href=\"#ps\">ps</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#call\">call</a>, &amp;<a class=\"id\" href=\"#ftrace_events\">ftrace_events</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#event\">event</a>.<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#event_id\">event_id</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (&amp;<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#list\">list</a> == &amp;<a class=\"id\" href=\"#ftrace_events\">ftrace_events</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#filter\">filter</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filter\">filter</a> = <a class=\"id\" href=\"#__alloc_preds\">__alloc_preds</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#filter\">filter</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#filter\">filter</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ps\">ps</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#ps\">ps</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ps\">ps</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free_preds\">free_preds</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parse_init\">parse_init</a>(<a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#filter_ops\">filter_ops</a>, <a class=\"id\" href=\"#filter_str\">filter_str</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#filter_parse\">filter_parse</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free_ps\">free_ps</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#replace_preds\">replace_preds</a>(<a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#filter\">filter</a>, <a class=\"id\" href=\"#ps\">ps</a>, <a class=\"id\" href=\"#filter_str\">filter_str</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#filter\">filter</a> = <a class=\"id\" href=\"#filter\">filter</a>;", 
"", 
"<a class=\"id\" href=\"#free_ps\">free_ps</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filter_opstack_clear\">filter_opstack_clear</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#postfix_clear\">postfix_clear</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ps\">ps</a>);", 
"", 
"<a class=\"id\" href=\"#free_preds\">free_preds</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__free_preds\">__free_preds</a>(<a class=\"id\" href=\"#filter\">filter</a>);", 
"", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_PERF_EVENTS */</span>", 
"", 
];
xr_frag_insert('l/f1/57f01756fab69cf0b81dd5163db5f03ef956c1.xr', __xr_tmp);
