var __xr_tmp = [
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#paws_reject\">paws_reject</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#twsk_net\">twsk_net</a>(<a class=\"id\" href=\"#tw\">tw</a>), <a class=\"id\" href=\"#LINUX_MIB_PAWSESTABREJECTED\">LINUX_MIB_PAWSESTABREJECTED</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#rst\">rst</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* In this case we must reset the TIMEWAIT timer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If it is ACKless SYN it may be both old duplicate</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and new good SYN with random sequence number &lt;rcv_nxt.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Do not reschedule in the last case.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#paws_reject\">paws_reject</a> || <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#ack\">ack</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_schedule\">inet_twsk_schedule</a>(<a class=\"id\" href=\"#tw\">tw</a>, &amp;<a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a>, <a class=\"id\" href=\"#TCP_TIMEWAIT_LEN\">TCP_TIMEWAIT_LEN</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#TCP_TIMEWAIT_LEN\">TCP_TIMEWAIT_LEN</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Send ACK. Note, we do not put the bucket,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * it will be released by caller.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#TCP_TW_ACK\">TCP_TW_ACK</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_put\">inet_twsk_put</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#TCP_TW_SUCCESS\">TCP_TW_SUCCESS</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_timewait_state_process\">tcp_timewait_state_process</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Move a socket to time-wait or dead fin-wait-2 state.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#tcp_time_wait\">tcp_time_wait</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#state\">state</a>, int <a class=\"id\" href=\"#timeo\">timeo</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#recycle_ok\">recycle_ok</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a>.<a class=\"id\" href=\"#sysctl_tw_recycle\">sysctl_tw_recycle</a> && <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent_stamp\">ts_recent_stamp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#recycle_ok\">recycle_ok</a> = <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_af_ops\">icsk_af_ops</a>-><a class=\"id\" href=\"#remember_stamp\">remember_stamp</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a>.<a class=\"id\" href=\"#tw_count\">tw_count</a> &lt; <a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a>.<a class=\"id\" href=\"#sysctl_max_tw_buckets\">sysctl_max_tw_buckets</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a> = <a class=\"id\" href=\"#inet_twsk_alloc\">inet_twsk_alloc</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#state\">state</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tw\">tw</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_timewait_sock\">tcp_timewait_sock</a> *<a class=\"id\" href=\"#tcptw\">tcptw</a> = <a class=\"id\" href=\"#tcp_twsk\">tcp_twsk</a>((struct <a class=\"id\" href=\"#sock\">sock</a> *)<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>const int <a class=\"id\" href=\"#rto\">rto</a> = (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_rto\">icsk_rto</a> << 2) - (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_rto\">icsk_rto</a> >> 1);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_rcv_wscale\">tw_rcv_wscale</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#rcv_wscale\">rcv_wscale</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_rcv_nxt\">tw_rcv_nxt</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_snd_nxt\">tw_snd_nxt</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_nxt\">snd_nxt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_rcv_wnd\">tw_rcv_wnd</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_receive_window\">tcp_receive_window</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_ts_recent\">tw_ts_recent</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent\">ts_recent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_ts_recent_stamp\">tw_ts_recent_stamp</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent_stamp\">ts_recent_stamp</a>;", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_family\">tw_family</a> == <a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_timewait_sock\">inet6_timewait_sock</a> *<a class=\"id\" href=\"#tw6\">tw6</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_ipv6_offset\">tw_ipv6_offset</a> = <a class=\"id\" href=\"#inet6_tw_offset\">inet6_tw_offset</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw6\">tw6</a> = <a class=\"id\" href=\"#inet6_twsk\">inet6_twsk</a>((struct <a class=\"id\" href=\"#sock\">sock</a> *)<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#tw6\">tw6</a>-><a class=\"id\" href=\"#tw_v6_daddr\">tw_v6_daddr</a>, &amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#daddr\">daddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#tw6\">tw6</a>-><a class=\"id\" href=\"#tw_v6_rcv_saddr\">tw_v6_rcv_saddr</a>, &amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rcv_saddr\">rcv_saddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_ipv6only\">tw_ipv6only</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#ipv6only\">ipv6only</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The timewait bucket does not have the key DB from the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * sock structure. We just make a quick copy of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * md5 key being used (if indeed we are using one)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * so the timewait ack generating code has the key.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_md5sig_key\">tcp_md5sig_key</a> *<a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_md5_key\">tw_md5_key</a>, 0, sizeof(<a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_md5_key\">tw_md5_key</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_md5_keylen\">tw_md5_keylen</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#af_specific\">af_specific</a>-><a class=\"id\" href=\"#md5_lookup\">md5_lookup</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_md5_key\">tw_md5_key</a>, <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#keylen\">keylen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_md5_keylen\">tw_md5_keylen</a> = <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#keylen\">keylen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_alloc_md5sig_pool\">tcp_alloc_md5sig_pool</a>(<a class=\"id\" href=\"#sk\">sk</a>) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} while (0);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Linkage updates. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__inet_twsk_hashdance\">__inet_twsk_hashdance</a>(<a class=\"id\" href=\"#tw\">tw</a>, <a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Get the TIME_WAIT timeout firing. */</span>", 
];
xr_frag_insert('l/f1/8ba6ec3e6327e2647e1170a60aaf9bfe23b9d7.xr', __xr_tmp);
