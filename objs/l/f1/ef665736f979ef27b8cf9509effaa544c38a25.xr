var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_X86_TLBFLUSH_H\">_ASM_X86_TLBFLUSH_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_X86_TLBFLUSH_H\">_ASM_X86_TLBFLUSH_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PARAVIRT\">CONFIG_PARAVIRT</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#paravirt\">paravirt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__flush_tlb\">__flush_tlb</a>() <a class=\"id\" href=\"#__native_flush_tlb\">__native_flush_tlb</a>()", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__flush_tlb_global\">__flush_tlb_global</a>() <a class=\"id\" href=\"#__native_flush_tlb_global\">__native_flush_tlb_global</a>()", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__flush_tlb_single\">__flush_tlb_single</a>(<a class=\"id\" href=\"#addr\">addr</a>) <a class=\"id\" href=\"#__native_flush_tlb_single\">__native_flush_tlb_single</a>(<a class=\"id\" href=\"#addr\">addr</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__native_flush_tlb\">__native_flush_tlb</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#native_write_cr3\">native_write_cr3</a>(<a class=\"id\" href=\"#native_read_cr3\">native_read_cr3</a>());", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__native_flush_tlb_global\">__native_flush_tlb_global</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#cr4\">cr4</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Read-modify-write to CR4 - protect it from preemption and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * from interrupts. (Use the raw variant because this code can</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * be called from deep inside debugging code.)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_local_irq_save\">raw_local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cr4\">cr4</a> = <a class=\"id\" href=\"#native_read_cr4\">native_read_cr4</a>();", 
"<span class=\"ts\"/><span class=\"comment\">/* clear PGE */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#native_write_cr4\">native_write_cr4</a>(<a class=\"id\" href=\"#cr4\">cr4</a> &amp; ~<a class=\"id\" href=\"#X86_CR4_PGE\">X86_CR4_PGE</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* write old PGE again and flush TLBs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#native_write_cr4\">native_write_cr4</a>(<a class=\"id\" href=\"#cr4\">cr4</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_local_irq_restore\">raw_local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__native_flush_tlb_single\">__native_flush_tlb_single</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"invlpg (%0)\" ::\"r\" (<a class=\"id\" href=\"#addr\">addr</a>) : \"memory\");", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__flush_tlb_all\">__flush_tlb_all</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has_pge\">cpu_has_pge</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__flush_tlb_global\">__flush_tlb_global</a>();", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__flush_tlb\">__flush_tlb</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__flush_tlb_one\">__flush_tlb_one</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has_invlpg\">cpu_has_invlpg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__flush_tlb_single\">__flush_tlb_single</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__flush_tlb\">__flush_tlb</a>();", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TLB_FLUSH_ALL\">TLB_FLUSH_ALL</a><span class=\"ts\"/>0xffffffff", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TLB_FLUSH_ALL\">TLB_FLUSH_ALL</a><span class=\"ts\"/>-1ULL", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * TLB flushing:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  - flush_tlb() flushes the current mm struct TLBs</span>", 
"<span class=\"comment\"> *  - flush_tlb_all() flushes all processes TLBs</span>", 
"<span class=\"comment\"> *  - flush_tlb_mm(mm) flushes the specified mm context TLB's</span>", 
"<span class=\"comment\"> *  - flush_tlb_page(vma, vmaddr) flushes one page</span>", 
"<span class=\"comment\"> *  - flush_tlb_range(vma, start, end) flushes a range of pages</span>", 
"<span class=\"comment\"> *  - flush_tlb_kernel_range(start, end) flushes a range of kernel pages</span>", 
"<span class=\"comment\"> *  - flush_tlb_others(cpumask, mm, va) flushes TLBs on other cpus</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ..but the i386 has somewhat limited tlb flushing capabilities,</span>", 
"<span class=\"comment\"> * and page-granular flushes are available only on i486 and up.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * x86-64 can only flush individual pages or full VMs. For a range flush</span>", 
"<span class=\"comment\"> * we always do the full VM. Might be worth trying if for a small</span>", 
"<span class=\"comment\"> * range a few INVLPGs in a row are a win.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#flush_tlb\">flush_tlb</a>() <a class=\"id\" href=\"#__flush_tlb\">__flush_tlb</a>()", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#flush_tlb_all\">flush_tlb_all</a>() <a class=\"id\" href=\"#__flush_tlb_all\">__flush_tlb_all</a>()", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#local_flush_tlb\">local_flush_tlb</a>() <a class=\"id\" href=\"#__flush_tlb\">__flush_tlb</a>()", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#flush_tlb_mm\">flush_tlb_mm</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a> == <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#active_mm\">active_mm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__flush_tlb\">__flush_tlb</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#flush_tlb_page\">flush_tlb_page</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a> == <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#active_mm\">active_mm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__flush_tlb_one\">__flush_tlb_one</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#flush_tlb_range\">flush_tlb_range</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned long <a class=\"id\" href=\"#start\">start</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a> == <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#active_mm\">active_mm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__flush_tlb\">__flush_tlb</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#native_flush_tlb_others\">native_flush_tlb_others</a>(const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#cpumask\">cpumask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned long <a class=\"id\" href=\"#va\">va</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#reset_lazy_tlbstate\">reset_lazy_tlbstate</a>(void)", 
"{", 
"}", 
"", 
"#else  <span class=\"comment\">/* SMP */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#local_flush_tlb\">local_flush_tlb</a>() <a class=\"id\" href=\"#__flush_tlb\">__flush_tlb</a>()", 
"", 
"extern void <a class=\"id\" href=\"#flush_tlb_all\">flush_tlb_all</a>(void);", 
"extern void <a class=\"id\" href=\"#flush_tlb_current_task\">flush_tlb_current_task</a>(void);", 
"extern void <a class=\"id\" href=\"#flush_tlb_mm\">flush_tlb_mm</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *);", 
"extern void <a class=\"id\" href=\"#flush_tlb_page\">flush_tlb_page</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *, unsigned long);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#flush_tlb\">flush_tlb</a>()<span class=\"ts\"/><a class=\"id\" href=\"#flush_tlb_current_task\">flush_tlb_current_task</a>()", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#flush_tlb_range\">flush_tlb_range</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned long <a class=\"id\" href=\"#start\">start</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_tlb_mm\">flush_tlb_mm</a>(<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#native_flush_tlb_others\">native_flush_tlb_others</a>(const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#cpumask\">cpumask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, unsigned long <a class=\"id\" href=\"#va\">va</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TLBSTATE_OK\">TLBSTATE_OK</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TLBSTATE_LAZY\">TLBSTATE_LAZY</a><span class=\"ts\"/>2", 
"", 
"struct <a class=\"id\" href=\"#tlb_state\">tlb_state</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#active_mm\">active_mm</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#state\">state</a>;", 
"};", 
"<a class=\"id\" href=\"#DECLARE_PER_CPU_SHARED_ALIGNED\">DECLARE_PER_CPU_SHARED_ALIGNED</a>(struct <a class=\"id\" href=\"#tlb_state\">tlb_state</a>, <a class=\"id\" href=\"#cpu_tlbstate\">cpu_tlbstate</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#reset_lazy_tlbstate\">reset_lazy_tlbstate</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_write\">percpu_write</a>(<a class=\"id\" href=\"#cpu_tlbstate\">cpu_tlbstate</a>.<a class=\"id\" href=\"#state\">state</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_write\">percpu_write</a>(<a class=\"id\" href=\"#cpu_tlbstate\">cpu_tlbstate</a>.<a class=\"id\" href=\"#active_mm\">active_mm</a>, &amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* SMP */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_PARAVIRT\">CONFIG_PARAVIRT</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#flush_tlb_others\">flush_tlb_others</a>(<a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#va\">va</a>)<span class=\"ts\"/><a class=\"id\" href=\"#native_flush_tlb_others\">native_flush_tlb_others</a>(<a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#va\">va</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#flush_tlb_kernel_range\">flush_tlb_kernel_range</a>(unsigned long <a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_tlb_all\">flush_tlb_all</a>();", 
"}", 
"", 
"extern void <a class=\"id\" href=\"#zap_low_mappings\">zap_low_mappings</a>(<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#early\">early</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_X86_TLBFLUSH_H */</span>", 
];
xr_frag_insert('l/f1/ef665736f979ef27b8cf9509effaa544c38a25.xr', __xr_tmp);
