var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Anycast support for IPv6</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Linux INET6 implementation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Authors:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>David L Stevens (dlstevens@us.ibm.com)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>based heavily on net/ipv6/mcast.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *      modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *      as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *      2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#random\">random</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sockios\">sockios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in6\">in6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_arp\">if_arp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#route\">route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#snmp\">snmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#if_inet6\">if_inet6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ndisc\">ndisc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#addrconf\">addrconf</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip6_route\">ip6_route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#checksum\">checksum</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static int <a class=\"id\" href=\"#ipv6_dev_ac_dec\">ipv6_dev_ac_dec</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"comment\">/* Big ac list lock for all the sockets */</span>", 
"static <a class=\"id\" href=\"#DEFINE_RWLOCK\">DEFINE_RWLOCK</a>(<a class=\"id\" href=\"#ipv6_sk_ac_lock\">ipv6_sk_ac_lock</a>);", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>socket join an anycast group</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ipv6_sock_ac_join\">ipv6_sock_ac_join</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#ifindex\">ifindex</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_ac_socklist\">ipv6_ac_socklist</a> *<a class=\"id\" href=\"#pac\">pac</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#ishost\">ishost</a> = !<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#devconf_all\">devconf_all</a>-><a class=\"id\" href=\"#forwarding\">forwarding</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_NET_ADMIN\">CAP_NET_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_is_multicast\">ipv6_addr_is_multicast</a>(<a class=\"id\" href=\"#addr\">addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_chk_addr\">ipv6_chk_addr</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pac\">pac</a> = <a class=\"id\" href=\"#sock_kmalloc\">sock_kmalloc</a>(<a class=\"id\" href=\"#sk\">sk</a>, sizeof(struct <a class=\"id\" href=\"#ipv6_ac_socklist\">ipv6_ac_socklist</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pac\">pac</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pac\">pac</a>-><a class=\"id\" href=\"#acl_next\">acl_next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#pac\">pac</a>-><a class=\"id\" href=\"#acl_addr\">acl_addr</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifindex\">ifindex</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#rt6_lookup\">rt6_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_dev\">rt6i_dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#ishost\">ishost</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* router, no matching interface: just pick one */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev_get_by_flags_rcu\">dev_get_by_flags_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#IFF_UP\">IFF_UP</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#IFF_UP\">IFF_UP</a> | <a class=\"id\" href=\"#IFF_LOOPBACK\">IFF_LOOPBACK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev_get_by_index_rcu\">dev_get_by_index_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ifindex\">ifindex</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#idev\">idev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifindex\">ifindex</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* reset ishost, now that we have a specific device */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ishost\">ishost</a> = !<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#forwarding\">forwarding</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pac\">pac</a>-><a class=\"id\" href=\"#acl_ifindex\">acl_ifindex</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* XXX</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For hosts, allow link-local or matching prefix anycasts.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This obviates the need for propagating anycast routes while</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * still allowing some non-router anycast participation.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_chk_prefix\">ipv6_chk_prefix</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ishost\">ishost</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipv6_dev_ac_inc\">ipv6_dev_ac_inc</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_ac_lock\">ipv6_sk_ac_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pac\">pac</a>-><a class=\"id\" href=\"#acl_next\">acl_next</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#ipv6_ac_list\">ipv6_ac_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#ipv6_ac_list\">ipv6_ac_list</a> = <a class=\"id\" href=\"#pac\">pac</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_ac_lock\">ipv6_sk_ac_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pac\">pac</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pac\">pac</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_kfree_s\">sock_kfree_s</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#pac\">pac</a>, sizeof(*<a class=\"id\" href=\"#pac\">pac</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>socket leave an anycast group</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ipv6_sock_ac_drop\">ipv6_sock_ac_drop</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#ifindex\">ifindex</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_ac_socklist\">ipv6_ac_socklist</a> *<a class=\"id\" href=\"#pac\">pac</a>, *<a class=\"id\" href=\"#prev_pac\">prev_pac</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_ac_lock\">ipv6_sk_ac_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prev_pac\">prev_pac</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pac\">pac</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#ipv6_ac_list\">ipv6_ac_list</a>; <a class=\"id\" href=\"#pac\">pac</a>; <a class=\"id\" href=\"#pac\">pac</a> = <a class=\"id\" href=\"#pac\">pac</a>-><a class=\"id\" href=\"#acl_next\">acl_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ifindex\">ifindex</a> == 0 || <a class=\"id\" href=\"#pac\">pac</a>-><a class=\"id\" href=\"#acl_ifindex\">acl_ifindex</a> == <a class=\"id\" href=\"#ifindex\">ifindex</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#pac\">pac</a>-><a class=\"id\" href=\"#acl_addr\">acl_addr</a>, <a class=\"id\" href=\"#addr\">addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev_pac\">prev_pac</a> = <a class=\"id\" href=\"#pac\">pac</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pac\">pac</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_ac_lock\">ipv6_sk_ac_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#prev_pac\">prev_pac</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev_pac\">prev_pac</a>-><a class=\"id\" href=\"#acl_next\">acl_next</a> = <a class=\"id\" href=\"#pac\">pac</a>-><a class=\"id\" href=\"#acl_next\">acl_next</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#ipv6_ac_list\">ipv6_ac_list</a> = <a class=\"id\" href=\"#pac\">pac</a>-><a class=\"id\" href=\"#acl_next\">acl_next</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_ac_lock\">ipv6_sk_ac_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev_get_by_index_rcu\">dev_get_by_index_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#pac\">pac</a>-><a class=\"id\" href=\"#acl_ifindex\">acl_ifindex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_dev_ac_dec\">ipv6_dev_ac_dec</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#pac\">pac</a>-><a class=\"id\" href=\"#acl_addr\">acl_addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_kfree_s\">sock_kfree_s</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#pac\">pac</a>, sizeof(*<a class=\"id\" href=\"#pac\">pac</a>));", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#ipv6_sock_ac_close\">ipv6_sock_ac_close</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_ac_socklist\">ipv6_ac_socklist</a> *<a class=\"id\" href=\"#pac\">pac</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#prev_index\">prev_index</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_ac_lock\">ipv6_sk_ac_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pac\">pac</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#ipv6_ac_list\">ipv6_ac_list</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#ipv6_ac_list\">ipv6_ac_list</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_ac_lock\">ipv6_sk_ac_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prev_index\">prev_index</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#pac\">pac</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_ac_socklist\">ipv6_ac_socklist</a> *<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#pac\">pac</a>-><a class=\"id\" href=\"#acl_next\">acl_next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pac\">pac</a>-><a class=\"id\" href=\"#acl_ifindex\">acl_ifindex</a> != <a class=\"id\" href=\"#prev_index\">prev_index</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev_get_by_index_rcu\">dev_get_by_index_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#pac\">pac</a>-><a class=\"id\" href=\"#acl_ifindex\">acl_ifindex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev_index\">prev_index</a> = <a class=\"id\" href=\"#pac\">pac</a>-><a class=\"id\" href=\"#acl_ifindex\">acl_ifindex</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_dev_ac_dec\">ipv6_dev_ac_dec</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#pac\">pac</a>-><a class=\"id\" href=\"#acl_addr\">acl_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_kfree_s\">sock_kfree_s</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#pac\">pac</a>, sizeof(*<a class=\"id\" href=\"#pac\">pac</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pac\">pac</a> = <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"}", 
"", 
"#if 0", 
"<span class=\"comment\">/* The function is not used, which is funny. Apparently, author</span>", 
"<span class=\"comment\"> * supposed to use it to filter out datagrams inside udp/raw but forgot.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * It is OK, anycasts are not special comparing to delivery to unicasts.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#inet6_ac_check\">inet6_ac_check</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#ifindex\">ifindex</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_ac_socklist\">ipv6_ac_socklist</a> *<a class=\"id\" href=\"#pac\">pac</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_ac_lock\">ipv6_sk_ac_lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pac\">pac</a>=<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#ipv6_ac_list\">ipv6_ac_list</a>; <a class=\"id\" href=\"#pac\">pac</a>; <a class=\"id\" href=\"#pac\">pac</a>=<a class=\"id\" href=\"#pac\">pac</a>-><a class=\"id\" href=\"#acl_next\">acl_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifindex\">ifindex</a> && <a class=\"id\" href=\"#pac\">pac</a>-><a class=\"id\" href=\"#acl_ifindex\">acl_ifindex</a> != <a class=\"id\" href=\"#ifindex\">ifindex</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#pac\">pac</a>-><a class=\"id\" href=\"#acl_addr\">acl_addr</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#found\">found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#ipv6_sk_ac_lock\">ipv6_sk_ac_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#found\">found</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static void <a class=\"id\" href=\"#aca_put\">aca_put</a>(struct <a class=\"id\" href=\"#ifacaddr6\">ifacaddr6</a> *<a class=\"id\" href=\"#ac\">ac</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_dec_and_test\">atomic_dec_and_test</a>(&amp;<a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#aca_refcnt\">aca_refcnt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#aca_idev\">aca_idev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(&amp;<a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#aca_rt\">aca_rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ac\">ac</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>device anycast group inc (add if not found)</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ipv6_dev_ac_inc\">ipv6_dev_ac_inc</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifacaddr6\">ifacaddr6</a> *<a class=\"id\" href=\"#aca\">aca</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#in6_dev_get\">in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dead\">dead</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#aca\">aca</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#ac_list\">ac_list</a>; <a class=\"id\" href=\"#aca\">aca</a>; <a class=\"id\" href=\"#aca\">aca</a> = <a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_next\">aca_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_addr\">aca_addr</a>, <a class=\"id\" href=\"#addr\">addr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_users\">aca_users</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>not found: create a new one.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#aca\">aca</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#ifacaddr6\">ifacaddr6</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#aca\">aca</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#addrconf_dst_alloc\">addrconf_dst_alloc</a>(<a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#addr\">addr</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#rt\">rt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#aca\">aca</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#rt\">rt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_addr\">aca_addr</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_idev\">aca_idev</a> = <a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_rt\">aca_rt</a> = <a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_users\">aca_users</a> = 1;", 
"<span class=\"ts\"/><span class=\"comment\">/* aca_tstamp should be updated upon changes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_cstamp\">aca_cstamp</a> = <a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_tstamp\">aca_tstamp</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_refcnt\">aca_refcnt</a>, 2);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_lock\">aca_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_next\">aca_next</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#ac_list\">ac_list</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#ac_list\">ac_list</a> = <a class=\"id\" href=\"#aca\">aca</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6_ins_rt\">ip6_ins_rt</a>(<a class=\"id\" href=\"#rt\">rt</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addrconf_join_solict\">addrconf_join_solict</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_addr\">aca_addr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#aca_put\">aca_put</a>(<a class=\"id\" href=\"#aca\">aca</a>);", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>device anycast group decrement</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__ipv6_dev_ac_dec\">__ipv6_dev_ac_dec</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifacaddr6\">ifacaddr6</a> *<a class=\"id\" href=\"#aca\">aca</a>, *<a class=\"id\" href=\"#prev_aca\">prev_aca</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prev_aca\">prev_aca</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#aca\">aca</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#ac_list\">ac_list</a>; <a class=\"id\" href=\"#aca\">aca</a>; <a class=\"id\" href=\"#aca\">aca</a> = <a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_next\">aca_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_addr\">aca_addr</a>, <a class=\"id\" href=\"#addr\">addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev_aca\">prev_aca</a> = <a class=\"id\" href=\"#aca\">aca</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#aca\">aca</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (--<a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_users\">aca_users</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#prev_aca\">prev_aca</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev_aca\">prev_aca</a>-><a class=\"id\" href=\"#aca_next\">aca_next</a> = <a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_next\">aca_next</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#ac_list\">ac_list</a> = <a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_next\">aca_next</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addrconf_leave_solict\">addrconf_leave_solict</a>(<a class=\"id\" href=\"#idev\">idev</a>, &amp;<a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_addr\">aca_addr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_hold\">dst_hold</a>(&amp;<a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_rt\">aca_rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6_del_rt\">ip6_del_rt</a>(<a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_rt\">aca_rt</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#aca_put\">aca_put</a>(<a class=\"id\" href=\"#aca\">aca</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* called with rcu_read_lock() */</span>", 
"static int <a class=\"id\" href=\"#ipv6_dev_ac_dec\">ipv6_dev_ac_dec</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__ipv6_dev_ac_dec\">__ipv6_dev_ac_dec</a>(<a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>check if the interface has this anycast address</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>called with rcu_read_lock()</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ipv6_chk_acast_dev\">ipv6_chk_acast_dev</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifacaddr6\">ifacaddr6</a> *<a class=\"id\" href=\"#aca\">aca</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#aca\">aca</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#ac_list\">ac_list</a>; <a class=\"id\" href=\"#aca\">aca</a>; <a class=\"id\" href=\"#aca\">aca</a> = <a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_next\">aca_next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#aca\">aca</a>-><a class=\"id\" href=\"#aca_addr\">aca_addr</a>, <a class=\"id\" href=\"#addr\">addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#aca\">aca</a> != <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>check if given interface (or any, if dev==0) has this anycast address</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ipv6_chk_acast_addr\">ipv6_chk_acast_addr</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#found\">found</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#ipv6_chk_acast_dev\">ipv6_chk_acast_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_netdev_rcu\">for_each_netdev_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_chk_acast_dev\">ipv6_chk_acast_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#addr\">addr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#found\">found</a>;", 
"}", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"struct <a class=\"id\" href=\"#ac6_iter_state\">ac6_iter_state</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#seq_net_private\">seq_net_private</a> <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ac6_seq_private\">ac6_seq_private</a>(<a class=\"id\" href=\"#seq\">seq</a>)<span class=\"ts\"/>((struct <a class=\"id\" href=\"#ac6_iter_state\">ac6_iter_state</a> *)(<a class=\"id\" href=\"#seq\">seq</a>)-><a class=\"id\" href=\"#private\">private</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#ifacaddr6\">ifacaddr6</a> *<a class=\"id\" href=\"#ac6_get_first\">ac6_get_first</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifacaddr6\">ifacaddr6</a> *<a class=\"id\" href=\"#im\">im</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ac6_iter_state\">ac6_iter_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#ac6_seq_private\">ac6_seq_private</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#seq_file_net\">seq_file_net</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_netdev_rcu\">for_each_netdev_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#idev\">idev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#im\">im</a> = <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#ac_list\">ac_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#im\">im</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#im\">im</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#ifacaddr6\">ifacaddr6</a> *<a class=\"id\" href=\"#ac6_get_next\">ac6_get_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, struct <a class=\"id\" href=\"#ifacaddr6\">ifacaddr6</a> *<a class=\"id\" href=\"#im\">im</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ac6_iter_state\">ac6_iter_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#ac6_seq_private\">ac6_seq_private</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#im\">im</a> = <a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#aca_next\">aca_next</a>;", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#im\">im</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a> != <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#next_net_device_rcu\">next_net_device_rcu</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#im\">im</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#ac_list\">ac_list</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#im\">im</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#ifacaddr6\">ifacaddr6</a> *<a class=\"id\" href=\"#ac6_get_idx\">ac6_get_idx</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifacaddr6\">ifacaddr6</a> *<a class=\"id\" href=\"#im\">im</a> = <a class=\"id\" href=\"#ac6_get_first\">ac6_get_first</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#im\">im</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#pos\">pos</a> && (<a class=\"id\" href=\"#im\">im</a> = <a class=\"id\" href=\"#ac6_get_next\">ac6_get_next</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#im\">im</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>--<a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pos\">pos</a> ? <a class=\"id\" href=\"#NULL\">NULL</a> : <a class=\"id\" href=\"#im\">im</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#ac6_seq_start\">ac6_seq_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__acquires\">__acquires</a>(<a class=\"id\" href=\"#RCU\">RCU</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ac6_get_idx\">ac6_get_idx</a>(<a class=\"id\" href=\"#seq\">seq</a>, *<a class=\"id\" href=\"#pos\">pos</a>);", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#ac6_seq_next\">ac6_seq_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifacaddr6\">ifacaddr6</a> *<a class=\"id\" href=\"#im\">im</a> = <a class=\"id\" href=\"#ac6_get_next\">ac6_get_next</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#v\">v</a>);", 
"", 
"<span class=\"ts\"/>++*<a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#im\">im</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ac6_seq_stop\">ac6_seq_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__releases\">__releases</a>(<a class=\"id\" href=\"#RCU\">RCU</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ac6_iter_state\">ac6_iter_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#ac6_seq_private\">ac6_seq_private</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ac6_seq_show\">ac6_seq_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifacaddr6\">ifacaddr6</a> *<a class=\"id\" href=\"#im\">im</a> = (struct <a class=\"id\" href=\"#ifacaddr6\">ifacaddr6</a> *)<a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ac6_iter_state\">ac6_iter_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#ac6_seq_private\">ac6_seq_private</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"%-4d %-15s %pi6 %5d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>, <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#aca_addr\">aca_addr</a>, <a class=\"id\" href=\"#im\">im</a>-><a class=\"id\" href=\"#aca_users\">aca_users</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#ac6_seq_ops\">ac6_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#ac6_seq_start\">ac6_seq_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#ac6_seq_next\">ac6_seq_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#ac6_seq_stop\">ac6_seq_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#ac6_seq_show\">ac6_seq_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#ac6_seq_open\">ac6_seq_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open_net\">seq_open_net</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#ac6_seq_ops\">ac6_seq_ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    sizeof(struct <a class=\"id\" href=\"#ac6_iter_state\">ac6_iter_state</a>));", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#ac6_seq_fops\">ac6_seq_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#ac6_seq_open\">ac6_seq_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#seq_release_net\">seq_release_net</a>,", 
"};", 
"", 
"int <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#ac6_proc_init\">ac6_proc_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#proc_net_fops_create\">proc_net_fops_create</a>(<a class=\"id\" href=\"#net\">net</a>, \"anycast6\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, &amp;<a class=\"id\" href=\"#ac6_seq_fops\">ac6_seq_fops</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#ac6_proc_exit\">ac6_proc_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_net_remove\">proc_net_remove</a>(<a class=\"id\" href=\"#net\">net</a>, \"anycast6\");", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
];
xr_frag_insert('l/f2/21d7a4a95a567f85633108e7c1afb2e3e79399.xr', __xr_tmp);
