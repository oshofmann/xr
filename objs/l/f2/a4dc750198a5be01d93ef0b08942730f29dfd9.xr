var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * mmconfig.c - Low-level direct PCI config space access via MMCONFIG</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is an 64bit optimized version that always keeps the full mmconfig</span>", 
"<span class=\"comment\"> * space mapped. This allows lockless config space operation.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitmap\">bitmap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pci_x86\">pci_x86</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"PCI: \"", 
"", 
"static char <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#pci_dev_base\">pci_dev_base</a>(unsigned int <a class=\"id\" href=\"#seg\">seg</a>, unsigned int <a class=\"id\" href=\"#bus\">bus</a>, unsigned int <a class=\"id\" href=\"#devfn\">devfn</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_mmcfg_region\">pci_mmcfg_region</a> *<a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#pci_mmconfig_lookup\">pci_mmconfig_lookup</a>(<a class=\"id\" href=\"#seg\">seg</a>, <a class=\"id\" href=\"#bus\">bus</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a> && <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#virt\">virt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#virt\">virt</a> + (<a class=\"id\" href=\"#PCI_MMCFG_BUS_OFFSET\">PCI_MMCFG_BUS_OFFSET</a>(<a class=\"id\" href=\"#bus\">bus</a>) | (<a class=\"id\" href=\"#devfn\">devfn</a> << 12));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pci_mmcfg_read\">pci_mmcfg_read</a>(unsigned int <a class=\"id\" href=\"#seg\">seg</a>, unsigned int <a class=\"id\" href=\"#bus\">bus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#devfn\">devfn</a>, int <a class=\"id\" href=\"#reg\">reg</a>, int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#addr\">addr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Why do we have this when nobody checks it. How about a BUG()!? -AK */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>((<a class=\"id\" href=\"#bus\">bus</a> &gt; 255) || (<a class=\"id\" href=\"#devfn\">devfn</a> &gt; 255) || (<a class=\"id\" href=\"#reg\">reg</a> &gt; 4095))) {", 
"<a class=\"id\" href=\"#err\">err</a>:<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#value\">value</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#pci_dev_base\">pci_dev_base</a>(<a class=\"id\" href=\"#seg\">seg</a>, <a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#devfn\">devfn</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#addr\">addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#mmio_config_readb\">mmio_config_readb</a>(<a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#reg\">reg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 2:", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#mmio_config_readw\">mmio_config_readw</a>(<a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#reg\">reg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 4:", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#mmio_config_readl\">mmio_config_readl</a>(<a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#reg\">reg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pci_mmcfg_write\">pci_mmcfg_write</a>(unsigned int <a class=\"id\" href=\"#seg\">seg</a>, unsigned int <a class=\"id\" href=\"#bus\">bus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#devfn\">devfn</a>, int <a class=\"id\" href=\"#reg\">reg</a>, int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#addr\">addr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Why do we have this when nobody checks it. How about a BUG()!? -AK */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>((<a class=\"id\" href=\"#bus\">bus</a> &gt; 255) || (<a class=\"id\" href=\"#devfn\">devfn</a> &gt; 255) || (<a class=\"id\" href=\"#reg\">reg</a> &gt; 4095)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#pci_dev_base\">pci_dev_base</a>(<a class=\"id\" href=\"#seg\">seg</a>, <a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#devfn\">devfn</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#addr\">addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mmio_config_writeb\">mmio_config_writeb</a>(<a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#value\">value</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 2:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mmio_config_writew\">mmio_config_writew</a>(<a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#value\">value</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 4:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mmio_config_writel\">mmio_config_writel</a>(<a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#value\">value</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pci_raw_ops\">pci_raw_ops</a> <a class=\"id\" href=\"#pci_mmcfg\">pci_mmcfg</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_mmcfg_read\">pci_mmcfg_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a> =<span class=\"ts\"/><a class=\"id\" href=\"#pci_mmcfg_write\">pci_mmcfg_write</a>,", 
"};", 
"", 
"static void <a class=\"id\" href=\"#__iomem\">__iomem</a> * <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#mcfg_ioremap\">mcfg_ioremap</a>(struct <a class=\"id\" href=\"#pci_mmcfg_region\">pci_mmcfg_region</a> *<a class=\"id\" href=\"#cfg\">cfg</a>)", 
"{", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#num_buses\">num_buses</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#address\">address</a> + <a class=\"id\" href=\"#PCI_MMCFG_BUS_OFFSET\">PCI_MMCFG_BUS_OFFSET</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#start_bus\">start_bus</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num_buses\">num_buses</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#end_bus\">end_bus</a> - <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#start_bus\">start_bus</a> + 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#PCI_MMCFG_BUS_OFFSET\">PCI_MMCFG_BUS_OFFSET</a>(<a class=\"id\" href=\"#num_buses\">num_buses</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#ioremap_nocache\">ioremap_nocache</a>(<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> -= <a class=\"id\" href=\"#PCI_MMCFG_BUS_OFFSET\">PCI_MMCFG_BUS_OFFSET</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#start_bus\">start_bus</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#addr\">addr</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pci_mmcfg_arch_init\">pci_mmcfg_arch_init</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_mmcfg_region\">pci_mmcfg_region</a> *<a class=\"id\" href=\"#cfg\">cfg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#cfg\">cfg</a>, &amp;<a class=\"id\" href=\"#pci_mmcfg_list\">pci_mmcfg_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#virt\">virt</a> = <a class=\"id\" href=\"#mcfg_ioremap\">mcfg_ioremap</a>(<a class=\"id\" href=\"#cfg\">cfg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#virt\">virt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"can't map MMCONFIG at %pR\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_mmcfg_arch_free\">pci_mmcfg_arch_free</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_pci_ext_ops\">raw_pci_ext_ops</a> = &amp;<a class=\"id\" href=\"#pci_mmcfg\">pci_mmcfg</a>;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pci_mmcfg_arch_free\">pci_mmcfg_arch_free</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_mmcfg_region\">pci_mmcfg_region</a> *<a class=\"id\" href=\"#cfg\">cfg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#cfg\">cfg</a>, &amp;<a class=\"id\" href=\"#pci_mmcfg_list\">pci_mmcfg_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#virt\">virt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iounmap\">iounmap</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#virt\">virt</a> + <a class=\"id\" href=\"#PCI_MMCFG_BUS_OFFSET\">PCI_MMCFG_BUS_OFFSET</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#start_bus\">start_bus</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#virt\">virt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
];
xr_frag_insert('l/f2/a4dc750198a5be01d93ef0b08942730f29dfd9.xr', __xr_tmp);
