var __xr_tmp = [
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ack_bad\">ack_bad</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#print_irq_desc\">print_irq_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ack_bad_irq\">ack_bad_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NOP functions</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#noop\">noop</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#noop_ret\">noop_ret</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Generic no controller implementation</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#irq_chip\">irq_chip</a> <a class=\"id\" href=\"#no_irq_chip\">no_irq_chip</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"none\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#startup\">startup</a><span class=\"ts\"/>= <a class=\"id\" href=\"#noop_ret\">noop_ret</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#shutdown\">shutdown</a><span class=\"ts\"/>= <a class=\"id\" href=\"#noop\">noop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#enable\">enable</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#noop\">noop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#disable\">disable</a><span class=\"ts\"/>= <a class=\"id\" href=\"#noop\">noop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ack\">ack</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ack_bad\">ack_bad</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#end\">end</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#noop\">noop</a>,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Generic dummy implementation which can be used for</span>", 
"<span class=\"comment\"> * real dumb interrupt sources</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#irq_chip\">irq_chip</a> <a class=\"id\" href=\"#dummy_irq_chip\">dummy_irq_chip</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"dummy\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#startup\">startup</a><span class=\"ts\"/>= <a class=\"id\" href=\"#noop_ret\">noop_ret</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#shutdown\">shutdown</a><span class=\"ts\"/>= <a class=\"id\" href=\"#noop\">noop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#enable\">enable</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#noop\">noop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#disable\">disable</a><span class=\"ts\"/>= <a class=\"id\" href=\"#noop\">noop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ack\">ack</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#noop\">noop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mask\">mask</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#noop\">noop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unmask\">unmask</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#noop\">noop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#end\">end</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#noop\">noop</a>,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Special, empty irq handler:</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#no_action\">no_action</a>(int <a class=\"id\" href=\"#cpl\">cpl</a>, void *<a class=\"id\" href=\"#dev_id\">dev_id</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#IRQ_NONE\">IRQ_NONE</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#warn_no_thread\">warn_no_thread</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, struct <a class=\"id\" href=\"#irqaction\">irqaction</a> *<a class=\"id\" href=\"#action\">action</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(<a class=\"id\" href=\"#IRQTF_WARNED\">IRQTF_WARNED</a>, &amp;<a class=\"id\" href=\"#action\">action</a>-><a class=\"id\" href=\"#thread_flags\">thread_flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"IRQ %d device %s returned IRQ_WAKE_THREAD \"", 
"<span class=\"ts\"/>       \"but no thread function available.\", <a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#action\">action</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * handle_IRQ_event - irq action chain handler</span>", 
"<span class=\"comment\"> * @irq:<span class=\"ts\"/>the interrupt number</span>", 
"<span class=\"comment\"> * @action:<span class=\"ts\"/>the interrupt action chain for this irq</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Handles the action chain of an irq event</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#handle_IRQ_event\">handle_IRQ_event</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, struct <a class=\"id\" href=\"#irqaction\">irqaction</a> *<a class=\"id\" href=\"#action\">action</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#IRQ_NONE\">IRQ_NONE</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#status\">status</a> = 0;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_irq_handler_entry\">trace_irq_handler_entry</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#action\">action</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#action\">action</a>-><a class=\"id\" href=\"#handler\">handler</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#action\">action</a>-><a class=\"id\" href=\"#dev_id\">dev_id</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_irq_handler_exit\">trace_irq_handler_exit</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#action\">action</a>, <a class=\"id\" href=\"#ret\">ret</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IRQ_WAKE_THREAD\">IRQ_WAKE_THREAD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Set result to handled so the spurious check</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * does not trigger.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#IRQ_HANDLED\">IRQ_HANDLED</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Catch drivers which return WAKE_THREAD but</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * did not set up a thread function</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#action\">action</a>-><a class=\"id\" href=\"#thread_fn\">thread_fn</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#warn_no_thread\">warn_no_thread</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#action\">action</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Wake up the handler thread for this</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * action. In case the thread crashed and was</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * killed we just pretend that we handled the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * interrupt. The hardirq handler above has</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * disabled the device interrupt, so no irq</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * storm is lurking.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(!<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#IRQTF_DIED\">IRQTF_DIED</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#action\">action</a>-><a class=\"id\" href=\"#thread_flags\">thread_flags</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#IRQTF_RUNTHREAD\">IRQTF_RUNTHREAD</a>, &amp;<a class=\"id\" href=\"#action\">action</a>-><a class=\"id\" href=\"#thread_flags\">thread_flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_process\">wake_up_process</a>(<a class=\"id\" href=\"#action\">action</a>-><a class=\"id\" href=\"#thread\">thread</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Fall through to add to randomness */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IRQ_HANDLED\">IRQ_HANDLED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> |= <a class=\"id\" href=\"#action\">action</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> |= <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#action\">action</a> = <a class=\"id\" href=\"#action\">action</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#action\">action</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#IRQF_SAMPLE_RANDOM\">IRQF_SAMPLE_RANDOM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_interrupt_randomness\">add_interrupt_randomness</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_disable\">local_irq_disable</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_GENERIC_HARDIRQS_NO__DO_IRQ\">CONFIG_GENERIC_HARDIRQS_NO__DO_IRQ</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ENABLE_WARN_DEPRECATED\">CONFIG_ENABLE_WARN_DEPRECATED</a>", 
"# <a class=\"id\" href=\"#warning\">warning</a> <a class=\"id\" href=\"#__do_IRQ\">__do_IRQ</a> <a class=\"id\" href=\"#is\">is</a> <a class=\"id\" href=\"#deprecated\">deprecated</a>. <a class=\"id\" href=\"#Please\">Please</a> <a class=\"id\" href=\"#convert\">convert</a> <a class=\"id\" href=\"#to\">to</a> <a class=\"id\" href=\"#proper\">proper</a> <a class=\"id\" href=\"#flow\">flow</a> <a class=\"id\" href=\"#handlers\">handlers</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __do_IRQ - original all in one highlevel IRQ handler</span>", 
"<span class=\"comment\"> * @irq:<span class=\"ts\"/>the interrupt number</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * __do_IRQ handles all normal device IRQ's (the special</span>", 
"<span class=\"comment\"> * SMP cross-CPU interrupts have their own specific</span>", 
"<span class=\"comment\"> * handlers).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is the original x86 implementation which is used for every</span>", 
"<span class=\"comment\"> * interrupt type.</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned int <a class=\"id\" href=\"#__do_IRQ\">__do_IRQ</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irqaction\">irqaction</a> *<a class=\"id\" href=\"#action\">action</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kstat_incr_irqs_this_cpu\">kstat_incr_irqs_this_cpu</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#CHECK_IRQ_PER_CPU\">CHECK_IRQ_PER_CPU</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#action_ret\">action_ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * No locking required for CPU-local interrupts:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#ack\">ack</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#ack\">ack</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(!(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#IRQ_DISABLED\">IRQ_DISABLED</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#action_ret\">action_ret</a> = <a class=\"id\" href=\"#handle_IRQ_event\">handle_IRQ_event</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#action\">action</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#noirqdebug\">noirqdebug</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#note_interrupt\">note_interrupt</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#action_ret\">action_ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#end\">end</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#ack\">ack</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#ack\">ack</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * REPLAY is when Linux resends an IRQ that was dropped earlier</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * WAITING is used by probe to mark irqs that are being tested</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> &amp; ~(<a class=\"id\" href=\"#IRQ_REPLAY\">IRQ_REPLAY</a> | <a class=\"id\" href=\"#IRQ_WAITING\">IRQ_WAITING</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> |= <a class=\"id\" href=\"#IRQ_PENDING\">IRQ_PENDING</a>; <span class=\"comment\">/* we _want_ to handle it */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the IRQ is disabled for whatever reason, we cannot</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * use the action we have.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#action\">action</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(!(<a class=\"id\" href=\"#status\">status</a> &amp; (<a class=\"id\" href=\"#IRQ_DISABLED\">IRQ_DISABLED</a> | <a class=\"id\" href=\"#IRQ_INPROGRESS\">IRQ_INPROGRESS</a>)))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#action\">action</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#action\">action</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> &= ~<a class=\"id\" href=\"#IRQ_PENDING\">IRQ_PENDING</a>; <span class=\"comment\">/* we commit to handling */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> |= <a class=\"id\" href=\"#IRQ_INPROGRESS\">IRQ_INPROGRESS</a>; <span class=\"comment\">/* we are handling it */</span>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If there is no IRQ handler or it was disabled, exit early.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Since we set PENDING, if another processor is handling</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a different instance of this same irq, the other processor</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * will take care of it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#action\">action</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Edge triggered interrupts need to remember</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * pending events.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This applies to any hw interrupts that allow a second</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * instance of the same irq to arrive while we are in do_IRQ</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * or in the handler. But the code here only handles the _second_</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * instance of the irq, not the third or fourth. So it is mostly</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * useful for irq hardware that does not mask cleanly in an</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * SMP environment.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#action_ret\">action_ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#action_ret\">action_ret</a> = <a class=\"id\" href=\"#handle_IRQ_event\">handle_IRQ_event</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#action\">action</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#noirqdebug\">noirqdebug</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#note_interrupt\">note_interrupt</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#action_ret\">action_ret</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(!(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#IRQ_PENDING\">IRQ_PENDING</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> &= ~<a class=\"id\" href=\"#IRQ_PENDING\">IRQ_PENDING</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> &= ~<a class=\"id\" href=\"#IRQ_INPROGRESS\">IRQ_INPROGRESS</a>;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The -&gt;end() handler has to deal with interrupts which got</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * disabled while the handler was running.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#end\">end</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"void <a class=\"id\" href=\"#early_init_irq_lock_class\">early_init_irq_lock_class</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_irq_desc\">for_each_irq_desc</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#desc\">desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lockdep_set_class\">lockdep_set_class</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>, &amp;<a class=\"id\" href=\"#irq_desc_lock_class\">irq_desc_lock_class</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"unsigned int <a class=\"id\" href=\"#kstat_irqs_cpu\">kstat_irqs_cpu</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#desc\">desc</a> ? <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#kstat_irqs\">kstat_irqs</a>[<a class=\"id\" href=\"#cpu\">cpu</a>] : 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#kstat_irqs_cpu\">kstat_irqs_cpu</a>);", 
"", 
];
xr_frag_insert('l/f3/9b6489b6956ecc56e9f6a2f23c479ebae6b2cf.xr', __xr_tmp);
