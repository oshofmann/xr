var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * xfrm4_output.c - Common IPsec encapsulation code for IPv4.</span>", 
"<span class=\"comment\"> * Copyright (c) 2004 Herbert Xu &lt;herbert@gondor.apana.org.au&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> * modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> * as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> * 2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_ether\">if_ether</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter_ipv4\">netfilter_ipv4</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#icmp\">icmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static int <a class=\"id\" href=\"#xfrm4_tunnel_check_size\">xfrm4_tunnel_check_size</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mtu\">mtu</a>, <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IPSKB_XFRM_TUNNEL_SIZE\">IPSKB_XFRM_TUNNEL_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#frag_off\">frag_off</a> &amp; <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#IP_DF\">IP_DF</a>)) || <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#local_df\">local_df</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#dst_mtu\">dst_mtu</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#mtu\">mtu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmp_send\">icmp_send</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ICMP_DEST_UNREACH\">ICMP_DEST_UNREACH</a>, <a class=\"id\" href=\"#ICMP_FRAG_NEEDED\">ICMP_FRAG_NEEDED</a>, <a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#mtu\">mtu</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#xfrm4_extract_output\">xfrm4_extract_output</a>(struct <a class=\"id\" href=\"#xfrm_state\">xfrm_state</a> *<a class=\"id\" href=\"#x\">x</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xfrm4_tunnel_check_size\">xfrm4_tunnel_check_size</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#XFRM_MODE_SKB_CB\">XFRM_MODE_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#protocol\">protocol</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#xfrm4_extract_header\">xfrm4_extract_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#xfrm4_prepare_output\">xfrm4_prepare_output</a>(struct <a class=\"id\" href=\"#xfrm_state\">xfrm_state</a> *<a class=\"id\" href=\"#x\">x</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xfrm_inner_extract_output\">xfrm_inner_extract_output</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>), 0, sizeof(*<a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>)));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IPSKB_XFRM_TUNNEL_SIZE\">IPSKB_XFRM_TUNNEL_SIZE</a> | <a class=\"id\" href=\"#IPSKB_XFRM_TRANSFORMED\">IPSKB_XFRM_TRANSFORMED</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_IP\">ETH_P_IP</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#outer_mode\">outer_mode</a>-><a class=\"id\" href=\"#output2\">output2</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#xfrm4_prepare_output\">xfrm4_prepare_output</a>);", 
"", 
"static int <a class=\"id\" href=\"#xfrm4_output_finish\">xfrm4_output_finish</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NETFILTER\">CONFIG_NETFILTER</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#xfrm\">xfrm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IPSKB_REROUTED\">IPSKB_REROUTED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dst_output\">dst_output</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IPSKB_XFRM_TRANSFORMED\">IPSKB_XFRM_TRANSFORMED</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_IP\">ETH_P_IP</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#xfrm_output\">xfrm_output</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#xfrm4_output\">xfrm4_output</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NF_HOOK_COND\">NF_HOOK_COND</a>(<a class=\"id\" href=\"#NFPROTO_IPV4\">NFPROTO_IPV4</a>, <a class=\"id\" href=\"#NF_INET_POST_ROUTING\">NF_INET_POST_ROUTING</a>, <a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#xfrm4_output_finish\">xfrm4_output_finish</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IPSKB_REROUTED\">IPSKB_REROUTED</a>));", 
"}", 
];
xr_frag_insert('l/f3/b8ccaf8c4f447e8c21fab7e634ddd2644f54dd.xr', __xr_tmp);
