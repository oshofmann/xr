var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_port\">sin_port</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_sport\">inet_sport</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a> = <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_zero\">sin_zero</a>, 0, sizeof(<a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_zero\">sin_zero</a>));", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#uaddr_len\">uaddr_len</a> = sizeof(*<a class=\"id\" href=\"#sin\">sin</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_getname\">inet_getname</a>);", 
"", 
"int <a class=\"id\" href=\"#inet_sendmsg\">inet_sendmsg</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>, struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#msghdr\">msghdr</a> *<a class=\"id\" href=\"#msg\">msg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_rps_record_flow\">sock_rps_record_flow</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We may need to bind the socket. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#inet_num\">inet_num</a> && !<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#no_autobind\">no_autobind</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#inet_autobind\">inet_autobind</a>(<a class=\"id\" href=\"#sk\">sk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#sendmsg\">sendmsg</a>(<a class=\"id\" href=\"#iocb\">iocb</a>, <a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_sendmsg\">inet_sendmsg</a>);", 
"", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#inet_sendpage\">inet_sendpage</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, int <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_rps_record_flow\">sock_rps_record_flow</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We may need to bind the socket. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#inet_num\">inet_num</a> && !<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#no_autobind\">no_autobind</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#inet_autobind\">inet_autobind</a>(<a class=\"id\" href=\"#sk\">sk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#sendpage\">sendpage</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#sendpage\">sendpage</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sock_no_sendpage\">sock_no_sendpage</a>(<a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_sendpage\">inet_sendpage</a>);", 
"", 
"int <a class=\"id\" href=\"#inet_recvmsg\">inet_recvmsg</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>, struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#msghdr\">msghdr</a> *<a class=\"id\" href=\"#msg\">msg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#addr_len\">addr_len</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_rps_record_flow\">sock_rps_record_flow</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#recvmsg\">recvmsg</a>(<a class=\"id\" href=\"#iocb\">iocb</a>, <a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MSG_DONTWAIT\">MSG_DONTWAIT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#flags\">flags</a> &amp; ~<a class=\"id\" href=\"#MSG_DONTWAIT\">MSG_DONTWAIT</a>, &amp;<a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#msg_namelen\">msg_namelen</a> = <a class=\"id\" href=\"#addr_len\">addr_len</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_recvmsg\">inet_recvmsg</a>);", 
"", 
"int <a class=\"id\" href=\"#inet_shutdown\">inet_shutdown</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, int <a class=\"id\" href=\"#how\">how</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This should really check to make sure</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the socket is a TCP socket. (WHY AC...)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#how\">how</a>++; <span class=\"comment\">/* maps 0-&gt;1 has the advantage of making bit 1 rcvs and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>       1-&gt;2 bit 2 snds.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>       2-&gt;3 */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#how\">how</a> &amp; ~<a class=\"id\" href=\"#SHUTDOWN_MASK\">SHUTDOWN_MASK</a>) || !<a class=\"id\" href=\"#how\">how</a>)<span class=\"ts\"/><span class=\"comment\">/* MAXINT-&gt;0 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_sock\">lock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#SS_CONNECTING\">SS_CONNECTING</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((1 << <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a>) &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#TCPF_SYN_SENT\">TCPF_SYN_SENT</a> | <a class=\"id\" href=\"#TCPF_SYN_RECV\">TCPF_SYN_RECV</a> | <a class=\"id\" href=\"#TCPF_CLOSE\">TCPF_CLOSE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#SS_DISCONNECTING\">SS_DISCONNECTING</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#SS_CONNECTED\">SS_CONNECTED</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_CLOSE\">TCP_CLOSE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOTCONN\">ENOTCONN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Hack to wake up other listeners, who can poll for</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   POLLHUP, even on eg. unconnected UDP sockets -- RR */</span>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_shutdown\">sk_shutdown</a> |= <a class=\"id\" href=\"#how\">how</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#shutdown\">shutdown</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#shutdown\">shutdown</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#how\">how</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Remaining two branches are temporary solution for missing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * close() in multithreaded environment. It is _not_ a good idea,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * but we have no choice until close() is repaired at VFS level.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_LISTEN\">TCP_LISTEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#how\">how</a> &amp; <a class=\"id\" href=\"#RCV_SHUTDOWN\">RCV_SHUTDOWN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Fall through */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_SYN_SENT\">TCP_SYN_SENT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#disconnect\">disconnect</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#err\">err</a> ? <a class=\"id\" href=\"#SS_DISCONNECTING\">SS_DISCONNECTING</a> : <a class=\"id\" href=\"#SS_UNCONNECTED\">SS_UNCONNECTED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Wake up anyone sleeping in poll. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state_change\">sk_state_change</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_sock\">release_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_shutdown\">inet_shutdown</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ioctl() calls you can issue on an INET socket. Most of these are</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>device configuration and stuff and very rarely used. Some ioctls</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>pass on to the socket itself.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>NOTE: I like the idea of a module for the config stuff. ie ifconfig</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>loads the devconfigure module does its configuring and unloads it.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>There's a good 20K of config code hanging around the kernel.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#inet_ioctl\">inet_ioctl</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGSTAMP\">SIOCGSTAMP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock_get_timestamp\">sock_get_timestamp</a>(<a class=\"id\" href=\"#sk\">sk</a>, (struct <a class=\"id\" href=\"#timeval\">timeval</a> <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGSTAMPNS\">SIOCGSTAMPNS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock_get_timestampns\">sock_get_timestampns</a>(<a class=\"id\" href=\"#sk\">sk</a>, (struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCADDRT\">SIOCADDRT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCDELRT\">SIOCDELRT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCRTMSG\">SIOCRTMSG</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip_rt_ioctl\">ip_rt_ioctl</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, (void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCDARP\">SIOCDARP</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGARP\">SIOCGARP</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSARP\">SIOCSARP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#arp_ioctl\">arp_ioctl</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, (void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFADDR\">SIOCGIFADDR</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFADDR\">SIOCSIFADDR</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFBRDADDR\">SIOCGIFBRDADDR</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFBRDADDR\">SIOCSIFBRDADDR</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFNETMASK\">SIOCGIFNETMASK</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFNETMASK\">SIOCSIFNETMASK</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFDSTADDR\">SIOCGIFDSTADDR</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFDSTADDR\">SIOCSIFDSTADDR</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFPFLAGS\">SIOCSIFPFLAGS</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFPFLAGS\">SIOCGIFPFLAGS</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFFLAGS\">SIOCSIFFLAGS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#devinet_ioctl\">devinet_ioctl</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, (void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#ioctl\">ioctl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#ioctl\">ioctl</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOIOCTLCMD\">ENOIOCTLCMD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_ioctl\">inet_ioctl</a>);", 
"", 
"const struct <a class=\"id\" href=\"#proto_ops\">proto_ops</a> <a class=\"id\" href=\"#inet_stream_ops\">inet_stream_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#PF_INET\">PF_INET</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_release\">inet_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#bind\">bind</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_bind\">inet_bind</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#connect\">connect</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_stream_connect\">inet_stream_connect</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#socketpair\">socketpair</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_no_socketpair\">sock_no_socketpair</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept\">accept</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_accept\">inet_accept</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getname\">getname</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_getname\">inet_getname</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#tcp_poll\">tcp_poll</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ioctl\">ioctl</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_ioctl\">inet_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#listen\">listen</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_listen\">inet_listen</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#shutdown\">shutdown</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_shutdown\">inet_shutdown</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setsockopt\">setsockopt</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_common_setsockopt\">sock_common_setsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getsockopt\">getsockopt</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_common_getsockopt\">sock_common_getsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sendmsg\">sendmsg</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_sendmsg\">inet_sendmsg</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#recvmsg\">recvmsg</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_recvmsg\">inet_recvmsg</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mmap\">mmap</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_no_mmap\">sock_no_mmap</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sendpage\">sendpage</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_sendpage\">inet_sendpage</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#splice_read\">splice_read</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#tcp_splice_read\">tcp_splice_read</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_setsockopt\">compat_setsockopt</a> = <a class=\"id\" href=\"#compat_sock_common_setsockopt\">compat_sock_common_setsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_getsockopt\">compat_getsockopt</a> = <a class=\"id\" href=\"#compat_sock_common_getsockopt\">compat_sock_common_getsockopt</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_stream_ops\">inet_stream_ops</a>);", 
"", 
"const struct <a class=\"id\" href=\"#proto_ops\">proto_ops</a> <a class=\"id\" href=\"#inet_dgram_ops\">inet_dgram_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#PF_INET\">PF_INET</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_release\">inet_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#bind\">bind</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_bind\">inet_bind</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#connect\">connect</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_dgram_connect\">inet_dgram_connect</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#socketpair\">socketpair</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_no_socketpair\">sock_no_socketpair</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept\">accept</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_no_accept\">sock_no_accept</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getname\">getname</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_getname\">inet_getname</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#udp_poll\">udp_poll</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ioctl\">ioctl</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_ioctl\">inet_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#listen\">listen</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_no_listen\">sock_no_listen</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#shutdown\">shutdown</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_shutdown\">inet_shutdown</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setsockopt\">setsockopt</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_common_setsockopt\">sock_common_setsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getsockopt\">getsockopt</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_common_getsockopt\">sock_common_getsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sendmsg\">sendmsg</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_sendmsg\">inet_sendmsg</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#recvmsg\">recvmsg</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_recvmsg\">inet_recvmsg</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mmap\">mmap</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_no_mmap\">sock_no_mmap</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sendpage\">sendpage</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_sendpage\">inet_sendpage</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_setsockopt\">compat_setsockopt</a> = <a class=\"id\" href=\"#compat_sock_common_setsockopt\">compat_sock_common_setsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_getsockopt\">compat_getsockopt</a> = <a class=\"id\" href=\"#compat_sock_common_getsockopt\">compat_sock_common_getsockopt</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_dgram_ops\">inet_dgram_ops</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * For SOCK_RAW sockets; should be the same as inet_dgram_ops but without</span>", 
"<span class=\"comment\"> * udp_poll</span>", 
"<span class=\"comment\"> */</span>", 
"static const struct <a class=\"id\" href=\"#proto_ops\">proto_ops</a> <a class=\"id\" href=\"#inet_sockraw_ops\">inet_sockraw_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#PF_INET\">PF_INET</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_release\">inet_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#bind\">bind</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_bind\">inet_bind</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#connect\">connect</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_dgram_connect\">inet_dgram_connect</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#socketpair\">socketpair</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_no_socketpair\">sock_no_socketpair</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept\">accept</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_no_accept\">sock_no_accept</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getname\">getname</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_getname\">inet_getname</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#datagram_poll\">datagram_poll</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ioctl\">ioctl</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_ioctl\">inet_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#listen\">listen</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_no_listen\">sock_no_listen</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#shutdown\">shutdown</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_shutdown\">inet_shutdown</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setsockopt\">setsockopt</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_common_setsockopt\">sock_common_setsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getsockopt\">getsockopt</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_common_getsockopt\">sock_common_getsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sendmsg\">sendmsg</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_sendmsg\">inet_sendmsg</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#recvmsg\">recvmsg</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_recvmsg\">inet_recvmsg</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mmap\">mmap</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_no_mmap\">sock_no_mmap</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sendpage\">sendpage</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_sendpage\">inet_sendpage</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_setsockopt\">compat_setsockopt</a> = <a class=\"id\" href=\"#compat_sock_common_setsockopt\">compat_sock_common_setsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_getsockopt\">compat_getsockopt</a> = <a class=\"id\" href=\"#compat_sock_common_getsockopt\">compat_sock_common_getsockopt</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#net_proto_family\">net_proto_family</a> <a class=\"id\" href=\"#inet_family_ops\">inet_family_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#PF_INET\">PF_INET</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#create\">create</a> = <a class=\"id\" href=\"#inet_create\">inet_create</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"};", 
"", 
"<span class=\"comment\">/* Upon startup we insert all the elements in inetsw_array[] into</span>", 
"<span class=\"comment\"> * the linked list inetsw.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#inet_protosw\">inet_protosw</a> <a class=\"id\" href=\"#inetsw_array\">inetsw_array</a>[] =", 
"{", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#type\">type</a> =       <a class=\"id\" href=\"#SOCK_STREAM\">SOCK_STREAM</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#protocol\">protocol</a> =   <a class=\"id\" href=\"#IPPROTO_TCP\">IPPROTO_TCP</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#prot\">prot</a> =       &amp;<a class=\"id\" href=\"#tcp_prot\">tcp_prot</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ops\">ops</a> =        &amp;<a class=\"id\" href=\"#inet_stream_ops\">inet_stream_ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#no_check\">no_check</a> =   0,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> =      <a class=\"id\" href=\"#INET_PROTOSW_PERMANENT\">INET_PROTOSW_PERMANENT</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#INET_PROTOSW_ICSK\">INET_PROTOSW_ICSK</a>,", 
"<span class=\"ts\"/>},", 
"", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#type\">type</a> =       <a class=\"id\" href=\"#SOCK_DGRAM\">SOCK_DGRAM</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#protocol\">protocol</a> =   <a class=\"id\" href=\"#IPPROTO_UDP\">IPPROTO_UDP</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#prot\">prot</a> =       &amp;<a class=\"id\" href=\"#udp_prot\">udp_prot</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ops\">ops</a> =        &amp;<a class=\"id\" href=\"#inet_dgram_ops\">inet_dgram_ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#no_check\">no_check</a> =   <a class=\"id\" href=\"#UDP_CSUM_DEFAULT\">UDP_CSUM_DEFAULT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> =      <a class=\"id\" href=\"#INET_PROTOSW_PERMANENT\">INET_PROTOSW_PERMANENT</a>,", 
"       },", 
"", 
"", 
"       {", 
"<span class=\"ts\"/>       .<a class=\"id\" href=\"#type\">type</a> =       <a class=\"id\" href=\"#SOCK_RAW\">SOCK_RAW</a>,", 
"<span class=\"ts\"/>       .<a class=\"id\" href=\"#protocol\">protocol</a> =   <a class=\"id\" href=\"#IPPROTO_IP\">IPPROTO_IP</a>,<span class=\"ts\"/><span class=\"comment\">/* wild card */</span>", 
"<span class=\"ts\"/>       .<a class=\"id\" href=\"#prot\">prot</a> =       &amp;<a class=\"id\" href=\"#raw_prot\">raw_prot</a>,", 
"<span class=\"ts\"/>       .<a class=\"id\" href=\"#ops\">ops</a> =        &amp;<a class=\"id\" href=\"#inet_sockraw_ops\">inet_sockraw_ops</a>,", 
"<span class=\"ts\"/>       .<a class=\"id\" href=\"#no_check\">no_check</a> =   <a class=\"id\" href=\"#UDP_CSUM_DEFAULT\">UDP_CSUM_DEFAULT</a>,", 
"<span class=\"ts\"/>       .<a class=\"id\" href=\"#flags\">flags</a> =      <a class=\"id\" href=\"#INET_PROTOSW_REUSE\">INET_PROTOSW_REUSE</a>,", 
"       }", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INETSW_ARRAY_LEN\">INETSW_ARRAY_LEN</a> <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#inetsw_array\">inetsw_array</a>)", 
"", 
"void <a class=\"id\" href=\"#inet_register_protosw\">inet_register_protosw</a>(struct <a class=\"id\" href=\"#inet_protosw\">inet_protosw</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#lh\">lh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_protosw\">inet_protosw</a> *<a class=\"id\" href=\"#answer\">answer</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#protocol\">protocol</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#last_perm\">last_perm</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#inetsw_lock\">inetsw_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#type\">type</a> >= <a class=\"id\" href=\"#SOCK_MAX\">SOCK_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_illegal\">out_illegal</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If we are trying to override a permanent protocol, bail. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#answer\">answer</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last_perm\">last_perm</a> = &amp;<a class=\"id\" href=\"#inetsw\">inetsw</a>[<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#type\">type</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each\">list_for_each</a>(<a class=\"id\" href=\"#lh\">lh</a>, &amp;<a class=\"id\" href=\"#inetsw\">inetsw</a>[<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#type\">type</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#answer\">answer</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#lh\">lh</a>, struct <a class=\"id\" href=\"#inet_protosw\">inet_protosw</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check only the non-wild match. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#INET_PROTOSW_PERMANENT\">INET_PROTOSW_PERMANENT</a> &amp; <a class=\"id\" href=\"#answer\">answer</a>-><a class=\"id\" href=\"#flags\">flags</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#protocol\">protocol</a> == <a class=\"id\" href=\"#answer\">answer</a>-><a class=\"id\" href=\"#protocol\">protocol</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_perm\">last_perm</a> = <a class=\"id\" href=\"#lh\">lh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#answer\">answer</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#answer\">answer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_permanent\">out_permanent</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Add the new entry after the last permanent entry if any, so that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the new entry does not override a permanent entry when matched with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a wild-card protocol. But it is allowed to override any existing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * non-permanent entry.  This means that when we remove this entry, the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * system automatically returns to the old behavior.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_rcu\">list_add_rcu</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#last_perm\">last_perm</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#inetsw_lock\">inetsw_lock</a>);", 
"", 
"<span class=\"ts\"/>return;", 
"", 
"<a class=\"id\" href=\"#out_permanent\">out_permanent</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"Attempt to override permanent protocol %d.\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#protocol\">protocol</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<a class=\"id\" href=\"#out_illegal\">out_illegal</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/>       \"Ignoring attempt to register invalid socket type %d.\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_register_protosw\">inet_register_protosw</a>);", 
"", 
"void <a class=\"id\" href=\"#inet_unregister_protosw\">inet_unregister_protosw</a>(struct <a class=\"id\" href=\"#inet_protosw\">inet_protosw</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#INET_PROTOSW_PERMANENT\">INET_PROTOSW_PERMANENT</a> &amp; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#flags\">flags</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"Attempt to unregister permanent protocol %d.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#protocol\">protocol</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#inetsw_lock\">inetsw_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del_rcu\">list_del_rcu</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#inetsw_lock\">inetsw_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#synchronize_net\">synchronize_net</a>();", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_unregister_protosw\">inet_unregister_protosw</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *      Shall we try to damage output packets if routing dev changes?</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#sysctl_ip_dynaddr\">sysctl_ip_dynaddr</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"", 
"static int <a class=\"id\" href=\"#inet_sk_reselect_saddr\">inet_sk_reselect_saddr</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#old_saddr\">old_saddr</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_saddr\">inet_saddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#new_saddr\">new_saddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_daddr\">inet_daddr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#opt\">opt</a> && <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srr\">srr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#faddr\">faddr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Query new route. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip_route_connect\">ip_route_connect</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#RT_CONN_FLAGS\">RT_CONN_FLAGS</a>(<a class=\"id\" href=\"#sk\">sk</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_sport\">inet_sport</a>, <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a>, <a class=\"id\" href=\"#sk\">sk</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_setup_caps\">sk_setup_caps</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_saddr\">new_saddr</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_src\">rt_src</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_saddr\">new_saddr</a> == <a class=\"id\" href=\"#old_saddr\">old_saddr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sysctl_ip_dynaddr\">sysctl_ip_dynaddr</a> &gt; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"%s(): shifting inet->saddr from %pI4 to %pI4\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__func__\">__func__</a>, &amp;<a class=\"id\" href=\"#old_saddr\">old_saddr</a>, &amp;<a class=\"id\" href=\"#new_saddr\">new_saddr</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_saddr\">inet_saddr</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_rcv_saddr\">inet_rcv_saddr</a> = <a class=\"id\" href=\"#new_saddr\">new_saddr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * XXX The only one ugly spot where we need to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * XXX really change the sockets identity after</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * XXX it has entered the hashes. -DaveM</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Besides that, it does not check for connection</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * uniqueness. Wait for troubles.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__sk_prot_rehash\">__sk_prot_rehash</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#inet_sk_rebuild_header\">inet_sk_rebuild_header</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a> = (struct <a class=\"id\" href=\"#rtable\">rtable</a> *)<a class=\"id\" href=\"#__sk_dst_check\">__sk_dst_check</a>(<a class=\"id\" href=\"#sk\">sk</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Route is OK, nothing to do. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Reroute. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_daddr\">inet_daddr</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#opt\">opt</a> && <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srr\">srr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#faddr\">faddr</a>;", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> <a class=\"id\" href=\"#fl\">fl</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#oif\">oif</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mark\">mark</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_mark\">sk_mark</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#nl_u\">nl_u</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ip4_u\">ip4_u</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#daddr\">daddr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#saddr\">saddr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_saddr\">inet_saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#tos\">tos</a><span class=\"ts\"/>= <a class=\"id\" href=\"#RT_CONN_FLAGS\">RT_CONN_FLAGS</a>(<a class=\"id\" href=\"#sk\">sk</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#inet_sk_flowi_flags\">inet_sk_flowi_flags</a>(<a class=\"id\" href=\"#sk\">sk</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#uli_u\">uli_u</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ports\">ports</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#sport\">sport</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_sport\">inet_sport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#dport\">dport</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_sk_classify_flow\">security_sk_classify_flow</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip_route_output_flow\">ip_route_output_flow</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), &amp;<a class=\"id\" href=\"#rt\">rt</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#sk\">sk</a>, 0);", 
"}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_setup_caps\">sk_setup_caps</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Routing failed... */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_route_caps\">sk_route_caps</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Other protocols have to map its equivalent state to TCP_SYN_SENT.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * DCCP maps its DCCP_REQUESTING state to TCP_SYN_SENT. -acme</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sysctl_ip_dynaddr\">sysctl_ip_dynaddr</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> != <a class=\"id\" href=\"#TCP_SYN_SENT\">TCP_SYN_SENT</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_userlocks\">sk_userlocks</a> &amp; <a class=\"id\" href=\"#SOCK_BINDADDR_LOCK\">SOCK_BINDADDR_LOCK</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#inet_sk_reselect_saddr\">inet_sk_reselect_saddr</a>(<a class=\"id\" href=\"#sk\">sk</a>)) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_err_soft\">sk_err_soft</a> = -<a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_sk_rebuild_header\">inet_sk_rebuild_header</a>);", 
"", 
"static int <a class=\"id\" href=\"#inet_gso_send_check\">inet_gso_send_check</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#net_protocol\">net_protocol</a> *<a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#proto\">proto</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ihl\">ihl</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(*<a class=\"id\" href=\"#iph\">iph</a>))))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ihl\">ihl</a> = <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a> * 4;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ihl\">ihl</a> &lt; sizeof(*<a class=\"id\" href=\"#iph\">iph</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ihl\">ihl</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__skb_pull\">__skb_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ihl\">ihl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_transport_header\">skb_reset_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#protocol\">protocol</a> &amp; (<a class=\"id\" href=\"#MAX_INET_PROTOS\">MAX_INET_PROTOS</a> - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EPROTONOSUPPORT\">EPROTONOSUPPORT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#inet_protos\">inet_protos</a>[<a class=\"id\" href=\"#proto\">proto</a>]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#ops\">ops</a> && <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#gso_send_check\">gso_send_check</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#gso_send_check\">gso_send_check</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#inet_gso_segment\">inet_gso_segment</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#features\">features</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#segs\">segs</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#net_protocol\">net_protocol</a> *<a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#proto\">proto</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ihl\">ihl</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#features\">features</a> &amp; <a class=\"id\" href=\"#NETIF_F_V4_CSUM\">NETIF_F_V4_CSUM</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#features\">features</a> &= ~<a class=\"id\" href=\"#NETIF_F_SG\">NETIF_F_SG</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/>     ~(<a class=\"id\" href=\"#SKB_GSO_TCPV4\">SKB_GSO_TCPV4</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#SKB_GSO_UDP\">SKB_GSO_UDP</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#SKB_GSO_DODGY\">SKB_GSO_DODGY</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#SKB_GSO_TCP_ECN\">SKB_GSO_TCP_ECN</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/>       0)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(*<a class=\"id\" href=\"#iph\">iph</a>))))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ihl\">ihl</a> = <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a> * 4;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ihl\">ihl</a> &lt; sizeof(*<a class=\"id\" href=\"#iph\">iph</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ihl\">ihl</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__skb_pull\">__skb_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ihl\">ihl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_transport_header\">skb_reset_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#protocol\">protocol</a> &amp; (<a class=\"id\" href=\"#MAX_INET_PROTOS\">MAX_INET_PROTOS</a> - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#segs\">segs</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EPROTONOSUPPORT\">EPROTONOSUPPORT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#inet_protos\">inet_protos</a>[<a class=\"id\" href=\"#proto\">proto</a>]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#ops\">ops</a> && <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#gso_segment\">gso_segment</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#segs\">segs</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#gso_segment\">gso_segment</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#features\">features</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#segs\">segs</a> || <a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#segs\">segs</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#segs\">segs</a>;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#proto\">proto</a> == <a class=\"id\" href=\"#IPPROTO_UDP\">IPPROTO_UDP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#offset\">offset</a> >> 3);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#next\">next</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a> |= <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#IP_MF\">IP_MF</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#mac_len\">mac_len</a> - <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a> * 4);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#id\">id</a>++);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#tot_len\">tot_len</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#mac_len\">mac_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#check\">check</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#check\">check</a> = <a class=\"id\" href=\"#ip_fast_csum\">ip_fast_csum</a>(<a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>), <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a>);", 
"<span class=\"ts\"/>} while ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#next\">next</a>));", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#segs\">segs</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> **<a class=\"id\" href=\"#inet_gro_receive\">inet_gro_receive</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> **<a class=\"id\" href=\"#head\">head</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#net_protocol\">net_protocol</a> *<a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> **<a class=\"id\" href=\"#pp\">pp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hlen\">hlen</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#off\">off</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flush\">flush</a> = 1;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#proto\">proto</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#off\">off</a> = <a class=\"id\" href=\"#skb_gro_offset\">skb_gro_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlen\">hlen</a> = <a class=\"id\" href=\"#off\">off</a> + sizeof(*<a class=\"id\" href=\"#iph\">iph</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#skb_gro_header_fast\">skb_gro_header_fast</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#off\">off</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_gro_header_hard\">skb_gro_header_hard</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#hlen\">hlen</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#skb_gro_header_slow\">skb_gro_header_slow</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#hlen\">hlen</a>, <a class=\"id\" href=\"#off\">off</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#iph\">iph</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#protocol\">protocol</a> &amp; (<a class=\"id\" href=\"#MAX_INET_PROTOS\">MAX_INET_PROTOS</a> - 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#inet_protos\">inet_protos</a>[<a class=\"id\" href=\"#proto\">proto</a>]);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ops\">ops</a> || !<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#gro_receive\">gro_receive</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/>if (*(<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#iph\">iph</a> != 0x45)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ip_fast_csum\">ip_fast_csum</a>((<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#iph\">iph</a>, <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#ntohl\">ntohl</a>(*(<a class=\"id\" href=\"#__be32\">__be32</a> *)&amp;<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush\">flush</a> = (<a class=\"id\" href=\"#u16\">u16</a>)((<a class=\"id\" href=\"#ntohl\">ntohl</a>(*(<a class=\"id\" href=\"#__be32\">__be32</a> *)<a class=\"id\" href=\"#iph\">iph</a>) ^ <a class=\"id\" href=\"#skb_gro_len\">skb_gro_len</a>(<a class=\"id\" href=\"#skb\">skb</a>)) | (<a class=\"id\" href=\"#id\">id</a> ^ <a class=\"id\" href=\"#IP_DF\">IP_DF</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> >>= 16;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#p\">p</a> = *<a class=\"id\" href=\"#head\">head</a>; <a class=\"id\" href=\"#p\">p</a>; <a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph2\">iph2</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#NAPI_GRO_CB\">NAPI_GRO_CB</a>(<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#same_flow\">same_flow</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph2\">iph2</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#protocol\">protocol</a> ^ <a class=\"id\" href=\"#iph2\">iph2</a>-><a class=\"id\" href=\"#protocol\">protocol</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#tos\">tos</a> ^ <a class=\"id\" href=\"#iph2\">iph2</a>-><a class=\"id\" href=\"#tos\">tos</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a> ^ (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#iph2\">iph2</a>-><a class=\"id\" href=\"#saddr\">saddr</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a> ^ (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#iph2\">iph2</a>-><a class=\"id\" href=\"#daddr\">daddr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NAPI_GRO_CB\">NAPI_GRO_CB</a>(<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#same_flow\">same_flow</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* All fields must match except length and checksum. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NAPI_GRO_CB\">NAPI_GRO_CB</a>(<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#flush\">flush</a> |=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ttl\">ttl</a> ^ <a class=\"id\" href=\"#iph2\">iph2</a>-><a class=\"id\" href=\"#ttl\">ttl</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#u16\">u16</a>)(<a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#iph2\">iph2</a>-><a class=\"id\" href=\"#id\">id</a>) + <a class=\"id\" href=\"#NAPI_GRO_CB\">NAPI_GRO_CB</a>(<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#count\">count</a>) ^ <a class=\"id\" href=\"#id\">id</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NAPI_GRO_CB\">NAPI_GRO_CB</a>(<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#flush\">flush</a> |= <a class=\"id\" href=\"#flush\">flush</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NAPI_GRO_CB\">NAPI_GRO_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flush\">flush</a> |= <a class=\"id\" href=\"#flush\">flush</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_gro_pull\">skb_gro_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(*<a class=\"id\" href=\"#iph\">iph</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_set_transport_header\">skb_set_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#skb_gro_offset\">skb_gro_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pp\">pp</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#gro_receive\">gro_receive</a>(<a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NAPI_GRO_CB\">NAPI_GRO_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flush\">flush</a> |= <a class=\"id\" href=\"#flush\">flush</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pp\">pp</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#inet_gro_complete\">inet_gro_complete</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#net_protocol\">net_protocol</a> *<a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#protocol\">protocol</a> &amp; (<a class=\"id\" href=\"#MAX_INET_PROTOS\">MAX_INET_PROTOS</a> - 1);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#newlen\">newlen</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#skb_network_offset\">skb_network_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#csum_replace2\">csum_replace2</a>(&amp;<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#check\">check</a>, <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#tot_len\">tot_len</a>, <a class=\"id\" href=\"#newlen\">newlen</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#tot_len\">tot_len</a> = <a class=\"id\" href=\"#newlen\">newlen</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#inet_protos\">inet_protos</a>[<a class=\"id\" href=\"#proto\">proto</a>]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#ops\">ops</a> || !<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#gro_complete\">gro_complete</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#gro_complete\">gro_complete</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#inet_ctl_sock_create\">inet_ctl_sock_create</a>(struct <a class=\"id\" href=\"#sock\">sock</a> **<a class=\"id\" href=\"#sk\">sk</a>, unsigned short <a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned short <a class=\"id\" href=\"#type\">type</a>, unsigned char <a class=\"id\" href=\"#protocol\">protocol</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sock_create_kern\">sock_create_kern</a>(<a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#protocol\">protocol</a>, &amp;<a class=\"id\" href=\"#sock\">sock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#sk_allocation\">sk_allocation</a> = <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Unhash it so that IP input processing does not even see it,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we do not wish this socket to see incoming packets.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#unhash\">unhash</a>(*<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_change_net\">sk_change_net</a>(*<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#inet_ctl_sock_create\">inet_ctl_sock_create</a>);", 
"", 
"unsigned long <a class=\"id\" href=\"#snmp_fold_field\">snmp_fold_field</a>(void <a class=\"id\" href=\"#__percpu\">__percpu</a> *<a class=\"id\" href=\"#mib\">mib</a>[], int <a class=\"id\" href=\"#offt\">offt</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#res\">res</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a>(<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> += *(((unsigned long *) <a class=\"id\" href=\"#per_cpu_ptr\">per_cpu_ptr</a>(<a class=\"id\" href=\"#mib\">mib</a>[0], <a class=\"id\" href=\"#i\">i</a>)) + <a class=\"id\" href=\"#offt\">offt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> += *(((unsigned long *) <a class=\"id\" href=\"#per_cpu_ptr\">per_cpu_ptr</a>(<a class=\"id\" href=\"#mib\">mib</a>[1], <a class=\"id\" href=\"#i\">i</a>)) + <a class=\"id\" href=\"#offt\">offt</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#snmp_fold_field\">snmp_fold_field</a>);", 
"", 
"#if <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>==32", 
"", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#snmp_fold_field64\">snmp_fold_field64</a>(void <a class=\"id\" href=\"#__percpu\">__percpu</a> *<a class=\"id\" href=\"#mib\">mib</a>[], int <a class=\"id\" href=\"#offt\">offt</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#syncp_offset\">syncp_offset</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#res\">res</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#bhptr\">bhptr</a>, *<a class=\"id\" href=\"#userptr\">userptr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#u64_stats_sync\">u64_stats_sync</a> *<a class=\"id\" href=\"#syncp\">syncp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#v_bh\">v_bh</a>, <a class=\"id\" href=\"#v_user\">v_user</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#start\">start</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* first mib used by softirq context, we must use _bh() accessors */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bhptr\">bhptr</a> = <a class=\"id\" href=\"#per_cpu_ptr\">per_cpu_ptr</a>(<a class=\"id\" href=\"#SNMP_STAT_BHPTR\">SNMP_STAT_BHPTR</a>(<a class=\"id\" href=\"#mib\">mib</a>), <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#syncp\">syncp</a> = (struct <a class=\"id\" href=\"#u64_stats_sync\">u64_stats_sync</a> *)(<a class=\"id\" href=\"#bhptr\">bhptr</a> + <a class=\"id\" href=\"#syncp_offset\">syncp_offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#u64_stats_fetch_begin_bh\">u64_stats_fetch_begin_bh</a>(<a class=\"id\" href=\"#syncp\">syncp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v_bh\">v_bh</a> = *(((<a class=\"id\" href=\"#u64\">u64</a> *) <a class=\"id\" href=\"#bhptr\">bhptr</a>) + <a class=\"id\" href=\"#offt\">offt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} while (<a class=\"id\" href=\"#u64_stats_fetch_retry_bh\">u64_stats_fetch_retry_bh</a>(<a class=\"id\" href=\"#syncp\">syncp</a>, <a class=\"id\" href=\"#start\">start</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* second mib used in USER context */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#userptr\">userptr</a> = <a class=\"id\" href=\"#per_cpu_ptr\">per_cpu_ptr</a>(<a class=\"id\" href=\"#SNMP_STAT_USRPTR\">SNMP_STAT_USRPTR</a>(<a class=\"id\" href=\"#mib\">mib</a>), <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#syncp\">syncp</a> = (struct <a class=\"id\" href=\"#u64_stats_sync\">u64_stats_sync</a> *)(<a class=\"id\" href=\"#userptr\">userptr</a> + <a class=\"id\" href=\"#syncp_offset\">syncp_offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#u64_stats_fetch_begin\">u64_stats_fetch_begin</a>(<a class=\"id\" href=\"#syncp\">syncp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v_user\">v_user</a> = *(((<a class=\"id\" href=\"#u64\">u64</a> *) <a class=\"id\" href=\"#userptr\">userptr</a>) + <a class=\"id\" href=\"#offt\">offt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} while (<a class=\"id\" href=\"#u64_stats_fetch_retry\">u64_stats_fetch_retry</a>(<a class=\"id\" href=\"#syncp\">syncp</a>, <a class=\"id\" href=\"#start\">start</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> += <a class=\"id\" href=\"#v_bh\">v_bh</a> + <a class=\"id\" href=\"#v_user\">v_user</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#snmp_fold_field64\">snmp_fold_field64</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"int <a class=\"id\" href=\"#snmp_mib_init\">snmp_mib_init</a>(void <a class=\"id\" href=\"#__percpu\">__percpu</a> *<a class=\"id\" href=\"#ptr\">ptr</a>[2], <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#mibsize\">mibsize</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#align\">align</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#ptr\">ptr</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a>[0] = <a class=\"id\" href=\"#__alloc_percpu\">__alloc_percpu</a>(<a class=\"id\" href=\"#mibsize\">mibsize</a>, <a class=\"id\" href=\"#align\">align</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ptr\">ptr</a>[0])", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err0\">err0</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a>[1] = <a class=\"id\" href=\"#__alloc_percpu\">__alloc_percpu</a>(<a class=\"id\" href=\"#mibsize\">mibsize</a>, <a class=\"id\" href=\"#align\">align</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ptr\">ptr</a>[1])", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err1\">err1</a>;", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#err1\">err1</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_percpu\">free_percpu</a>(<a class=\"id\" href=\"#ptr\">ptr</a>[0]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a>[0] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<a class=\"id\" href=\"#err0\">err0</a>:", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#snmp_mib_init\">snmp_mib_init</a>);", 
"", 
"void <a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>(void <a class=\"id\" href=\"#__percpu\">__percpu</a> *<a class=\"id\" href=\"#ptr\">ptr</a>[2])", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#ptr\">ptr</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_percpu\">free_percpu</a>(<a class=\"id\" href=\"#ptr\">ptr</a>[0]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_percpu\">free_percpu</a>(<a class=\"id\" href=\"#ptr\">ptr</a>[1]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a>[0] = <a class=\"id\" href=\"#ptr\">ptr</a>[1] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_MULTICAST\">CONFIG_IP_MULTICAST</a>", 
"static const struct <a class=\"id\" href=\"#net_protocol\">net_protocol</a> <a class=\"id\" href=\"#igmp_protocol\">igmp_protocol</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#handler\">handler</a> =<span class=\"ts\"/><a class=\"id\" href=\"#igmp_rcv\">igmp_rcv</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#netns_ok\">netns_ok</a> =<span class=\"ts\"/>1,", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static const struct <a class=\"id\" href=\"#net_protocol\">net_protocol</a> <a class=\"id\" href=\"#tcp_protocol\">tcp_protocol</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#handler\">handler</a> =<span class=\"ts\"/><a class=\"id\" href=\"#tcp_v4_rcv\">tcp_v4_rcv</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#err_handler\">err_handler</a> =<span class=\"ts\"/><a class=\"id\" href=\"#tcp_v4_err\">tcp_v4_err</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gso_send_check\">gso_send_check</a> = <a class=\"id\" href=\"#tcp_v4_gso_send_check\">tcp_v4_gso_send_check</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gso_segment\">gso_segment</a> =<span class=\"ts\"/><a class=\"id\" href=\"#tcp_tso_segment\">tcp_tso_segment</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gro_receive\">gro_receive</a> =<span class=\"ts\"/><a class=\"id\" href=\"#tcp4_gro_receive\">tcp4_gro_receive</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gro_complete\">gro_complete</a> =<span class=\"ts\"/><a class=\"id\" href=\"#tcp4_gro_complete\">tcp4_gro_complete</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#no_policy\">no_policy</a> =<span class=\"ts\"/>1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#netns_ok\">netns_ok</a> =<span class=\"ts\"/>1,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#net_protocol\">net_protocol</a> <a class=\"id\" href=\"#udp_protocol\">udp_protocol</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#handler\">handler</a> =<span class=\"ts\"/><a class=\"id\" href=\"#udp_rcv\">udp_rcv</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#err_handler\">err_handler</a> =<span class=\"ts\"/><a class=\"id\" href=\"#udp_err\">udp_err</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gso_send_check\">gso_send_check</a> = <a class=\"id\" href=\"#udp4_ufo_send_check\">udp4_ufo_send_check</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gso_segment\">gso_segment</a> = <a class=\"id\" href=\"#udp4_ufo_fragment\">udp4_ufo_fragment</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#no_policy\">no_policy</a> =<span class=\"ts\"/>1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#netns_ok\">netns_ok</a> =<span class=\"ts\"/>1,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#net_protocol\">net_protocol</a> <a class=\"id\" href=\"#icmp_protocol\">icmp_protocol</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#handler\">handler</a> =<span class=\"ts\"/><a class=\"id\" href=\"#icmp_rcv\">icmp_rcv</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#no_policy\">no_policy</a> =<span class=\"ts\"/>1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#netns_ok\">netns_ok</a> =<span class=\"ts\"/>1,", 
"};", 
"", 
"static <a class=\"id\" href=\"#__net_init\">__net_init</a> int <a class=\"id\" href=\"#ipv4_mib_init_net\">ipv4_mib_init_net</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snmp_mib_init\">snmp_mib_init</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#tcp_statistics\">tcp_statistics</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  sizeof(struct <a class=\"id\" href=\"#tcp_mib\">tcp_mib</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#__alignof__\">__alignof__</a>(struct <a class=\"id\" href=\"#tcp_mib\">tcp_mib</a>)) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_tcp_mib\">err_tcp_mib</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snmp_mib_init\">snmp_mib_init</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#ip_statistics\">ip_statistics</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  sizeof(struct <a class=\"id\" href=\"#ipstats_mib\">ipstats_mib</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#__alignof__\">__alignof__</a>(struct <a class=\"id\" href=\"#ipstats_mib\">ipstats_mib</a>)) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_ip_mib\">err_ip_mib</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snmp_mib_init\">snmp_mib_init</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#net_statistics\">net_statistics</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  sizeof(struct <a class=\"id\" href=\"#linux_mib\">linux_mib</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#__alignof__\">__alignof__</a>(struct <a class=\"id\" href=\"#linux_mib\">linux_mib</a>)) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_net_mib\">err_net_mib</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snmp_mib_init\">snmp_mib_init</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#udp_statistics\">udp_statistics</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  sizeof(struct <a class=\"id\" href=\"#udp_mib\">udp_mib</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#__alignof__\">__alignof__</a>(struct <a class=\"id\" href=\"#udp_mib\">udp_mib</a>)) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_udp_mib\">err_udp_mib</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snmp_mib_init\">snmp_mib_init</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#udplite_statistics\">udplite_statistics</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  sizeof(struct <a class=\"id\" href=\"#udp_mib\">udp_mib</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#__alignof__\">__alignof__</a>(struct <a class=\"id\" href=\"#udp_mib\">udp_mib</a>)) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_udplite_mib\">err_udplite_mib</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snmp_mib_init\">snmp_mib_init</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#icmp_statistics\">icmp_statistics</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  sizeof(struct <a class=\"id\" href=\"#icmp_mib\">icmp_mib</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#__alignof__\">__alignof__</a>(struct <a class=\"id\" href=\"#icmp_mib\">icmp_mib</a>)) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_icmp_mib\">err_icmp_mib</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snmp_mib_init\">snmp_mib_init</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#icmpmsg_statistics\">icmpmsg_statistics</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  sizeof(struct <a class=\"id\" href=\"#icmpmsg_mib\">icmpmsg_mib</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#__alignof__\">__alignof__</a>(struct <a class=\"id\" href=\"#icmpmsg_mib\">icmpmsg_mib</a>)) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_icmpmsg_mib\">err_icmpmsg_mib</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_mib_init\">tcp_mib_init</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#err_icmpmsg_mib\">err_icmpmsg_mib</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#icmp_statistics\">icmp_statistics</a>);", 
"<a class=\"id\" href=\"#err_icmp_mib\">err_icmp_mib</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#udplite_statistics\">udplite_statistics</a>);", 
"<a class=\"id\" href=\"#err_udplite_mib\">err_udplite_mib</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#udp_statistics\">udp_statistics</a>);", 
"<a class=\"id\" href=\"#err_udp_mib\">err_udp_mib</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#net_statistics\">net_statistics</a>);", 
"<a class=\"id\" href=\"#err_net_mib\">err_net_mib</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#ip_statistics\">ip_statistics</a>);", 
"<a class=\"id\" href=\"#err_ip_mib\">err_ip_mib</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#tcp_statistics\">tcp_statistics</a>);", 
"<a class=\"id\" href=\"#err_tcp_mib\">err_tcp_mib</a>:", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#__net_exit\">__net_exit</a> void <a class=\"id\" href=\"#ipv4_mib_exit_net\">ipv4_mib_exit_net</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#icmpmsg_statistics\">icmpmsg_statistics</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#icmp_statistics\">icmp_statistics</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#udplite_statistics\">udplite_statistics</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#udp_statistics\">udp_statistics</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#net_statistics\">net_statistics</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#ip_statistics\">ip_statistics</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#tcp_statistics\">tcp_statistics</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#__net_initdata\">__net_initdata</a> struct <a class=\"id\" href=\"#pernet_operations\">pernet_operations</a> <a class=\"id\" href=\"#ipv4_mib_ops\">ipv4_mib_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#init\">init</a> = <a class=\"id\" href=\"#ipv4_mib_init_net\">ipv4_mib_init_net</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#exit\">exit</a> = <a class=\"id\" href=\"#ipv4_mib_exit_net\">ipv4_mib_exit_net</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_ipv4_mibs\">init_ipv4_mibs</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#register_pernet_subsys\">register_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#ipv4_mib_ops\">ipv4_mib_ops</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ipv4_proc_init\">ipv4_proc_init</a>(void);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>IP protocol layer initialiser</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static struct <a class=\"id\" href=\"#packet_type\">packet_type</a> <a class=\"id\" href=\"#ip_packet_type\">ip_packet_type</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(<a class=\"id\" href=\"#ETH_P_IP\">ETH_P_IP</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#func\">func</a> = <a class=\"id\" href=\"#ip_rcv\">ip_rcv</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gso_send_check\">gso_send_check</a> = <a class=\"id\" href=\"#inet_gso_send_check\">inet_gso_send_check</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gso_segment\">gso_segment</a> = <a class=\"id\" href=\"#inet_gso_segment\">inet_gso_segment</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gro_receive\">gro_receive</a> = <a class=\"id\" href=\"#inet_gro_receive\">inet_gro_receive</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gro_complete\">gro_complete</a> = <a class=\"id\" href=\"#inet_gro_complete\">inet_gro_complete</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#inet_init\">inet_init</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#dummy_skb\">dummy_skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_protosw\">inet_protosw</a> *<a class=\"id\" href=\"#q\">q</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(sizeof(struct <a class=\"id\" href=\"#inet_skb_parm\">inet_skb_parm</a>) &gt; sizeof(<a class=\"id\" href=\"#dummy_skb\">dummy_skb</a>-><a class=\"id\" href=\"#cb\">cb</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysctl_local_reserved_ports\">sysctl_local_reserved_ports</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(65536 / 8, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sysctl_local_reserved_ports\">sysctl_local_reserved_ports</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#proto_register\">proto_register</a>(&amp;<a class=\"id\" href=\"#tcp_prot\">tcp_prot</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_reserved_ports\">out_free_reserved_ports</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#proto_register\">proto_register</a>(&amp;<a class=\"id\" href=\"#udp_prot\">udp_prot</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unregister_tcp_proto\">out_unregister_tcp_proto</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#proto_register\">proto_register</a>(&amp;<a class=\"id\" href=\"#raw_prot\">raw_prot</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unregister_udp_proto\">out_unregister_udp_proto</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Tell SOCKET that we are alive...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#sock_register\">sock_register</a>(&amp;<a class=\"id\" href=\"#inet_family_ops\">inet_family_ops</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_static_sysctl_init\">ip_static_sysctl_init</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Add all the base protocols.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_add_protocol\">inet_add_protocol</a>(&amp;<a class=\"id\" href=\"#icmp_protocol\">icmp_protocol</a>, <a class=\"id\" href=\"#IPPROTO_ICMP\">IPPROTO_ICMP</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"inet_init: Cannot add ICMP protocol\\n\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_add_protocol\">inet_add_protocol</a>(&amp;<a class=\"id\" href=\"#udp_protocol\">udp_protocol</a>, <a class=\"id\" href=\"#IPPROTO_UDP\">IPPROTO_UDP</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"inet_init: Cannot add UDP protocol\\n\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_add_protocol\">inet_add_protocol</a>(&amp;<a class=\"id\" href=\"#tcp_protocol\">tcp_protocol</a>, <a class=\"id\" href=\"#IPPROTO_TCP\">IPPROTO_TCP</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"inet_init: Cannot add TCP protocol\\n\");", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_MULTICAST\">CONFIG_IP_MULTICAST</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_add_protocol\">inet_add_protocol</a>(&amp;<a class=\"id\" href=\"#igmp_protocol\">igmp_protocol</a>, <a class=\"id\" href=\"#IPPROTO_IGMP\">IPPROTO_IGMP</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"inet_init: Cannot add IGMP protocol\\n\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Register the socket-side information for inet_create. */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#r\">r</a> = &amp;<a class=\"id\" href=\"#inetsw\">inetsw</a>[0]; <a class=\"id\" href=\"#r\">r</a> &lt; &amp;<a class=\"id\" href=\"#inetsw\">inetsw</a>[<a class=\"id\" href=\"#SOCK_MAX\">SOCK_MAX</a>]; ++<a class=\"id\" href=\"#r\">r</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(<a class=\"id\" href=\"#r\">r</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#inetsw_array\">inetsw_array</a>; <a class=\"id\" href=\"#q\">q</a> &lt; &amp;<a class=\"id\" href=\"#inetsw_array\">inetsw_array</a>[<a class=\"id\" href=\"#INETSW_ARRAY_LEN\">INETSW_ARRAY_LEN</a>]; ++<a class=\"id\" href=\"#q\">q</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_register_protosw\">inet_register_protosw</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Set the ARP module up</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arp_init\">arp_init</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Set the IP module up</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_init\">ip_init</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_v4_init\">tcp_v4_init</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Setup TCP slab cache for open requests. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_init\">tcp_init</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Setup UDP memory threshold */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udp_init\">udp_init</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Add UDP-Lite (RFC 3828) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udplite4_register\">udplite4_register</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Set the ICMP layer up</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#icmp_init\">icmp_init</a>() &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"Failed to create the ICMP control socket.\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Initialise the multicast router</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IP_MROUTE\">CONFIG_IP_MROUTE</a>)", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_mr_init\">ip_mr_init</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"inet_init: Cannot init ipv4 mroute\\n\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Initialise per-cpu ipv4 mibs</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#init_ipv4_mibs\">init_ipv4_mibs</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"inet_init: Cannot init ipv4 mibs\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv4_proc_init\">ipv4_proc_init</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipfrag_init\">ipfrag_init</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_add_pack\">dev_add_pack</a>(&amp;<a class=\"id\" href=\"#ip_packet_type\">ip_packet_type</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<a class=\"id\" href=\"#out_unregister_udp_proto\">out_unregister_udp_proto</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proto_unregister\">proto_unregister</a>(&amp;<a class=\"id\" href=\"#udp_prot\">udp_prot</a>);", 
"<a class=\"id\" href=\"#out_unregister_tcp_proto\">out_unregister_tcp_proto</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proto_unregister\">proto_unregister</a>(&amp;<a class=\"id\" href=\"#tcp_prot\">tcp_prot</a>);", 
"<a class=\"id\" href=\"#out_free_reserved_ports\">out_free_reserved_ports</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sysctl_local_reserved_ports\">sysctl_local_reserved_ports</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#fs_initcall\">fs_initcall</a>(<a class=\"id\" href=\"#inet_init\">inet_init</a>);", 
"", 
"<span class=\"comment\">/* ------------------------------------------------------------------------ */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#ipv4_proc_init\">ipv4_proc_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#raw_proc_init\">raw_proc_init</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_raw\">out_raw</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp4_proc_init\">tcp4_proc_init</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_tcp\">out_tcp</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#udp4_proc_init\">udp4_proc_init</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_udp\">out_udp</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_misc_proc_init\">ip_misc_proc_init</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_misc\">out_misc</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<a class=\"id\" href=\"#out_misc\">out_misc</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udp4_proc_exit\">udp4_proc_exit</a>();", 
"<a class=\"id\" href=\"#out_udp\">out_udp</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp4_proc_exit\">tcp4_proc_exit</a>();", 
"<a class=\"id\" href=\"#out_tcp\">out_tcp</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_proc_exit\">raw_proc_exit</a>();", 
"<a class=\"id\" href=\"#out_raw\">out_raw</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"#else <span class=\"comment\">/* CONFIG_PROC_FS */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#ipv4_proc_init\">ipv4_proc_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_PROC_FS */</span>", 
"", 
"<a class=\"id\" href=\"#MODULE_ALIAS_NETPROTO\">MODULE_ALIAS_NETPROTO</a>(<a class=\"id\" href=\"#PF_INET\">PF_INET</a>);", 
"", 
];
xr_frag_insert('l/f3/f2c3d4aaee79139e1e3d17b8fe10560816ee16.xr', __xr_tmp);
