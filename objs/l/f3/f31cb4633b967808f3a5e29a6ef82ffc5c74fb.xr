var __xr_tmp = [
"}", 
"", 
"static void <a class=\"id\" href=\"#shmem_free_inode\">shmem_free_inode</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_sb_info\">shmem_sb_info</a> *<a class=\"id\" href=\"#sbinfo\">sbinfo</a> = <a class=\"id\" href=\"#SHMEM_SB\">SHMEM_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_inodes\">max_inodes</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#stat_lock\">stat_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#free_inodes\">free_inodes</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#stat_lock\">stat_lock</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * shmem_recalc_inode - recalculate the size of an inode</span>", 
"<span class=\"comment\"> * @inode: inode to recalc</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We have to calculate the free blocks since the mm can drop</span>", 
"<span class=\"comment\"> * undirtied hole pages behind our back.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * But normally   info-&gt;alloced == inode-&gt;i_mapping-&gt;nrpages + info-&gt;swapped</span>", 
"<span class=\"comment\"> * So mm freed is info-&gt;alloced - (inode-&gt;i_mapping-&gt;nrpages + info-&gt;swapped)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * It has to be called with the spinlock held.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#shmem_recalc_inode\">shmem_recalc_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#SHMEM_I\">SHMEM_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#freed\">freed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#freed\">freed</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#alloced\">alloced</a> - <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#swapped\">swapped</a> - <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>-><a class=\"id\" href=\"#nrpages\">nrpages</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#freed\">freed</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#alloced\">alloced</a> -= <a class=\"id\" href=\"#freed\">freed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_unacct_blocks\">shmem_unacct_blocks</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#freed\">freed</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_free_blocks\">shmem_free_blocks</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#freed\">freed</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * shmem_swp_entry - find the swap vector position in the info structure</span>", 
"<span class=\"comment\"> * @info:  info structure for the inode</span>", 
"<span class=\"comment\"> * @index: index of the page to find</span>", 
"<span class=\"comment\"> * @page:  optional page to add to the structure. Has to be preset to</span>", 
"<span class=\"comment\"> *         all zeros</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If there is no space allocated yet it will return NULL when</span>", 
"<span class=\"comment\"> * page is NULL, else it will use the page for the needed block,</span>", 
"<span class=\"comment\"> * setting it to NULL on return to indicate that it has been used.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The swap vector is organized the following way:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * There are SHMEM_NR_DIRECT entries directly stored in the</span>", 
"<span class=\"comment\"> * shmem_inode_info structure. So small files do not need an addional</span>", 
"<span class=\"comment\"> * allocation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * For pages with index &gt; SHMEM_NR_DIRECT there is the pointer</span>", 
"<span class=\"comment\"> * i_indirect which points to a page which holds in the first half</span>", 
"<span class=\"comment\"> * doubly indirect blocks, in the second half triple indirect blocks:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * For an artificial ENTRIES_PER_PAGE = 4 this would lead to the</span>", 
"<span class=\"comment\"> * following layout (for SHMEM_NR_DIRECT == 16):</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * i_indirect -&gt; dir --&gt; 16-19</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>      |<span class=\"ts\"/>     +-&gt; 20-23</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>      |</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>      +--&gt;dir2 --&gt; 24-27</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>      |<span class=\"ts\"/>       +-&gt; 28-31</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>      |<span class=\"ts\"/>       +-&gt; 32-35</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>      |<span class=\"ts\"/>       +-&gt; 36-39</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>      |</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>      +--&gt;dir3 --&gt; 40-43</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>       <span class=\"ts\"/>       +-&gt; 44-47</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>      <span class=\"ts\"/>       +-&gt; 48-51</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>      <span class=\"ts\"/>       +-&gt; 52-55</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> *<a class=\"id\" href=\"#shmem_swp_entry\">shmem_swp_entry</a>(struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *<a class=\"id\" href=\"#info\">info</a>, unsigned long <a class=\"id\" href=\"#index\">index</a>, struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#dir\">dir</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#subdir\">subdir</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#index\">index</a> &lt; <a class=\"id\" href=\"#SHMEM_NR_DIRECT\">SHMEM_NR_DIRECT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_balance_unmap\">shmem_swp_balance_unmap</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#i_direct\">i_direct</a>+<a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#i_indirect\">i_indirect</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#i_indirect\">i_indirect</a> = *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* need another page */</span>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> -= <a class=\"id\" href=\"#SHMEM_NR_DIRECT\">SHMEM_NR_DIRECT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#index\">index</a> % <a class=\"id\" href=\"#ENTRIES_PER_PAGE\">ENTRIES_PER_PAGE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> /= <a class=\"id\" href=\"#ENTRIES_PER_PAGE\">ENTRIES_PER_PAGE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#shmem_dir_map\">shmem_dir_map</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#i_indirect\">i_indirect</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#index\">index</a> >= <a class=\"id\" href=\"#ENTRIES_PER_PAGE\">ENTRIES_PER_PAGE</a>/2) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> -= <a class=\"id\" href=\"#ENTRIES_PER_PAGE\">ENTRIES_PER_PAGE</a>/2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a> += <a class=\"id\" href=\"#ENTRIES_PER_PAGE\">ENTRIES_PER_PAGE</a>/2 + <a class=\"id\" href=\"#index\">index</a>/<a class=\"id\" href=\"#ENTRIES_PER_PAGE\">ENTRIES_PER_PAGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> %= <a class=\"id\" href=\"#ENTRIES_PER_PAGE\">ENTRIES_PER_PAGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#subdir\">subdir</a> = *<a class=\"id\" href=\"#dir\">dir</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#subdir\">subdir</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dir\">dir</a> = *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_dir_unmap\">shmem_dir_unmap</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* need another page */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_dir_unmap\">shmem_dir_unmap</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#shmem_dir_map\">shmem_dir_map</a>(<a class=\"id\" href=\"#subdir\">subdir</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a> += <a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#subdir\">subdir</a> = *<a class=\"id\" href=\"#dir\">dir</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#subdir\">subdir</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a> || !(<a class=\"id\" href=\"#subdir\">subdir</a> = *<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_dir_unmap\">shmem_dir_unmap</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* need a page */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#subdir\">subdir</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shmem_dir_unmap\">shmem_dir_unmap</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#shmem_swp_map\">shmem_swp_map</a>(<a class=\"id\" href=\"#subdir\">subdir</a>) + <a class=\"id\" href=\"#offset\">offset</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#shmem_swp_set\">shmem_swp_set</a>(struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> *<a class=\"id\" href=\"#entry\">entry</a>, unsigned long <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#incdec\">incdec</a> = <a class=\"id\" href=\"#value\">value</a>? 1: -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#value\">value</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#swapped\">swapped</a> += <a class=\"id\" href=\"#incdec\">incdec</a>;", 
"<span class=\"ts\"/>if ((unsigned long)(<a class=\"id\" href=\"#entry\">entry</a> - <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#i_direct\">i_direct</a>) >= <a class=\"id\" href=\"#SHMEM_NR_DIRECT\">SHMEM_NR_DIRECT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#kmap_atomic_to_page\">kmap_atomic_to_page</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_page_private\">set_page_private</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#page_private\">page_private</a>(<a class=\"id\" href=\"#page\">page</a>) + <a class=\"id\" href=\"#incdec\">incdec</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * shmem_swp_alloc - get the position of the swap entry for the page.</span>", 
"<span class=\"comment\"> * @info:<span class=\"ts\"/>info structure for the inode</span>", 
"<span class=\"comment\"> * @index:<span class=\"ts\"/>index of the page to find</span>", 
"<span class=\"comment\"> * @sgp:<span class=\"ts\"/>check and recheck i_size? skip allocation?</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If the entry does not exist, allocate it.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> *<a class=\"id\" href=\"#shmem_swp_alloc\">shmem_swp_alloc</a>(struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *<a class=\"id\" href=\"#info\">info</a>, unsigned long <a class=\"id\" href=\"#index\">index</a>, enum <a class=\"id\" href=\"#sgp_type\">sgp_type</a> <a class=\"id\" href=\"#sgp\">sgp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = &amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#vfs_inode\">vfs_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_sb_info\">shmem_sb_info</a> *<a class=\"id\" href=\"#sbinfo\">sbinfo</a> = <a class=\"id\" href=\"#SHMEM_SB\">SHMEM_SB</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sgp\">sgp</a> != <a class=\"id\" href=\"#SGP_WRITE\">SGP_WRITE</a> &&", 
"<span class=\"ts\"/>    ((<a class=\"id\" href=\"#loff_t\">loff_t</a>) <a class=\"id\" href=\"#index\">index</a> << <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>) >= <a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"", 
"<span class=\"ts\"/>while (!(<a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#shmem_swp_entry\">shmem_swp_entry</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#index\">index</a>, &amp;<a class=\"id\" href=\"#page\">page</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sgp\">sgp</a> == <a class=\"id\" href=\"#SGP_READ\">SGP_READ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#shmem_swp_map\">shmem_swp_map</a>(<a class=\"id\" href=\"#ZERO_PAGE\">ZERO_PAGE</a>(0));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Test used_blocks against 1 less max_blocks, since we have 1 data</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * page (and perhaps indirect index pages) yet to allocate:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * a waste to allocate index if we cannot allocate data.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_blocks\">max_blocks</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#percpu_counter_compare\">percpu_counter_compare</a>(&amp;<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#used_blocks\">used_blocks</a>, (<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_blocks\">max_blocks</a> - 1)) &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_inc\">percpu_counter_inc</a>(&amp;<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#used_blocks\">used_blocks</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_lock\">i_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blocks\">i_blocks</a> += <a class=\"id\" href=\"#BLOCKS_PER_PAGE\">BLOCKS_PER_PAGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_lock\">i_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#shmem_dir_alloc\">shmem_dir_alloc</a>(<a class=\"id\" href=\"#mapping_gfp_mask\">mapping_gfp_mask</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_free_blocks\">shmem_free_blocks</a>(<a class=\"id\" href=\"#inode\">inode</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sgp\">sgp</a> != <a class=\"id\" href=\"#SGP_WRITE\">SGP_WRITE</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#loff_t\">loff_t</a>) <a class=\"id\" href=\"#index\">index</a> << <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>) >= <a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#inode\">inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#next_index\">next_index</a> <= <a class=\"id\" href=\"#index\">index</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#next_index\">next_index</a> = <a class=\"id\" href=\"#index\">index</a> + 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* another task gave its page, or truncated the file */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_free_blocks\">shmem_free_blocks</a>(<a class=\"id\" href=\"#inode\">inode</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_dir_free\">shmem_dir_free</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#next_index\">next_index</a> <= <a class=\"id\" href=\"#index\">index</a> && !<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#entry\">entry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#next_index\">next_index</a> = <a class=\"id\" href=\"#index\">index</a> + 1;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#entry\">entry</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * shmem_free_swp - free some swap entries in a directory</span>", 
"<span class=\"comment\"> * @dir:        pointer to the directory</span>", 
"<span class=\"comment\"> * @edir:       pointer after last entry of the directory</span>", 
"<span class=\"comment\"> * @punch_lock: pointer to spinlock when needed for the holepunch case</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#shmem_free_swp\">shmem_free_swp</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> *<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> *<a class=\"id\" href=\"#edir\">edir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#punch_lock\">punch_lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#punch_unlock\">punch_unlock</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> *<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#freed\">freed</a> = 0;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#dir\">dir</a>; <a class=\"id\" href=\"#ptr\">ptr</a> &lt; <a class=\"id\" href=\"#edir\">edir</a>; <a class=\"id\" href=\"#ptr\">ptr</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#val\">val</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#punch_lock\">punch_lock</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#punch_unlock\">punch_unlock</a> = <a class=\"id\" href=\"#punch_lock\">punch_lock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#punch_lock\">punch_lock</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(<a class=\"id\" href=\"#punch_unlock\">punch_unlock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#val\">val</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_swap_and_cache\">free_swap_and_cache</a>(*<a class=\"id\" href=\"#ptr\">ptr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ptr\">ptr</a> = (<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a>){0};", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freed\">freed</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#punch_unlock\">punch_unlock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(<a class=\"id\" href=\"#punch_unlock\">punch_unlock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#freed\">freed</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shmem_map_and_free_swp\">shmem_map_and_free_swp</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#subdir\">subdir</a>, int <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#limit\">limit</a>, struct <a class=\"id\" href=\"#page\">page</a> ***<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#punch_lock\">punch_lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> *<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#freed\">freed</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#shmem_swp_map\">shmem_swp_map</a>(<a class=\"id\" href=\"#subdir\">subdir</a>);", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#offset\">offset</a> &lt; <a class=\"id\" href=\"#limit\">limit</a>; <a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#LATENCY_LIMIT\">LATENCY_LIMIT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#limit\">limit</a> - <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#LATENCY_LIMIT\">LATENCY_LIMIT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#LATENCY_LIMIT\">LATENCY_LIMIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freed\">freed</a> += <a class=\"id\" href=\"#shmem_free_swp\">shmem_free_swp</a>(<a class=\"id\" href=\"#ptr\">ptr</a>+<a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#ptr\">ptr</a>+<a class=\"id\" href=\"#offset\">offset</a>+<a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#punch_lock\">punch_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#need_resched\">need_resched</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_unmap\">shmem_swp_unmap</a>(<a class=\"id\" href=\"#ptr\">ptr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#dir\">dir</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_dir_unmap\">shmem_dir_unmap</a>(*<a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#shmem_swp_map\">shmem_swp_map</a>(<a class=\"id\" href=\"#subdir\">subdir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_unmap\">shmem_swp_unmap</a>(<a class=\"id\" href=\"#ptr\">ptr</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#freed\">freed</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#shmem_free_pages\">shmem_free_pages</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#next\">next</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#freed\">freed</a> = 0;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#next\">next</a>, struct <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#lru\">lru</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#next\">next</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_dir_free\">shmem_dir_free</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freed\">freed</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#freed\">freed</a> >= <a class=\"id\" href=\"#LATENCY_LIMIT\">LATENCY_LIMIT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freed\">freed</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#next\">next</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#shmem_truncate_range\">shmem_truncate_range</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#SHMEM_I\">SHMEM_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#limit\">limit</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#stage\">stage</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#diroff\">diroff</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#dir\">dir</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#topdir\">topdir</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#middir\">middir</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#subdir\">subdir</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> *<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#pages_to_free\">pages_to_free</a>);", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#nr_pages_to_free\">nr_pages_to_free</a> = 0;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#nr_swaps_freed\">nr_swaps_freed</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#freed\">freed</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#punch_hole\">punch_hole</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#needs_lock\">needs_lock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#punch_lock\">punch_lock</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#upper_limit\">upper_limit</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> = <a class=\"id\" href=\"#CURRENT_TIME\">CURRENT_TIME</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> = (<a class=\"id\" href=\"#start\">start</a> + <a class=\"id\" href=\"#PAGE_CACHE_SIZE\">PAGE_CACHE_SIZE</a> - 1) >> <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idx\">idx</a> >= <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#next_index\">next_index</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#SHMEM_TRUNCATE\">SHMEM_TRUNCATE</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#end\">end</a> == (<a class=\"id\" href=\"#loff_t\">loff_t</a>) -1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#next_index\">next_index</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#upper_limit\">upper_limit</a> = <a class=\"id\" href=\"#SHMEM_MAX_INDEX\">SHMEM_MAX_INDEX</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#next_index\">next_index</a> = <a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#needs_lock\">needs_lock</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#punch_hole\">punch_hole</a> = 0;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#end\">end</a> + 1 >= <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>) {<span class=\"ts\"/><span class=\"comment\">/* we may free a little more */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> = (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> + <a class=\"id\" href=\"#PAGE_CACHE_SIZE\">PAGE_CACHE_SIZE</a> - 1) >>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#upper_limit\">upper_limit</a> = <a class=\"id\" href=\"#SHMEM_MAX_INDEX\">SHMEM_MAX_INDEX</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> = (<a class=\"id\" href=\"#end\">end</a> + 1) >> <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#upper_limit\">upper_limit</a> = <a class=\"id\" href=\"#limit\">limit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#needs_lock\">needs_lock</a> = &amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#punch_hole\">punch_hole</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#topdir\">topdir</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#i_indirect\">i_indirect</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#topdir\">topdir</a> && <a class=\"id\" href=\"#idx\">idx</a> <= <a class=\"id\" href=\"#SHMEM_NR_DIRECT\">SHMEM_NR_DIRECT</a> && !<a class=\"id\" href=\"#punch_hole\">punch_hole</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#i_indirect\">i_indirect</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_pages_to_free\">nr_pages_to_free</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#topdir\">topdir</a>-><a class=\"id\" href=\"#lru\">lru</a>, &amp;<a class=\"id\" href=\"#pages_to_free\">pages_to_free</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#swapped\">swapped</a> && <a class=\"id\" href=\"#idx\">idx</a> &lt; <a class=\"id\" href=\"#SHMEM_NR_DIRECT\">SHMEM_NR_DIRECT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#i_direct\">i_direct</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#limit\">limit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#SHMEM_NR_DIRECT\">SHMEM_NR_DIRECT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#SHMEM_NR_DIRECT\">SHMEM_NR_DIRECT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_swaps_freed\">nr_swaps_freed</a> = <a class=\"id\" href=\"#shmem_free_swp\">shmem_free_swp</a>(<a class=\"id\" href=\"#ptr\">ptr</a>+<a class=\"id\" href=\"#idx\">idx</a>, <a class=\"id\" href=\"#ptr\">ptr</a>+<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#needs_lock\">needs_lock</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If there are no indirect blocks or we are punching a hole</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * below indirect blocks, nothing to be done.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#topdir\">topdir</a> || <a class=\"id\" href=\"#limit\">limit</a> <= <a class=\"id\" href=\"#SHMEM_NR_DIRECT\">SHMEM_NR_DIRECT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done2\">done2</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The truncation case has already dropped info-&gt;lock, and we're safe</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * because i_size and next_index have already been lowered, preventing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * access beyond.  But in the punch_hole case, we still need to take</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the lock when updating the swap directory, because there might be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * racing accesses by shmem_getpage(SGP_CACHE), shmem_unuse_inode or</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * shmem_writepage.  However, whenever we find we can remove a whole</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * directory page (not at the misaligned start or end of the range),</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we first NULLify its pointer in the level above, and then have no</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * need to take the lock when updating its contents: needs_lock and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * punch_lock (either pointing to info-&gt;lock or NULL) manage this.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upper_limit\">upper_limit</a> -= <a class=\"id\" href=\"#SHMEM_NR_DIRECT\">SHMEM_NR_DIRECT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> -= <a class=\"id\" href=\"#SHMEM_NR_DIRECT\">SHMEM_NR_DIRECT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> = (<a class=\"id\" href=\"#idx\">idx</a> &gt; <a class=\"id\" href=\"#SHMEM_NR_DIRECT\">SHMEM_NR_DIRECT</a>)? (<a class=\"id\" href=\"#idx\">idx</a> - <a class=\"id\" href=\"#SHMEM_NR_DIRECT\">SHMEM_NR_DIRECT</a>): 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#idx\">idx</a> % <a class=\"id\" href=\"#ENTRIES_PER_PAGE\">ENTRIES_PER_PAGE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> -= <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#shmem_dir_map\">shmem_dir_map</a>(<a class=\"id\" href=\"#topdir\">topdir</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stage\">stage</a> = <a class=\"id\" href=\"#ENTRIES_PER_PAGEPAGE\">ENTRIES_PER_PAGEPAGE</a>/2;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idx\">idx</a> &lt; <a class=\"id\" href=\"#ENTRIES_PER_PAGEPAGE\">ENTRIES_PER_PAGEPAGE</a>/2) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#middir\">middir</a> = <a class=\"id\" href=\"#topdir\">topdir</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#diroff\">diroff</a> = <a class=\"id\" href=\"#idx\">idx</a>/<a class=\"id\" href=\"#ENTRIES_PER_PAGE\">ENTRIES_PER_PAGE</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a> += <a class=\"id\" href=\"#ENTRIES_PER_PAGE\">ENTRIES_PER_PAGE</a>/2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a> += (<a class=\"id\" href=\"#idx\">idx</a> - <a class=\"id\" href=\"#ENTRIES_PER_PAGEPAGE\">ENTRIES_PER_PAGEPAGE</a>/2)/<a class=\"id\" href=\"#ENTRIES_PER_PAGEPAGE\">ENTRIES_PER_PAGEPAGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#stage\">stage</a> <= <a class=\"id\" href=\"#idx\">idx</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stage\">stage</a> += <a class=\"id\" href=\"#ENTRIES_PER_PAGEPAGE\">ENTRIES_PER_PAGEPAGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#middir\">middir</a> = *<a class=\"id\" href=\"#dir\">dir</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#dir\">dir</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#diroff\">diroff</a> = ((<a class=\"id\" href=\"#idx\">idx</a> - <a class=\"id\" href=\"#ENTRIES_PER_PAGEPAGE\">ENTRIES_PER_PAGEPAGE</a>/2) %", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ENTRIES_PER_PAGEPAGE\">ENTRIES_PER_PAGEPAGE</a>) / <a class=\"id\" href=\"#ENTRIES_PER_PAGE\">ENTRIES_PER_PAGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#diroff\">diroff</a> && !<a class=\"id\" href=\"#offset\">offset</a> && <a class=\"id\" href=\"#upper_limit\">upper_limit</a> >= <a class=\"id\" href=\"#stage\">stage</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#needs_lock\">needs_lock</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(<a class=\"id\" href=\"#needs_lock\">needs_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(<a class=\"id\" href=\"#needs_lock\">needs_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#needs_lock\">needs_lock</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_pages_to_free\">nr_pages_to_free</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#middir\">middir</a>-><a class=\"id\" href=\"#lru\">lru</a>, &amp;<a class=\"id\" href=\"#pages_to_free\">pages_to_free</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_dir_unmap\">shmem_dir_unmap</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#shmem_dir_map\">shmem_dir_map</a>(<a class=\"id\" href=\"#middir\">middir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#diroff\">diroff</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> = <a class=\"id\" href=\"#stage\">stage</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#idx\">idx</a> &lt; <a class=\"id\" href=\"#limit\">limit</a>; <a class=\"id\" href=\"#idx\">idx</a> += <a class=\"id\" href=\"#ENTRIES_PER_PAGE\">ENTRIES_PER_PAGE</a>, <a class=\"id\" href=\"#diroff\">diroff</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#idx\">idx</a> == <a class=\"id\" href=\"#stage\">stage</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_dir_unmap\">shmem_dir_unmap</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#shmem_dir_map\">shmem_dir_map</a>(<a class=\"id\" href=\"#topdir\">topdir</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ENTRIES_PER_PAGE\">ENTRIES_PER_PAGE</a>/2 + <a class=\"id\" href=\"#idx\">idx</a>/<a class=\"id\" href=\"#ENTRIES_PER_PAGEPAGE\">ENTRIES_PER_PAGEPAGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (!*<a class=\"id\" href=\"#dir\">dir</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> += <a class=\"id\" href=\"#ENTRIES_PER_PAGEPAGE\">ENTRIES_PER_PAGEPAGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idx\">idx</a> >= <a class=\"id\" href=\"#limit\">limit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done1\">done1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stage\">stage</a> = <a class=\"id\" href=\"#idx\">idx</a> + <a class=\"id\" href=\"#ENTRIES_PER_PAGEPAGE\">ENTRIES_PER_PAGEPAGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#middir\">middir</a> = *<a class=\"id\" href=\"#dir\">dir</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#punch_hole\">punch_hole</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#needs_lock\">needs_lock</a> = &amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#upper_limit\">upper_limit</a> >= <a class=\"id\" href=\"#stage\">stage</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#needs_lock\">needs_lock</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(<a class=\"id\" href=\"#needs_lock\">needs_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(<a class=\"id\" href=\"#needs_lock\">needs_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#needs_lock\">needs_lock</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_pages_to_free\">nr_pages_to_free</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#middir\">middir</a>-><a class=\"id\" href=\"#lru\">lru</a>, &amp;<a class=\"id\" href=\"#pages_to_free\">pages_to_free</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_dir_unmap\">shmem_dir_unmap</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#shmem_dir_map\">shmem_dir_map</a>(<a class=\"id\" href=\"#middir\">middir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#diroff\">diroff</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#punch_lock\">punch_lock</a> = <a class=\"id\" href=\"#needs_lock\">needs_lock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#subdir\">subdir</a> = <a class=\"id\" href=\"#dir\">dir</a>[<a class=\"id\" href=\"#diroff\">diroff</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#subdir\">subdir</a> && !<a class=\"id\" href=\"#offset\">offset</a> && <a class=\"id\" href=\"#upper_limit\">upper_limit</a>-<a class=\"id\" href=\"#idx\">idx</a> >= <a class=\"id\" href=\"#ENTRIES_PER_PAGE\">ENTRIES_PER_PAGE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#needs_lock\">needs_lock</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(<a class=\"id\" href=\"#needs_lock\">needs_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a>[<a class=\"id\" href=\"#diroff\">diroff</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(<a class=\"id\" href=\"#needs_lock\">needs_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#punch_lock\">punch_lock</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a>[<a class=\"id\" href=\"#diroff\">diroff</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_pages_to_free\">nr_pages_to_free</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#subdir\">subdir</a>-><a class=\"id\" href=\"#lru\">lru</a>, &amp;<a class=\"id\" href=\"#pages_to_free\">pages_to_free</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#subdir\">subdir</a> && <a class=\"id\" href=\"#page_private\">page_private</a>(<a class=\"id\" href=\"#subdir\">subdir</a>) <span class=\"comment\">/* has swap entries */</span>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#limit\">limit</a> - <a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#ENTRIES_PER_PAGE\">ENTRIES_PER_PAGE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#ENTRIES_PER_PAGE\">ENTRIES_PER_PAGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freed\">freed</a> = <a class=\"id\" href=\"#shmem_map_and_free_swp\">shmem_map_and_free_swp</a>(<a class=\"id\" href=\"#subdir\">subdir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#size\">size</a>, &amp;<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#punch_lock\">punch_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dir\">dir</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#shmem_dir_map\">shmem_dir_map</a>(<a class=\"id\" href=\"#middir\">middir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_swaps_freed\">nr_swaps_freed</a> += <a class=\"id\" href=\"#freed\">freed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> || <a class=\"id\" href=\"#punch_lock\">punch_lock</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_page_private\">set_page_private</a>(<a class=\"id\" href=\"#subdir\">subdir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_private\">page_private</a>(<a class=\"id\" href=\"#subdir\">subdir</a>) - <a class=\"id\" href=\"#freed\">freed</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#page_private\">page_private</a>(<a class=\"id\" href=\"#subdir\">subdir</a>) != <a class=\"id\" href=\"#freed\">freed</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#done1\">done1</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shmem_dir_unmap\">shmem_dir_unmap</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"<a class=\"id\" href=\"#done2\">done2</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>-><a class=\"id\" href=\"#nrpages\">nrpages</a> && (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SHMEM_PAGEIN\">SHMEM_PAGEIN</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Call truncate_inode_pages again: racing shmem_unuse_inode</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * may have swizzled a page in from swap since</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * truncate_pagecache or generic_delete_inode did it, before we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * lowered next_index.  Also, though shmem_getpage checks</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * i_size before adding to cache, no recheck after: so fix the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * narrow window there too.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Recalling truncate_inode_pages_range and unmap_mapping_range</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * every time for punch_hole (which never got a chance to clear</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * SHMEM_PAGEIN at the start of vmtruncate_range) is expensive,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * yet hardly ever necessary: try to optimize them out later.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#truncate_inode_pages_range\">truncate_inode_pages_range</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#punch_hole\">punch_hole</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unmap_mapping_range\">unmap_mapping_range</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>, <a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#start\">start</a>, 1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#SHMEM_TRUNCATE\">SHMEM_TRUNCATE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#swapped\">swapped</a> -= <a class=\"id\" href=\"#nr_swaps_freed\">nr_swaps_freed</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nr_pages_to_free\">nr_pages_to_free</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_free_blocks\">shmem_free_blocks</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#nr_pages_to_free\">nr_pages_to_free</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shmem_recalc_inode\">shmem_recalc_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Empty swap vector directory pages to be freed?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#pages_to_free\">pages_to_free</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pages_to_free\">pages_to_free</a>.<a class=\"id\" href=\"#prev\">prev</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_free_pages\">shmem_free_pages</a>(<a class=\"id\" href=\"#pages_to_free\">pages_to_free</a>.<a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shmem_notify_change\">shmem_notify_change</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#iattr\">iattr</a> *<a class=\"id\" href=\"#attr\">attr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#newsize\">newsize</a> = <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_size\">ia_size</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#inode_change_ok\">inode_change_ok</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISREG\">S_ISREG</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>) && (<a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_SIZE\">ATTR_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&& <a class=\"id\" href=\"#newsize\">newsize</a> != <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#newsize\">newsize</a> &lt; <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If truncating down to a partial page, then</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * if that page is already allocated, hold it</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * in memory until the truncation is over, so</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * truncate_partial_page cannnot miss it were</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * it assigned to swap.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#newsize\">newsize</a> &amp; (<a class=\"id\" href=\"#PAGE_CACHE_SIZE\">PAGE_CACHE_SIZE</a>-1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(void) <a class=\"id\" href=\"#shmem_getpage\">shmem_getpage</a>(<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newsize\">newsize</a> >> <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#SGP_READ\">SGP_READ</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Reset SHMEM_PAGEIN flag so that shmem_truncate can</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * detect if any pages might have been added to cache</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * after truncate_inode_pages.  But we needn't bother</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * if it's being fully truncated to zero-length: the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * nrpages check is efficient enough in that case.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#newsize\">newsize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#SHMEM_I\">SHMEM_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#SHMEM_PAGEIN\">SHMEM_PAGEIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* XXX(truncate): truncate_setsize should be called last */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#truncate_setsize\">truncate_setsize</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#newsize\">newsize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_truncate_range\">shmem_truncate_range</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#newsize\">newsize</a>, (<a class=\"id\" href=\"#loff_t\">loff_t</a>)-1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setattr_copy\">setattr_copy</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#attr\">attr</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TMPFS_POSIX_ACL\">CONFIG_TMPFS_POSIX_ACL</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_MODE\">ATTR_MODE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#generic_acl_chmod\">generic_acl_chmod</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#shmem_evict_inode\">shmem_evict_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#SHMEM_I\">SHMEM_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>-><a class=\"id\" href=\"#a_ops\">a_ops</a> == &amp;<a class=\"id\" href=\"#shmem_aops\">shmem_aops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#truncate_inode_pages\">truncate_inode_pages</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_unacct_size\">shmem_unacct_size</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_truncate_range\">shmem_truncate_range</a>(<a class=\"id\" href=\"#inode\">inode</a>, 0, (<a class=\"id\" href=\"#loff_t\">loff_t</a>)-1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#swaplist\">swaplist</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#shmem_swaplist_mutex\">shmem_swaplist_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del_init\">list_del_init</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#swaplist\">swaplist</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#shmem_swaplist_mutex\">shmem_swaplist_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blocks\">i_blocks</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shmem_free_inode\">shmem_free_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end_writeback\">end_writeback</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#shmem_find_swp\">shmem_find_swp</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> <a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> *<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> *<a class=\"id\" href=\"#edir\">edir</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> *<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#dir\">dir</a>; <a class=\"id\" href=\"#ptr\">ptr</a> &lt; <a class=\"id\" href=\"#edir\">edir</a>; <a class=\"id\" href=\"#ptr\">ptr</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#val\">val</a> == <a class=\"id\" href=\"#entry\">entry</a>.<a class=\"id\" href=\"#val\">val</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ptr\">ptr</a> - <a class=\"id\" href=\"#dir\">dir</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shmem_unuse_inode\">shmem_unuse_inode</a>(struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> <a class=\"id\" href=\"#entry\">entry</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#limit\">limit</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#stage\">stage</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#dir\">dir</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#subdir\">subdir</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> *<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#i_direct\">i_direct</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#swapped\">swapped</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del_init\">list_del_init</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#swaplist\">swaplist</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#lost2\">lost2</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#next_index\">next_index</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#limit\">limit</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#SHMEM_NR_DIRECT\">SHMEM_NR_DIRECT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#SHMEM_NR_DIRECT\">SHMEM_NR_DIRECT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#shmem_find_swp\">shmem_find_swp</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#ptr\">ptr</a>+<a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#found\">found</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#i_indirect\">i_indirect</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#lost2\">lost2</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#shmem_dir_map\">shmem_dir_map</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#i_indirect\">i_indirect</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stage\">stage</a> = <a class=\"id\" href=\"#SHMEM_NR_DIRECT\">SHMEM_NR_DIRECT</a> + <a class=\"id\" href=\"#ENTRIES_PER_PAGEPAGE\">ENTRIES_PER_PAGEPAGE</a>/2;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#idx\">idx</a> = <a class=\"id\" href=\"#SHMEM_NR_DIRECT\">SHMEM_NR_DIRECT</a>; <a class=\"id\" href=\"#idx\">idx</a> &lt; <a class=\"id\" href=\"#limit\">limit</a>; <a class=\"id\" href=\"#idx\">idx</a> += <a class=\"id\" href=\"#ENTRIES_PER_PAGE\">ENTRIES_PER_PAGE</a>, <a class=\"id\" href=\"#dir\">dir</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#idx\">idx</a> == <a class=\"id\" href=\"#stage\">stage</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_dir_unmap\">shmem_dir_unmap</a>(<a class=\"id\" href=\"#dir\">dir</a>-1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cond_resched_lock\">cond_resched_lock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* check it has not been truncated */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#limit\">limit</a> &gt; <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#next_index\">next_index</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#next_index\">next_index</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idx\">idx</a> >= <a class=\"id\" href=\"#limit\">limit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#lost2\">lost2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#shmem_dir_map\">shmem_dir_map</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#i_indirect\">i_indirect</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ENTRIES_PER_PAGE\">ENTRIES_PER_PAGE</a>/2 + <a class=\"id\" href=\"#idx\">idx</a>/<a class=\"id\" href=\"#ENTRIES_PER_PAGEPAGE\">ENTRIES_PER_PAGEPAGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (!*<a class=\"id\" href=\"#dir\">dir</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> += <a class=\"id\" href=\"#ENTRIES_PER_PAGEPAGE\">ENTRIES_PER_PAGEPAGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idx\">idx</a> >= <a class=\"id\" href=\"#limit\">limit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#lost1\">lost1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stage\">stage</a> = <a class=\"id\" href=\"#idx\">idx</a> + <a class=\"id\" href=\"#ENTRIES_PER_PAGEPAGE\">ENTRIES_PER_PAGEPAGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#subdir\">subdir</a> = *<a class=\"id\" href=\"#dir\">dir</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_dir_unmap\">shmem_dir_unmap</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#shmem_dir_map\">shmem_dir_map</a>(<a class=\"id\" href=\"#subdir\">subdir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#subdir\">subdir</a> = *<a class=\"id\" href=\"#dir\">dir</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#subdir\">subdir</a> && <a class=\"id\" href=\"#page_private\">page_private</a>(<a class=\"id\" href=\"#subdir\">subdir</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#shmem_swp_map\">shmem_swp_map</a>(<a class=\"id\" href=\"#subdir\">subdir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#limit\">limit</a> - <a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#ENTRIES_PER_PAGE\">ENTRIES_PER_PAGE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#ENTRIES_PER_PAGE\">ENTRIES_PER_PAGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#shmem_find_swp\">shmem_find_swp</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#ptr\">ptr</a>+<a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_unmap\">shmem_swp_unmap</a>(<a class=\"id\" href=\"#ptr\">ptr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_dir_unmap\">shmem_dir_unmap</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#found\">found</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#lost1\">lost1</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shmem_dir_unmap\">shmem_dir_unmap</a>(<a class=\"id\" href=\"#dir\">dir</a>-1);", 
"<a class=\"id\" href=\"#lost2\">lost2</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#found\">found</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> += <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#igrab\">igrab</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#vfs_inode\">vfs_inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Move _head_ to start search for next from here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * But be careful: shmem_evict_inode checks list_empty without taking</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mutex, and there's an instant in list_move_tail when info-&gt;swaplist</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * would appear empty, if it were the only one on shmem_swaplist.  We</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * could avoid doing it if inode NULL; or use this minor optimization.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#shmem_swaplist\">shmem_swaplist</a>.<a class=\"id\" href=\"#next\">next</a> != &amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#swaplist\">swaplist</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_move_tail\">list_move_tail</a>(&amp;<a class=\"id\" href=\"#shmem_swaplist\">shmem_swaplist</a>, &amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#swaplist\">swaplist</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#shmem_swaplist_mutex\">shmem_swaplist_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 1;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Charge page using GFP_KERNEL while we can wait.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Charged back to the user(not to caller) when swap account is used.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * add_to_page_cache() will be called with GFP_NOWAIT.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#mem_cgroup_cache_charge\">mem_cgroup_cache_charge</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#radix_tree_preload\">radix_tree_preload</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mem_cgroup_uncharge_cache_page\">mem_cgroup_uncharge_cache_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#shmem_swp_entry\">shmem_swp_entry</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#idx\">idx</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a> && <a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#val\">val</a> == <a class=\"id\" href=\"#entry\">entry</a>.<a class=\"id\" href=\"#val\">val</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#add_to_page_cache_locked\">add_to_page_cache_locked</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a>, <a class=\"id\" href=\"#GFP_NOWAIT\">GFP_NOWAIT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* does mem_cgroup_uncharge_cache_page on error */</span>", 
"<span class=\"ts\"/>} else<span class=\"ts\"/><span class=\"comment\">/* we must compensate for our precharge above */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mem_cgroup_uncharge_cache_page\">mem_cgroup_uncharge_cache_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> == -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#filepage\">filepage</a> = <a class=\"id\" href=\"#find_get_page\">find_get_page</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>, <a class=\"id\" href=\"#idx\">idx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#filepage\">filepage</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * There might be a more uptodate page coming down</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * from a stacked writepage: forget our swappage if so.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#PageUptodate\">PageUptodate</a>(<a class=\"id\" href=\"#filepage\">filepage</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#filepage\">filepage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delete_from_swap_cache\">delete_from_swap_cache</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_page_dirty\">set_page_dirty</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#SHMEM_PAGEIN\">SHMEM_PAGEIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_set\">shmem_swp_set</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#ptr\">ptr</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swap_free\">swap_free</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 1;<span class=\"ts\"/><span class=\"comment\">/* not an error, but entry was found */</span>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_unmap\">shmem_swp_unmap</a>(<a class=\"id\" href=\"#ptr\">ptr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#radix_tree_preload_end\">radix_tree_preload_end</a>();", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* allows for NULL */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * shmem_unuse() search for an eventually swapped out shmem page.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#shmem_unuse\">shmem_unuse</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> <a class=\"id\" href=\"#entry\">entry</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#p\">p</a>, *<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *<a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#found\">found</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#shmem_swaplist_mutex\">shmem_swaplist_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_safe\">list_for_each_safe</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#next\">next</a>, &amp;<a class=\"id\" href=\"#shmem_swaplist\">shmem_swaplist</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#p\">p</a>, struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a>, <a class=\"id\" href=\"#swaplist\">swaplist</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#shmem_unuse_inode\">shmem_unuse_inode</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#found\">found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#shmem_swaplist_mutex\">shmem_swaplist_mutex</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Can some race bring us here?  We've been holding page lock,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so I think not; but would rather try again later than BUG()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#found\">found</a> &lt; 0) ? <a class=\"id\" href=\"#found\">found</a> : 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Move the page from the page cache to the swap cache.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#shmem_writepage\">shmem_writepage</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, struct <a class=\"id\" href=\"#writeback_control\">writeback_control</a> *<a class=\"id\" href=\"#wbc\">wbc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *<a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> *<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#swap\">swap</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#PageLocked\">PageLocked</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#mapping\">mapping</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#host\">host</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#SHMEM_I\">SHMEM_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#VM_LOCKED\">VM_LOCKED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#redirty\">redirty</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#total_swap_pages\">total_swap_pages</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#redirty\">redirty</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * shmem_backing_dev_info's capabilities prevent regular writeback or</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * sync from ever calling shmem_writepage; but a stacking filesystem</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * may use the -&gt;writepage of its underlying filesystem, in which case</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * tmpfs should write out to swap only in response to memory pressure,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and not for the writeback threads or sync.  However, in those cases,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we do still want to check if there's a redundant swappage to be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * discarded.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#wbc\">wbc</a>-><a class=\"id\" href=\"#for_reclaim\">for_reclaim</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swap\">swap</a> = <a class=\"id\" href=\"#get_swap_page\">get_swap_page</a>();", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#val\">val</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#index\">index</a> >= <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#next_index\">next_index</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SHMEM_TRUNCATE\">SHMEM_TRUNCATE</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock\">unlock</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#shmem_swp_entry\">shmem_swp_entry</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#val\">val</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The more uptodate page coming down from a stacked</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * writepage should replace our old swappage.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_swap_and_cache\">free_swap_and_cache</a>(*<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_set\">shmem_swp_set</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#entry\">entry</a>, 0);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shmem_recalc_inode\">shmem_recalc_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#val\">val</a> && <a class=\"id\" href=\"#add_to_swap_cache\">add_to_swap_cache</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#swap\">swap</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remove_from_page_cache\">remove_from_page_cache</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_set\">shmem_swp_set</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_unmap\">shmem_swp_unmap</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#swaplist\">swaplist</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#igrab\">igrab</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swap_shmem_alloc\">swap_shmem_alloc</a>(<a class=\"id\" href=\"#swap\">swap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#page_mapped\">page_mapped</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#page\">page</a>);<span class=\"ts\"/><span class=\"comment\">/* pagecache ref */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swap_writepage\">swap_writepage</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#wbc\">wbc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#shmem_swaplist_mutex\">shmem_swaplist_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* move instead of add in case we're racing */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_move_tail\">list_move_tail</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#swaplist\">swaplist</a>, &amp;<a class=\"id\" href=\"#shmem_swaplist\">shmem_swaplist</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#shmem_swaplist_mutex\">shmem_swaplist_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_unmap\">shmem_swp_unmap</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<a class=\"id\" href=\"#unlock\">unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * add_to_swap_cache() doesn't return -EEXIST, so we can safely</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * clear SWAP_HAS_CACHE flag.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swapcache_free\">swapcache_free</a>(<a class=\"id\" href=\"#swap\">swap</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<a class=\"id\" href=\"#redirty\">redirty</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_page_dirty\">set_page_dirty</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#wbc\">wbc</a>-><a class=\"id\" href=\"#for_reclaim\">for_reclaim</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AOP_WRITEPAGE_ACTIVATE\">AOP_WRITEPAGE_ACTIVATE</a>;<span class=\"ts\"/><span class=\"comment\">/* Return with page locked */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NUMA\">CONFIG_NUMA</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TMPFS\">CONFIG_TMPFS</a>", 
"static void <a class=\"id\" href=\"#shmem_show_mpol\">shmem_show_mpol</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, struct <a class=\"id\" href=\"#mempolicy\">mempolicy</a> *<a class=\"id\" href=\"#mpol\">mpol</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buffer\">buffer</a>[64];", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mpol\">mpol</a> || <a class=\"id\" href=\"#mpol\">mpol</a>-><a class=\"id\" href=\"#mode\">mode</a> == <a class=\"id\" href=\"#MPOL_DEFAULT\">MPOL_DEFAULT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* show nothing */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mpol_to_str\">mpol_to_str</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>), <a class=\"id\" href=\"#mpol\">mpol</a>, 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",mpol=%s\", <a class=\"id\" href=\"#buffer\">buffer</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#mempolicy\">mempolicy</a> *<a class=\"id\" href=\"#shmem_get_sbmpol\">shmem_get_sbmpol</a>(struct <a class=\"id\" href=\"#shmem_sb_info\">shmem_sb_info</a> *<a class=\"id\" href=\"#sbinfo\">sbinfo</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mempolicy\">mempolicy</a> *<a class=\"id\" href=\"#mpol\">mpol</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#mpol\">mpol</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#stat_lock\">stat_lock</a>);<span class=\"ts\"/><span class=\"comment\">/* prevent replace/use races */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpol\">mpol</a> = <a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#mpol\">mpol</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpol_get\">mpol_get</a>(<a class=\"id\" href=\"#mpol\">mpol</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#stat_lock\">stat_lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mpol\">mpol</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_TMPFS */</span>", 
"", 
"static struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#shmem_swapin\">shmem_swapin</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> <a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *<a class=\"id\" href=\"#info\">info</a>, unsigned long <a class=\"id\" href=\"#idx\">idx</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mempolicy\">mempolicy</a> <a class=\"id\" href=\"#mpol\">mpol</a>, *<a class=\"id\" href=\"#spol\">spol</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> <a class=\"id\" href=\"#pvma\">pvma</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spol\">spol</a> = <a class=\"id\" href=\"#mpol_cond_copy\">mpol_cond_copy</a>(&amp;<a class=\"id\" href=\"#mpol\">mpol</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpol_shared_policy_lookup\">mpol_shared_policy_lookup</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#idx\">idx</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Create a pseudo vma that just contains the policy */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pvma\">pvma</a>.<a class=\"id\" href=\"#vm_start\">vm_start</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pvma\">pvma</a>.<a class=\"id\" href=\"#vm_pgoff\">vm_pgoff</a> = <a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pvma\">pvma</a>.<a class=\"id\" href=\"#vm_ops\">vm_ops</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pvma\">pvma</a>.<a class=\"id\" href=\"#vm_policy\">vm_policy</a> = <a class=\"id\" href=\"#spol\">spol</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#swapin_readahead\">swapin_readahead</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#gfp\">gfp</a>, &amp;<a class=\"id\" href=\"#pvma\">pvma</a>, 0);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#page\">page</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#shmem_alloc_page\">shmem_alloc_page</a>(<a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *<a class=\"id\" href=\"#info\">info</a>, unsigned long <a class=\"id\" href=\"#idx\">idx</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> <a class=\"id\" href=\"#pvma\">pvma</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Create a pseudo vma that just contains the policy */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pvma\">pvma</a>.<a class=\"id\" href=\"#vm_start\">vm_start</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pvma\">pvma</a>.<a class=\"id\" href=\"#vm_pgoff\">vm_pgoff</a> = <a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pvma\">pvma</a>.<a class=\"id\" href=\"#vm_ops\">vm_ops</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pvma\">pvma</a>.<a class=\"id\" href=\"#vm_policy\">vm_policy</a> = <a class=\"id\" href=\"#mpol_shared_policy_lookup\">mpol_shared_policy_lookup</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#idx\">idx</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * alloc_page_vma() will drop the shared policy reference</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#alloc_page_vma\">alloc_page_vma</a>(<a class=\"id\" href=\"#gfp\">gfp</a>, &amp;<a class=\"id\" href=\"#pvma\">pvma</a>, 0);", 
"}", 
"#else <span class=\"comment\">/* !CONFIG_NUMA */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TMPFS\">CONFIG_TMPFS</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#shmem_show_mpol\">shmem_show_mpol</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, struct <a class=\"id\" href=\"#mempolicy\">mempolicy</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_TMPFS */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#shmem_swapin\">shmem_swapin</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> <a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *<a class=\"id\" href=\"#info\">info</a>, unsigned long <a class=\"id\" href=\"#idx\">idx</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#swapin_readahead\">swapin_readahead</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#gfp\">gfp</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#shmem_alloc_page\">shmem_alloc_page</a>(<a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *<a class=\"id\" href=\"#info\">info</a>, unsigned long <a class=\"id\" href=\"#idx\">idx</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#alloc_page\">alloc_page</a>(<a class=\"id\" href=\"#gfp\">gfp</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_NUMA */</span>", 
"", 
"#if !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NUMA\">CONFIG_NUMA</a>) || !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_TMPFS\">CONFIG_TMPFS</a>)", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#mempolicy\">mempolicy</a> *<a class=\"id\" href=\"#shmem_get_sbmpol\">shmem_get_sbmpol</a>(struct <a class=\"id\" href=\"#shmem_sb_info\">shmem_sb_info</a> *<a class=\"id\" href=\"#sbinfo\">sbinfo</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * shmem_getpage - either get the page from swap or allocate a new one</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If we allocate a new one we do not mark it dirty. That's up to the</span>", 
"<span class=\"comment\"> * vm. If we swap it in we mark it dirty since we also free the swap</span>", 
"<span class=\"comment\"> * entry since a page cannot live in both the swap and page cache</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#shmem_getpage\">shmem_getpage</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, unsigned long <a class=\"id\" href=\"#idx\">idx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#pagep\">pagep</a>, enum <a class=\"id\" href=\"#sgp_type\">sgp_type</a> <a class=\"id\" href=\"#sgp\">sgp</a>, int *<a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#SHMEM_I\">SHMEM_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_sb_info\">shmem_sb_info</a> *<a class=\"id\" href=\"#sbinfo\">sbinfo</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#filepage\">filepage</a> = *<a class=\"id\" href=\"#pagep\">pagep</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#swappage\">swappage</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#prealloc_page\">prealloc_page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> <a class=\"id\" href=\"#swap\">swap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idx\">idx</a> >= <a class=\"id\" href=\"#SHMEM_MAX_INDEX\">SHMEM_MAX_INDEX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFBIG\">EFBIG</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#type\">type</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Normally, filepage is NULL on entry, and either found</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * uptodate immediately, or allocated and zeroed, or read</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in under swappage, which is then assigned to filepage.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * But shmem_readpage (required for splice) passes in a locked</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * filepage, which may be found not uptodate by other callers</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * too, and may need to be copied from the swappage read in.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<a class=\"id\" href=\"#repeat\">repeat</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#filepage\">filepage</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filepage\">filepage</a> = <a class=\"id\" href=\"#find_lock_page\">find_lock_page</a>(<a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#idx\">idx</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#filepage\">filepage</a> && <a class=\"id\" href=\"#PageUptodate\">PageUptodate</a>(<a class=\"id\" href=\"#filepage\">filepage</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gfp\">gfp</a> = <a class=\"id\" href=\"#mapping_gfp_mask\">mapping_gfp_mask</a>(<a class=\"id\" href=\"#mapping\">mapping</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#filepage\">filepage</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Try to preload while we can wait, to not make a habit of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * draining atomic reserves; but don't latch on to this cpu.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#radix_tree_preload\">radix_tree_preload</a>(<a class=\"id\" href=\"#gfp\">gfp</a> &amp; ~<a class=\"id\" href=\"#__GFP_HIGHMEM\">__GFP_HIGHMEM</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed\">failed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#radix_tree_preload_end\">radix_tree_preload_end</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sgp\">sgp</a> != <a class=\"id\" href=\"#SGP_READ\">SGP_READ</a> && !<a class=\"id\" href=\"#prealloc_page\">prealloc_page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We don't care if this fails */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prealloc_page\">prealloc_page</a> = <a class=\"id\" href=\"#shmem_alloc_page\">shmem_alloc_page</a>(<a class=\"id\" href=\"#gfp\">gfp</a>, <a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#idx\">idx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#prealloc_page\">prealloc_page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mem_cgroup_cache_charge\">mem_cgroup_cache_charge</a>(<a class=\"id\" href=\"#prealloc_page\">prealloc_page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#prealloc_page\">prealloc_page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prealloc_page\">prealloc_page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shmem_recalc_inode\">shmem_recalc_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#shmem_swp_alloc\">shmem_swp_alloc</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#idx\">idx</a>, <a class=\"id\" href=\"#sgp\">sgp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#entry\">entry</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed\">failed</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swap\">swap</a> = *<a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#val\">val</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Look it up and read it in.. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swappage\">swappage</a> = <a class=\"id\" href=\"#lookup_swap_cache\">lookup_swap_cache</a>(<a class=\"id\" href=\"#swap\">swap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#swappage\">swappage</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_unmap\">shmem_swp_unmap</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* here we actually do the io */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> && !(*<a class=\"id\" href=\"#type\">type</a> &amp; <a class=\"id\" href=\"#VM_FAULT_MAJOR\">VM_FAULT_MAJOR</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__count_vm_event\">__count_vm_event</a>(<a class=\"id\" href=\"#PGMAJFAULT\">PGMAJFAULT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#type\">type</a> |= <a class=\"id\" href=\"#VM_FAULT_MAJOR\">VM_FAULT_MAJOR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swappage\">swappage</a> = <a class=\"id\" href=\"#shmem_swapin\">shmem_swapin</a>(<a class=\"id\" href=\"#swap\">swap</a>, <a class=\"id\" href=\"#gfp\">gfp</a>, <a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#idx\">idx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#swappage\">swappage</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#shmem_swp_alloc\">shmem_swp_alloc</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#idx\">idx</a>, <a class=\"id\" href=\"#sgp\">sgp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#entry\">entry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#val\">val</a> == <a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#val\">val</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_unmap\">shmem_swp_unmap</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed\">failed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#repeat\">repeat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_on_page_locked\">wait_on_page_locked</a>(<a class=\"id\" href=\"#swappage\">swappage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#swappage\">swappage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#repeat\">repeat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We have to do this with page locked to prevent races */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#trylock_page\">trylock_page</a>(<a class=\"id\" href=\"#swappage\">swappage</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_unmap\">shmem_swp_unmap</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_on_page_locked\">wait_on_page_locked</a>(<a class=\"id\" href=\"#swappage\">swappage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#swappage\">swappage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#repeat\">repeat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#PageWriteback\">PageWriteback</a>(<a class=\"id\" href=\"#swappage\">swappage</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_unmap\">shmem_swp_unmap</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_on_page_writeback\">wait_on_page_writeback</a>(<a class=\"id\" href=\"#swappage\">swappage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#swappage\">swappage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#swappage\">swappage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#repeat\">repeat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#PageUptodate\">PageUptodate</a>(<a class=\"id\" href=\"#swappage\">swappage</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_unmap\">shmem_swp_unmap</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#swappage\">swappage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#swappage\">swappage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed\">failed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#filepage\">filepage</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_set\">shmem_swp_set</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#entry\">entry</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_unmap\">shmem_swp_unmap</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delete_from_swap_cache\">delete_from_swap_cache</a>(<a class=\"id\" href=\"#swappage\">swappage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy_highpage\">copy_highpage</a>(<a class=\"id\" href=\"#filepage\">filepage</a>, <a class=\"id\" href=\"#swappage\">swappage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#swappage\">swappage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#swappage\">swappage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_dcache_page\">flush_dcache_page</a>(<a class=\"id\" href=\"#filepage\">filepage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SetPageUptodate\">SetPageUptodate</a>(<a class=\"id\" href=\"#filepage\">filepage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_page_dirty\">set_page_dirty</a>(<a class=\"id\" href=\"#filepage\">filepage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swap_free\">swap_free</a>(<a class=\"id\" href=\"#swap\">swap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (!(<a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#add_to_page_cache_locked\">add_to_page_cache_locked</a>(<a class=\"id\" href=\"#swappage\">swappage</a>, <a class=\"id\" href=\"#mapping\">mapping</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a>, <a class=\"id\" href=\"#GFP_NOWAIT\">GFP_NOWAIT</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#SHMEM_PAGEIN\">SHMEM_PAGEIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_set\">shmem_swp_set</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#entry\">entry</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_unmap\">shmem_swp_unmap</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delete_from_swap_cache\">delete_from_swap_cache</a>(<a class=\"id\" href=\"#swappage\">swappage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filepage\">filepage</a> = <a class=\"id\" href=\"#swappage\">swappage</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_page_dirty\">set_page_dirty</a>(<a class=\"id\" href=\"#filepage\">filepage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swap_free\">swap_free</a>(<a class=\"id\" href=\"#swap\">swap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_unmap\">shmem_swp_unmap</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> == -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * reclaim from proper memory cgroup and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * call memcg's OOM if needed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#mem_cgroup_shmem_charge_fallback\">mem_cgroup_shmem_charge_fallback</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swappage\">swappage</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gfp\">gfp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#swappage\">swappage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#swappage\">swappage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed\">failed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#swappage\">swappage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#swappage\">swappage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#repeat\">repeat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#sgp\">sgp</a> == <a class=\"id\" href=\"#SGP_READ\">SGP_READ</a> && !<a class=\"id\" href=\"#filepage\">filepage</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_unmap\">shmem_swp_unmap</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filepage\">filepage</a> = <a class=\"id\" href=\"#find_get_page\">find_get_page</a>(<a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#idx\">idx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#filepage\">filepage</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (!<a class=\"id\" href=\"#PageUptodate\">PageUptodate</a>(<a class=\"id\" href=\"#filepage\">filepage</a>) || !<a class=\"id\" href=\"#trylock_page\">trylock_page</a>(<a class=\"id\" href=\"#filepage\">filepage</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_on_page_locked\">wait_on_page_locked</a>(<a class=\"id\" href=\"#filepage\">filepage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#filepage\">filepage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filepage\">filepage</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#repeat\">repeat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_unmap\">shmem_swp_unmap</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbinfo\">sbinfo</a> = <a class=\"id\" href=\"#SHMEM_SB\">SHMEM_SB</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_blocks\">max_blocks</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#percpu_counter_compare\">percpu_counter_compare</a>(&amp;<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#used_blocks\">used_blocks</a>, <a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_blocks\">max_blocks</a>) &gt; 0) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#shmem_acct_block\">shmem_acct_block</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed\">failed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_inc\">percpu_counter_inc</a>(&amp;<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#used_blocks\">used_blocks</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_lock\">i_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blocks\">i_blocks</a> += <a class=\"id\" href=\"#BLOCKS_PER_PAGE\">BLOCKS_PER_PAGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_lock\">i_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#shmem_acct_block\">shmem_acct_block</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed\">failed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#filepage\">filepage</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#prealloc_page\">prealloc_page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filepage\">filepage</a> = <a class=\"id\" href=\"#shmem_alloc_page\">shmem_alloc_page</a>(<a class=\"id\" href=\"#gfp\">gfp</a>, <a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#idx\">idx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#filepage\">filepage</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_unacct_blocks\">shmem_unacct_blocks</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_free_blocks\">shmem_free_blocks</a>(<a class=\"id\" href=\"#inode\">inode</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed\">failed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SetPageSwapBacked\">SetPageSwapBacked</a>(<a class=\"id\" href=\"#filepage\">filepage</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Precharge page while we can wait, compensate</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * after</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#mem_cgroup_cache_charge\">mem_cgroup_cache_charge</a>(<a class=\"id\" href=\"#filepage\">filepage</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#filepage\">filepage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_unacct_blocks\">shmem_unacct_blocks</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_free_blocks\">shmem_free_blocks</a>(<a class=\"id\" href=\"#inode\">inode</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filepage\">filepage</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed\">failed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filepage\">filepage</a> = <a class=\"id\" href=\"#prealloc_page\">prealloc_page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prealloc_page\">prealloc_page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SetPageSwapBacked\">SetPageSwapBacked</a>(<a class=\"id\" href=\"#filepage\">filepage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#shmem_swp_alloc\">shmem_swp_alloc</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#idx\">idx</a>, <a class=\"id\" href=\"#sgp\">sgp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#entry\">entry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swap\">swap</a> = *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_unmap\">shmem_swp_unmap</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#error\">error</a> || <a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mem_cgroup_uncharge_cache_page\">mem_cgroup_uncharge_cache_page</a>(<a class=\"id\" href=\"#filepage\">filepage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#add_to_page_cache_lru\">add_to_page_cache_lru</a>(<a class=\"id\" href=\"#filepage\">filepage</a>, <a class=\"id\" href=\"#mapping\">mapping</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a>, <a class=\"id\" href=\"#GFP_NOWAIT\">GFP_NOWAIT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * At add_to_page_cache_lru() failure, uncharge will</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * be done automatically.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#filepage\">filepage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_unacct_blocks\">shmem_unacct_blocks</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_free_blocks\">shmem_free_blocks</a>(<a class=\"id\" href=\"#inode\">inode</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filepage\">filepage</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed\">failed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#repeat\">repeat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#SHMEM_PAGEIN\">SHMEM_PAGEIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#alloced\">alloced</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_highpage\">clear_highpage</a>(<a class=\"id\" href=\"#filepage\">filepage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_dcache_page\">flush_dcache_page</a>(<a class=\"id\" href=\"#filepage\">filepage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SetPageUptodate\">SetPageUptodate</a>(<a class=\"id\" href=\"#filepage\">filepage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sgp\">sgp</a> == <a class=\"id\" href=\"#SGP_DIRTY\">SGP_DIRTY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_page_dirty\">set_page_dirty</a>(<a class=\"id\" href=\"#filepage\">filepage</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#pagep\">pagep</a> = <a class=\"id\" href=\"#filepage\">filepage</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<a class=\"id\" href=\"#failed\">failed</a>:", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#pagep\">pagep</a> != <a class=\"id\" href=\"#filepage\">filepage</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#filepage\">filepage</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#filepage\">filepage</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#prealloc_page\">prealloc_page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mem_cgroup_uncharge_cache_page\">mem_cgroup_uncharge_cache_page</a>(<a class=\"id\" href=\"#prealloc_page\">prealloc_page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#prealloc_page\">prealloc_page</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shmem_fault\">shmem_fault</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>, struct <a class=\"id\" href=\"#vm_fault\">vm_fault</a> *<a class=\"id\" href=\"#vmf\">vmf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (((<a class=\"id\" href=\"#loff_t\">loff_t</a>)<a class=\"id\" href=\"#vmf\">vmf</a>-><a class=\"id\" href=\"#pgoff\">pgoff</a> << <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>) >= <a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#VM_FAULT_SIGBUS\">VM_FAULT_SIGBUS</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#shmem_getpage\">shmem_getpage</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#vmf\">vmf</a>-><a class=\"id\" href=\"#pgoff\">pgoff</a>, &amp;<a class=\"id\" href=\"#vmf\">vmf</a>-><a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#SGP_CACHE\">SGP_CACHE</a>, &amp;<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return ((<a class=\"id\" href=\"#error\">error</a> == -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>) ? <a class=\"id\" href=\"#VM_FAULT_OOM\">VM_FAULT_OOM</a> : <a class=\"id\" href=\"#VM_FAULT_SIGBUS\">VM_FAULT_SIGBUS</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a> | <a class=\"id\" href=\"#VM_FAULT_LOCKED\">VM_FAULT_LOCKED</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NUMA\">CONFIG_NUMA</a>", 
"static int <a class=\"id\" href=\"#shmem_set_policy\">shmem_set_policy</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>, struct <a class=\"id\" href=\"#mempolicy\">mempolicy</a> *<a class=\"id\" href=\"#new\">new</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mpol_set_shared_policy\">mpol_set_shared_policy</a>(&amp;<a class=\"id\" href=\"#SHMEM_I\">SHMEM_I</a>(<a class=\"id\" href=\"#i\">i</a>)-><a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#new\">new</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#mempolicy\">mempolicy</a> *<a class=\"id\" href=\"#shmem_get_policy\">shmem_get_policy</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#idx\">idx</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> = ((<a class=\"id\" href=\"#addr\">addr</a> - <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>) + <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_pgoff\">vm_pgoff</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mpol_shared_policy_lookup\">mpol_shared_policy_lookup</a>(&amp;<a class=\"id\" href=\"#SHMEM_I\">SHMEM_I</a>(<a class=\"id\" href=\"#i\">i</a>)-><a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#idx\">idx</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"int <a class=\"id\" href=\"#shmem_lock\">shmem_lock</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, int <a class=\"id\" href=\"#lock\">lock</a>, struct <a class=\"id\" href=\"#user_struct\">user_struct</a> *<a class=\"id\" href=\"#user\">user</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#SHMEM_I\">SHMEM_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lock\">lock</a> && !(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#VM_LOCKED\">VM_LOCKED</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#user_shm_lock\">user_shm_lock</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>, <a class=\"id\" href=\"#user\">user</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_nomem\">out_nomem</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#VM_LOCKED\">VM_LOCKED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mapping_set_unevictable\">mapping_set_unevictable</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#lock\">lock</a> && (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#VM_LOCKED\">VM_LOCKED</a>) && <a class=\"id\" href=\"#user\">user</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#user_shm_unlock\">user_shm_unlock</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>, <a class=\"id\" href=\"#user\">user</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#VM_LOCKED\">VM_LOCKED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mapping_clear_unevictable\">mapping_clear_unevictable</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scan_mapping_unevictable_pages\">scan_mapping_unevictable_pages</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"", 
"<a class=\"id\" href=\"#out_nomem\">out_nomem</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shmem_mmap\">shmem_mmap</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file_accessed\">file_accessed</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_ops\">vm_ops</a> = &amp;<a class=\"id\" href=\"#shmem_vm_ops\">shmem_vm_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> |= <a class=\"id\" href=\"#VM_CAN_NONLINEAR\">VM_CAN_NONLINEAR</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#shmem_get_inode\">shmem_get_inode</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#dev\">dev</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *<a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_sb_info\">shmem_sb_info</a> *<a class=\"id\" href=\"#sbinfo\">sbinfo</a> = <a class=\"id\" href=\"#SHMEM_SB\">SHMEM_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#shmem_reserve_inode\">shmem_reserve_inode</a>(<a class=\"id\" href=\"#sb\">sb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#new_inode\">new_inode</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode_init_owner\">inode_init_owner</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blocks\">i_blocks</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>-><a class=\"id\" href=\"#backing_dev_info\">backing_dev_info</a> = &amp;<a class=\"id\" href=\"#shmem_backing_dev_info\">shmem_backing_dev_info</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_atime\">i_atime</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#CURRENT_TIME\">CURRENT_TIME</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_generation\">i_generation</a> = <a class=\"id\" href=\"#get_seconds\">get_seconds</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#SHMEM_I\">SHMEM_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#info\">info</a>, 0, (char *)<a class=\"id\" href=\"#inode\">inode</a> - (char *)<a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#VM_NORESERVE\">VM_NORESERVE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#swaplist\">swaplist</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cache_no_acl\">cache_no_acl</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#S_IFMT\">S_IFMT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a> = &amp;<a class=\"id\" href=\"#shmem_special_inode_operations\">shmem_special_inode_operations</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_special_inode\">init_special_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#S_IFREG\">S_IFREG</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>-><a class=\"id\" href=\"#a_ops\">a_ops</a> = &amp;<a class=\"id\" href=\"#shmem_aops\">shmem_aops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a> = &amp;<a class=\"id\" href=\"#shmem_inode_operations\">shmem_inode_operations</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_fop\">i_fop</a> = &amp;<a class=\"id\" href=\"#shmem_file_operations\">shmem_file_operations</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpol_shared_policy_init\">mpol_shared_policy_init</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#shmem_get_sbmpol\">shmem_get_sbmpol</a>(<a class=\"id\" href=\"#sbinfo\">sbinfo</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#S_IFDIR\">S_IFDIR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inc_nlink\">inc_nlink</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Some things misbehave if size == 0 on a directory */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> = 2 * <a class=\"id\" href=\"#BOGO_DIRENT_SIZE\">BOGO_DIRENT_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a> = &amp;<a class=\"id\" href=\"#shmem_dir_inode_operations\">shmem_dir_inode_operations</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_fop\">i_fop</a> = &amp;<a class=\"id\" href=\"#simple_dir_operations\">simple_dir_operations</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#S_IFLNK\">S_IFLNK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Must not load anything in the rbtree,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * mpol_free_shared_policy will not be called.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpol_shared_policy_init\">mpol_shared_policy_init</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_free_inode\">shmem_free_inode</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#inode\">inode</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TMPFS\">CONFIG_TMPFS</a>", 
"static const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#shmem_symlink_inode_operations\">shmem_symlink_inode_operations</a>;", 
"static const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#shmem_symlink_inline_operations\">shmem_symlink_inline_operations</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Normally tmpfs avoids the use of shmem_readpage and shmem_write_begin;</span>", 
"<span class=\"comment\"> * but providing them allows a tmpfs file to be used for splice, sendfile, and</span>", 
"<span class=\"comment\"> * below the loop driver, in the generic fashion that many filesystems support.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#shmem_readpage\">shmem_readpage</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#host\">host</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#shmem_getpage\">shmem_getpage</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#index\">index</a>, &amp;<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#SGP_CACHE\">SGP_CACHE</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#shmem_write_begin\">shmem_write_begin</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>, unsigned <a class=\"id\" href=\"#len\">len</a>, unsigned <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#pagep\">pagep</a>, void **<a class=\"id\" href=\"#fsdata\">fsdata</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#host\">host</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#pos\">pos</a> >> <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#pagep\">pagep</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#shmem_getpage\">shmem_getpage</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#pagep\">pagep</a>, <a class=\"id\" href=\"#SGP_WRITE\">SGP_WRITE</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#shmem_write_end\">shmem_write_end</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>, unsigned <a class=\"id\" href=\"#len\">len</a>, unsigned <a class=\"id\" href=\"#copied\">copied</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, void *<a class=\"id\" href=\"#fsdata\">fsdata</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#host\">host</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#copied\">copied</a> &gt; <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i_size_write\">i_size_write</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#copied\">copied</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_page_dirty\">set_page_dirty</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#copied\">copied</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#do_shmem_file_read\">do_shmem_file_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#read_descriptor_t\">read_descriptor_t</a> *<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#read_actor_t\">read_actor_t</a> <a class=\"id\" href=\"#actor\">actor</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#sgp_type\">sgp_type</a> <a class=\"id\" href=\"#sgp\">sgp</a> = <a class=\"id\" href=\"#SGP_READ\">SGP_READ</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Might this read be for a stacking filesystem?  Then when reading</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * holes of a sparse file, we actually need to allocate those pages,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and even mark them dirty, so it cannot exceed the max_blocks limit.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#segment_eq\">segment_eq</a>(<a class=\"id\" href=\"#get_fs\">get_fs</a>(), <a class=\"id\" href=\"#KERNEL_DS\">KERNEL_DS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sgp\">sgp</a> = <a class=\"id\" href=\"#SGP_DIRTY\">SGP_DIRTY</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = *<a class=\"id\" href=\"#ppos\">ppos</a> >> <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = *<a class=\"id\" href=\"#ppos\">ppos</a> &amp; ~<a class=\"id\" href=\"#PAGE_CACHE_MASK\">PAGE_CACHE_MASK</a>;", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end_index\">end_index</a>, <a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#i_size\">i_size</a> = <a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_index\">end_index</a> = <a class=\"id\" href=\"#i_size\">i_size</a> >> <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#index\">index</a> &gt; <a class=\"id\" href=\"#end_index\">end_index</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#index\">index</a> == <a class=\"id\" href=\"#end_index\">end_index</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> = <a class=\"id\" href=\"#i_size\">i_size</a> &amp; ~<a class=\"id\" href=\"#PAGE_CACHE_MASK\">PAGE_CACHE_MASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nr\">nr</a> <= <a class=\"id\" href=\"#offset\">offset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#shmem_getpage\">shmem_getpage</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#index\">index</a>, &amp;<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#sgp\">sgp</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#error\">error</a> == -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We must evaluate after, since reads (unlike writes)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * are called without i_mutex protection against truncate</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> = <a class=\"id\" href=\"#PAGE_CACHE_SIZE\">PAGE_CACHE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i_size\">i_size</a> = <a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_index\">end_index</a> = <a class=\"id\" href=\"#i_size\">i_size</a> >> <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#index\">index</a> == <a class=\"id\" href=\"#end_index\">end_index</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> = <a class=\"id\" href=\"#i_size\">i_size</a> &amp; ~<a class=\"id\" href=\"#PAGE_CACHE_MASK\">PAGE_CACHE_MASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nr\">nr</a> <= <a class=\"id\" href=\"#offset\">offset</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> -= <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If users can be writing to this page using arbitrary</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * virtual addresses, take care about potential aliasing</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * before reading the page on the kernel side.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mapping_writably_mapped\">mapping_writably_mapped</a>(<a class=\"id\" href=\"#mapping\">mapping</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_dcache_page\">flush_dcache_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Mark the page accessed if we read the beginning.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#offset\">offset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_page_accessed\">mark_page_accessed</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#ZERO_PAGE\">ZERO_PAGE</a>(0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_get\">page_cache_get</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Ok, we have the page, and it's up-to-date, so</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * now we can copy it to user space...</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The actor routine returns how many bytes were actually used..</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * NOTE! This may not be the same as how much of a user buffer</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we filled up (we may be padding etc), so we can only update</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * \"pos\" here (the actor routine has to update the user buffer</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * pointers and the remaining count).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#actor\">actor</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#nr\">nr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> += <a class=\"id\" href=\"#offset\">offset</a> >> <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> &= ~<a class=\"id\" href=\"#PAGE_CACHE_MASK\">PAGE_CACHE_MASK</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != <a class=\"id\" href=\"#nr\">nr</a> || !<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ppos\">ppos</a> = ((<a class=\"id\" href=\"#loff_t\">loff_t</a>) <a class=\"id\" href=\"#index\">index</a> << <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>) + <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file_accessed\">file_accessed</a>(<a class=\"id\" href=\"#filp\">filp</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#shmem_file_aio_read\">shmem_file_aio_read</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iov\">iov</a>, unsigned long <a class=\"id\" href=\"#nr_segs\">nr_segs</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a> = <a class=\"id\" href=\"#iocb\">iocb</a>-><a class=\"id\" href=\"#ki_filp\">ki_filp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#seg\">seg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a> = &amp;<a class=\"id\" href=\"#iocb\">iocb</a>-><a class=\"id\" href=\"#ki_pos\">ki_pos</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#generic_segment_checks\">generic_segment_checks</a>(<a class=\"id\" href=\"#iov\">iov</a>, &amp;<a class=\"id\" href=\"#nr_segs\">nr_segs</a>, &amp;<a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#VERIFY_WRITE\">VERIFY_WRITE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#seg\">seg</a> = 0; <a class=\"id\" href=\"#seg\">seg</a> &lt; <a class=\"id\" href=\"#nr_segs\">nr_segs</a>; <a class=\"id\" href=\"#seg\">seg</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_descriptor_t\">read_descriptor_t</a> <a class=\"id\" href=\"#desc\">desc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>.<a class=\"id\" href=\"#written\">written</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>.<a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#seg\">seg</a>].<a class=\"id\" href=\"#iov_base\">iov_base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>.<a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#seg\">seg</a>].<a class=\"id\" href=\"#iov_len\">iov_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>.<a class=\"id\" href=\"#count\">count</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>.<a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_shmem_file_read\">do_shmem_file_read</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#ppos\">ppos</a>, &amp;<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#file_read_actor\">file_read_actor</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> += <a class=\"id\" href=\"#desc\">desc</a>.<a class=\"id\" href=\"#written\">written</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>.<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#retval\">retval</a> ?: <a class=\"id\" href=\"#desc\">desc</a>.<a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>.<a class=\"id\" href=\"#count\">count</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shmem_statfs\">shmem_statfs</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#kstatfs\">kstatfs</a> *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_sb_info\">shmem_sb_info</a> *<a class=\"id\" href=\"#sbinfo\">sbinfo</a> = <a class=\"id\" href=\"#SHMEM_SB\">SHMEM_SB</a>(<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_sb\">d_sb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_type\">f_type</a> = <a class=\"id\" href=\"#TMPFS_MAGIC\">TMPFS_MAGIC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_bsize\">f_bsize</a> = <a class=\"id\" href=\"#PAGE_CACHE_SIZE\">PAGE_CACHE_SIZE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_namelen\">f_namelen</a> = <a class=\"id\" href=\"#NAME_MAX\">NAME_MAX</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_blocks\">max_blocks</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_blocks\">f_blocks</a> = <a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_blocks\">max_blocks</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_bavail\">f_bavail</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_bfree\">f_bfree</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_blocks\">max_blocks</a> - <a class=\"id\" href=\"#percpu_counter_sum\">percpu_counter_sum</a>(&amp;<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#used_blocks\">used_blocks</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_inodes\">max_inodes</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_files\">f_files</a> = <a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_inodes\">max_inodes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_ffree\">f_ffree</a> = <a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#free_inodes\">free_inodes</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* else leave those fields 0 like simple_statfs */</span>", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * File creation. Allocate an inode, and we're done..</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#shmem_mknod\">shmem_mknod</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, int <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#shmem_get_inode\">shmem_get_inode</a>(<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#VM_NORESERVE\">VM_NORESERVE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_inode_init_security\">security_inode_init_security</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> != -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TMPFS_POSIX_ACL\">CONFIG_TMPFS_POSIX_ACL</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#generic_acl_init\">generic_acl_init</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_size\">i_size</a> += <a class=\"id\" href=\"#BOGO_DIRENT_SIZE\">BOGO_DIRENT_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> = <a class=\"id\" href=\"#CURRENT_TIME\">CURRENT_TIME</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d_instantiate\">d_instantiate</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dget\">dget</a>(<a class=\"id\" href=\"#dentry\">dentry</a>); <span class=\"comment\">/* Extra count - pin the dentry in core */</span>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shmem_mkdir\">shmem_mkdir</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, int <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#shmem_mknod\">shmem_mknod</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#mode\">mode</a> | <a class=\"id\" href=\"#S_IFDIR\">S_IFDIR</a>, 0)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inc_nlink\">inc_nlink</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shmem_create\">shmem_create</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, int <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#shmem_mknod\">shmem_mknod</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#mode\">mode</a> | <a class=\"id\" href=\"#S_IFREG\">S_IFREG</a>, 0);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Link a file..</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#shmem_link\">shmem_link</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#old_dentry\">old_dentry</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#old_dentry\">old_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * No ordinary (disk based) filesystem counts links as inodes;</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * but each new link needs a new dentry, pinning lowmem, and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * tmpfs dentries cannot be pruned until they are unlinked.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#shmem_reserve_inode\">shmem_reserve_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_size\">i_size</a> += <a class=\"id\" href=\"#BOGO_DIRENT_SIZE\">BOGO_DIRENT_SIZE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> = <a class=\"id\" href=\"#CURRENT_TIME\">CURRENT_TIME</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inc_nlink\">inc_nlink</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_count\">i_count</a>);<span class=\"ts\"/><span class=\"comment\">/* New dentry reference */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dget\">dget</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Extra pinning count for the created dentry */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_instantiate\">d_instantiate</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shmem_unlink\">shmem_unlink</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_nlink\">i_nlink</a> &gt; 1 && !<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_free_inode\">shmem_free_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_size\">i_size</a> -= <a class=\"id\" href=\"#BOGO_DIRENT_SIZE\">BOGO_DIRENT_SIZE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> = <a class=\"id\" href=\"#CURRENT_TIME\">CURRENT_TIME</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drop_nlink\">drop_nlink</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dput\">dput</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);<span class=\"ts\"/><span class=\"comment\">/* Undo the count from \"create\" - this does all the work */</span>", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shmem_rmdir\">shmem_rmdir</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#simple_empty\">simple_empty</a>(<a class=\"id\" href=\"#dentry\">dentry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOTEMPTY\">ENOTEMPTY</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drop_nlink\">drop_nlink</a>(<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drop_nlink\">drop_nlink</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#shmem_unlink\">shmem_unlink</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The VFS layer already does all the dentry stuff for rename,</span>", 
"<span class=\"comment\"> * we just have to decrement the usage count for the target if</span>", 
"<span class=\"comment\"> * it exists so that the VFS layer correctly free's it when it</span>", 
"<span class=\"comment\"> * gets overwritten.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#shmem_rename\">shmem_rename</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#old_dir\">old_dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#old_dentry\">old_dentry</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#new_dir\">new_dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#new_dentry\">new_dentry</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#old_dentry\">old_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#they_are_dirs\">they_are_dirs</a> = <a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#simple_empty\">simple_empty</a>(<a class=\"id\" href=\"#new_dentry\">new_dentry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOTEMPTY\">ENOTEMPTY</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_dentry\">new_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>(void) <a class=\"id\" href=\"#shmem_unlink\">shmem_unlink</a>(<a class=\"id\" href=\"#new_dir\">new_dir</a>, <a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#they_are_dirs\">they_are_dirs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drop_nlink\">drop_nlink</a>(<a class=\"id\" href=\"#old_dir\">old_dir</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#they_are_dirs\">they_are_dirs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drop_nlink\">drop_nlink</a>(<a class=\"id\" href=\"#old_dir\">old_dir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inc_nlink\">inc_nlink</a>(<a class=\"id\" href=\"#new_dir\">new_dir</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_dir\">old_dir</a>-><a class=\"id\" href=\"#i_size\">i_size</a> -= <a class=\"id\" href=\"#BOGO_DIRENT_SIZE\">BOGO_DIRENT_SIZE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_dir\">new_dir</a>-><a class=\"id\" href=\"#i_size\">i_size</a> += <a class=\"id\" href=\"#BOGO_DIRENT_SIZE\">BOGO_DIRENT_SIZE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_dir\">old_dir</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#old_dir\">old_dir</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> =", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_dir\">new_dir</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#new_dir\">new_dir</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> =", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#CURRENT_TIME\">CURRENT_TIME</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shmem_symlink\">shmem_symlink</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, const char *<a class=\"id\" href=\"#symname\">symname</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#kaddr\">kaddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *<a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#symname\">symname</a>) + 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#PAGE_CACHE_SIZE\">PAGE_CACHE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENAMETOOLONG\">ENAMETOOLONG</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#shmem_get_inode\">shmem_get_inode</a>(<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#S_IFLNK\">S_IFLNK</a>|<a class=\"id\" href=\"#S_IRWXUGO\">S_IRWXUGO</a>, 0, <a class=\"id\" href=\"#VM_NORESERVE\">VM_NORESERVE</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_inode_init_security\">security_inode_init_security</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> != -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#SHMEM_I\">SHMEM_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> = <a class=\"id\" href=\"#len\">len</a>-1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> <= (char *)<a class=\"id\" href=\"#inode\">inode</a> - (char *)<a class=\"id\" href=\"#info\">info</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* do it inline */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#symname\">symname</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a> = &amp;<a class=\"id\" href=\"#shmem_symlink_inline_operations\">shmem_symlink_inline_operations</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#shmem_getpage\">shmem_getpage</a>(<a class=\"id\" href=\"#inode\">inode</a>, 0, &amp;<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#SGP_WRITE\">SGP_WRITE</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>-><a class=\"id\" href=\"#a_ops\">a_ops</a> = &amp;<a class=\"id\" href=\"#shmem_aops\">shmem_aops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a> = &amp;<a class=\"id\" href=\"#shmem_symlink_inode_operations\">shmem_symlink_inode_operations</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kaddr\">kaddr</a> = <a class=\"id\" href=\"#kmap_atomic\">kmap_atomic</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#kaddr\">kaddr</a>, <a class=\"id\" href=\"#symname\">symname</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap_atomic\">kunmap_atomic</a>(<a class=\"id\" href=\"#kaddr\">kaddr</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_page_dirty\">set_page_dirty</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_size\">i_size</a> += <a class=\"id\" href=\"#BOGO_DIRENT_SIZE\">BOGO_DIRENT_SIZE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> = <a class=\"id\" href=\"#CURRENT_TIME\">CURRENT_TIME</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_instantiate\">d_instantiate</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dget\">dget</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#shmem_follow_link_inline\">shmem_follow_link_inline</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd_set_link\">nd_set_link</a>(<a class=\"id\" href=\"#nd\">nd</a>, (char *)<a class=\"id\" href=\"#SHMEM_I\">SHMEM_I</a>(<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#shmem_follow_link\">shmem_follow_link</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#shmem_getpage\">shmem_getpage</a>(<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, 0, &amp;<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#SGP_READ\">SGP_READ</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd_set_link\">nd_set_link</a>(<a class=\"id\" href=\"#nd\">nd</a>, <a class=\"id\" href=\"#res\">res</a> ? <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#res\">res</a>) : <a class=\"id\" href=\"#kmap\">kmap</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#page\">page</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#shmem_put_link\">shmem_put_link</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>, void *<a class=\"id\" href=\"#cookie\">cookie</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#nd_get_link\">nd_get_link</a>(<a class=\"id\" href=\"#nd\">nd</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#cookie\">cookie</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap\">kunmap</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_page_accessed\">mark_page_accessed</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#shmem_symlink_inline_operations\">shmem_symlink_inline_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#readlink\">readlink</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_readlink\">generic_readlink</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#follow_link\">follow_link</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_follow_link_inline\">shmem_follow_link_inline</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#shmem_symlink_inode_operations\">shmem_symlink_inode_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#readlink\">readlink</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_readlink\">generic_readlink</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#follow_link\">follow_link</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_follow_link\">shmem_follow_link</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#put_link\">put_link</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_put_link\">shmem_put_link</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TMPFS_POSIX_ACL\">CONFIG_TMPFS_POSIX_ACL</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Superblocks without xattr inode operations will get security.* xattr</span>", 
"<span class=\"comment\"> * support from the VFS \"for free\". As soon as we have any other xattrs</span>", 
"<span class=\"comment\"> * like ACLs, we also need to implement the security.* handlers at</span>", 
"<span class=\"comment\"> * filesystem level, though.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#shmem_xattr_security_list\">shmem_xattr_security_list</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, char *<a class=\"id\" href=\"#list\">list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#list_len\">list_len</a>, const char *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#name_len\">name_len</a>, int <a class=\"id\" href=\"#handler_flags\">handler_flags</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_inode_listsecurity\">security_inode_listsecurity</a>(<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, <a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#list_len\">list_len</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shmem_xattr_security_get\">shmem_xattr_security_get</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, const char *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, int <a class=\"id\" href=\"#handler_flags\">handler_flags</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#name\">name</a>, \"\") == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#xattr_getsecurity\">xattr_getsecurity</a>(<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shmem_xattr_security_set\">shmem_xattr_security_set</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, const char *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const void *<a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, int <a class=\"id\" href=\"#flags\">flags</a>, int <a class=\"id\" href=\"#handler_flags\">handler_flags</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#name\">name</a>, \"\") == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_inode_setsecurity\">security_inode_setsecurity</a>(<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#value\">value</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#xattr_handler\">xattr_handler</a> <a class=\"id\" href=\"#shmem_xattr_security_handler\">shmem_xattr_security_handler</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#prefix\">prefix</a> = <a class=\"id\" href=\"#XATTR_SECURITY_PREFIX\">XATTR_SECURITY_PREFIX</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#list\">list</a>   = <a class=\"id\" href=\"#shmem_xattr_security_list\">shmem_xattr_security_list</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get\">get</a>    = <a class=\"id\" href=\"#shmem_xattr_security_get\">shmem_xattr_security_get</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set\">set</a>    = <a class=\"id\" href=\"#shmem_xattr_security_set\">shmem_xattr_security_set</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#xattr_handler\">xattr_handler</a> *<a class=\"id\" href=\"#shmem_xattr_handlers\">shmem_xattr_handlers</a>[] = {", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#generic_acl_access_handler\">generic_acl_access_handler</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#generic_acl_default_handler\">generic_acl_default_handler</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#shmem_xattr_security_handler\">shmem_xattr_security_handler</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#shmem_get_parent\">shmem_get_parent</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#child\">child</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ESTALE\">ESTALE</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shmem_match\">shmem_match</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#ino\">ino</a>, void *<a class=\"id\" href=\"#vfh\">vfh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> *<a class=\"id\" href=\"#fh\">fh</a> = <a class=\"id\" href=\"#vfh\">vfh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#inum\">inum</a> = <a class=\"id\" href=\"#fh\">fh</a>[2];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inum\">inum</a> = (<a class=\"id\" href=\"#inum\">inum</a> << 32) | <a class=\"id\" href=\"#fh\">fh</a>[1];", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ino\">ino</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a> == <a class=\"id\" href=\"#inum\">inum</a> && <a class=\"id\" href=\"#fh\">fh</a>[0] == <a class=\"id\" href=\"#ino\">ino</a>-><a class=\"id\" href=\"#i_generation\">i_generation</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#shmem_fh_to_dentry\">shmem_fh_to_dentry</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fid\">fid</a> *<a class=\"id\" href=\"#fid\">fid</a>, int <a class=\"id\" href=\"#fh_len\">fh_len</a>, int <a class=\"id\" href=\"#fh_type\">fh_type</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#inum\">inum</a> = <a class=\"id\" href=\"#fid\">fid</a>-><a class=\"id\" href=\"#raw\">raw</a>[2];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inum\">inum</a> = (<a class=\"id\" href=\"#inum\">inum</a> << 32) | <a class=\"id\" href=\"#fid\">fid</a>-><a class=\"id\" href=\"#raw\">raw</a>[1];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fh_len\">fh_len</a> &lt; 3)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#ilookup5\">ilookup5</a>(<a class=\"id\" href=\"#sb\">sb</a>, (unsigned long)(<a class=\"id\" href=\"#inum\">inum</a> + <a class=\"id\" href=\"#fid\">fid</a>-><a class=\"id\" href=\"#raw\">raw</a>[0]),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_match\">shmem_match</a>, <a class=\"id\" href=\"#fid\">fid</a>-><a class=\"id\" href=\"#raw\">raw</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#d_find_alias\">d_find_alias</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dentry\">dentry</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shmem_encode_fh\">shmem_encode_fh</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#__u32\">__u32</a> *<a class=\"id\" href=\"#fh\">fh</a>, int *<a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#connectable\">connectable</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#len\">len</a> &lt; 3)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 255;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hlist_unhashed\">hlist_unhashed</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_hash\">i_hash</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Unfortunately insert_inode_hash is not idempotent,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * so as we hash inodes here rather than at creation</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * time, we need a lock to ensure we only try</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to do it once</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hlist_unhashed\">hlist_unhashed</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_hash\">i_hash</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__insert_inode_hash\">__insert_inode_hash</a>(<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a> + <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_generation\">i_generation</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fh\">fh</a>[0] = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_generation\">i_generation</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fh\">fh</a>[1] = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fh\">fh</a>[2] = ((<a class=\"id\" href=\"#__u64\">__u64</a>)<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>) >> 32;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#len\">len</a> = 3;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#export_operations\">export_operations</a> <a class=\"id\" href=\"#shmem_export_ops\">shmem_export_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_parent\">get_parent</a>     = <a class=\"id\" href=\"#shmem_get_parent\">shmem_get_parent</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#encode_fh\">encode_fh</a>      = <a class=\"id\" href=\"#shmem_encode_fh\">shmem_encode_fh</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fh_to_dentry\">fh_to_dentry</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_fh_to_dentry\">shmem_fh_to_dentry</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#shmem_parse_options\">shmem_parse_options</a>(char *<a class=\"id\" href=\"#options\">options</a>, struct <a class=\"id\" href=\"#shmem_sb_info\">shmem_sb_info</a> *<a class=\"id\" href=\"#sbinfo\">sbinfo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#remount\">remount</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#this_char\">this_char</a>, *<a class=\"id\" href=\"#value\">value</a>, *<a class=\"id\" href=\"#rest\">rest</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#options\">options</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_char\">this_char</a> = <a class=\"id\" href=\"#options\">options</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * NUL-terminate this option: unfortunately,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * mount options form a comma-separated list,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * but mpol's nodelist may also contain commas.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#options\">options</a> = <a class=\"id\" href=\"#strchr\">strchr</a>(<a class=\"id\" href=\"#options\">options</a>, ',');", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#options\">options</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#options\">options</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#isdigit\">isdigit</a>(*<a class=\"id\" href=\"#options\">options</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#options\">options</a>[-1] = '\\0';", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!*<a class=\"id\" href=\"#this_char\">this_char</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#strchr\">strchr</a>(<a class=\"id\" href=\"#this_char\">this_char</a>,'=')) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#value\">value</a>++ = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"tmpfs: No value for mount option '%s'\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#this_char\">this_char</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#this_char\">this_char</a>,\"size\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#memparse\">memparse</a>(<a class=\"id\" href=\"#value\">value</a>,&amp;<a class=\"id\" href=\"#rest\">rest</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#rest\">rest</a> == '%') {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> <<= <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> *= <a class=\"id\" href=\"#totalram_pages\">totalram_pages</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#size\">size</a>, 100);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rest\">rest</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#rest\">rest</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_val\">bad_val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_blocks\">max_blocks</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DIV_ROUND_UP\">DIV_ROUND_UP</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#PAGE_CACHE_SIZE\">PAGE_CACHE_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#this_char\">this_char</a>,\"nr_blocks\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_blocks\">max_blocks</a> = <a class=\"id\" href=\"#memparse\">memparse</a>(<a class=\"id\" href=\"#value\">value</a>, &amp;<a class=\"id\" href=\"#rest\">rest</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#rest\">rest</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_val\">bad_val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#this_char\">this_char</a>,\"nr_inodes\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_inodes\">max_inodes</a> = <a class=\"id\" href=\"#memparse\">memparse</a>(<a class=\"id\" href=\"#value\">value</a>, &amp;<a class=\"id\" href=\"#rest\">rest</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#rest\">rest</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_val\">bad_val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#this_char\">this_char</a>,\"mode\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#remount\">remount</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#value\">value</a>, &amp;<a class=\"id\" href=\"#rest\">rest</a>, 8) &amp; 07777;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#rest\">rest</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_val\">bad_val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#this_char\">this_char</a>,\"uid\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#remount\">remount</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#uid\">uid</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#value\">value</a>, &amp;<a class=\"id\" href=\"#rest\">rest</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#rest\">rest</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_val\">bad_val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#this_char\">this_char</a>,\"gid\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#remount\">remount</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#gid\">gid</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#value\">value</a>, &amp;<a class=\"id\" href=\"#rest\">rest</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#rest\">rest</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_val\">bad_val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#this_char\">this_char</a>,\"mpol\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mpol_parse_str\">mpol_parse_str</a>(<a class=\"id\" href=\"#value\">value</a>, &amp;<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#mpol\">mpol</a>, 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_val\">bad_val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"tmpfs: Bad mount option %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#this_char\">this_char</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#bad_val\">bad_val</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"tmpfs: Bad value '%s' for mount option '%s'\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#this_char\">this_char</a>);", 
"<span class=\"ts\"/>return 1;", 
"", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shmem_remount_fs\">shmem_remount_fs</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int *<a class=\"id\" href=\"#flags\">flags</a>, char *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_sb_info\">shmem_sb_info</a> *<a class=\"id\" href=\"#sbinfo\">sbinfo</a> = <a class=\"id\" href=\"#SHMEM_SB\">SHMEM_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_sb_info\">shmem_sb_info</a> <a class=\"id\" href=\"#config\">config</a> = *<a class=\"id\" href=\"#sbinfo\">sbinfo</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#inodes\">inodes</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#shmem_parse_options\">shmem_parse_options</a>(<a class=\"id\" href=\"#data\">data</a>, &amp;<a class=\"id\" href=\"#config\">config</a>, <a class=\"id\" href=\"#true\">true</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#stat_lock\">stat_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inodes\">inodes</a> = <a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_inodes\">max_inodes</a> - <a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#free_inodes\">free_inodes</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#percpu_counter_compare\">percpu_counter_compare</a>(&amp;<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#used_blocks\">used_blocks</a>, <a class=\"id\" href=\"#config\">config</a>.<a class=\"id\" href=\"#max_blocks\">max_blocks</a>) &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#config\">config</a>.<a class=\"id\" href=\"#max_inodes\">max_inodes</a> &lt; <a class=\"id\" href=\"#inodes\">inodes</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Those tests also disallow limited-&gt;unlimited while any are in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * use, so i_blocks will always be zero when max_blocks is zero;</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * but we must separately disallow unlimited-&gt;limited, because</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in that case we have no record of how much is already in use.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#config\">config</a>.<a class=\"id\" href=\"#max_blocks\">max_blocks</a> && !<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_blocks\">max_blocks</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#config\">config</a>.<a class=\"id\" href=\"#max_inodes\">max_inodes</a> && !<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_inodes\">max_inodes</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_blocks\">max_blocks</a>  = <a class=\"id\" href=\"#config\">config</a>.<a class=\"id\" href=\"#max_blocks\">max_blocks</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_inodes\">max_inodes</a>  = <a class=\"id\" href=\"#config\">config</a>.<a class=\"id\" href=\"#max_inodes\">max_inodes</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#free_inodes\">free_inodes</a> = <a class=\"id\" href=\"#config\">config</a>.<a class=\"id\" href=\"#max_inodes\">max_inodes</a> - <a class=\"id\" href=\"#inodes\">inodes</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mpol_put\">mpol_put</a>(<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#mpol\">mpol</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#mpol\">mpol</a>        = <a class=\"id\" href=\"#config\">config</a>.<a class=\"id\" href=\"#mpol\">mpol</a>;<span class=\"ts\"/><span class=\"comment\">/* transfers initial ref */</span>", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#stat_lock\">stat_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#shmem_show_options\">shmem_show_options</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#vfs\">vfs</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_sb_info\">shmem_sb_info</a> *<a class=\"id\" href=\"#sbinfo\">sbinfo</a> = <a class=\"id\" href=\"#SHMEM_SB\">SHMEM_SB</a>(<a class=\"id\" href=\"#vfs\">vfs</a>-><a class=\"id\" href=\"#mnt_sb\">mnt_sb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_blocks\">max_blocks</a> != <a class=\"id\" href=\"#shmem_default_max_blocks\">shmem_default_max_blocks</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",size=%luk\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_blocks\">max_blocks</a> << (<a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a> - 10));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_inodes\">max_inodes</a> != <a class=\"id\" href=\"#shmem_default_max_inodes\">shmem_default_max_inodes</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",nr_inodes=%lu\", <a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_inodes\">max_inodes</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#mode\">mode</a> != (<a class=\"id\" href=\"#S_IRWXUGO\">S_IRWXUGO</a> | <a class=\"id\" href=\"#S_ISVTX\">S_ISVTX</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",mode=%03o\", <a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#uid\">uid</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",uid=%u\", <a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#uid\">uid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#gid\">gid</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",gid=%u\", <a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#gid\">gid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shmem_show_mpol\">shmem_show_mpol</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#mpol\">mpol</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_TMPFS */</span>", 
"", 
"static void <a class=\"id\" href=\"#shmem_put_super\">shmem_put_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_sb_info\">shmem_sb_info</a> *<a class=\"id\" href=\"#sbinfo\">sbinfo</a> = <a class=\"id\" href=\"#SHMEM_SB\">SHMEM_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_destroy\">percpu_counter_destroy</a>(&amp;<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#used_blocks\">used_blocks</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbinfo\">sbinfo</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_fs_info\">s_fs_info</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#shmem_fill_super\">shmem_fill_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, void *<a class=\"id\" href=\"#data\">data</a>, int <a class=\"id\" href=\"#silent\">silent</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#root\">root</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_sb_info\">shmem_sb_info</a> *<a class=\"id\" href=\"#sbinfo\">sbinfo</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Round up to L1_CACHE_BYTES to resist false sharing */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbinfo\">sbinfo</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#max\">max</a>((int)sizeof(struct <a class=\"id\" href=\"#shmem_sb_info\">shmem_sb_info</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#L1_CACHE_BYTES\">L1_CACHE_BYTES</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sbinfo\">sbinfo</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#S_IRWXUGO\">S_IRWXUGO</a> | <a class=\"id\" href=\"#S_ISVTX\">S_ISVTX</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#uid\">uid</a> = <a class=\"id\" href=\"#current_fsuid\">current_fsuid</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#gid\">gid</a> = <a class=\"id\" href=\"#current_fsgid\">current_fsgid</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_fs_info\">s_fs_info</a> = <a class=\"id\" href=\"#sbinfo\">sbinfo</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TMPFS\">CONFIG_TMPFS</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Per default we only allow half of the physical ram per</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * tmpfs instance, limiting inodes to one per page of lowmem;</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * but the internal instance is left unlimited.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_NOUSER\">MS_NOUSER</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_blocks\">max_blocks</a> = <a class=\"id\" href=\"#shmem_default_max_blocks\">shmem_default_max_blocks</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_inodes\">max_inodes</a> = <a class=\"id\" href=\"#shmem_default_max_inodes\">shmem_default_max_inodes</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#shmem_parse_options\">shmem_parse_options</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#sbinfo\">sbinfo</a>, <a class=\"id\" href=\"#false\">false</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed\">failed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_export_op\">s_export_op</a> = &amp;<a class=\"id\" href=\"#shmem_export_ops\">shmem_export_ops</a>;", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> |= <a class=\"id\" href=\"#MS_NOUSER\">MS_NOUSER</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#stat_lock\">stat_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#percpu_counter_init\">percpu_counter_init</a>(&amp;<a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#used_blocks\">used_blocks</a>, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed\">failed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#free_inodes\">free_inodes</a> = <a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#max_inodes\">max_inodes</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_maxbytes\">s_maxbytes</a> = <a class=\"id\" href=\"#SHMEM_MAX_BYTES\">SHMEM_MAX_BYTES</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> = <a class=\"id\" href=\"#PAGE_CACHE_SIZE\">PAGE_CACHE_SIZE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a> = <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a> = <a class=\"id\" href=\"#TMPFS_MAGIC\">TMPFS_MAGIC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_op\">s_op</a> = &amp;<a class=\"id\" href=\"#shmem_ops\">shmem_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_time_gran\">s_time_gran</a> = 1;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TMPFS_POSIX_ACL\">CONFIG_TMPFS_POSIX_ACL</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_xattr\">s_xattr</a> = <a class=\"id\" href=\"#shmem_xattr_handlers\">shmem_xattr_handlers</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> |= <a class=\"id\" href=\"#MS_POSIXACL\">MS_POSIXACL</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#shmem_get_inode\">shmem_get_inode</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#S_IFDIR\">S_IFDIR</a> | <a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#mode\">mode</a>, 0, <a class=\"id\" href=\"#VM_NORESERVE\">VM_NORESERVE</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed\">failed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a> = <a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#uid\">uid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_gid\">i_gid</a> = <a class=\"id\" href=\"#sbinfo\">sbinfo</a>-><a class=\"id\" href=\"#gid\">gid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#d_alloc_root\">d_alloc_root</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#root\">root</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_iput\">failed_iput</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_root\">s_root</a> = <a class=\"id\" href=\"#root\">root</a>;", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#failed_iput\">failed_iput</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<a class=\"id\" href=\"#failed\">failed</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shmem_put_super\">shmem_put_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#shmem_inode_cachep\">shmem_inode_cachep</a>;", 
"", 
"static struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#shmem_alloc_inode\">shmem_alloc_inode</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = (struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *)<a class=\"id\" href=\"#kmem_cache_alloc\">kmem_cache_alloc</a>(<a class=\"id\" href=\"#shmem_inode_cachep\">shmem_inode_cachep</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#vfs_inode\">vfs_inode</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#shmem_destroy_inode\">shmem_destroy_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> &amp; <a class=\"id\" href=\"#S_IFMT\">S_IFMT</a>) == <a class=\"id\" href=\"#S_IFREG\">S_IFREG</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* only struct inode is valid if it's an inline symlink */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpol_free_shared_policy\">mpol_free_shared_policy</a>(&amp;<a class=\"id\" href=\"#SHMEM_I\">SHMEM_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#policy\">policy</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#shmem_inode_cachep\">shmem_inode_cachep</a>, <a class=\"id\" href=\"#SHMEM_I\">SHMEM_I</a>(<a class=\"id\" href=\"#inode\">inode</a>));", 
"}", 
"", 
"static void <a class=\"id\" href=\"#init_once\">init_once</a>(void *<a class=\"id\" href=\"#foo\">foo</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *<a class=\"id\" href=\"#p\">p</a> = (struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *) <a class=\"id\" href=\"#foo\">foo</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode_init_once\">inode_init_once</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#vfs_inode\">vfs_inode</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#init_inodecache\">init_inodecache</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shmem_inode_cachep\">shmem_inode_cachep</a> = <a class=\"id\" href=\"#kmem_cache_create\">kmem_cache_create</a>(\"shmem_inode_cache\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0, <a class=\"id\" href=\"#SLAB_PANIC\">SLAB_PANIC</a>, <a class=\"id\" href=\"#init_once\">init_once</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#destroy_inodecache\">destroy_inodecache</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_destroy\">kmem_cache_destroy</a>(<a class=\"id\" href=\"#shmem_inode_cachep\">shmem_inode_cachep</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#address_space_operations\">address_space_operations</a> <a class=\"id\" href=\"#shmem_aops\">shmem_aops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#writepage\">writepage</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_writepage\">shmem_writepage</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_page_dirty\">set_page_dirty</a><span class=\"ts\"/>= <a class=\"id\" href=\"#__set_page_dirty_no_writeback\">__set_page_dirty_no_writeback</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TMPFS\">CONFIG_TMPFS</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#readpage\">readpage</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_readpage\">shmem_readpage</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_begin\">write_begin</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_write_begin\">shmem_write_begin</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_end\">write_end</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_write_end\">shmem_write_end</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#migratepage\">migratepage</a><span class=\"ts\"/>= <a class=\"id\" href=\"#migrate_page\">migrate_page</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#error_remove_page\">error_remove_page</a> = <a class=\"id\" href=\"#generic_error_remove_page\">generic_error_remove_page</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#shmem_file_operations\">shmem_file_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mmap\">mmap</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_mmap\">shmem_mmap</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TMPFS\">CONFIG_TMPFS</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_llseek\">generic_file_llseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#do_sync_read\">do_sync_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#do_sync_write\">do_sync_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#aio_read\">aio_read</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_file_aio_read\">shmem_file_aio_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#aio_write\">aio_write</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_aio_write\">generic_file_aio_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fsync\">fsync</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#noop_fsync\">noop_fsync</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#splice_read\">splice_read</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_splice_read\">generic_file_splice_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#splice_write\">splice_write</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_splice_write\">generic_file_splice_write</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#shmem_inode_operations\">shmem_inode_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setattr\">setattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_notify_change\">shmem_notify_change</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#truncate_range\">truncate_range</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_truncate_range\">shmem_truncate_range</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TMPFS_POSIX_ACL\">CONFIG_TMPFS_POSIX_ACL</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setxattr\">setxattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_setxattr\">generic_setxattr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getxattr\">getxattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_getxattr\">generic_getxattr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#listxattr\">listxattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_listxattr\">generic_listxattr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#removexattr\">removexattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_removexattr\">generic_removexattr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#check_acl\">check_acl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_check_acl\">generic_check_acl</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#shmem_dir_inode_operations\">shmem_dir_inode_operations</a> = {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TMPFS\">CONFIG_TMPFS</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#create\">create</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_create\">shmem_create</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#lookup\">lookup</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#simple_lookup\">simple_lookup</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#link\">link</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_link\">shmem_link</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unlink\">unlink</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_unlink\">shmem_unlink</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#symlink\">symlink</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_symlink\">shmem_symlink</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mkdir\">mkdir</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_mkdir\">shmem_mkdir</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rmdir\">rmdir</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_rmdir\">shmem_rmdir</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mknod\">mknod</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_mknod\">shmem_mknod</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rename\">rename</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_rename\">shmem_rename</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TMPFS_POSIX_ACL\">CONFIG_TMPFS_POSIX_ACL</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setattr\">setattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_notify_change\">shmem_notify_change</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setxattr\">setxattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_setxattr\">generic_setxattr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getxattr\">getxattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_getxattr\">generic_getxattr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#listxattr\">listxattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_listxattr\">generic_listxattr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#removexattr\">removexattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_removexattr\">generic_removexattr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#check_acl\">check_acl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_check_acl\">generic_check_acl</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#shmem_special_inode_operations\">shmem_special_inode_operations</a> = {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TMPFS_POSIX_ACL\">CONFIG_TMPFS_POSIX_ACL</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setattr\">setattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_notify_change\">shmem_notify_change</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setxattr\">setxattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_setxattr\">generic_setxattr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getxattr\">getxattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_getxattr\">generic_getxattr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#listxattr\">listxattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_listxattr\">generic_listxattr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#removexattr\">removexattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_removexattr\">generic_removexattr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#check_acl\">check_acl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_check_acl\">generic_check_acl</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#super_operations\">super_operations</a> <a class=\"id\" href=\"#shmem_ops\">shmem_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#alloc_inode\">alloc_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_alloc_inode\">shmem_alloc_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#destroy_inode\">destroy_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_destroy_inode\">shmem_destroy_inode</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TMPFS\">CONFIG_TMPFS</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#statfs\">statfs</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_statfs\">shmem_statfs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#remount_fs\">remount_fs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_remount_fs\">shmem_remount_fs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show_options\">show_options</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_show_options\">shmem_show_options</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#evict_inode\">evict_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_evict_inode\">shmem_evict_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#drop_inode\">drop_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_delete_inode\">generic_delete_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#put_super\">put_super</a><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_put_super\">shmem_put_super</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#vm_operations_struct\">vm_operations_struct</a> <a class=\"id\" href=\"#shmem_vm_ops\">shmem_vm_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fault\">fault</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_fault\">shmem_fault</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NUMA\">CONFIG_NUMA</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_policy\">set_policy</a>     = <a class=\"id\" href=\"#shmem_set_policy\">shmem_set_policy</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_policy\">get_policy</a>     = <a class=\"id\" href=\"#shmem_get_policy\">shmem_get_policy</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"", 
"static int <a class=\"id\" href=\"#shmem_get_sb\">shmem_get_sb</a>(struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> *<a class=\"id\" href=\"#fs_type\">fs_type</a>,", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flags\">flags</a>, const char *<a class=\"id\" href=\"#dev_name\">dev_name</a>, void *<a class=\"id\" href=\"#data\">data</a>, struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#get_sb_nodev\">get_sb_nodev</a>(<a class=\"id\" href=\"#fs_type\">fs_type</a>, <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#shmem_fill_super\">shmem_fill_super</a>, <a class=\"id\" href=\"#mnt\">mnt</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> <a class=\"id\" href=\"#tmpfs_fs_type\">tmpfs_fs_type</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"tmpfs\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_sb\">get_sb</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#shmem_get_sb\">shmem_get_sb</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#kill_sb\">kill_sb</a><span class=\"ts\"/>= <a class=\"id\" href=\"#kill_litter_super\">kill_litter_super</a>,", 
"};", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_tmpfs\">init_tmpfs</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#bdi_init\">bdi_init</a>(&amp;<a class=\"id\" href=\"#shmem_backing_dev_info\">shmem_backing_dev_info</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out4\">out4</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#init_inodecache\">init_inodecache</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out3\">out3</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#register_filesystem\">register_filesystem</a>(&amp;<a class=\"id\" href=\"#tmpfs_fs_type\">tmpfs_fs_type</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"Could not register tmpfs\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out2\">out2</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shm_mnt\">shm_mnt</a> = <a class=\"id\" href=\"#vfs_kern_mount\">vfs_kern_mount</a>(&amp;<a class=\"id\" href=\"#tmpfs_fs_type\">tmpfs_fs_type</a>, <a class=\"id\" href=\"#MS_NOUSER\">MS_NOUSER</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmpfs_fs_type\">tmpfs_fs_type</a>.<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#shm_mnt\">shm_mnt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#shm_mnt\">shm_mnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"Could not kern_mount tmpfs\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out1\">out1</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out1\">out1</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_filesystem\">unregister_filesystem</a>(&amp;<a class=\"id\" href=\"#tmpfs_fs_type\">tmpfs_fs_type</a>);", 
"<a class=\"id\" href=\"#out2\">out2</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destroy_inodecache\">destroy_inodecache</a>();", 
"<a class=\"id\" href=\"#out3\">out3</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bdi_destroy\">bdi_destroy</a>(&amp;<a class=\"id\" href=\"#shmem_backing_dev_info\">shmem_backing_dev_info</a>);", 
"<a class=\"id\" href=\"#out4\">out4</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shm_mnt\">shm_mnt</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CGROUP_MEM_RES_CTLR\">CONFIG_CGROUP_MEM_RES_CTLR</a>", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mem_cgroup_get_shmem_target - find a page or entry assigned to the shmem file</span>", 
"<span class=\"comment\"> * @inode: the inode to be searched</span>", 
"<span class=\"comment\"> * @pgoff: the offset to be searched</span>", 
"<span class=\"comment\"> * @pagep: the pointer for the found page to be stored</span>", 
"<span class=\"comment\"> * @ent: the pointer for the found swap entry to be stored</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If a page is found, refcount of it is incremented. Callers should handle</span>", 
"<span class=\"comment\"> * these refcount.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#mem_cgroup_get_shmem_target\">mem_cgroup_get_shmem_target</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#pgoff\">pgoff</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#pagep\">pagep</a>, <a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> *<a class=\"id\" href=\"#ent\">ent</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> <a class=\"id\" href=\"#entry\">entry</a> = { .<a class=\"id\" href=\"#val\">val</a> = 0 }, *<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shmem_inode_info\">shmem_inode_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#SHMEM_I\">SHMEM_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#pgoff\">pgoff</a> << <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>) >= <a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#shmem_swp_entry\">shmem_swp_entry</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#pgoff\">pgoff</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SWAP\">CONFIG_SWAP</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a> && <a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#val\">val</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>.<a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#find_get_page\">find_get_page</a>(&amp;<a class=\"id\" href=\"#swapper_space\">swapper_space</a>, <a class=\"id\" href=\"#entry\">entry</a>.<a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/>} else", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#find_get_page\">find_get_page</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>, <a class=\"id\" href=\"#pgoff\">pgoff</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shmem_swp_unmap\">shmem_swp_unmap</a>(<a class=\"id\" href=\"#ptr\">ptr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#pagep\">pagep</a> = <a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ent\">ent</a> = <a class=\"id\" href=\"#entry\">entry</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#else <span class=\"comment\">/* !CONFIG_SHMEM */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * tiny-shmem: simple shmemfs and tmpfs using ramfs code</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is intended for small system where the benefits of the full</span>", 
"<span class=\"comment\"> * shmem code (swap-backed and resource-limited) are outweighed by</span>", 
"<span class=\"comment\"> * their complexity. On systems without swap this code should be</span>", 
"<span class=\"comment\"> * effectively equivalent, but much lighter weight.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ramfs\">ramfs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> <a class=\"id\" href=\"#tmpfs_fs_type\">tmpfs_fs_type</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"tmpfs\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_sb\">get_sb</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ramfs_get_sb\">ramfs_get_sb</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#kill_sb\">kill_sb</a><span class=\"ts\"/>= <a class=\"id\" href=\"#kill_litter_super\">kill_litter_super</a>,", 
"};", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_tmpfs\">init_tmpfs</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#register_filesystem\">register_filesystem</a>(&amp;<a class=\"id\" href=\"#tmpfs_fs_type\">tmpfs_fs_type</a>) != 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shm_mnt\">shm_mnt</a> = <a class=\"id\" href=\"#kern_mount\">kern_mount</a>(&amp;<a class=\"id\" href=\"#tmpfs_fs_type\">tmpfs_fs_type</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#shm_mnt\">shm_mnt</a>));", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#shmem_unuse\">shmem_unuse</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> <a class=\"id\" href=\"#entry\">entry</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#shmem_lock\">shmem_lock</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, int <a class=\"id\" href=\"#lock\">lock</a>, struct <a class=\"id\" href=\"#user_struct\">user_struct</a> *<a class=\"id\" href=\"#user\">user</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CGROUP_MEM_RES_CTLR\">CONFIG_CGROUP_MEM_RES_CTLR</a>", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mem_cgroup_get_shmem_target - find a page or entry assigned to the shmem file</span>", 
"<span class=\"comment\"> * @inode: the inode to be searched</span>", 
"<span class=\"comment\"> * @pgoff: the offset to be searched</span>", 
"<span class=\"comment\"> * @pagep: the pointer for the found page to be stored</span>", 
"<span class=\"comment\"> * @ent: the pointer for the found swap entry to be stored</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If a page is found, refcount of it is incremented. Callers should handle</span>", 
"<span class=\"comment\"> * these refcount.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#mem_cgroup_get_shmem_target\">mem_cgroup_get_shmem_target</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#pgoff\">pgoff</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#pagep\">pagep</a>, <a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> *<a class=\"id\" href=\"#ent\">ent</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#pgoff\">pgoff</a> << <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>) >= <a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#find_get_page\">find_get_page</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>, <a class=\"id\" href=\"#pgoff\">pgoff</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#pagep\">pagep</a> = <a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ent\">ent</a> = (<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a>){ .<a class=\"id\" href=\"#val\">val</a> = 0 };", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#shmem_vm_ops\">shmem_vm_ops</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#generic_file_vm_ops\">generic_file_vm_ops</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#shmem_file_operations\">shmem_file_operations</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ramfs_file_operations\">ramfs_file_operations</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#shmem_get_inode\">shmem_get_inode</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#flags\">flags</a>)<span class=\"ts\"/><a class=\"id\" href=\"#ramfs_get_inode\">ramfs_get_inode</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#dev\">dev</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#shmem_acct_size\">shmem_acct_size</a>(<a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#size\">size</a>)<span class=\"ts\"/><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#shmem_unacct_size\">shmem_unacct_size</a>(<a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#size\">size</a>)<span class=\"ts\"/><span class=\"ts\"/>do {} while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SHMEM_MAX_BYTES\">SHMEM_MAX_BYTES</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MAX_LFS_FILESIZE\">MAX_LFS_FILESIZE</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SHMEM */</span>", 
"", 
"<span class=\"comment\">/* common code */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * shmem_file_setup - get an unlinked file living in tmpfs</span>", 
"<span class=\"comment\"> * @name: name for dentry (to be seen in /proc/&lt;pid&gt;/maps</span>", 
"<span class=\"comment\"> * @size: size to be set for the file</span>", 
"<span class=\"comment\"> * @flags: VM_NORESERVE suppresses pre-accounting of the entire object size</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#shmem_file_setup\">shmem_file_setup</a>(const char *<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#size\">size</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#path\">path</a> <a class=\"id\" href=\"#path\">path</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#root\">root</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#qstr\">qstr</a> <a class=\"id\" href=\"#this\">this</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#shm_mnt\">shm_mnt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return (void *)<a class=\"id\" href=\"#shm_mnt\">shm_mnt</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &lt; 0 || <a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#SHMEM_MAX_BYTES\">SHMEM_MAX_BYTES</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#shmem_acct_size\">shmem_acct_size</a>(<a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#size\">size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this\">this</a>.<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this\">this</a>.<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this\">this</a>.<a class=\"id\" href=\"#hash\">hash</a> = 0; <span class=\"comment\">/* will go */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#shm_mnt\">shm_mnt</a>-><a class=\"id\" href=\"#mnt_root\">mnt_root</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#d_alloc\">d_alloc</a>(<a class=\"id\" href=\"#root\">root</a>, &amp;<a class=\"id\" href=\"#this\">this</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#put_memory\">put_memory</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a> = <a class=\"id\" href=\"#mntget\">mntget</a>(<a class=\"id\" href=\"#shm_mnt\">shm_mnt</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#shmem_get_inode\">shmem_get_inode</a>(<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#d_sb\">d_sb</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#S_IFREG\">S_IFREG</a> | <a class=\"id\" href=\"#S_IRWXUGO\">S_IRWXUGO</a>, 0, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#put_dentry\">put_dentry</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_instantiate\">d_instantiate</a>(<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_nlink\">i_nlink</a> = 0;<span class=\"ts\"/><span class=\"comment\">/* It is unlinked */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_MMU\">CONFIG_MMU</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ramfs_nommu_expand_for_mapping\">ramfs_nommu_expand_for_mapping</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#put_dentry\">put_dentry</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENFILE\">ENFILE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#alloc_file\">alloc_file</a>(&amp;<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a> | <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#shmem_file_operations\">shmem_file_operations</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#put_dentry\">put_dentry</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#file\">file</a>;", 
"", 
"<a class=\"id\" href=\"#put_dentry\">put_dentry</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#path\">path</a>);", 
"<a class=\"id\" href=\"#put_memory\">put_memory</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shmem_unacct_size\">shmem_unacct_size</a>(<a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#error\">error</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#shmem_file_setup\">shmem_file_setup</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * shmem_zero_setup - setup a shared anonymous mapping</span>", 
"<span class=\"comment\"> * @vma: the vma to be mmapped is prepared by do_mmap_pgoff</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#shmem_zero_setup\">shmem_zero_setup</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a> - <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#shmem_file_setup\">shmem_file_setup</a>(\"dev/zero\", <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#file\">file</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a> = <a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_ops\">vm_ops</a> = &amp;<a class=\"id\" href=\"#shmem_vm_ops\">shmem_vm_ops</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
];
xr_frag_insert('l/f3/f31cb4633b967808f3a5e29a6ef82ffc5c74fb.xr', __xr_tmp);
