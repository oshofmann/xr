var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * bus.c - bus driver management</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (c) 2002-3 Patrick Mochel</span>", 
"<span class=\"comment\"> * Copyright (c) 2002-3 Open Source Development Labs</span>", 
"<span class=\"comment\"> * Copyright (c) 2007 Greg Kroah-Hartman &lt;gregkh@suse.de&gt;</span>", 
"<span class=\"comment\"> * Copyright (c) 2007 Novell Inc.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is released under the GPLv2</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"base.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"power/power.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#to_bus_attr\">to_bus_attr</a>(<a class=\"id\" href=\"#_attr\">_attr</a>) <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#_attr\">_attr</a>, struct <a class=\"id\" href=\"#bus_attribute\">bus_attribute</a>, <a class=\"id\" href=\"#attr\">attr</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#to_bus\">to_bus</a>(<a class=\"id\" href=\"#obj\">obj</a>) <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#obj\">obj</a>, struct <a class=\"id\" href=\"#bus_type_private\">bus_type_private</a>, <a class=\"id\" href=\"#subsys\">subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * sysfs bindings for drivers</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#to_drv_attr\">to_drv_attr</a>(<a class=\"id\" href=\"#_attr\">_attr</a>) <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#_attr\">_attr</a>, struct <a class=\"id\" href=\"#driver_attribute\">driver_attribute</a>, <a class=\"id\" href=\"#attr\">attr</a>)", 
"", 
"", 
"static int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#bus_rescan_devices_helper\">bus_rescan_devices_helper</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#data\">data</a>);", 
"", 
"static struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus_get\">bus_get</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bus\">bus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kset_get\">kset_get</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#subsys\">subsys</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#bus_put\">bus_put</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bus\">bus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kset_put\">kset_put</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#subsys\">subsys</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#drv_attr_show\">drv_attr_show</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#driver_attribute\">driver_attribute</a> *<a class=\"id\" href=\"#drv_attr\">drv_attr</a> = <a class=\"id\" href=\"#to_drv_attr\">to_drv_attr</a>(<a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#driver_private\">driver_private</a> *<a class=\"id\" href=\"#drv_priv\">drv_priv</a> = <a class=\"id\" href=\"#to_driver\">to_driver</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drv_attr\">drv_attr</a>-><a class=\"id\" href=\"#show\">show</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#drv_attr\">drv_attr</a>-><a class=\"id\" href=\"#show\">show</a>(<a class=\"id\" href=\"#drv_priv\">drv_priv</a>-><a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#drv_attr_store\">drv_attr_store</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#driver_attribute\">driver_attribute</a> *<a class=\"id\" href=\"#drv_attr\">drv_attr</a> = <a class=\"id\" href=\"#to_drv_attr\">to_drv_attr</a>(<a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#driver_private\">driver_private</a> *<a class=\"id\" href=\"#drv_priv\">drv_priv</a> = <a class=\"id\" href=\"#to_driver\">to_driver</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drv_attr\">drv_attr</a>-><a class=\"id\" href=\"#store\">store</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#drv_attr\">drv_attr</a>-><a class=\"id\" href=\"#store\">store</a>(<a class=\"id\" href=\"#drv_priv\">drv_priv</a>-><a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a> <a class=\"id\" href=\"#driver_sysfs_ops\">driver_sysfs_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#drv_attr_show\">drv_attr_show</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#store\">store</a><span class=\"ts\"/>= <a class=\"id\" href=\"#drv_attr_store\">drv_attr_store</a>,", 
"};", 
"", 
"static void <a class=\"id\" href=\"#driver_release\">driver_release</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#driver_private\">driver_private</a> *<a class=\"id\" href=\"#drv_priv\">drv_priv</a> = <a class=\"id\" href=\"#to_driver\">to_driver</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"driver: '%s': %s\\n\", <a class=\"id\" href=\"#kobject_name\">kobject_name</a>(<a class=\"id\" href=\"#kobj\">kobj</a>), <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#drv_priv\">drv_priv</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#kobj_type\">kobj_type</a> <a class=\"id\" href=\"#driver_ktype\">driver_ktype</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#driver_sysfs_ops\">driver_sysfs_ops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#driver_release\">driver_release</a>,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * sysfs bindings for buses</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#bus_attr_show\">bus_attr_show</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bus_attribute\">bus_attribute</a> *<a class=\"id\" href=\"#bus_attr\">bus_attr</a> = <a class=\"id\" href=\"#to_bus_attr\">to_bus_attr</a>(<a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bus_type_private\">bus_type_private</a> *<a class=\"id\" href=\"#bus_priv\">bus_priv</a> = <a class=\"id\" href=\"#to_bus\">to_bus</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bus_attr\">bus_attr</a>-><a class=\"id\" href=\"#show\">show</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#bus_attr\">bus_attr</a>-><a class=\"id\" href=\"#show\">show</a>(<a class=\"id\" href=\"#bus_priv\">bus_priv</a>-><a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#bus_attr_store\">bus_attr_store</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bus_attribute\">bus_attribute</a> *<a class=\"id\" href=\"#bus_attr\">bus_attr</a> = <a class=\"id\" href=\"#to_bus_attr\">to_bus_attr</a>(<a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bus_type_private\">bus_type_private</a> *<a class=\"id\" href=\"#bus_priv\">bus_priv</a> = <a class=\"id\" href=\"#to_bus\">to_bus</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bus_attr\">bus_attr</a>-><a class=\"id\" href=\"#store\">store</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#bus_attr\">bus_attr</a>-><a class=\"id\" href=\"#store\">store</a>(<a class=\"id\" href=\"#bus_priv\">bus_priv</a>-><a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a> <a class=\"id\" href=\"#bus_sysfs_ops\">bus_sysfs_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#bus_attr_show\">bus_attr_show</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#store\">store</a><span class=\"ts\"/>= <a class=\"id\" href=\"#bus_attr_store\">bus_attr_store</a>,", 
"};", 
"", 
"int <a class=\"id\" href=\"#bus_create_file\">bus_create_file</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>, struct <a class=\"id\" href=\"#bus_attribute\">bus_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bus_get\">bus_get</a>(<a class=\"id\" href=\"#bus\">bus</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysfs_create_file\">sysfs_create_file</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#subsys\">subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus_put\">bus_put</a>(<a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#bus_create_file\">bus_create_file</a>);", 
"", 
"void <a class=\"id\" href=\"#bus_remove_file\">bus_remove_file</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>, struct <a class=\"id\" href=\"#bus_attribute\">bus_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bus_get\">bus_get</a>(<a class=\"id\" href=\"#bus\">bus</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_file\">sysfs_remove_file</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#subsys\">subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus_put\">bus_put</a>(<a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#bus_remove_file\">bus_remove_file</a>);", 
"", 
"static struct <a class=\"id\" href=\"#kobj_type\">kobj_type</a> <a class=\"id\" href=\"#bus_ktype\">bus_ktype</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#bus_sysfs_ops\">bus_sysfs_ops</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#bus_uevent_filter\">bus_uevent_filter</a>(struct <a class=\"id\" href=\"#kset\">kset</a> *<a class=\"id\" href=\"#kset\">kset</a>, struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobj_type\">kobj_type</a> *<a class=\"id\" href=\"#ktype\">ktype</a> = <a class=\"id\" href=\"#get_ktype\">get_ktype</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ktype\">ktype</a> == &amp;<a class=\"id\" href=\"#bus_ktype\">bus_ktype</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#kset_uevent_ops\">kset_uevent_ops</a> <a class=\"id\" href=\"#bus_uevent_ops\">bus_uevent_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#filter\">filter</a> = <a class=\"id\" href=\"#bus_uevent_filter\">bus_uevent_filter</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#kset\">kset</a> *<a class=\"id\" href=\"#bus_kset\">bus_kset</a>;", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG\">CONFIG_HOTPLUG</a>", 
"<span class=\"comment\">/* Manually detach a device from its associated driver. */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#driver_unbind\">driver_unbind</a>(struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#bus_get\">bus_get</a>(<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#bus_find_device_by_name\">bus_find_device_by_name</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a> == <a class=\"id\" href=\"#drv\">drv</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>)<span class=\"ts\"/><span class=\"comment\">/* Needed for USB */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_lock\">device_lock</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_release_driver\">device_release_driver</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_unlock\">device_unlock</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus_put\">bus_put</a>(<a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"static <a class=\"id\" href=\"#DRIVER_ATTR\">DRIVER_ATTR</a>(<a class=\"id\" href=\"#unbind\">unbind</a>, <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#driver_unbind\">driver_unbind</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Manually attach a device to a driver.</span>", 
"<span class=\"comment\"> * Note: the driver must want to bind to the device,</span>", 
"<span class=\"comment\"> * it is not possible to override the driver's id table.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#driver_bind\">driver_bind</a>(struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#bus_get\">bus_get</a>(<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#bus_find_device_by_name\">bus_find_device_by_name</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a> == <a class=\"id\" href=\"#NULL\">NULL</a> && <a class=\"id\" href=\"#driver_match_device\">driver_match_device</a>(<a class=\"id\" href=\"#drv\">drv</a>, <a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>)<span class=\"ts\"/><span class=\"comment\">/* Needed for USB */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_lock\">device_lock</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_lock\">device_lock</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#driver_probe_device\">driver_probe_device</a>(<a class=\"id\" href=\"#drv\">drv</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_unlock\">device_unlock</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_unlock\">device_unlock</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* success */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#err\">err</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* driver didn't accept device */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus_put\">bus_put</a>(<a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"static <a class=\"id\" href=\"#DRIVER_ATTR\">DRIVER_ATTR</a>(<a class=\"id\" href=\"#bind\">bind</a>, <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#driver_bind\">driver_bind</a>);", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_drivers_autoprobe\">show_drivers_autoprobe</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%d\\n\", <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#drivers_autoprobe\">drivers_autoprobe</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#store_drivers_autoprobe\">store_drivers_autoprobe</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buf\">buf</a>[0] == '0')", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#drivers_autoprobe\">drivers_autoprobe</a> = 0;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#drivers_autoprobe\">drivers_autoprobe</a> = 1;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#store_drivers_probe\">store_drivers_probe</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#bus_find_device_by_name\">bus_find_device_by_name</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bus_rescan_devices_helper\">bus_rescan_devices_helper</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#NULL\">NULL</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#next_device\">next_device</a>(struct <a class=\"id\" href=\"#klist_iter\">klist_iter</a> *<a class=\"id\" href=\"#i\">i</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#klist_node\">klist_node</a> *<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#klist_next\">klist_next</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_private\">device_private</a> *<a class=\"id\" href=\"#dev_prv\">dev_prv</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_prv\">dev_prv</a> = <a class=\"id\" href=\"#to_device_private_bus\">to_device_private_bus</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev_prv\">dev_prv</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bus_for_each_dev - device iterator.</span>", 
"<span class=\"comment\"> * @bus: bus type.</span>", 
"<span class=\"comment\"> * @start: device to start iterating from.</span>", 
"<span class=\"comment\"> * @data: data for the callback.</span>", 
"<span class=\"comment\"> * @fn: function to be called for each device.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Iterate over @bus's list of devices, and call @fn for each,</span>", 
"<span class=\"comment\"> * passing it @data. If @start is not NULL, we use that device to</span>", 
"<span class=\"comment\"> * begin iterating from.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We check the return of @fn each time. If it returns anything</span>", 
"<span class=\"comment\"> * other than 0, we break out and return that value.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: The device that returns a non-zero value is not retained</span>", 
"<span class=\"comment\"> * in any way, nor is its refcount incremented. If the caller needs</span>", 
"<span class=\"comment\"> * to retain this data, it should do so, and increment the reference</span>", 
"<span class=\"comment\"> * count in the supplied callback.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#bus_for_each_dev\">bus_for_each_dev</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>, struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     void *<a class=\"id\" href=\"#data\">data</a>, int (*<a class=\"id\" href=\"#fn\">fn</a>)(struct <a class=\"id\" href=\"#device\">device</a> *, void *))", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#klist_iter\">klist_iter</a> <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bus\">bus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#klist_iter_init_node\">klist_iter_init_node</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#klist_devices\">klist_devices</a>, &amp;<a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (<a class=\"id\" href=\"#start\">start</a> ? &amp;<a class=\"id\" href=\"#start\">start</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#knode_bus\">knode_bus</a> : <a class=\"id\" href=\"#NULL\">NULL</a>));", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#next_device\">next_device</a>(&amp;<a class=\"id\" href=\"#i\">i</a>)) && !<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#fn\">fn</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#klist_iter_exit\">klist_iter_exit</a>(&amp;<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#bus_for_each_dev\">bus_for_each_dev</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bus_find_device - device iterator for locating a particular device.</span>", 
"<span class=\"comment\"> * @bus: bus type</span>", 
"<span class=\"comment\"> * @start: Device to begin with</span>", 
"<span class=\"comment\"> * @data: Data to pass to match function</span>", 
"<span class=\"comment\"> * @match: Callback function to check device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is similar to the bus_for_each_dev() function above, but it</span>", 
"<span class=\"comment\"> * returns a reference to a device that is 'found' for later use, as</span>", 
"<span class=\"comment\"> * determined by the @match callback.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The callback should return 0 if the device doesn't match and non-zero</span>", 
"<span class=\"comment\"> * if it does.  If the callback returns non-zero, this function will</span>", 
"<span class=\"comment\"> * return to the caller and not iterate over any more devices.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#bus_find_device\">bus_find_device</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#start\">start</a>, void *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       int (*<a class=\"id\" href=\"#match\">match</a>)(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#data\">data</a>))", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#klist_iter\">klist_iter</a> <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bus\">bus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#klist_iter_init_node\">klist_iter_init_node</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#klist_devices\">klist_devices</a>, &amp;<a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (<a class=\"id\" href=\"#start\">start</a> ? &amp;<a class=\"id\" href=\"#start\">start</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#knode_bus\">knode_bus</a> : <a class=\"id\" href=\"#NULL\">NULL</a>));", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#next_device\">next_device</a>(&amp;<a class=\"id\" href=\"#i\">i</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match\">match</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#data\">data</a>) && <a class=\"id\" href=\"#get_device\">get_device</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#klist_iter_exit\">klist_iter_exit</a>(&amp;<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#bus_find_device\">bus_find_device</a>);", 
"", 
"static int <a class=\"id\" href=\"#match_name\">match_name</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sysfs_streq\">sysfs_streq</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bus_find_device_by_name - device iterator for locating a particular device of a specific name</span>", 
"<span class=\"comment\"> * @bus: bus type</span>", 
"<span class=\"comment\"> * @start: Device to begin with</span>", 
"<span class=\"comment\"> * @name: name of the device to match</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is similar to the bus_find_device() function above, but it handles</span>", 
"<span class=\"comment\"> * searching by a name automatically, no need to write another strcmp matching</span>", 
"<span class=\"comment\"> * function.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#bus_find_device_by_name\">bus_find_device_by_name</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#start\">start</a>, const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bus_find_device\">bus_find_device</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#start\">start</a>, (void *)<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#match_name\">match_name</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#bus_find_device_by_name\">bus_find_device_by_name</a>);", 
"", 
"static struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#next_driver\">next_driver</a>(struct <a class=\"id\" href=\"#klist_iter\">klist_iter</a> *<a class=\"id\" href=\"#i\">i</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#klist_node\">klist_node</a> *<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#klist_next\">klist_next</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#driver_private\">driver_private</a> *<a class=\"id\" href=\"#drv_priv\">drv_priv</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drv_priv\">drv_priv</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#n\">n</a>, struct <a class=\"id\" href=\"#driver_private\">driver_private</a>, <a class=\"id\" href=\"#knode_bus\">knode_bus</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#drv_priv\">drv_priv</a>-><a class=\"id\" href=\"#driver\">driver</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bus_for_each_drv - driver iterator</span>", 
"<span class=\"comment\"> * @bus: bus we're dealing with.</span>", 
"<span class=\"comment\"> * @start: driver to start iterating on.</span>", 
"<span class=\"comment\"> * @data: data to pass to the callback.</span>", 
"<span class=\"comment\"> * @fn: function to call for each driver.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is nearly identical to the device iterator above.</span>", 
"<span class=\"comment\"> * We iterate over each driver that belongs to @bus, and call</span>", 
"<span class=\"comment\"> * @fn for each. If @fn returns anything but 0, we break out</span>", 
"<span class=\"comment\"> * and return it. If @start is not NULL, we use it as the head</span>", 
"<span class=\"comment\"> * of the list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: we don't return the driver that returns a non-zero</span>", 
"<span class=\"comment\"> * value, nor do we leave the reference count incremented for that</span>", 
"<span class=\"comment\"> * driver. If the caller needs to know that info, it must set it</span>", 
"<span class=\"comment\"> * in the callback. It must also be sure to increment the refcount</span>", 
"<span class=\"comment\"> * so it doesn't disappear before returning to the caller.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#bus_for_each_drv\">bus_for_each_drv</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>, struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     void *<a class=\"id\" href=\"#data\">data</a>, int (*<a class=\"id\" href=\"#fn\">fn</a>)(struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *, void *))", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#klist_iter\">klist_iter</a> <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bus\">bus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#klist_iter_init_node\">klist_iter_init_node</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#klist_drivers\">klist_drivers</a>, &amp;<a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#start\">start</a> ? &amp;<a class=\"id\" href=\"#start\">start</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#knode_bus\">knode_bus</a> : <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#next_driver\">next_driver</a>(&amp;<a class=\"id\" href=\"#i\">i</a>)) && !<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#fn\">fn</a>(<a class=\"id\" href=\"#drv\">drv</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#klist_iter_exit\">klist_iter_exit</a>(&amp;<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#bus_for_each_drv\">bus_for_each_drv</a>);", 
"", 
"static int <a class=\"id\" href=\"#device_add_attrs\">device_add_attrs</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>, struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#dev_attrs\">dev_attrs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#attr_name\">attr_name</a>(<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#dev_attrs\">dev_attrs</a>[<a class=\"id\" href=\"#i\">i</a>]); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_create_file\">device_create_file</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#dev_attrs\">dev_attrs</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (--<a class=\"id\" href=\"#i\">i</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_remove_file\">device_remove_file</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#dev_attrs\">dev_attrs</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#device_remove_attrs\">device_remove_attrs</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>, struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#dev_attrs\">dev_attrs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#attr_name\">attr_name</a>(<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#dev_attrs\">dev_attrs</a>[<a class=\"id\" href=\"#i\">i</a>]); <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_remove_file\">device_remove_file</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#dev_attrs\">dev_attrs</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSFS_DEPRECATED\">CONFIG_SYSFS_DEPRECATED</a>", 
"static int <a class=\"id\" href=\"#make_deprecated_bus_links\">make_deprecated_bus_links</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sysfs_create_link\">sysfs_create_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#subsys\">subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a>, \"bus\");", 
"}", 
"", 
"static void <a class=\"id\" href=\"#remove_deprecated_bus_links\">remove_deprecated_bus_links</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, \"bus\");", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#make_deprecated_bus_links\">make_deprecated_bus_links</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>) { return 0; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#remove_deprecated_bus_links\">remove_deprecated_bus_links</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>) { }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bus_add_device - add device to bus</span>", 
"<span class=\"comment\"> * @dev: device being added</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * - Add device's bus attributes.</span>", 
"<span class=\"comment\"> * - Create links to device's bus.</span>", 
"<span class=\"comment\"> * - Add the device to its bus's list of devices.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#bus_add_device\">bus_add_device</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#bus_get\">bus_get</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bus\">bus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"bus: '%s': add device %s\\n\", <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_add_attrs\">device_add_attrs</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put\">out_put</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysfs_create_link\">sysfs_create_link</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#devices_kset\">devices_kset</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_id\">out_id</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysfs_create_link\">sysfs_create_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#subsys\">subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a>, \"subsystem\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_subsys\">out_subsys</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#make_deprecated_bus_links\">make_deprecated_bus_links</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_deprecated\">out_deprecated</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#klist_add_tail\">klist_add_tail</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#knode_bus\">knode_bus</a>, &amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#klist_devices\">klist_devices</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out_deprecated\">out_deprecated</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, \"subsystem\");", 
"<a class=\"id\" href=\"#out_subsys\">out_subsys</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#devices_kset\">devices_kset</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"<a class=\"id\" href=\"#out_id\">out_id</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_remove_attrs\">device_remove_attrs</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<a class=\"id\" href=\"#out_put\">out_put</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus_put\">bus_put</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bus_probe_device - probe drivers for a new device</span>", 
"<span class=\"comment\"> * @dev: device to probe</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * - Automatically probe for a driver if the bus allows it.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#bus_probe_device\">bus_probe_device</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bus\">bus</a> && <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#drivers_autoprobe\">drivers_autoprobe</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#device_attach\">device_attach</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#ret\">ret</a> &lt; 0);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bus_remove_device - remove device from bus</span>", 
"<span class=\"comment\"> * @dev: device to be removed</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * - Remove symlink from bus's directory.</span>", 
"<span class=\"comment\"> * - Delete device from bus's list.</span>", 
"<span class=\"comment\"> * - Detach from its driver.</span>", 
"<span class=\"comment\"> * - Drop reference taken in bus_add_device().</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#bus_remove_device\">bus_remove_device</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, \"subsystem\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remove_deprecated_bus_links\">remove_deprecated_bus_links</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#devices_kset\">devices_kset</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_remove_attrs\">device_remove_attrs</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#klist_node_attached\">klist_node_attached</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#knode_bus\">knode_bus</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#klist_del\">klist_del</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#knode_bus\">knode_bus</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"bus: '%s': remove device %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_release_driver\">device_release_driver</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus_put\">bus_put</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#driver_add_attrs\">driver_add_attrs</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>, struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#drv_attrs\">drv_attrs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#attr_name\">attr_name</a>(<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#drv_attrs\">drv_attrs</a>[<a class=\"id\" href=\"#i\">i</a>]); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#driver_create_file\">driver_create_file</a>(<a class=\"id\" href=\"#drv\">drv</a>, &amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#drv_attrs\">drv_attrs</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/>while (--<a class=\"id\" href=\"#i\">i</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver_remove_file\">driver_remove_file</a>(<a class=\"id\" href=\"#drv\">drv</a>, &amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#drv_attrs\">drv_attrs</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#driver_remove_attrs\">driver_remove_attrs</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#drv_attrs\">drv_attrs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#attr_name\">attr_name</a>(<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#drv_attrs\">drv_attrs</a>[<a class=\"id\" href=\"#i\">i</a>]); <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver_remove_file\">driver_remove_file</a>(<a class=\"id\" href=\"#drv\">drv</a>, &amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#drv_attrs\">drv_attrs</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG\">CONFIG_HOTPLUG</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Thanks to drivers making their tables __devinit, we can't allow manual</span>", 
"<span class=\"comment\"> * bind and unbind from userspace unless CONFIG_HOTPLUG is enabled.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#add_bind_files\">add_bind_files</a>(struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#driver_create_file\">driver_create_file</a>(<a class=\"id\" href=\"#drv\">drv</a>, &amp;<a class=\"id\" href=\"#driver_attr_unbind\">driver_attr_unbind</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#driver_create_file\">driver_create_file</a>(<a class=\"id\" href=\"#drv\">drv</a>, &amp;<a class=\"id\" href=\"#driver_attr_bind\">driver_attr_bind</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver_remove_file\">driver_remove_file</a>(<a class=\"id\" href=\"#drv\">drv</a>, &amp;<a class=\"id\" href=\"#driver_attr_unbind\">driver_attr_unbind</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#remove_bind_files\">remove_bind_files</a>(struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#driver_remove_file\">driver_remove_file</a>(<a class=\"id\" href=\"#drv\">drv</a>, &amp;<a class=\"id\" href=\"#driver_attr_bind\">driver_attr_bind</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#driver_remove_file\">driver_remove_file</a>(<a class=\"id\" href=\"#drv\">drv</a>, &amp;<a class=\"id\" href=\"#driver_attr_unbind\">driver_attr_unbind</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#BUS_ATTR\">BUS_ATTR</a>(<a class=\"id\" href=\"#drivers_probe\">drivers_probe</a>, <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#store_drivers_probe\">store_drivers_probe</a>);", 
"static <a class=\"id\" href=\"#BUS_ATTR\">BUS_ATTR</a>(<a class=\"id\" href=\"#drivers_autoprobe\">drivers_autoprobe</a>, <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a> | <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#show_drivers_autoprobe\">show_drivers_autoprobe</a>, <a class=\"id\" href=\"#store_drivers_autoprobe\">store_drivers_autoprobe</a>);", 
"", 
"static int <a class=\"id\" href=\"#add_probe_files\">add_probe_files</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#bus_create_file\">bus_create_file</a>(<a class=\"id\" href=\"#bus\">bus</a>, &amp;<a class=\"id\" href=\"#bus_attr_drivers_probe\">bus_attr_drivers_probe</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#bus_create_file\">bus_create_file</a>(<a class=\"id\" href=\"#bus\">bus</a>, &amp;<a class=\"id\" href=\"#bus_attr_drivers_autoprobe\">bus_attr_drivers_autoprobe</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus_remove_file\">bus_remove_file</a>(<a class=\"id\" href=\"#bus\">bus</a>, &amp;<a class=\"id\" href=\"#bus_attr_drivers_probe\">bus_attr_drivers_probe</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#remove_probe_files\">remove_probe_files</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus_remove_file\">bus_remove_file</a>(<a class=\"id\" href=\"#bus\">bus</a>, &amp;<a class=\"id\" href=\"#bus_attr_drivers_autoprobe\">bus_attr_drivers_autoprobe</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus_remove_file\">bus_remove_file</a>(<a class=\"id\" href=\"#bus\">bus</a>, &amp;<a class=\"id\" href=\"#bus_attr_drivers_probe\">bus_attr_drivers_probe</a>);", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#add_bind_files\">add_bind_files</a>(struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>) { return 0; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#remove_bind_files\">remove_bind_files</a>(struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>) {}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#add_probe_files\">add_probe_files</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>) { return 0; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#remove_probe_files\">remove_probe_files</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>) {}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#driver_uevent_store\">driver_uevent_store</a>(struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#kobject_action\">kobject_action</a> <a class=\"id\" href=\"#action\">action</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#kobject_action_type\">kobject_action_type</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, &amp;<a class=\"id\" href=\"#action\">action</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>(&amp;<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#action\">action</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"static <a class=\"id\" href=\"#DRIVER_ATTR\">DRIVER_ATTR</a>(<a class=\"id\" href=\"#uevent\">uevent</a>, <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#driver_uevent_store\">driver_uevent_store</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bus_add_driver - Add a driver to the bus.</span>", 
"<span class=\"comment\"> * @drv: driver.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#bus_add_driver\">bus_add_driver</a>(struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#driver_private\">driver_private</a> *<a class=\"id\" href=\"#priv\">priv</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#bus_get\">bus_get</a>(<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bus\">bus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"bus: '%s': add driver %s\\n\", <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#priv\">priv</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#priv\">priv</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put_bus\">out_put_bus</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#klist_init\">klist_init</a>(&amp;<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#klist_devices\">klist_devices</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#driver\">driver</a> = <a class=\"id\" href=\"#drv\">drv</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#priv\">priv</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#kobj\">kobj</a>.<a class=\"id\" href=\"#kset\">kset</a> = <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#drivers_kset\">drivers_kset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#kobject_init_and_add\">kobject_init_and_add</a>(&amp;<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#driver_ktype\">driver_ktype</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \"%s\", <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unregister\">out_unregister</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#drivers_autoprobe\">drivers_autoprobe</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#driver_attach\">driver_attach</a>(<a class=\"id\" href=\"#drv\">drv</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unregister\">out_unregister</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#klist_add_tail\">klist_add_tail</a>(&amp;<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#knode_bus\">knode_bus</a>, &amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#klist_drivers\">klist_drivers</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_add_driver\">module_add_driver</a>(<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#owner\">owner</a>, <a class=\"id\" href=\"#drv\">drv</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#driver_create_file\">driver_create_file</a>(<a class=\"id\" href=\"#drv\">drv</a>, &amp;<a class=\"id\" href=\"#driver_attr_uevent\">driver_attr_uevent</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: uevent attr (%s) failed\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#driver_add_attrs\">driver_add_attrs</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#drv\">drv</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* How the hell do we get out of this pickle? Give up */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: driver_add_attrs(%s) failed\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#suppress_bind_attrs\">suppress_bind_attrs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#add_bind_files\">add_bind_files</a>(<a class=\"id\" href=\"#drv\">drv</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Ditto */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: add_bind_files(%s) failed\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>(&amp;<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#KOBJ_ADD\">KOBJ_ADD</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out_unregister\">out_unregister</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_put\">kobject_put</a>(&amp;<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<a class=\"id\" href=\"#out_put_bus\">out_put_bus</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus_put\">bus_put</a>(<a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bus_remove_driver - delete driver from bus's knowledge.</span>", 
"<span class=\"comment\"> * @drv: driver.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Detach the driver from the devices it controls, and remove</span>", 
"<span class=\"comment\"> * it from its bus's list of drivers. Finally, we drop the reference</span>", 
"<span class=\"comment\"> * to the bus we took in bus_add_driver().</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#bus_remove_driver\">bus_remove_driver</a>(struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#bus\">bus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#suppress_bind_attrs\">suppress_bind_attrs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remove_bind_files\">remove_bind_files</a>(<a class=\"id\" href=\"#drv\">drv</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#driver_remove_attrs\">driver_remove_attrs</a>(<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#drv\">drv</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#driver_remove_file\">driver_remove_file</a>(<a class=\"id\" href=\"#drv\">drv</a>, &amp;<a class=\"id\" href=\"#driver_attr_uevent\">driver_attr_uevent</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#klist_remove\">klist_remove</a>(&amp;<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#knode_bus\">knode_bus</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"bus: '%s': remove driver %s\\n\", <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#driver_detach\">driver_detach</a>(<a class=\"id\" href=\"#drv\">drv</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_remove_driver\">module_remove_driver</a>(<a class=\"id\" href=\"#drv\">drv</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_put\">kobject_put</a>(&amp;<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus_put\">bus_put</a>(<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#bus\">bus</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Helper for bus_rescan_devices's iter */</span>", 
"static int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#bus_rescan_devices_helper\">bus_rescan_devices_helper</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>)<span class=\"ts\"/><span class=\"comment\">/* Needed for USB */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_lock\">device_lock</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#device_attach\">device_attach</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_unlock\">device_unlock</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a> &lt; 0 ? <a class=\"id\" href=\"#ret\">ret</a> : 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bus_rescan_devices - rescan devices on the bus for possible drivers</span>", 
"<span class=\"comment\"> * @bus: the bus to scan.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function will look for devices on the bus with no driver</span>", 
"<span class=\"comment\"> * attached and rescan it against existing drivers to see if it matches</span>", 
"<span class=\"comment\"> * any by calling device_attach() for the unbound devices.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#bus_rescan_devices\">bus_rescan_devices</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bus_for_each_dev\">bus_for_each_dev</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#bus_rescan_devices_helper\">bus_rescan_devices_helper</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#bus_rescan_devices\">bus_rescan_devices</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_reprobe - remove driver for a device and probe for a new driver</span>", 
"<span class=\"comment\"> * @dev: the device to reprobe</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function detaches the attached driver (if any) for the given</span>", 
"<span class=\"comment\"> * device and restarts the driver probing process.  It is intended</span>", 
"<span class=\"comment\"> * to use if probing criteria changed during a devices lifetime and</span>", 
"<span class=\"comment\"> * driver attachment should change accordingly.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#device_reprobe\">device_reprobe</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>)        <span class=\"comment\">/* Needed for USB */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_lock\">device_lock</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_release_driver\">device_release_driver</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_unlock\">device_unlock</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bus_rescan_devices_helper\">bus_rescan_devices_helper</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#device_reprobe\">device_reprobe</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * find_bus - locate bus by name.</span>", 
"<span class=\"comment\"> * @name: name of bus.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Call kset_find_obj() to iterate over list of buses to</span>", 
"<span class=\"comment\"> * find a bus by name. Return bus if found.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note that kset_find_obj increments bus' reference count.</span>", 
"<span class=\"comment\"> */</span>", 
"#if 0", 
"struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#find_bus\">find_bus</a>(char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#k\">k</a> = <a class=\"id\" href=\"#kset_find_obj\">kset_find_obj</a>(<a class=\"id\" href=\"#bus_kset\">bus_kset</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#k\">k</a> ? <a class=\"id\" href=\"#to_bus\">to_bus</a>(<a class=\"id\" href=\"#k\">k</a>) : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>  <span class=\"comment\">/*  0  */</span>", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bus_add_attrs - Add default attributes for this bus.</span>", 
"<span class=\"comment\"> * @bus: Bus that has just been registered.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#bus_add_attrs\">bus_add_attrs</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#bus_attrs\">bus_attrs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#attr_name\">attr_name</a>(<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#bus_attrs\">bus_attrs</a>[<a class=\"id\" href=\"#i\">i</a>]); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#bus_create_file\">bus_create_file</a>(<a class=\"id\" href=\"#bus\">bus</a>, &amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#bus_attrs\">bus_attrs</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/>while (--<a class=\"id\" href=\"#i\">i</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus_remove_file\">bus_remove_file</a>(<a class=\"id\" href=\"#bus\">bus</a>, &amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#bus_attrs\">bus_attrs</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#bus_remove_attrs\">bus_remove_attrs</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#bus_attrs\">bus_attrs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#attr_name\">attr_name</a>(<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#bus_attrs\">bus_attrs</a>[<a class=\"id\" href=\"#i\">i</a>]); <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus_remove_file\">bus_remove_file</a>(<a class=\"id\" href=\"#bus\">bus</a>, &amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#bus_attrs\">bus_attrs</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#klist_devices_get\">klist_devices_get</a>(struct <a class=\"id\" href=\"#klist_node\">klist_node</a> *<a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_private\">device_private</a> *<a class=\"id\" href=\"#dev_prv\">dev_prv</a> = <a class=\"id\" href=\"#to_device_private_bus\">to_device_private_bus</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev_prv\">dev_prv</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_device\">get_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#klist_devices_put\">klist_devices_put</a>(struct <a class=\"id\" href=\"#klist_node\">klist_node</a> *<a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_private\">device_private</a> *<a class=\"id\" href=\"#dev_prv\">dev_prv</a> = <a class=\"id\" href=\"#to_device_private_bus\">to_device_private_bus</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev_prv\">dev_prv</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#bus_uevent_store\">bus_uevent_store</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#kobject_action\">kobject_action</a> <a class=\"id\" href=\"#action\">action</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#kobject_action_type\">kobject_action_type</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, &amp;<a class=\"id\" href=\"#action\">action</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#subsys\">subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#action\">action</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"static <a class=\"id\" href=\"#BUS_ATTR\">BUS_ATTR</a>(<a class=\"id\" href=\"#uevent\">uevent</a>, <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#bus_uevent_store\">bus_uevent_store</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bus_register - register a bus with the system.</span>", 
"<span class=\"comment\"> * @bus: bus.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Once we have that, we registered the bus with the kobject</span>", 
"<span class=\"comment\"> * infrastructure, then register the children subsystems it has:</span>", 
"<span class=\"comment\"> * the devices and drivers that belong to the bus.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#bus_register\">bus_register</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bus_type_private\">bus_type_private</a> *<a class=\"id\" href=\"#priv\">priv</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#bus_type_private\">bus_type_private</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#priv\">priv</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#priv\">priv</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BLOCKING_INIT_NOTIFIER_HEAD\">BLOCKING_INIT_NOTIFIER_HEAD</a>(&amp;<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#bus_notifier\">bus_notifier</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#kobject_set_name\">kobject_set_name</a>(&amp;<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#subsys\">subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a>, \"%s\", <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#subsys\">subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a>.<a class=\"id\" href=\"#kset\">kset</a> = <a class=\"id\" href=\"#bus_kset\">bus_kset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#subsys\">subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a>.<a class=\"id\" href=\"#ktype\">ktype</a> = &amp;<a class=\"id\" href=\"#bus_ktype\">bus_ktype</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#drivers_autoprobe\">drivers_autoprobe</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#kset_register\">kset_register</a>(&amp;<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#subsys\">subsys</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#bus_create_file\">bus_create_file</a>(<a class=\"id\" href=\"#bus\">bus</a>, &amp;<a class=\"id\" href=\"#bus_attr_uevent\">bus_attr_uevent</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bus_uevent_fail\">bus_uevent_fail</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#devices_kset\">devices_kset</a> = <a class=\"id\" href=\"#kset_create_and_add\">kset_create_and_add</a>(\"devices\", <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#subsys\">subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#devices_kset\">devices_kset</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bus_devices_fail\">bus_devices_fail</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#drivers_kset\">drivers_kset</a> = <a class=\"id\" href=\"#kset_create_and_add\">kset_create_and_add</a>(\"drivers\", <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#subsys\">subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#drivers_kset\">drivers_kset</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bus_drivers_fail\">bus_drivers_fail</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#klist_init\">klist_init</a>(&amp;<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#klist_devices\">klist_devices</a>, <a class=\"id\" href=\"#klist_devices_get\">klist_devices_get</a>, <a class=\"id\" href=\"#klist_devices_put\">klist_devices_put</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#klist_init\">klist_init</a>(&amp;<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#klist_drivers\">klist_drivers</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#add_probe_files\">add_probe_files</a>(<a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bus_probe_files_fail\">bus_probe_files_fail</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#bus_add_attrs\">bus_add_attrs</a>(<a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bus_attrs_fail\">bus_attrs_fail</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"bus: '%s': registered\\n\", <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#bus_attrs_fail\">bus_attrs_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remove_probe_files\">remove_probe_files</a>(<a class=\"id\" href=\"#bus\">bus</a>);", 
"<a class=\"id\" href=\"#bus_probe_files_fail\">bus_probe_files_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kset_unregister\">kset_unregister</a>(<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#drivers_kset\">drivers_kset</a>);", 
"<a class=\"id\" href=\"#bus_drivers_fail\">bus_drivers_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kset_unregister\">kset_unregister</a>(<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#devices_kset\">devices_kset</a>);", 
"<a class=\"id\" href=\"#bus_devices_fail\">bus_devices_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus_remove_file\">bus_remove_file</a>(<a class=\"id\" href=\"#bus\">bus</a>, &amp;<a class=\"id\" href=\"#bus_attr_uevent\">bus_attr_uevent</a>);", 
"<a class=\"id\" href=\"#bus_uevent_fail\">bus_uevent_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kset_unregister\">kset_unregister</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#subsys\">subsys</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#bus_register\">bus_register</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * bus_unregister - remove a bus from the system</span>", 
"<span class=\"comment\"> * @bus: bus.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Unregister the child subsystems and the bus itself.</span>", 
"<span class=\"comment\"> * Finally, we call bus_put() to release the refcount</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#bus_unregister\">bus_unregister</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"bus: '%s': unregistering\\n\", <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus_remove_attrs\">bus_remove_attrs</a>(<a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remove_probe_files\">remove_probe_files</a>(<a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kset_unregister\">kset_unregister</a>(<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#drivers_kset\">drivers_kset</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kset_unregister\">kset_unregister</a>(<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#devices_kset\">devices_kset</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus_remove_file\">bus_remove_file</a>(<a class=\"id\" href=\"#bus\">bus</a>, &amp;<a class=\"id\" href=\"#bus_attr_uevent\">bus_attr_uevent</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kset_unregister\">kset_unregister</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#subsys\">subsys</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#bus_unregister\">bus_unregister</a>);", 
"", 
"int <a class=\"id\" href=\"#bus_register_notifier\">bus_register_notifier</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>, struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#blocking_notifier_chain_register\">blocking_notifier_chain_register</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#bus_notifier\">bus_notifier</a>, <a class=\"id\" href=\"#nb\">nb</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#bus_register_notifier\">bus_register_notifier</a>);", 
"", 
"int <a class=\"id\" href=\"#bus_unregister_notifier\">bus_unregister_notifier</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>, struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#blocking_notifier_chain_unregister\">blocking_notifier_chain_unregister</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#bus_notifier\">bus_notifier</a>, <a class=\"id\" href=\"#nb\">nb</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#bus_unregister_notifier\">bus_unregister_notifier</a>);", 
"", 
"struct <a class=\"id\" href=\"#kset\">kset</a> *<a class=\"id\" href=\"#bus_get_kset\">bus_get_kset</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#subsys\">subsys</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#bus_get_kset\">bus_get_kset</a>);", 
"", 
"struct <a class=\"id\" href=\"#klist\">klist</a> *<a class=\"id\" href=\"#bus_get_device_klist\">bus_get_device_klist</a>(struct <a class=\"id\" href=\"#bus_type\">bus_type</a> *<a class=\"id\" href=\"#bus\">bus</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#klist_devices\">klist_devices</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#bus_get_device_klist\">bus_get_device_klist</a>);", 
];
xr_frag_insert('l/f3/f919f3d60246402e1990c56fa7f1d38f98ba02.xr', __xr_tmp);
