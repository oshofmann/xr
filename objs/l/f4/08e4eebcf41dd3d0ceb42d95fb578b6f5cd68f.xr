var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 1993, 1994, 1995, 1996, 1997 Free Software Foundation, Inc.</span>", 
"<span class=\"comment\"> * This file is part of the GNU C Library.</span>", 
"<span class=\"comment\"> * Contributed by Paul Eggert (eggert@twinsun.com).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The GNU C Library is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> * modify it under the terms of the GNU Library General Public License as</span>", 
"<span class=\"comment\"> * published by the Free Software Foundation; either version 2 of the</span>", 
"<span class=\"comment\"> * License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The GNU C Library is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>", 
"<span class=\"comment\"> * Library General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU Library General Public</span>", 
"<span class=\"comment\"> * License along with the GNU C Library; see the file COPYING.LIB.  If not,</span>", 
"<span class=\"comment\"> * write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,</span>", 
"<span class=\"comment\"> * Boston, MA 02111-1307, USA.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Converts the calendar time to broken-down time representation</span>", 
"<span class=\"comment\"> * Based on code from glibc-2.6</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * 2009-7-14:</span>", 
"<span class=\"comment\"> *   Moved from glibc-2.6 to kernel by Zhaolei&lt;zhaolei@cn.fujitsu.com&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Nonzero if YEAR is a leap year (every 4 years,</span>", 
"<span class=\"comment\"> * except every 100th isn't, and every 400th is).</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__isleap\">__isleap</a>(long <a class=\"id\" href=\"#year\">year</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#year\">year</a>) % 4 == 0 && ((<a class=\"id\" href=\"#year\">year</a>) % 100 != 0 || (<a class=\"id\" href=\"#year\">year</a>) % 400 == 0);", 
"}", 
"", 
"<span class=\"comment\">/* do a mathdiv for long type */</span>", 
"static long <a class=\"id\" href=\"#math_div\">math_div</a>(long <a class=\"id\" href=\"#a\">a</a>, long <a class=\"id\" href=\"#b\">b</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#a\">a</a> / <a class=\"id\" href=\"#b\">b</a> - (<a class=\"id\" href=\"#a\">a</a> % <a class=\"id\" href=\"#b\">b</a> &lt; 0);", 
"}", 
"", 
"<span class=\"comment\">/* How many leap years between y1 and y2, y1 must less or equal to y2 */</span>", 
"static long <a class=\"id\" href=\"#leaps_between\">leaps_between</a>(long <a class=\"id\" href=\"#y1\">y1</a>, long <a class=\"id\" href=\"#y2\">y2</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#leaps1\">leaps1</a> = <a class=\"id\" href=\"#math_div\">math_div</a>(<a class=\"id\" href=\"#y1\">y1</a> - 1, 4) - <a class=\"id\" href=\"#math_div\">math_div</a>(<a class=\"id\" href=\"#y1\">y1</a> - 1, 100)", 
"<span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#math_div\">math_div</a>(<a class=\"id\" href=\"#y1\">y1</a> - 1, 400);", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#leaps2\">leaps2</a> = <a class=\"id\" href=\"#math_div\">math_div</a>(<a class=\"id\" href=\"#y2\">y2</a> - 1, 4) - <a class=\"id\" href=\"#math_div\">math_div</a>(<a class=\"id\" href=\"#y2\">y2</a> - 1, 100)", 
"<span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#math_div\">math_div</a>(<a class=\"id\" href=\"#y2\">y2</a> - 1, 400);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#leaps2\">leaps2</a> - <a class=\"id\" href=\"#leaps1\">leaps1</a>;", 
"}", 
"", 
"<span class=\"comment\">/* How many days come before each month (0-12). */</span>", 
"static const unsigned short <a class=\"id\" href=\"#__mon_yday\">__mon_yday</a>[2][13] = {", 
"<span class=\"ts\"/><span class=\"comment\">/* Normal years. */</span>", 
"<span class=\"ts\"/>{0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365},", 
"<span class=\"ts\"/><span class=\"comment\">/* Leap years. */</span>", 
"<span class=\"ts\"/>{0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366}", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SECS_PER_HOUR\">SECS_PER_HOUR</a><span class=\"ts\"/>(60 * 60)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SECS_PER_DAY\">SECS_PER_DAY</a><span class=\"ts\"/>(<a class=\"id\" href=\"#SECS_PER_HOUR\">SECS_PER_HOUR</a> * 24)", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * time_to_tm - converts the calendar time to local broken-down time</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @totalsecs<span class=\"ts\"/>the number of seconds elapsed since 00:00:00 on January 1, 1970,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Coordinated Universal Time (UTC).</span>", 
"<span class=\"comment\"> * @offset<span class=\"ts\"/>offset seconds adding to totalsecs.</span>", 
"<span class=\"comment\"> * @result<span class=\"ts\"/>pointer to struct tm variable to receive broken-down time</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#time_to_tm\">time_to_tm</a>(<a class=\"id\" href=\"#time_t\">time_t</a> <a class=\"id\" href=\"#totalsecs\">totalsecs</a>, int <a class=\"id\" href=\"#offset\">offset</a>, struct <a class=\"id\" href=\"#tm\">tm</a> *<a class=\"id\" href=\"#result\">result</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#days\">days</a>, <a class=\"id\" href=\"#rem\">rem</a>, <a class=\"id\" href=\"#y\">y</a>;", 
"<span class=\"ts\"/>const unsigned short *<a class=\"id\" href=\"#ip\">ip</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#days\">days</a> = <a class=\"id\" href=\"#totalsecs\">totalsecs</a> / <a class=\"id\" href=\"#SECS_PER_DAY\">SECS_PER_DAY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rem\">rem</a> = <a class=\"id\" href=\"#totalsecs\">totalsecs</a> % <a class=\"id\" href=\"#SECS_PER_DAY\">SECS_PER_DAY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rem\">rem</a> += <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#rem\">rem</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rem\">rem</a> += <a class=\"id\" href=\"#SECS_PER_DAY\">SECS_PER_DAY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>--<a class=\"id\" href=\"#days\">days</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#rem\">rem</a> >= <a class=\"id\" href=\"#SECS_PER_DAY\">SECS_PER_DAY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rem\">rem</a> -= <a class=\"id\" href=\"#SECS_PER_DAY\">SECS_PER_DAY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#days\">days</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a>-><a class=\"id\" href=\"#tm_hour\">tm_hour</a> = <a class=\"id\" href=\"#rem\">rem</a> / <a class=\"id\" href=\"#SECS_PER_HOUR\">SECS_PER_HOUR</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rem\">rem</a> %= <a class=\"id\" href=\"#SECS_PER_HOUR\">SECS_PER_HOUR</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a>-><a class=\"id\" href=\"#tm_min\">tm_min</a> = <a class=\"id\" href=\"#rem\">rem</a> / 60;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a>-><a class=\"id\" href=\"#tm_sec\">tm_sec</a> = <a class=\"id\" href=\"#rem\">rem</a> % 60;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* January 1, 1970 was a Thursday. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a>-><a class=\"id\" href=\"#tm_wday\">tm_wday</a> = (4 + <a class=\"id\" href=\"#days\">days</a>) % 7;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>-><a class=\"id\" href=\"#tm_wday\">tm_wday</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a>-><a class=\"id\" href=\"#tm_wday\">tm_wday</a> += 7;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#y\">y</a> = 1970;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#days\">days</a> &lt; 0 || <a class=\"id\" href=\"#days\">days</a> >= (<a class=\"id\" href=\"#__isleap\">__isleap</a>(<a class=\"id\" href=\"#y\">y</a>) ? 366 : 365)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Guess a corrected year, assuming 365 days per year. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>long <a class=\"id\" href=\"#yg\">yg</a> = <a class=\"id\" href=\"#y\">y</a> + <a class=\"id\" href=\"#math_div\">math_div</a>(<a class=\"id\" href=\"#days\">days</a>, 365);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Adjust DAYS and Y to match the guessed year. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#days\">days</a> -= (<a class=\"id\" href=\"#yg\">yg</a> - <a class=\"id\" href=\"#y\">y</a>) * 365 + <a class=\"id\" href=\"#leaps_between\">leaps_between</a>(<a class=\"id\" href=\"#y\">y</a>, <a class=\"id\" href=\"#yg\">yg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#y\">y</a> = <a class=\"id\" href=\"#yg\">yg</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a>-><a class=\"id\" href=\"#tm_year\">tm_year</a> = <a class=\"id\" href=\"#y\">y</a> - 1900;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a>-><a class=\"id\" href=\"#tm_yday\">tm_yday</a> = <a class=\"id\" href=\"#days\">days</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip\">ip</a> = <a class=\"id\" href=\"#__mon_yday\">__mon_yday</a>[<a class=\"id\" href=\"#__isleap\">__isleap</a>(<a class=\"id\" href=\"#y\">y</a>)];", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#y\">y</a> = 11; <a class=\"id\" href=\"#days\">days</a> &lt; <a class=\"id\" href=\"#ip\">ip</a>[<a class=\"id\" href=\"#y\">y</a>]; <a class=\"id\" href=\"#y\">y</a>--)", 
"<span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#days\">days</a> -= <a class=\"id\" href=\"#ip\">ip</a>[<a class=\"id\" href=\"#y\">y</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a>-><a class=\"id\" href=\"#tm_mon\">tm_mon</a> = <a class=\"id\" href=\"#y\">y</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a>-><a class=\"id\" href=\"#tm_mday\">tm_mday</a> = <a class=\"id\" href=\"#days\">days</a> + 1;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#time_to_tm\">time_to_tm</a>);", 
];
xr_frag_insert('l/f4/08e4eebcf41dd3d0ceb42d95fb578b6f5cd68f.xr', __xr_tmp);
