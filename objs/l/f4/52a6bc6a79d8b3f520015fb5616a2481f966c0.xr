var __xr_tmp = [
"<span class=\"comment\">/* Authors: Karl MacMillan &lt;kmacmillan@tresys.com&gt;</span>", 
"<span class=\"comment\"> *          Frank Mayer &lt;mayerf@tresys.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2003 - 2004 Tresys Technology, LLC</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *  <span class=\"ts\"/>it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the Free Software Foundation, version 2.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_CONDITIONAL_H_\">_CONDITIONAL_H_</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_CONDITIONAL_H_\">_CONDITIONAL_H_</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"avtab.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"symtab.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"policydb.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#COND_EXPR_MAXDEPTH\">COND_EXPR_MAXDEPTH</a> 10", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * A conditional expression is a list of operators and operands</span>", 
"<span class=\"comment\"> * in reverse polish notation.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#cond_expr\">cond_expr</a> {", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#COND_BOOL\">COND_BOOL</a><span class=\"ts\"/>1 <span class=\"comment\">/* plain bool */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#COND_NOT\">COND_NOT</a><span class=\"ts\"/>2 <span class=\"comment\">/* !bool */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#COND_OR\">COND_OR</a><span class=\"ts\"/><span class=\"ts\"/>3 <span class=\"comment\">/* bool || bool */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#COND_AND\">COND_AND</a><span class=\"ts\"/>4 <span class=\"comment\">/* bool &amp;&amp; bool */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#COND_XOR\">COND_XOR</a><span class=\"ts\"/>5 <span class=\"comment\">/* bool ^ bool */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#COND_EQ\">COND_EQ</a><span class=\"ts\"/><span class=\"ts\"/>6 <span class=\"comment\">/* bool == bool */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#COND_NEQ\">COND_NEQ</a><span class=\"ts\"/>7 <span class=\"comment\">/* bool != bool */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#COND_LAST\">COND_LAST</a><span class=\"ts\"/><a class=\"id\" href=\"#COND_NEQ\">COND_NEQ</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#expr_type\">expr_type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#bool\">bool</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cond_expr\">cond_expr</a> *<a class=\"id\" href=\"#next\">next</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Each cond_node contains a list of rules to be enabled/disabled</span>", 
"<span class=\"comment\"> * depending on the current value of the conditional expression. This</span>", 
"<span class=\"comment\"> * struct is for that list.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#cond_av_list\">cond_av_list</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cond_av_list\">cond_av_list</a> *<a class=\"id\" href=\"#next\">next</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * A cond node represents a conditional block in a policy. It</span>", 
"<span class=\"comment\"> * contains a conditional expression, the current state of the expression,</span>", 
"<span class=\"comment\"> * two lists of rules to enable/disable depending on the value of the</span>", 
"<span class=\"comment\"> * expression (the true list corresponds to if and the false list corresponds</span>", 
"<span class=\"comment\"> * to else)..</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#cond_node\">cond_node</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cur_state\">cur_state</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cond_expr\">cond_expr</a> *<a class=\"id\" href=\"#expr\">expr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cond_av_list\">cond_av_list</a> *<a class=\"id\" href=\"#true_list\">true_list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cond_av_list\">cond_av_list</a> *<a class=\"id\" href=\"#false_list\">false_list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cond_node\">cond_node</a> *<a class=\"id\" href=\"#next\">next</a>;", 
"};", 
"", 
"int <a class=\"id\" href=\"#cond_policydb_init\">cond_policydb_init</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"void <a class=\"id\" href=\"#cond_policydb_destroy\">cond_policydb_destroy</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"int <a class=\"id\" href=\"#cond_init_bool_indexes\">cond_init_bool_indexes</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"int <a class=\"id\" href=\"#cond_destroy_bool\">cond_destroy_bool</a>(void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"int <a class=\"id\" href=\"#cond_index_bool\">cond_index_bool</a>(void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#datap\">datap</a>);", 
"", 
"int <a class=\"id\" href=\"#cond_read_bool\">cond_read_bool</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#h\">h</a>, void *<a class=\"id\" href=\"#fp\">fp</a>);", 
"int <a class=\"id\" href=\"#cond_read_list\">cond_read_list</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, void *<a class=\"id\" href=\"#fp\">fp</a>);", 
"", 
"void <a class=\"id\" href=\"#cond_compute_av\">cond_compute_av</a>(struct <a class=\"id\" href=\"#avtab\">avtab</a> *<a class=\"id\" href=\"#ctab\">ctab</a>, struct <a class=\"id\" href=\"#avtab_key\">avtab_key</a> *<a class=\"id\" href=\"#key\">key</a>, struct <a class=\"id\" href=\"#av_decision\">av_decision</a> *<a class=\"id\" href=\"#avd\">avd</a>);", 
"", 
"int <a class=\"id\" href=\"#evaluate_cond_node\">evaluate_cond_node</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, struct <a class=\"id\" href=\"#cond_node\">cond_node</a> *<a class=\"id\" href=\"#node\">node</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _CONDITIONAL_H_ */</span>", 
];
xr_frag_insert('l/f4/52a6bc6a79d8b3f520015fb5616a2481f966c0.xr', __xr_tmp);
