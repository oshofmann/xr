var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  ec.c - ACPI Embedded Controller Driver (v2.1)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 2006-2008 Alexey Starikovskiy &lt;astarikovskiy@suse.de&gt;</span>", 
"<span class=\"comment\"> *  Copyright (C) 2006 Denis Sadykov &lt;denis.m.sadykov@intel.com&gt;</span>", 
"<span class=\"comment\"> *  Copyright (C) 2004 Luming Yu &lt;luming.yu@intel.com&gt;</span>", 
"<span class=\"comment\"> *  Copyright (C) 2001, 2002 Andy Grover &lt;andrew.grover@intel.com&gt;</span>", 
"<span class=\"comment\"> *  Copyright (C) 2001, 2002 Paul Diefenbaugh &lt;paul.s.diefenbaugh@intel.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *  it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> *  the Free Software Foundation; either version 2 of the License, or (at</span>", 
"<span class=\"comment\"> *  your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is distributed in the hope that it will be useful, but</span>", 
"<span class=\"comment\"> *  WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>", 
"<span class=\"comment\"> *  General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  You should have received a copy of the GNU General Public License along</span>", 
"<span class=\"comment\"> *  with this program; if not, write to the Free Software Foundation, Inc.,</span>", 
"<span class=\"comment\"> *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* Uncomment next line to get verbose printout */</span>", 
"<span class=\"comment\">/* #define DEBUG */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi_bus\">acpi_bus</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi_drivers\">acpi_drivers</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dmi\">dmi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"internal.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_EC_CLASS\">ACPI_EC_CLASS</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"embedded_controller\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_EC_DEVICE_NAME\">ACPI_EC_DEVICE_NAME</a><span class=\"ts\"/><span class=\"ts\"/>\"Embedded Controller\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_EC_FILE_INFO\">ACPI_EC_FILE_INFO</a><span class=\"ts\"/><span class=\"ts\"/>\"info\"", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"ACPI: EC: \"", 
"", 
"<span class=\"comment\">/* EC status register */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_EC_FLAG_OBF\">ACPI_EC_FLAG_OBF</a><span class=\"ts\"/>0x01<span class=\"ts\"/><span class=\"comment\">/* Output buffer full */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_EC_FLAG_IBF\">ACPI_EC_FLAG_IBF</a><span class=\"ts\"/>0x02<span class=\"ts\"/><span class=\"comment\">/* Input buffer full */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_EC_FLAG_BURST\">ACPI_EC_FLAG_BURST</a><span class=\"ts\"/>0x10<span class=\"ts\"/><span class=\"comment\">/* burst mode */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_EC_FLAG_SCI\">ACPI_EC_FLAG_SCI</a><span class=\"ts\"/>0x20<span class=\"ts\"/><span class=\"comment\">/* EC-SCI occurred */</span>", 
"", 
"<span class=\"comment\">/* EC commands */</span>", 
"enum <a class=\"id\" href=\"#ec_command\">ec_command</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_EC_COMMAND_READ\">ACPI_EC_COMMAND_READ</a> = 0x80,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_EC_COMMAND_WRITE\">ACPI_EC_COMMAND_WRITE</a> = 0x81,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_EC_BURST_ENABLE\">ACPI_EC_BURST_ENABLE</a> = 0x82,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_EC_BURST_DISABLE\">ACPI_EC_BURST_DISABLE</a> = 0x83,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_EC_COMMAND_QUERY\">ACPI_EC_COMMAND_QUERY</a> = 0x84,", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_EC_DELAY\">ACPI_EC_DELAY</a><span class=\"ts\"/><span class=\"ts\"/>500<span class=\"ts\"/><span class=\"comment\">/* Wait 500ms max. during EC ops */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_EC_UDELAY_GLK\">ACPI_EC_UDELAY_GLK</a><span class=\"ts\"/>1000<span class=\"ts\"/><span class=\"comment\">/* Wait 1ms max. to get global lock */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_EC_CDELAY\">ACPI_EC_CDELAY</a><span class=\"ts\"/><span class=\"ts\"/>10<span class=\"ts\"/><span class=\"comment\">/* Wait 10us before polling EC */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_EC_MSI_UDELAY\">ACPI_EC_MSI_UDELAY</a><span class=\"ts\"/>550<span class=\"ts\"/><span class=\"comment\">/* Wait 550us for MSI EC */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_EC_STORM_THRESHOLD\">ACPI_EC_STORM_THRESHOLD</a> 8<span class=\"ts\"/><span class=\"comment\">/* number of false interrupts</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   per one transaction */</span>", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EC_FLAGS_QUERY_PENDING\">EC_FLAGS_QUERY_PENDING</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Query is pending */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EC_FLAGS_GPE_STORM\">EC_FLAGS_GPE_STORM</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* GPE storm detected */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EC_FLAGS_HANDLERS_INSTALLED\">EC_FLAGS_HANDLERS_INSTALLED</a>,<span class=\"ts\"/><span class=\"comment\">/* Handlers for GPE and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * OpReg are installed */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EC_FLAGS_BLOCKED\">EC_FLAGS_BLOCKED</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Transactions are blocked */</span>", 
"};", 
"", 
"<span class=\"comment\">/* If we find an EC via the ECDT, we need to keep a ptr to its context */</span>", 
"<span class=\"comment\">/* External interfaces use first EC only, so remember */</span>", 
"typedef int (*<a class=\"id\" href=\"#acpi_ec_query_func\">acpi_ec_query_func</a>) (void *<a class=\"id\" href=\"#data\">data</a>);", 
"", 
"struct <a class=\"id\" href=\"#acpi_ec_query_handler\">acpi_ec_query_handler</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ec_query_func\">acpi_ec_query_func</a> <a class=\"id\" href=\"#func\">func</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#query_bit\">query_bit</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#transaction\">transaction</a> {", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#wdata\">wdata</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#rdata\">rdata</a>;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#irq_count\">irq_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#command\">command</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#wi\">wi</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#ri\">ri</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#wlen\">wlen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#rlen\">rlen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#done\">done</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#boot_ec\">boot_ec</a>, *<a class=\"id\" href=\"#first_ec\">first_ec</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#first_ec\">first_ec</a>);", 
"", 
"static int <a class=\"id\" href=\"#EC_FLAGS_MSI\">EC_FLAGS_MSI</a>; <span class=\"comment\">/* Out-of-spec MSI controller */</span>", 
"static int <a class=\"id\" href=\"#EC_FLAGS_VALIDATE_ECDT\">EC_FLAGS_VALIDATE_ECDT</a>; <span class=\"comment\">/* ASUStec ECDTs need to be validated */</span>", 
"static int <a class=\"id\" href=\"#EC_FLAGS_SKIP_DSDT_SCAN\">EC_FLAGS_SKIP_DSDT_SCAN</a>; <span class=\"comment\">/* Not all BIOS survive early DSDT scan */</span>", 
"", 
"<span class=\"comment\">/* --------------------------------------------------------------------------</span>", 
"<span class=\"comment\">                             Transaction Management</span>", 
"<span class=\"comment\">   -------------------------------------------------------------------------- */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#acpi_ec_read_status\">acpi_ec_read_status</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#x\">x</a> = <a class=\"id\" href=\"#inb\">inb</a>(<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#command_addr\">command_addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(<a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"---> status = 0x%2.2x\\n\", <a class=\"id\" href=\"#x\">x</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#x\">x</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#acpi_ec_read_data\">acpi_ec_read_data</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#x\">x</a> = <a class=\"id\" href=\"#inb\">inb</a>(<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#data_addr\">data_addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(<a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"---> data = 0x%2.2x\\n\", <a class=\"id\" href=\"#x\">x</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#x\">x</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#acpi_ec_write_cmd\">acpi_ec_write_cmd</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#command\">command</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(<a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"<--- command = 0x%2.2x\\n\", <a class=\"id\" href=\"#command\">command</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb\">outb</a>(<a class=\"id\" href=\"#command\">command</a>, <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#command_addr\">command_addr</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#acpi_ec_write_data\">acpi_ec_write_data</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(<a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"<--- data = 0x%2.2x\\n\", <a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb\">outb</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#data_addr\">data_addr</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ec_transaction_done\">ec_transaction_done</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr_lock\">curr_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a> || <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#done\">done</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr_lock\">curr_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#start_transaction\">start_transaction</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#irq_count\">irq_count</a> = <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#wi\">wi</a> = <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#ri\">ri</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#done\">done</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ec_write_cmd\">acpi_ec_write_cmd</a>(<a class=\"id\" href=\"#ec\">ec</a>, <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#command\">command</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#advance_transaction\">advance_transaction</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#status\">status</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr_lock\">curr_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock\">unlock</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#wlen\">wlen</a> &gt; <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#wi\">wi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#ACPI_EC_FLAG_IBF\">ACPI_EC_FLAG_IBF</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ec_write_data\">acpi_ec_write_data</a>(<a class=\"id\" href=\"#ec\">ec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#wdata\">wdata</a>[<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#wi\">wi</a>++]);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#rlen\">rlen</a> &gt; <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#ri\">ri</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#ACPI_EC_FLAG_OBF\">ACPI_EC_FLAG_OBF</a>) == 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#rdata\">rdata</a>[<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#ri\">ri</a>++] = <a class=\"id\" href=\"#acpi_ec_read_data\">acpi_ec_read_data</a>(<a class=\"id\" href=\"#ec\">ec</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#rlen\">rlen</a> == <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#ri\">ri</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#done\">done</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#wlen\">wlen</a> == <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#wi\">wi</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#ACPI_EC_FLAG_IBF\">ACPI_EC_FLAG_IBF</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#done\">done</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock\">unlock</a>;", 
"<a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* false interrupt, state didn't change */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#in_interrupt\">in_interrupt</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#irq_count\">irq_count</a>;", 
"<a class=\"id\" href=\"#unlock\">unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr_lock\">curr_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_ec_sync_query\">acpi_ec_sync_query</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>);", 
"", 
"static int <a class=\"id\" href=\"#ec_check_sci_sync\">ec_check_sci_sync</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#ACPI_EC_FLAG_SCI\">ACPI_EC_FLAG_SCI</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(<a class=\"id\" href=\"#EC_FLAGS_QUERY_PENDING\">EC_FLAGS_QUERY_PENDING</a>, &amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#acpi_ec_sync_query\">acpi_ec_sync_query</a>(<a class=\"id\" href=\"#ec\">ec</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ec_poll\">ec_poll</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#repeat\">repeat</a> = 2; <span class=\"comment\">/* number of command restarts */</span>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#repeat\">repeat</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#delay\">delay</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msecs_to_jiffies\">msecs_to_jiffies</a>(<a class=\"id\" href=\"#ACPI_EC_DELAY\">ACPI_EC_DELAY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* don't sleep with disabled interrupts */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#EC_FLAGS_MSI\">EC_FLAGS_MSI</a> || <a class=\"id\" href=\"#irqs_disabled\">irqs_disabled</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udelay\">udelay</a>(<a class=\"id\" href=\"#ACPI_EC_MSI_UDELAY\">ACPI_EC_MSI_UDELAY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ec_transaction_done\">ec_transaction_done</a>(<a class=\"id\" href=\"#ec\">ec</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#wait_event_timeout\">wait_event_timeout</a>(<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#wait\">wait</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ec_transaction_done\">ec_transaction_done</a>(<a class=\"id\" href=\"#ec\">ec</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msecs_to_jiffies\">msecs_to_jiffies</a>(1)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#advance_transaction\">advance_transaction</a>(<a class=\"id\" href=\"#ec\">ec</a>, <a class=\"id\" href=\"#acpi_ec_read_status\">acpi_ec_read_status</a>(<a class=\"id\" href=\"#ec\">ec</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>} while (<a class=\"id\" href=\"#time_before\">time_before</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#delay\">delay</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_ec_read_status\">acpi_ec_read_status</a>(<a class=\"id\" href=\"#ec\">ec</a>) &amp; <a class=\"id\" href=\"#ACPI_EC_FLAG_IBF\">ACPI_EC_FLAG_IBF</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(<a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"controller reset, restart transaction\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr_lock\">curr_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_transaction\">start_transaction</a>(<a class=\"id\" href=\"#ec\">ec</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr_lock\">curr_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ETIME\">ETIME</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_ec_transaction_unlocked\">acpi_ec_transaction_unlocked</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#transaction\">transaction</a> *<a class=\"id\" href=\"#t\">t</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EC_FLAGS_MSI\">EC_FLAGS_MSI</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udelay\">udelay</a>(<a class=\"id\" href=\"#ACPI_EC_MSI_UDELAY\">ACPI_EC_MSI_UDELAY</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* start transaction */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr_lock\">curr_lock</a>, <a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* following two actions should be kept atomic */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a> = <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start_transaction\">start_transaction</a>(<a class=\"id\" href=\"#ec\">ec</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#command\">command</a> == <a class=\"id\" href=\"#ACPI_EC_COMMAND_QUERY\">ACPI_EC_COMMAND_QUERY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#EC_FLAGS_QUERY_PENDING\">EC_FLAGS_QUERY_PENDING</a>, &amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr_lock\">curr_lock</a>, <a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ec_poll\">ec_poll</a>(<a class=\"id\" href=\"#ec\">ec</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr_lock\">curr_lock</a>, <a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr\">curr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr_lock\">curr_lock</a>, <a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ec_check_ibf0\">ec_check_ibf0</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ec_read_status\">acpi_ec_read_status</a>(<a class=\"id\" href=\"#ec\">ec</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#ACPI_EC_FLAG_IBF\">ACPI_EC_FLAG_IBF</a>) == 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ec_wait_ibf0\">ec_wait_ibf0</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#delay\">delay</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#msecs_to_jiffies\">msecs_to_jiffies</a>(<a class=\"id\" href=\"#ACPI_EC_DELAY\">ACPI_EC_DELAY</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* interrupt wait manually if GPE mode is not active */</span>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#time_before\">time_before</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#delay\">delay</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#wait_event_timeout\">wait_event_timeout</a>(<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#ec_check_ibf0\">ec_check_ibf0</a>(<a class=\"id\" href=\"#ec\">ec</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msecs_to_jiffies\">msecs_to_jiffies</a>(1)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ETIME\">ETIME</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_ec_transaction\">acpi_ec_transaction</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>, struct <a class=\"id\" href=\"#transaction\">transaction</a> *<a class=\"id\" href=\"#t\">t</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#glk\">glk</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ec\">ec</a> || (!<a class=\"id\" href=\"#t\">t</a>) || (<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#wlen\">wlen</a> && !<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#wdata\">wdata</a>) || (<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#rlen\">rlen</a> && !<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#rdata\">rdata</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#rdata\">rdata</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#rdata\">rdata</a>, 0, <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#rlen\">rlen</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#EC_FLAGS_BLOCKED\">EC_FLAGS_BLOCKED</a>, &amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock\">unlock</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#global_lock\">global_lock</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_acquire_global_lock\">acpi_acquire_global_lock</a>(<a class=\"id\" href=\"#ACPI_EC_UDELAY_GLK\">ACPI_EC_UDELAY_GLK</a>, &amp;<a class=\"id\" href=\"#glk\">glk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock\">unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ec_wait_ibf0\">ec_wait_ibf0</a>(<a class=\"id\" href=\"#ec\">ec</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(<a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"input buffer is not empty, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"aborting transaction\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = -<a class=\"id\" href=\"#ETIME\">ETIME</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(<a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"transaction start\\n\");", 
"<span class=\"ts\"/><span class=\"comment\">/* disable GPE during transaction if storm is detected */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#EC_FLAGS_GPE_STORM\">EC_FLAGS_GPE_STORM</a>, &amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* It has to be disabled, so that it doesn't trigger. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_disable_gpe\">acpi_disable_gpe</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#gpe\">gpe</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ec_transaction_unlocked\">acpi_ec_transaction_unlocked</a>(<a class=\"id\" href=\"#ec\">ec</a>, <a class=\"id\" href=\"#t\">t</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check if we received SCI during transaction */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ec_check_sci_sync\">ec_check_sci_sync</a>(<a class=\"id\" href=\"#ec\">ec</a>, <a class=\"id\" href=\"#acpi_ec_read_status\">acpi_ec_read_status</a>(<a class=\"id\" href=\"#ec\">ec</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#EC_FLAGS_GPE_STORM\">EC_FLAGS_GPE_STORM</a>, &amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msleep\">msleep</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* It is safe to enable the GPE outside of the transaction. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_enable_gpe\">acpi_enable_gpe</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#gpe\">gpe</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#irq_count\">irq_count</a> &gt; <a class=\"id\" href=\"#ACPI_EC_STORM_THRESHOLD\">ACPI_EC_STORM_THRESHOLD</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(<a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"GPE storm detected, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"transactions will use polling mode\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#EC_FLAGS_GPE_STORM\">EC_FLAGS_GPE_STORM</a>, &amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(<a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"transaction end\\n\");", 
"<a class=\"id\" href=\"#end\">end</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#global_lock\">global_lock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_release_global_lock\">acpi_release_global_lock</a>(<a class=\"id\" href=\"#glk\">glk</a>);", 
"<a class=\"id\" href=\"#unlock\">unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_ec_burst_enable\">acpi_ec_burst_enable</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#d\">d</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#transaction\">transaction</a> <a class=\"id\" href=\"#t\">t</a> = {.<a class=\"id\" href=\"#command\">command</a> = <a class=\"id\" href=\"#ACPI_EC_BURST_ENABLE\">ACPI_EC_BURST_ENABLE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#wdata\">wdata</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, .<a class=\"id\" href=\"#rdata\">rdata</a> = &amp;<a class=\"id\" href=\"#d\">d</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#wlen\">wlen</a> = 0, .<a class=\"id\" href=\"#rlen\">rlen</a> = 1};", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#acpi_ec_transaction\">acpi_ec_transaction</a>(<a class=\"id\" href=\"#ec\">ec</a>, &amp;<a class=\"id\" href=\"#t\">t</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_ec_burst_disable\">acpi_ec_burst_disable</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#transaction\">transaction</a> <a class=\"id\" href=\"#t\">t</a> = {.<a class=\"id\" href=\"#command\">command</a> = <a class=\"id\" href=\"#ACPI_EC_BURST_DISABLE\">ACPI_EC_BURST_DISABLE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#wdata\">wdata</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, .<a class=\"id\" href=\"#rdata\">rdata</a> = <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#wlen\">wlen</a> = 0, .<a class=\"id\" href=\"#rlen\">rlen</a> = 0};", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#acpi_ec_read_status\">acpi_ec_read_status</a>(<a class=\"id\" href=\"#ec\">ec</a>) &amp; <a class=\"id\" href=\"#ACPI_EC_FLAG_BURST\">ACPI_EC_FLAG_BURST</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ec_transaction\">acpi_ec_transaction</a>(<a class=\"id\" href=\"#ec\">ec</a>, &amp;<a class=\"id\" href=\"#t\">t</a>) : 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_ec_read\">acpi_ec_read</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#u8\">u8</a> * <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#d\">d</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#transaction\">transaction</a> <a class=\"id\" href=\"#t\">t</a> = {.<a class=\"id\" href=\"#command\">command</a> = <a class=\"id\" href=\"#ACPI_EC_COMMAND_READ\">ACPI_EC_COMMAND_READ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#wdata\">wdata</a> = &amp;<a class=\"id\" href=\"#address\">address</a>, .<a class=\"id\" href=\"#rdata\">rdata</a> = &amp;<a class=\"id\" href=\"#d\">d</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#wlen\">wlen</a> = 1, .<a class=\"id\" href=\"#rlen\">rlen</a> = 1};", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#acpi_ec_transaction\">acpi_ec_transaction</a>(<a class=\"id\" href=\"#ec\">ec</a>, &amp;<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#d\">d</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_ec_write\">acpi_ec_write</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#wdata\">wdata</a>[2] = { <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#data\">data</a> };", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#transaction\">transaction</a> <a class=\"id\" href=\"#t\">t</a> = {.<a class=\"id\" href=\"#command\">command</a> = <a class=\"id\" href=\"#ACPI_EC_COMMAND_WRITE\">ACPI_EC_COMMAND_WRITE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#wdata\">wdata</a> = <a class=\"id\" href=\"#wdata\">wdata</a>, .<a class=\"id\" href=\"#rdata\">rdata</a> = <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#wlen\">wlen</a> = 2, .<a class=\"id\" href=\"#rlen\">rlen</a> = 0};", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#acpi_ec_transaction\">acpi_ec_transaction</a>(<a class=\"id\" href=\"#ec\">ec</a>, &amp;<a class=\"id\" href=\"#t\">t</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Externally callable EC access functions. For now, assume 1 EC only</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ec_burst_enable\">ec_burst_enable</a>(void)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#first_ec\">first_ec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#acpi_ec_burst_enable\">acpi_ec_burst_enable</a>(<a class=\"id\" href=\"#first_ec\">first_ec</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ec_burst_enable\">ec_burst_enable</a>);", 
"", 
"int <a class=\"id\" href=\"#ec_burst_disable\">ec_burst_disable</a>(void)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#first_ec\">first_ec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#acpi_ec_burst_disable\">acpi_ec_burst_disable</a>(<a class=\"id\" href=\"#first_ec\">first_ec</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ec_burst_disable\">ec_burst_disable</a>);", 
"", 
"int <a class=\"id\" href=\"#ec_read\">ec_read</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#u8\">u8</a> * <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#temp_data\">temp_data</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#first_ec\">first_ec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#acpi_ec_read\">acpi_ec_read</a>(<a class=\"id\" href=\"#first_ec\">first_ec</a>, <a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#temp_data\">temp_data</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#temp_data\">temp_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ec_read\">ec_read</a>);", 
"", 
"int <a class=\"id\" href=\"#ec_write\">ec_write</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#first_ec\">first_ec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#acpi_ec_write\">acpi_ec_write</a>(<a class=\"id\" href=\"#first_ec\">first_ec</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ec_write\">ec_write</a>);", 
"", 
"int <a class=\"id\" href=\"#ec_transaction\">ec_transaction</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#command\">command</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   const <a class=\"id\" href=\"#u8\">u8</a> * <a class=\"id\" href=\"#wdata\">wdata</a>, unsigned <a class=\"id\" href=\"#wdata_len\">wdata_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#u8\">u8</a> * <a class=\"id\" href=\"#rdata\">rdata</a>, unsigned <a class=\"id\" href=\"#rdata_len\">rdata_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#force_poll\">force_poll</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#transaction\">transaction</a> <a class=\"id\" href=\"#t\">t</a> = {.<a class=\"id\" href=\"#command\">command</a> = <a class=\"id\" href=\"#command\">command</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#wdata\">wdata</a> = <a class=\"id\" href=\"#wdata\">wdata</a>, .<a class=\"id\" href=\"#rdata\">rdata</a> = <a class=\"id\" href=\"#rdata\">rdata</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#wlen\">wlen</a> = <a class=\"id\" href=\"#wdata_len\">wdata_len</a>, .<a class=\"id\" href=\"#rlen\">rlen</a> = <a class=\"id\" href=\"#rdata_len\">rdata_len</a>};", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#first_ec\">first_ec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#acpi_ec_transaction\">acpi_ec_transaction</a>(<a class=\"id\" href=\"#first_ec\">first_ec</a>, &amp;<a class=\"id\" href=\"#t\">t</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ec_transaction\">ec_transaction</a>);", 
"", 
"void <a class=\"id\" href=\"#acpi_ec_block_transactions\">acpi_ec_block_transactions</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a> = <a class=\"id\" href=\"#first_ec\">first_ec</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ec\">ec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Prevent transactions from being carried out */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#EC_FLAGS_BLOCKED\">EC_FLAGS_BLOCKED</a>, &amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#acpi_ec_unblock_transactions\">acpi_ec_unblock_transactions</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a> = <a class=\"id\" href=\"#first_ec\">first_ec</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ec\">ec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Allow transactions to be carried out again */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#EC_FLAGS_BLOCKED\">EC_FLAGS_BLOCKED</a>, &amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#acpi_ec_unblock_transactions_early\">acpi_ec_unblock_transactions_early</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Allow transactions to happen again (this function is called from</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * atomic context during wakeup, so we don't need to acquire the mutex).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#first_ec\">first_ec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#EC_FLAGS_BLOCKED\">EC_FLAGS_BLOCKED</a>, &amp;<a class=\"id\" href=\"#first_ec\">first_ec</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_ec_query_unlocked\">acpi_ec_query_unlocked</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>, <a class=\"id\" href=\"#u8\">u8</a> * <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#d\">d</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#transaction\">transaction</a> <a class=\"id\" href=\"#t\">t</a> = {.<a class=\"id\" href=\"#command\">command</a> = <a class=\"id\" href=\"#ACPI_EC_COMMAND_QUERY\">ACPI_EC_COMMAND_QUERY</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#wdata\">wdata</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, .<a class=\"id\" href=\"#rdata\">rdata</a> = &amp;<a class=\"id\" href=\"#d\">d</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#wlen\">wlen</a> = 0, .<a class=\"id\" href=\"#rlen\">rlen</a> = 1};", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ec\">ec</a> || !<a class=\"id\" href=\"#data\">data</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Query the EC to find out which _Qxx method we need to evaluate.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note that successful completion of the query causes the ACPI_EC_SCI</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * bit to be cleared (and thus clearing the interrupt source).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#acpi_ec_transaction_unlocked\">acpi_ec_transaction_unlocked</a>(<a class=\"id\" href=\"#ec\">ec</a>, &amp;<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#d\">d</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#d\">d</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* --------------------------------------------------------------------------</span>", 
"<span class=\"comment\">                                Event Management</span>", 
"<span class=\"comment\">   -------------------------------------------------------------------------- */</span>", 
"int <a class=\"id\" href=\"#acpi_ec_add_query_handler\">acpi_ec_add_query_handler</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#query_bit\">query_bit</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#acpi_ec_query_func\">acpi_ec_query_func</a> <a class=\"id\" href=\"#func\">func</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_ec_query_handler\">acpi_ec_query_handler</a> *<a class=\"id\" href=\"#handler\">handler</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#acpi_ec_query_handler\">acpi_ec_query_handler</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#handler\">handler</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#query_bit\">query_bit</a> = <a class=\"id\" href=\"#query_bit\">query_bit</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#func\">func</a> = <a class=\"id\" href=\"#func\">func</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#acpi_ec_add_query_handler\">acpi_ec_add_query_handler</a>);", 
"", 
"void <a class=\"id\" href=\"#acpi_ec_remove_query_handler\">acpi_ec_remove_query_handler</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#query_bit\">query_bit</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_ec_query_handler\">acpi_ec_query_handler</a> *<a class=\"id\" href=\"#handler\">handler</a>, *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#handler\">handler</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, &amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#node\">node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#query_bit\">query_bit</a> == <a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#query_bit\">query_bit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#handler\">handler</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#acpi_ec_remove_query_handler\">acpi_ec_remove_query_handler</a>);", 
"", 
"static void <a class=\"id\" href=\"#acpi_ec_run\">acpi_ec_run</a>(void *<a class=\"id\" href=\"#cxt\">cxt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_ec_query_handler\">acpi_ec_query_handler</a> *<a class=\"id\" href=\"#handler\">handler</a> = <a class=\"id\" href=\"#cxt\">cxt</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#handler\">handler</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(<a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"start query execution\\n\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#func\">func</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#func\">func</a>(<a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#handle\">handle</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_evaluate_object\">acpi_evaluate_object</a>(<a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(<a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"stop query execution\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#handler\">handler</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_ec_sync_query\">acpi_ec_sync_query</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#value\">value</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_ec_query_handler\">acpi_ec_query_handler</a> *<a class=\"id\" href=\"#handler\">handler</a>, *<a class=\"id\" href=\"#copy\">copy</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ec_query_unlocked\">acpi_ec_query_unlocked</a>(<a class=\"id\" href=\"#ec\">ec</a>, &amp;<a class=\"id\" href=\"#value\">value</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#handler\">handler</a>, &amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#node\">node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#value\">value</a> == <a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#query_bit\">query_bit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* have custom handler for this bit */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#handler\">handler</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#copy\">copy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#copy\">copy</a>, <a class=\"id\" href=\"#handler\">handler</a>, sizeof(*<a class=\"id\" href=\"#copy\">copy</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(<a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"push query execution (0x%2x) on queue\\n\", <a class=\"id\" href=\"#value\">value</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#acpi_os_execute\">acpi_os_execute</a>((<a class=\"id\" href=\"#copy\">copy</a>-><a class=\"id\" href=\"#func\">func</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#OSL_NOTIFY_HANDLER\">OSL_NOTIFY_HANDLER</a> : <a class=\"id\" href=\"#OSL_GPE_HANDLER\">OSL_GPE_HANDLER</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ec_run\">acpi_ec_run</a>, <a class=\"id\" href=\"#copy\">copy</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#acpi_ec_gpe_query\">acpi_ec_gpe_query</a>(void *<a class=\"id\" href=\"#ec_cxt\">ec_cxt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a> = <a class=\"id\" href=\"#ec_cxt\">ec_cxt</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ec\">ec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ec_sync_query\">acpi_ec_sync_query</a>(<a class=\"id\" href=\"#ec\">ec</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#acpi_ec_gpe_query\">acpi_ec_gpe_query</a>(void *<a class=\"id\" href=\"#ec_cxt\">ec_cxt</a>);", 
"", 
"static int <a class=\"id\" href=\"#ec_check_sci\">ec_check_sci</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#ACPI_EC_FLAG_SCI\">ACPI_EC_FLAG_SCI</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(<a class=\"id\" href=\"#EC_FLAGS_QUERY_PENDING\">EC_FLAGS_QUERY_PENDING</a>, &amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(<a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"push gpe query to the queue\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#acpi_os_execute\">acpi_os_execute</a>(<a class=\"id\" href=\"#OSL_NOTIFY_HANDLER\">OSL_NOTIFY_HANDLER</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ec_gpe_query\">acpi_ec_gpe_query</a>, <a class=\"id\" href=\"#ec\">ec</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#acpi_ec_gpe_handler\">acpi_ec_gpe_handler</a>(void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(<a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"~~~> interrupt\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#advance_transaction\">advance_transaction</a>(<a class=\"id\" href=\"#ec\">ec</a>, <a class=\"id\" href=\"#acpi_ec_read_status\">acpi_ec_read_status</a>(<a class=\"id\" href=\"#ec\">ec</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ec_transaction_done\">ec_transaction_done</a>(<a class=\"id\" href=\"#ec\">ec</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#acpi_ec_read_status\">acpi_ec_read_status</a>(<a class=\"id\" href=\"#ec\">ec</a>) &amp; <a class=\"id\" href=\"#ACPI_EC_FLAG_IBF\">ACPI_EC_FLAG_IBF</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up\">wake_up</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ec_check_sci\">ec_check_sci</a>(<a class=\"id\" href=\"#ec\">ec</a>, <a class=\"id\" href=\"#acpi_ec_read_status\">acpi_ec_read_status</a>(<a class=\"id\" href=\"#ec\">ec</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ACPI_INTERRUPT_HANDLED\">ACPI_INTERRUPT_HANDLED</a>;", 
"}", 
"", 
"<span class=\"comment\">/* --------------------------------------------------------------------------</span>", 
"<span class=\"comment\">                             Address Space Management</span>", 
"<span class=\"comment\">   -------------------------------------------------------------------------- */</span>", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ec_space_handler\">acpi_ec_space_handler</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a> <a class=\"id\" href=\"#address\">address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bits\">bits</a>, <a class=\"id\" href=\"#u64\">u64</a> *<a class=\"id\" href=\"#value64\">value64</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      void *<a class=\"id\" href=\"#handler_context\">handler_context</a>, void *<a class=\"id\" href=\"#region_context\">region_context</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a> = <a class=\"id\" href=\"#handler_context\">handler_context</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a> = 0, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#bytes\">bytes</a> = <a class=\"id\" href=\"#bits\">bits</a> / 8;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#value\">value</a> = (<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#value64\">value64</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#address\">address</a> &gt; 0xFF) || !<a class=\"id\" href=\"#value\">value</a> || !<a class=\"id\" href=\"#handler_context\">handler_context</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#function\">function</a> != <a class=\"id\" href=\"#ACPI_READ\">ACPI_READ</a> && <a class=\"id\" href=\"#function\">function</a> != <a class=\"id\" href=\"#ACPI_WRITE\">ACPI_WRITE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EC_FLAGS_MSI\">EC_FLAGS_MSI</a> || <a class=\"id\" href=\"#bits\">bits</a> &gt; 8)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ec_burst_enable\">acpi_ec_burst_enable</a>(<a class=\"id\" href=\"#ec\">ec</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#bytes\">bytes</a>; ++<a class=\"id\" href=\"#i\">i</a>, ++<a class=\"id\" href=\"#address\">address</a>, ++<a class=\"id\" href=\"#value\">value</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = (<a class=\"id\" href=\"#function\">function</a> == <a class=\"id\" href=\"#ACPI_READ\">ACPI_READ</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ec_read\">acpi_ec_read</a>(<a class=\"id\" href=\"#ec\">ec</a>, <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#value\">value</a>) :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ec_write\">acpi_ec_write</a>(<a class=\"id\" href=\"#ec\">ec</a>, <a class=\"id\" href=\"#address\">address</a>, *<a class=\"id\" href=\"#value\">value</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EC_FLAGS_MSI\">EC_FLAGS_MSI</a> || <a class=\"id\" href=\"#bits\">bits</a> &gt; 8)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ec_burst_disable\">acpi_ec_burst_disable</a>(<a class=\"id\" href=\"#ec\">ec</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#result\">result</a>) {", 
"<span class=\"ts\"/>case -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_NOT_FOUND\">AE_NOT_FOUND</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case -<a class=\"id\" href=\"#ETIME\">ETIME</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_TIME\">AE_TIME</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* --------------------------------------------------------------------------</span>", 
"<span class=\"comment\">                               Driver Interface</span>", 
"<span class=\"comment\">   -------------------------------------------------------------------------- */</span>", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#ec_parse_io_ports\">ec_parse_io_ports</a>(struct <a class=\"id\" href=\"#acpi_resource\">acpi_resource</a> *<a class=\"id\" href=\"#resource\">resource</a>, void *<a class=\"id\" href=\"#context\">context</a>);", 
"", 
"static struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#make_acpi_ec\">make_acpi_ec</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ec\">ec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#flags\">flags</a> = 1 << <a class=\"id\" href=\"#EC_FLAGS_QUERY_PENDING\">EC_FLAGS_QUERY_PENDING</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#curr_lock\">curr_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ec\">ec</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ec_register_query_methods\">acpi_ec_register_query_methods</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#level\">level</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       void *<a class=\"id\" href=\"#context\">context</a>, void **<a class=\"id\" href=\"#return_value\">return_value</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#node_name\">node_name</a>[5];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> <a class=\"id\" href=\"#buffer\">buffer</a> = { sizeof(<a class=\"id\" href=\"#node_name\">node_name</a>), <a class=\"id\" href=\"#node_name\">node_name</a> };", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a> = <a class=\"id\" href=\"#context\">context</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#value\">value</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_get_name\">acpi_get_name</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#ACPI_SINGLE_NAME\">ACPI_SINGLE_NAME</a>, &amp;<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#status\">status</a>) && <a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#node_name\">node_name</a>, \"_Q%x\", &amp;<a class=\"id\" href=\"#value\">value</a>) == 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ec_add_query_handler\">acpi_ec_add_query_handler</a>(<a class=\"id\" href=\"#ec\">ec</a>, <a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#ec_parse_device\">ec_parse_device</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#Level\">Level</a>, void *<a class=\"id\" href=\"#context\">context</a>, void **<a class=\"id\" href=\"#retval\">retval</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#tmp\">tmp</a> = 0;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a> = <a class=\"id\" href=\"#context\">context</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* clear addr values, ec_parse_io_ports depend on it */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#command_addr\">command_addr</a> = <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#data_addr\">data_addr</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_walk_resources\">acpi_walk_resources</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#METHOD_NAME__CRS\">METHOD_NAME__CRS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ec_parse_io_ports\">ec_parse_io_ports</a>, <a class=\"id\" href=\"#ec\">ec</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get GPE bit assignment (EC events). */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* TODO: Add support for _GPE returning a package */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_evaluate_integer\">acpi_evaluate_integer</a>(<a class=\"id\" href=\"#handle\">handle</a>, \"_GPE\", <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#gpe\">gpe</a> = <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Use the global lock for all EC transactions? */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_evaluate_integer\">acpi_evaluate_integer</a>(<a class=\"id\" href=\"#handle\">handle</a>, \"_GLK\", <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#global_lock\">global_lock</a> = <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_CTRL_TERMINATE\">AE_CTRL_TERMINATE</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ec_install_handlers\">ec_install_handlers</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#EC_FLAGS_HANDLERS_INSTALLED\">EC_FLAGS_HANDLERS_INSTALLED</a>, &amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_install_gpe_handler\">acpi_install_gpe_handler</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#gpe\">gpe</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ACPI_GPE_EDGE_TRIGGERED\">ACPI_GPE_EDGE_TRIGGERED</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#acpi_ec_gpe_handler\">acpi_ec_gpe_handler</a>, <a class=\"id\" href=\"#ec\">ec</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_enable_gpe\">acpi_enable_gpe</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#gpe\">gpe</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_install_address_space_handler\">acpi_install_address_space_handler</a>(<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_ADR_SPACE_EC\">ACPI_ADR_SPACE_EC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#acpi_ec_space_handler\">acpi_ec_space_handler</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#ec\">ec</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> == <a class=\"id\" href=\"#AE_NOT_FOUND\">AE_NOT_FOUND</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Maybe OS fails in evaluating the _REG object.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * The AE_NOT_FOUND error will be ignored and OS</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * continue to initialize EC.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"Fail in evaluating the _REG object\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" of EC device. Broken bios is suspected.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_remove_gpe_handler\">acpi_remove_gpe_handler</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#gpe\">gpe</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#acpi_ec_gpe_handler\">acpi_ec_gpe_handler</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_disable_gpe\">acpi_disable_gpe</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#gpe\">gpe</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#EC_FLAGS_HANDLERS_INSTALLED\">EC_FLAGS_HANDLERS_INSTALLED</a>, &amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ec_remove_handlers\">ec_remove_handlers</a>(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_disable_gpe\">acpi_disable_gpe</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#gpe\">gpe</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#acpi_remove_address_space_handler\">acpi_remove_address_space_handler</a>(<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ADR_SPACE_EC\">ACPI_ADR_SPACE_EC</a>, &amp;<a class=\"id\" href=\"#acpi_ec_space_handler\">acpi_ec_space_handler</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(<a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"failed to remove space handler\\n\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#acpi_remove_gpe_handler\">acpi_remove_gpe_handler</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#gpe\">gpe</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#acpi_ec_gpe_handler\">acpi_ec_gpe_handler</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(<a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"failed to remove gpe handler\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#EC_FLAGS_HANDLERS_INSTALLED\">EC_FLAGS_HANDLERS_INSTALLED</a>, &amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_ec_add\">acpi_ec_add</a>(struct <a class=\"id\" href=\"#acpi_device\">acpi_device</a> *<a class=\"id\" href=\"#device\">device</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strcpy\">strcpy</a>(<a class=\"id\" href=\"#acpi_device_name\">acpi_device_name</a>(<a class=\"id\" href=\"#device\">device</a>), <a class=\"id\" href=\"#ACPI_EC_DEVICE_NAME\">ACPI_EC_DEVICE_NAME</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strcpy\">strcpy</a>(<a class=\"id\" href=\"#acpi_device_class\">acpi_device_class</a>(<a class=\"id\" href=\"#device\">device</a>), <a class=\"id\" href=\"#ACPI_EC_CLASS\">ACPI_EC_CLASS</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check for boot EC */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_ec\">boot_ec</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#boot_ec\">boot_ec</a>-><a class=\"id\" href=\"#handle\">handle</a> == <a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#handle\">handle</a> ||", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#boot_ec\">boot_ec</a>-><a class=\"id\" href=\"#handle\">handle</a> == <a class=\"id\" href=\"#ACPI_ROOT_OBJECT\">ACPI_ROOT_OBJECT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ec\">ec</a> = <a class=\"id\" href=\"#boot_ec\">boot_ec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#boot_ec\">boot_ec</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ec\">ec</a> = <a class=\"id\" href=\"#make_acpi_ec\">make_acpi_ec</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ec\">ec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ec_parse_device\">ec_parse_device</a>(<a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#handle\">handle</a>, 0, <a class=\"id\" href=\"#ec\">ec</a>, <a class=\"id\" href=\"#NULL\">NULL</a>) !=", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AE_CTRL_TERMINATE\">AE_CTRL_TERMINATE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ec\">ec</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#handle\">handle</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Find and register all query methods */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_walk_namespace\">acpi_walk_namespace</a>(<a class=\"id\" href=\"#ACPI_TYPE_METHOD\">ACPI_TYPE_METHOD</a>, <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#handle\">handle</a>, 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ec_register_query_methods\">acpi_ec_register_query_methods</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#ec\">ec</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#first_ec\">first_ec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first_ec\">first_ec</a> = <a class=\"id\" href=\"#ec\">ec</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a> = <a class=\"id\" href=\"#ec\">ec</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN\">WARN</a>(!<a class=\"id\" href=\"#request_region\">request_region</a>(<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#data_addr\">data_addr</a>, 1, \"EC data\"),", 
"<span class=\"ts\"/>     \"Could not request EC data io port 0x%lx\", <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#data_addr\">data_addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN\">WARN</a>(!<a class=\"id\" href=\"#request_region\">request_region</a>(<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#command_addr\">command_addr</a>, 1, \"EC cmd\"),", 
"<span class=\"ts\"/>     \"Could not request EC cmd io port 0x%lx\", <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#command_addr\">command_addr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(<a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"GPE = 0x%lx, I/O: command/status = 0x%lx, data = 0x%lx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#gpe\">gpe</a>, <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#command_addr\">command_addr</a>, <a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#data_addr\">data_addr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ec_install_handlers\">ec_install_handlers</a>(<a class=\"id\" href=\"#ec\">ec</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* EC is fully operational, allow queries */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#EC_FLAGS_QUERY_PENDING\">EC_FLAGS_QUERY_PENDING</a>, &amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_ec_remove\">acpi_ec_remove</a>(struct <a class=\"id\" href=\"#acpi_device\">acpi_device</a> *<a class=\"id\" href=\"#device\">device</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_ec_query_handler\">acpi_ec_query_handler</a> *<a class=\"id\" href=\"#handler\">handler</a>, *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#device\">device</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ec\">ec</a> = <a class=\"id\" href=\"#acpi_driver_data\">acpi_driver_data</a>(<a class=\"id\" href=\"#device\">device</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ec_remove_handlers\">ec_remove_handlers</a>(<a class=\"id\" href=\"#ec\">ec</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#handler\">handler</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, &amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#node\">node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#handler\">handler</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_region\">release_region</a>(<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#data_addr\">data_addr</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_region\">release_region</a>(<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#command_addr\">command_addr</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ec\">ec</a> == <a class=\"id\" href=\"#first_ec\">first_ec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first_ec\">first_ec</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ec\">ec</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#ec_parse_io_ports\">ec_parse_io_ports</a>(struct <a class=\"id\" href=\"#acpi_resource\">acpi_resource</a> *<a class=\"id\" href=\"#resource\">resource</a>, void *<a class=\"id\" href=\"#context\">context</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#ec\">ec</a> = <a class=\"id\" href=\"#context\">context</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#resource\">resource</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_RESOURCE_TYPE_IO\">ACPI_RESOURCE_TYPE_IO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The first address region returned is the data port, and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the second address region returned is the status/command</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * port.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#data_addr\">data_addr</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#data_addr\">data_addr</a> = <a class=\"id\" href=\"#resource\">resource</a>-><a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#minimum\">minimum</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#command_addr\">command_addr</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ec\">ec</a>-><a class=\"id\" href=\"#command_addr\">command_addr</a> = <a class=\"id\" href=\"#resource\">resource</a>-><a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#minimum\">minimum</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_CTRL_TERMINATE\">AE_CTRL_TERMINATE</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_boot_ec_enable\">acpi_boot_ec_enable</a>(void)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#boot_ec\">boot_ec</a> || <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#EC_FLAGS_HANDLERS_INSTALLED\">EC_FLAGS_HANDLERS_INSTALLED</a>, &amp;<a class=\"id\" href=\"#boot_ec\">boot_ec</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ec_install_handlers\">ec_install_handlers</a>(<a class=\"id\" href=\"#boot_ec\">boot_ec</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first_ec\">first_ec</a> = <a class=\"id\" href=\"#boot_ec\">boot_ec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#acpi_device_id\">acpi_device_id</a> <a class=\"id\" href=\"#ec_device_ids\">ec_device_ids</a>[] = {", 
"<span class=\"ts\"/>{\"PNP0C09\", 0},", 
"<span class=\"ts\"/>{\"\", 0},", 
"};", 
"", 
"<span class=\"comment\">/* Some BIOS do not survive early DSDT scan, skip it */</span>", 
"static int <a class=\"id\" href=\"#ec_skip_dsdt_scan\">ec_skip_dsdt_scan</a>(const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EC_FLAGS_SKIP_DSDT_SCAN\">EC_FLAGS_SKIP_DSDT_SCAN</a> = 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* ASUStek often supplies us with broken ECDT, validate it */</span>", 
"static int <a class=\"id\" href=\"#ec_validate_ecdt\">ec_validate_ecdt</a>(const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EC_FLAGS_VALIDATE_ECDT\">EC_FLAGS_VALIDATE_ECDT</a> = 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* MSI EC needs special treatment, enable it */</span>", 
"static int <a class=\"id\" href=\"#ec_flag_msi\">ec_flag_msi</a>(const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Detected MSI hardware, enabling workarounds.\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EC_FLAGS_MSI\">EC_FLAGS_MSI</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EC_FLAGS_VALIDATE_ECDT\">EC_FLAGS_VALIDATE_ECDT</a> = 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#ec_dmi_table\">ec_dmi_table</a>[] = {", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ec_skip_dsdt_scan\">ec_skip_dsdt_scan</a>, \"Compal JFL92\", {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BIOS_VENDOR\">DMI_BIOS_VENDOR</a>, \"COMPAL\"),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BOARD_NAME\">DMI_BOARD_NAME</a>, \"JFL92\") }, <a class=\"id\" href=\"#NULL\">NULL</a>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ec_flag_msi\">ec_flag_msi</a>, \"MSI hardware\", {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BIOS_VENDOR\">DMI_BIOS_VENDOR</a>, \"Micro-Star\")}, <a class=\"id\" href=\"#NULL\">NULL</a>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ec_flag_msi\">ec_flag_msi</a>, \"MSI hardware\", {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"Micro-Star\")}, <a class=\"id\" href=\"#NULL\">NULL</a>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ec_flag_msi\">ec_flag_msi</a>, \"MSI hardware\", {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_CHASSIS_VENDOR\">DMI_CHASSIS_VENDOR</a>, \"MICRO-Star\")}, <a class=\"id\" href=\"#NULL\">NULL</a>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ec_validate_ecdt\">ec_validate_ecdt</a>, \"ASUS hardware\", {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BIOS_VENDOR\">DMI_BIOS_VENDOR</a>, \"ASUS\") }, <a class=\"id\" href=\"#NULL\">NULL</a>},", 
"<span class=\"ts\"/>{},", 
"};", 
"", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_ec_ecdt_probe\">acpi_ec_ecdt_probe</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a> *<a class=\"id\" href=\"#saved_ec\">saved_ec</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_ecdt\">acpi_table_ecdt</a> *<a class=\"id\" href=\"#ecdt_ptr\">ecdt_ptr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#boot_ec\">boot_ec</a> = <a class=\"id\" href=\"#make_acpi_ec\">make_acpi_ec</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#boot_ec\">boot_ec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Generate a boot ec context</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dmi_check_system\">dmi_check_system</a>(<a class=\"id\" href=\"#ec_dmi_table\">ec_dmi_table</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_get_table\">acpi_get_table</a>(<a class=\"id\" href=\"#ACPI_SIG_ECDT\">ACPI_SIG_ECDT</a>, 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> **)&amp;<a class=\"id\" href=\"#ecdt_ptr\">ecdt_ptr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(<a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"EC description table is found, configuring boot EC\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#boot_ec\">boot_ec</a>-><a class=\"id\" href=\"#command_addr\">command_addr</a> = <a class=\"id\" href=\"#ecdt_ptr\">ecdt_ptr</a>-><a class=\"id\" href=\"#control\">control</a>.<a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#boot_ec\">boot_ec</a>-><a class=\"id\" href=\"#data_addr\">data_addr</a> = <a class=\"id\" href=\"#ecdt_ptr\">ecdt_ptr</a>-><a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#boot_ec\">boot_ec</a>-><a class=\"id\" href=\"#gpe\">gpe</a> = <a class=\"id\" href=\"#ecdt_ptr\">ecdt_ptr</a>-><a class=\"id\" href=\"#gpe\">gpe</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#boot_ec\">boot_ec</a>-><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ACPI_ROOT_OBJECT\">ACPI_ROOT_OBJECT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_get_handle\">acpi_get_handle</a>(<a class=\"id\" href=\"#ACPI_ROOT_OBJECT\">ACPI_ROOT_OBJECT</a>, <a class=\"id\" href=\"#ecdt_ptr\">ecdt_ptr</a>-><a class=\"id\" href=\"#id\">id</a>, &amp;<a class=\"id\" href=\"#boot_ec\">boot_ec</a>-><a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Don't trust ECDT, which comes from ASUSTek */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#EC_FLAGS_VALIDATE_ECDT\">EC_FLAGS_VALIDATE_ECDT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#install\">install</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saved_ec\">saved_ec</a> = <a class=\"id\" href=\"#kmemdup\">kmemdup</a>(<a class=\"id\" href=\"#boot_ec\">boot_ec</a>, sizeof(struct <a class=\"id\" href=\"#acpi_ec\">acpi_ec</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#saved_ec\">saved_ec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EC_FLAGS_SKIP_DSDT_SCAN\">EC_FLAGS_SKIP_DSDT_SCAN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This workaround is needed only on some broken machines,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * which require early EC, but fail to provide ECDT */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Look up EC in DSDT\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_get_devices\">acpi_get_devices</a>(<a class=\"id\" href=\"#ec_device_ids\">ec_device_ids</a>[0].<a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#ec_parse_device\">ec_parse_device</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#boot_ec\">boot_ec</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Check that acpi_get_devices actually find something */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>) || !<a class=\"id\" href=\"#boot_ec\">boot_ec</a>-><a class=\"id\" href=\"#handle\">handle</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#saved_ec\">saved_ec</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* try to find good ECDT from ASUSTek */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#saved_ec\">saved_ec</a>-><a class=\"id\" href=\"#command_addr\">command_addr</a> != <a class=\"id\" href=\"#boot_ec\">boot_ec</a>-><a class=\"id\" href=\"#command_addr\">command_addr</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#saved_ec\">saved_ec</a>-><a class=\"id\" href=\"#data_addr\">data_addr</a> != <a class=\"id\" href=\"#boot_ec\">boot_ec</a>-><a class=\"id\" href=\"#data_addr\">data_addr</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#saved_ec\">saved_ec</a>-><a class=\"id\" href=\"#gpe\">gpe</a> != <a class=\"id\" href=\"#boot_ec\">boot_ec</a>-><a class=\"id\" href=\"#gpe\">gpe</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#saved_ec\">saved_ec</a>-><a class=\"id\" href=\"#handle\">handle</a> != <a class=\"id\" href=\"#boot_ec\">boot_ec</a>-><a class=\"id\" href=\"#handle\">handle</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(<a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"ASUSTek keeps feeding us with broken \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"ECDT tables, which are very hard to workaround. \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Trying to use DSDT EC info instead. Please send \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"output of acpidump to linux-acpi@vger.kernel.org\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#saved_ec\">saved_ec</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saved_ec\">saved_ec</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We really need to limit this workaround, the only ASUS,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>* which needs it, has fake EC._INI method, so use it as flag.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>* Keep boot_ec struct as it will be needed soon.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#dummy\">dummy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dmi_name_in_vendors\">dmi_name_in_vendors</a>(\"ASUS\") ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#acpi_get_handle\">acpi_get_handle</a>(<a class=\"id\" href=\"#boot_ec\">boot_ec</a>-><a class=\"id\" href=\"#handle\">handle</a>, \"_INI\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dummy\">dummy</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#install\">install</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ec_install_handlers\">ec_install_handlers</a>(<a class=\"id\" href=\"#boot_ec\">boot_ec</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first_ec\">first_ec</a> = <a class=\"id\" href=\"#boot_ec\">boot_ec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#boot_ec\">boot_ec</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#boot_ec\">boot_ec</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#acpi_driver\">acpi_driver</a> <a class=\"id\" href=\"#acpi_ec_driver\">acpi_ec_driver</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> = \"ec\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#class\">class</a> = <a class=\"id\" href=\"#ACPI_EC_CLASS\">ACPI_EC_CLASS</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ids\">ids</a> = <a class=\"id\" href=\"#ec_device_ids\">ec_device_ids</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ops\">ops</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#add\">add</a> = <a class=\"id\" href=\"#acpi_ec_add\">acpi_ec_add</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#remove\">remove</a> = <a class=\"id\" href=\"#acpi_ec_remove\">acpi_ec_remove</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"};", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_ec_init\">acpi_ec_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Now register the driver for the EC */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#acpi_bus_register_driver\">acpi_bus_register_driver</a>(&amp;<a class=\"id\" href=\"#acpi_ec_driver\">acpi_ec_driver</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"<span class=\"comment\">/* EC driver currently not unloadable */</span>", 
"#if 0", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#acpi_ec_exit\">acpi_ec_exit</a>(void)", 
"{", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_bus_unregister_driver\">acpi_bus_unregister_driver</a>(&amp;<a class=\"id\" href=\"#acpi_ec_driver\">acpi_ec_driver</a>);", 
"<span class=\"ts\"/>return;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* 0 */</span>", 
];
xr_frag_insert('l/f4/9050fc161ab1b60c6cbd4a44790a1987263df1.xr', __xr_tmp);
