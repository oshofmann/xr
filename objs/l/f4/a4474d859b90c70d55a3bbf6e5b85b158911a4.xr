var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_X86_NMI_H\">_ASM_X86_NMI_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_X86_NMI_H\">_ASM_X86_NMI_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pm\">pm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ARCH_HAS_NMI_WATCHDOG\">ARCH_HAS_NMI_WATCHDOG</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * do_nmi_callback</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Check to see if a callback exists and execute it.  Return 1</span>", 
"<span class=\"comment\"> * if the handler exists and was handled successfully.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#do_nmi_callback\">do_nmi_callback</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>, int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"extern void <a class=\"id\" href=\"#die_nmi\">die_nmi</a>(char *<a class=\"id\" href=\"#str\">str</a>, struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>, int <a class=\"id\" href=\"#do_panic\">do_panic</a>);", 
"extern int <a class=\"id\" href=\"#check_nmi_watchdog\">check_nmi_watchdog</a>(void);", 
"#if !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_LOCKUP_DETECTOR\">CONFIG_LOCKUP_DETECTOR</a>)", 
"extern int <a class=\"id\" href=\"#nmi_watchdog_enabled\">nmi_watchdog_enabled</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"extern int <a class=\"id\" href=\"#avail_to_resrv_perfctr_nmi_bit\">avail_to_resrv_perfctr_nmi_bit</a>(unsigned int);", 
"extern int <a class=\"id\" href=\"#reserve_perfctr_nmi\">reserve_perfctr_nmi</a>(unsigned int);", 
"extern void <a class=\"id\" href=\"#release_perfctr_nmi\">release_perfctr_nmi</a>(unsigned int);", 
"extern int <a class=\"id\" href=\"#reserve_evntsel_nmi\">reserve_evntsel_nmi</a>(unsigned int);", 
"extern void <a class=\"id\" href=\"#release_evntsel_nmi\">release_evntsel_nmi</a>(unsigned int);", 
"", 
"extern void <a class=\"id\" href=\"#setup_apic_nmi_watchdog\">setup_apic_nmi_watchdog</a>(void *);", 
"extern void <a class=\"id\" href=\"#stop_apic_nmi_watchdog\">stop_apic_nmi_watchdog</a>(void *);", 
"extern void <a class=\"id\" href=\"#disable_timer_nmi_watchdog\">disable_timer_nmi_watchdog</a>(void);", 
"extern void <a class=\"id\" href=\"#enable_timer_nmi_watchdog\">enable_timer_nmi_watchdog</a>(void);", 
"extern int <a class=\"id\" href=\"#nmi_watchdog_tick\">nmi_watchdog_tick</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>, unsigned <a class=\"id\" href=\"#reason\">reason</a>);", 
"extern void <a class=\"id\" href=\"#cpu_nmi_set_wd_enabled\">cpu_nmi_set_wd_enabled</a>(void);", 
"", 
"extern <a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#nmi_active\">nmi_active</a>;", 
"extern unsigned int <a class=\"id\" href=\"#nmi_watchdog\">nmi_watchdog</a>;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NMI_NONE\">NMI_NONE</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NMI_IO_APIC\">NMI_IO_APIC</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NMI_LOCAL_APIC\">NMI_LOCAL_APIC</a><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NMI_INVALID\">NMI_INVALID</a><span class=\"ts\"/>3", 
"", 
"struct <a class=\"id\" href=\"#ctl_table\">ctl_table</a>;", 
"extern int <a class=\"id\" href=\"#proc_nmi_enabled\">proc_nmi_enabled</a>(struct <a class=\"id\" href=\"#ctl_table\">ctl_table</a> *, int ,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#size_t\">size_t</a> *, <a class=\"id\" href=\"#loff_t\">loff_t</a> *);", 
"extern int <a class=\"id\" href=\"#unknown_nmi_panic\">unknown_nmi_panic</a>;", 
"", 
"void <a class=\"id\" href=\"#arch_trigger_all_cpu_backtrace\">arch_trigger_all_cpu_backtrace</a>(void);", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#arch_trigger_all_cpu_backtrace\">arch_trigger_all_cpu_backtrace</a> <a class=\"id\" href=\"#arch_trigger_all_cpu_backtrace\">arch_trigger_all_cpu_backtrace</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#localise_nmi_watchdog\">localise_nmi_watchdog</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nmi_watchdog\">nmi_watchdog</a> == <a class=\"id\" href=\"#NMI_IO_APIC\">NMI_IO_APIC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nmi_watchdog\">nmi_watchdog</a> = <a class=\"id\" href=\"#NMI_LOCAL_APIC\">NMI_LOCAL_APIC</a>;", 
"}", 
"", 
"<span class=\"comment\">/* check if nmi_watchdog is active (ie was specified at boot) */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nmi_watchdog_active\">nmi_watchdog_active</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * actually it should be:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * <span class=\"ts\"/>return (nmi_watchdog == NMI_LOCAL_APIC ||</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * <span class=\"ts\"/><span class=\"ts\"/>nmi_watchdog == NMI_IO_APIC)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * but since they are power of two we could use a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cheaper way --cvg</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nmi_watchdog\">nmi_watchdog</a> &amp; (<a class=\"id\" href=\"#NMI_LOCAL_APIC\">NMI_LOCAL_APIC</a> | <a class=\"id\" href=\"#NMI_IO_APIC\">NMI_IO_APIC</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"void <a class=\"id\" href=\"#lapic_watchdog_stop\">lapic_watchdog_stop</a>(void);", 
"int <a class=\"id\" href=\"#lapic_watchdog_init\">lapic_watchdog_init</a>(unsigned <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>);", 
"int <a class=\"id\" href=\"#lapic_wd_event\">lapic_wd_event</a>(unsigned <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>);", 
"unsigned <a class=\"id\" href=\"#lapic_adjust_nmi_hz\">lapic_adjust_nmi_hz</a>(unsigned <a class=\"id\" href=\"#hz\">hz</a>);", 
"void <a class=\"id\" href=\"#disable_lapic_nmi_watchdog\">disable_lapic_nmi_watchdog</a>(void);", 
"void <a class=\"id\" href=\"#enable_lapic_nmi_watchdog\">enable_lapic_nmi_watchdog</a>(void);", 
"void <a class=\"id\" href=\"#stop_nmi\">stop_nmi</a>(void);", 
"void <a class=\"id\" href=\"#restart_nmi\">restart_nmi</a>(void);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_X86_NMI_H */</span>", 
];
xr_frag_insert('l/f4/a4474d859b90c70d55a3bbf6e5b85b158911a4.xr', __xr_tmp);
