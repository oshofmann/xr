var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Populate sysfs with topology information</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Written by: Matthew Dobson, IBM Corporation</span>", 
"<span class=\"comment\"> * Original Code: Paul Dorwin, IBM Corporation, Patrick Mochel, OSDL</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2002, IBM Corp.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful, but</span>", 
"<span class=\"comment\"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, GOOD TITLE or</span>", 
"<span class=\"comment\"> * NON INFRINGEMENT.  See the GNU General Public License for more</span>", 
"<span class=\"comment\"> * details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Send feedback to &lt;colpatch@us.ibm.com&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#nodemask\">nodemask</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mmzone\">mmzone</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#x86_cpu\">x86_cpu</a>, <a class=\"id\" href=\"#cpu_devices\">cpu_devices</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>", 
"int <a class=\"id\" href=\"#__ref\">__ref</a> <a class=\"id\" href=\"#arch_register_cpu\">arch_register_cpu</a>(int <a class=\"id\" href=\"#num\">num</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * CPU0 cannot be offlined due to several</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * restrictions and assumptions in kernel. This basically</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * doesnt add a control file, one cannot attempt to offline</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * BSP.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Also certain PCI quirks require not to enable hotplug control</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for all CPU's.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num\">num</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpu_devices\">cpu_devices</a>, <a class=\"id\" href=\"#num\">num</a>).<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#hotpluggable\">hotpluggable</a> = 1;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#register_cpu\">register_cpu</a>(&amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpu_devices\">cpu_devices</a>, <a class=\"id\" href=\"#num\">num</a>).<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#num\">num</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#arch_register_cpu\">arch_register_cpu</a>);", 
"", 
"void <a class=\"id\" href=\"#arch_unregister_cpu\">arch_unregister_cpu</a>(int <a class=\"id\" href=\"#num\">num</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_cpu\">unregister_cpu</a>(&amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpu_devices\">cpu_devices</a>, <a class=\"id\" href=\"#num\">num</a>).<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#arch_unregister_cpu\">arch_unregister_cpu</a>);", 
"#else <span class=\"comment\">/* CONFIG_HOTPLUG_CPU */</span>", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#arch_register_cpu\">arch_register_cpu</a>(int <a class=\"id\" href=\"#num\">num</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#register_cpu\">register_cpu</a>(&amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpu_devices\">cpu_devices</a>, <a class=\"id\" href=\"#num\">num</a>).<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#num\">num</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_HOTPLUG_CPU */</span>", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#topology_init\">topology_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NUMA\">CONFIG_NUMA</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_node\">for_each_online_node</a>(<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#register_one_node\">register_one_node</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_present_cpu\">for_each_present_cpu</a>(<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arch_register_cpu\">arch_register_cpu</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#subsys_initcall\">subsys_initcall</a>(<a class=\"id\" href=\"#topology_init\">topology_init</a>);", 
];
xr_frag_insert('l/f5/085a1418d965c194c611e3a15f79ae24e1692c.xr', __xr_tmp);
