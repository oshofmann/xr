var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#LINUX_HARDIRQ_H\">LINUX_HARDIRQ_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LINUX_HARDIRQ_H\">LINUX_HARDIRQ_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#preempt\">preempt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PREEMPT\">CONFIG_PREEMPT</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp_lock\">smp_lock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#lockdep\">lockdep</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ftrace_irq\">ftrace_irq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#hardirq\">hardirq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We put the hardirq and softirq counter into the preemption</span>", 
"<span class=\"comment\"> * counter. The bitmask has the following meaning:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * - bits 0-7 are the preemption count (max preemption depth: 256)</span>", 
"<span class=\"comment\"> * - bits 8-15 are the softirq count (max # of softirqs: 256)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The hardirq count can in theory reach the same as NR_IRQS.</span>", 
"<span class=\"comment\"> * In reality, the number of nested IRQS is limited to the stack</span>", 
"<span class=\"comment\"> * size as well. For archs with over 1000 IRQS it is not practical</span>", 
"<span class=\"comment\"> * to expect that they will all nest. We give a max of 10 bits for</span>", 
"<span class=\"comment\"> * hardirq nesting. An arch may choose to give less than 10 bits.</span>", 
"<span class=\"comment\"> * m68k expects it to be 8.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * - bits 16-25 are the hardirq count (max # of nested hardirqs: 1024)</span>", 
"<span class=\"comment\"> * - bit 26 is the NMI_MASK</span>", 
"<span class=\"comment\"> * - bit 28 is the PREEMPT_ACTIVE flag</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PREEMPT_MASK: 0x000000ff</span>", 
"<span class=\"comment\"> * SOFTIRQ_MASK: 0x0000ff00</span>", 
"<span class=\"comment\"> * HARDIRQ_MASK: 0x03ff0000</span>", 
"<span class=\"comment\"> *     NMI_MASK: 0x04000000</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PREEMPT_BITS\">PREEMPT_BITS</a><span class=\"ts\"/>8", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SOFTIRQ_BITS\">SOFTIRQ_BITS</a><span class=\"ts\"/>8", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NMI_BITS\">NMI_BITS</a><span class=\"ts\"/>1", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_HARDIRQ_BITS\">MAX_HARDIRQ_BITS</a> 10", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#HARDIRQ_BITS\">HARDIRQ_BITS</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HARDIRQ_BITS\">HARDIRQ_BITS</a><span class=\"ts\"/><a class=\"id\" href=\"#MAX_HARDIRQ_BITS\">MAX_HARDIRQ_BITS</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#if <a class=\"id\" href=\"#HARDIRQ_BITS\">HARDIRQ_BITS</a> &gt; <a class=\"id\" href=\"#MAX_HARDIRQ_BITS\">MAX_HARDIRQ_BITS</a>", 
"#<a class=\"id\" href=\"#error\">error</a> <a class=\"id\" href=\"#HARDIRQ_BITS\">HARDIRQ_BITS</a> <a class=\"id\" href=\"#too\">too</a> <a class=\"id\" href=\"#high\">high</a>!", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PREEMPT_SHIFT\">PREEMPT_SHIFT</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SOFTIRQ_SHIFT\">SOFTIRQ_SHIFT</a><span class=\"ts\"/>(<a class=\"id\" href=\"#PREEMPT_SHIFT\">PREEMPT_SHIFT</a> + <a class=\"id\" href=\"#PREEMPT_BITS\">PREEMPT_BITS</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HARDIRQ_SHIFT\">HARDIRQ_SHIFT</a><span class=\"ts\"/>(<a class=\"id\" href=\"#SOFTIRQ_SHIFT\">SOFTIRQ_SHIFT</a> + <a class=\"id\" href=\"#SOFTIRQ_BITS\">SOFTIRQ_BITS</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NMI_SHIFT\">NMI_SHIFT</a><span class=\"ts\"/>(<a class=\"id\" href=\"#HARDIRQ_SHIFT\">HARDIRQ_SHIFT</a> + <a class=\"id\" href=\"#HARDIRQ_BITS\">HARDIRQ_BITS</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__IRQ_MASK\">__IRQ_MASK</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/>((1UL << (<a class=\"id\" href=\"#x\">x</a>))-1)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PREEMPT_MASK\">PREEMPT_MASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#__IRQ_MASK\">__IRQ_MASK</a>(<a class=\"id\" href=\"#PREEMPT_BITS\">PREEMPT_BITS</a>) << <a class=\"id\" href=\"#PREEMPT_SHIFT\">PREEMPT_SHIFT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SOFTIRQ_MASK\">SOFTIRQ_MASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#__IRQ_MASK\">__IRQ_MASK</a>(<a class=\"id\" href=\"#SOFTIRQ_BITS\">SOFTIRQ_BITS</a>) << <a class=\"id\" href=\"#SOFTIRQ_SHIFT\">SOFTIRQ_SHIFT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HARDIRQ_MASK\">HARDIRQ_MASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#__IRQ_MASK\">__IRQ_MASK</a>(<a class=\"id\" href=\"#HARDIRQ_BITS\">HARDIRQ_BITS</a>) << <a class=\"id\" href=\"#HARDIRQ_SHIFT\">HARDIRQ_SHIFT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NMI_MASK\">NMI_MASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#__IRQ_MASK\">__IRQ_MASK</a>(<a class=\"id\" href=\"#NMI_BITS\">NMI_BITS</a>)     << <a class=\"id\" href=\"#NMI_SHIFT\">NMI_SHIFT</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PREEMPT_OFFSET\">PREEMPT_OFFSET</a><span class=\"ts\"/>(1UL << <a class=\"id\" href=\"#PREEMPT_SHIFT\">PREEMPT_SHIFT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SOFTIRQ_OFFSET\">SOFTIRQ_OFFSET</a><span class=\"ts\"/>(1UL << <a class=\"id\" href=\"#SOFTIRQ_SHIFT\">SOFTIRQ_SHIFT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HARDIRQ_OFFSET\">HARDIRQ_OFFSET</a><span class=\"ts\"/>(1UL << <a class=\"id\" href=\"#HARDIRQ_SHIFT\">HARDIRQ_SHIFT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NMI_OFFSET\">NMI_OFFSET</a><span class=\"ts\"/>(1UL << <a class=\"id\" href=\"#NMI_SHIFT\">NMI_SHIFT</a>)", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#PREEMPT_ACTIVE\">PREEMPT_ACTIVE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PREEMPT_ACTIVE_BITS\">PREEMPT_ACTIVE_BITS</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PREEMPT_ACTIVE_SHIFT\">PREEMPT_ACTIVE_SHIFT</a><span class=\"ts\"/>(<a class=\"id\" href=\"#NMI_SHIFT\">NMI_SHIFT</a> + <a class=\"id\" href=\"#NMI_BITS\">NMI_BITS</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PREEMPT_ACTIVE\">PREEMPT_ACTIVE</a><span class=\"ts\"/>(<a class=\"id\" href=\"#__IRQ_MASK\">__IRQ_MASK</a>(<a class=\"id\" href=\"#PREEMPT_ACTIVE_BITS\">PREEMPT_ACTIVE_BITS</a>) << <a class=\"id\" href=\"#PREEMPT_ACTIVE_SHIFT\">PREEMPT_ACTIVE_SHIFT</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#if <a class=\"id\" href=\"#PREEMPT_ACTIVE\">PREEMPT_ACTIVE</a> &lt; (1 << (<a class=\"id\" href=\"#NMI_SHIFT\">NMI_SHIFT</a> + <a class=\"id\" href=\"#NMI_BITS\">NMI_BITS</a>))", 
"#<a class=\"id\" href=\"#error\">error</a> <a class=\"id\" href=\"#PREEMPT_ACTIVE\">PREEMPT_ACTIVE</a> <a class=\"id\" href=\"#is\">is</a> <a class=\"id\" href=\"#too\">too</a> <a class=\"id\" href=\"#low\">low</a>!", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#hardirq_count\">hardirq_count</a>()<span class=\"ts\"/>(<a class=\"id\" href=\"#preempt_count\">preempt_count</a>() &amp; <a class=\"id\" href=\"#HARDIRQ_MASK\">HARDIRQ_MASK</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#softirq_count\">softirq_count</a>()<span class=\"ts\"/>(<a class=\"id\" href=\"#preempt_count\">preempt_count</a>() &amp; <a class=\"id\" href=\"#SOFTIRQ_MASK\">SOFTIRQ_MASK</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irq_count\">irq_count</a>()<span class=\"ts\"/>(<a class=\"id\" href=\"#preempt_count\">preempt_count</a>() &amp; (<a class=\"id\" href=\"#HARDIRQ_MASK\">HARDIRQ_MASK</a> | <a class=\"id\" href=\"#SOFTIRQ_MASK\">SOFTIRQ_MASK</a> \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> | <a class=\"id\" href=\"#NMI_MASK\">NMI_MASK</a>))", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Are we doing bottom half or hardware interrupt processing?</span>", 
"<span class=\"comment\"> * Are we in a softirq context? Interrupt context?</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#in_irq\">in_irq</a>()<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#hardirq_count\">hardirq_count</a>())", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#in_softirq\">in_softirq</a>()<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#softirq_count\">softirq_count</a>())", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#in_interrupt\">in_interrupt</a>()<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#irq_count\">irq_count</a>())", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Are we in NMI context?</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#in_nmi\">in_nmi</a>()<span class=\"ts\"/>(<a class=\"id\" href=\"#preempt_count\">preempt_count</a>() &amp; <a class=\"id\" href=\"#NMI_MASK\">NMI_MASK</a>)", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_PREEMPT\">CONFIG_PREEMPT</a>)", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PREEMPT_INATOMIC_BASE\">PREEMPT_INATOMIC_BASE</a> <a class=\"id\" href=\"#kernel_locked\">kernel_locked</a>()", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PREEMPT_CHECK_OFFSET\">PREEMPT_CHECK_OFFSET</a> 1", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PREEMPT_INATOMIC_BASE\">PREEMPT_INATOMIC_BASE</a> 0", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PREEMPT_CHECK_OFFSET\">PREEMPT_CHECK_OFFSET</a> 0", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Are we running in atomic context?  WARNING: this macro cannot</span>", 
"<span class=\"comment\"> * always detect atomic context; in particular, it cannot know about</span>", 
"<span class=\"comment\"> * held spinlocks in non-preemptible kernels.  Thus it should not be</span>", 
"<span class=\"comment\"> * used in the general case to determine whether sleeping is possible.</span>", 
"<span class=\"comment\"> * Do not use in_atomic() in driver code.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#in_atomic\">in_atomic</a>()<span class=\"ts\"/>((<a class=\"id\" href=\"#preempt_count\">preempt_count</a>() &amp; ~<a class=\"id\" href=\"#PREEMPT_ACTIVE\">PREEMPT_ACTIVE</a>) != <a class=\"id\" href=\"#PREEMPT_INATOMIC_BASE\">PREEMPT_INATOMIC_BASE</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Check whether we were atomic before we did preempt_disable():</span>", 
"<span class=\"comment\"> * (used by the scheduler, *after* releasing the kernel lock)</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#in_atomic_preempt_off\">in_atomic_preempt_off</a>() \\", 
"<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#preempt_count\">preempt_count</a>() &amp; ~<a class=\"id\" href=\"#PREEMPT_ACTIVE\">PREEMPT_ACTIVE</a>) != <a class=\"id\" href=\"#PREEMPT_CHECK_OFFSET\">PREEMPT_CHECK_OFFSET</a>)", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PREEMPT\">CONFIG_PREEMPT</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#preemptible\">preemptible</a>()<span class=\"ts\"/>(<a class=\"id\" href=\"#preempt_count\">preempt_count</a>() == 0 && !<a class=\"id\" href=\"#irqs_disabled\">irqs_disabled</a>())", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQ_EXIT_OFFSET\">IRQ_EXIT_OFFSET</a> (<a class=\"id\" href=\"#HARDIRQ_OFFSET\">HARDIRQ_OFFSET</a>-1)", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#preemptible\">preemptible</a>()<span class=\"ts\"/>0", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQ_EXIT_OFFSET\">IRQ_EXIT_OFFSET</a> <a class=\"id\" href=\"#HARDIRQ_OFFSET\">HARDIRQ_OFFSET</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_GENERIC_HARDIRQS\">CONFIG_GENERIC_HARDIRQS</a>)", 
"extern void <a class=\"id\" href=\"#synchronize_irq\">synchronize_irq</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>);", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#synchronize_irq\">synchronize_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>)<span class=\"ts\"/><a class=\"id\" href=\"#barrier\">barrier</a>()", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"struct <a class=\"id\" href=\"#task_struct\">task_struct</a>;", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_VIRT_CPU_ACCOUNTING\">CONFIG_VIRT_CPU_ACCOUNTING</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#account_system_vtime\">account_system_vtime</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NO_HZ\">CONFIG_NO_HZ</a>)", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_TINY_RCU\">CONFIG_TINY_RCU</a>)", 
"extern void <a class=\"id\" href=\"#rcu_enter_nohz\">rcu_enter_nohz</a>(void);", 
"extern void <a class=\"id\" href=\"#rcu_exit_nohz\">rcu_exit_nohz</a>(void);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#rcu_irq_enter\">rcu_irq_enter</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_exit_nohz\">rcu_exit_nohz</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#rcu_irq_exit\">rcu_irq_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_enter_nohz\">rcu_enter_nohz</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#rcu_nmi_enter\">rcu_nmi_enter</a>(void)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#rcu_nmi_exit\">rcu_nmi_exit</a>(void)", 
"{", 
"}", 
"", 
"#else", 
"extern void <a class=\"id\" href=\"#rcu_irq_enter\">rcu_irq_enter</a>(void);", 
"extern void <a class=\"id\" href=\"#rcu_irq_exit\">rcu_irq_exit</a>(void);", 
"extern void <a class=\"id\" href=\"#rcu_nmi_enter\">rcu_nmi_enter</a>(void);", 
"extern void <a class=\"id\" href=\"#rcu_nmi_exit\">rcu_nmi_exit</a>(void);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rcu_irq_enter\">rcu_irq_enter</a>() do { } while (0)", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rcu_irq_exit\">rcu_irq_exit</a>() do { } while (0)", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rcu_nmi_enter\">rcu_nmi_enter</a>() do { } while (0)", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rcu_nmi_exit\">rcu_nmi_exit</a>() do { } while (0)", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* #if defined(CONFIG_NO_HZ) */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * It is safe to do non-atomic ops on -&gt;hardirq_context,</span>", 
"<span class=\"comment\"> * because NMI handlers may not preempt and the ops are</span>", 
"<span class=\"comment\"> * always balanced, so the interrupted value of -&gt;hardirq_context</span>", 
"<span class=\"comment\"> * will always be restored.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__irq_enter\">__irq_enter</a>()<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#account_system_vtime\">account_system_vtime</a>(<a class=\"id\" href=\"#current\">current</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_preempt_count\">add_preempt_count</a>(<a class=\"id\" href=\"#HARDIRQ_OFFSET\">HARDIRQ_OFFSET</a>);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_hardirq_enter\">trace_hardirq_enter</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>} while (0)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Enter irq context (on NO_HZ, update jiffies):</span>", 
"<span class=\"comment\"> */</span>", 
"extern void <a class=\"id\" href=\"#irq_enter\">irq_enter</a>(void);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Exit irq context without processing softirqs:</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__irq_exit\">__irq_exit</a>()<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_hardirq_exit\">trace_hardirq_exit</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#account_system_vtime\">account_system_vtime</a>(<a class=\"id\" href=\"#current\">current</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sub_preempt_count\">sub_preempt_count</a>(<a class=\"id\" href=\"#HARDIRQ_OFFSET\">HARDIRQ_OFFSET</a>);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>} while (0)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Exit irq context and process softirqs if needed:</span>", 
"<span class=\"comment\"> */</span>", 
"extern void <a class=\"id\" href=\"#irq_exit\">irq_exit</a>(void);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#nmi_enter\">nmi_enter</a>()<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ftrace_nmi_enter\">ftrace_nmi_enter</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#in_nmi\">in_nmi</a>());<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_preempt_count\">add_preempt_count</a>(<a class=\"id\" href=\"#NMI_OFFSET\">NMI_OFFSET</a> + <a class=\"id\" href=\"#HARDIRQ_OFFSET\">HARDIRQ_OFFSET</a>);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lockdep_off\">lockdep_off</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_nmi_enter\">rcu_nmi_enter</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_hardirq_enter\">trace_hardirq_enter</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>} while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#nmi_exit\">nmi_exit</a>()<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_hardirq_exit\">trace_hardirq_exit</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_nmi_exit\">rcu_nmi_exit</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lockdep_on\">lockdep_on</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#in_nmi\">in_nmi</a>());<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sub_preempt_count\">sub_preempt_count</a>(<a class=\"id\" href=\"#NMI_OFFSET\">NMI_OFFSET</a> + <a class=\"id\" href=\"#HARDIRQ_OFFSET\">HARDIRQ_OFFSET</a>);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ftrace_nmi_exit\">ftrace_nmi_exit</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>} while (0)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* LINUX_HARDIRQ_H */</span>", 
];
xr_frag_insert('l/f5/6895551889416d2029fe217f96977eb187a035.xr', __xr_tmp);
