var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#ack_APIC_irq\">ack_APIC_irq</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#exit_idle\">exit_idle</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_enter\">irq_enter</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#me\">me</a> = <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#vector\">vector</a> = <a class=\"id\" href=\"#FIRST_EXTERNAL_VECTOR\">FIRST_EXTERNAL_VECTOR</a>; <a class=\"id\" href=\"#vector\">vector</a> &lt; <a class=\"id\" href=\"#NR_VECTORS\">NR_VECTORS</a>; <a class=\"id\" href=\"#vector\">vector</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#irr\">irr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#vector_irq\">vector_irq</a>)[<a class=\"id\" href=\"#vector\">vector</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a> == -1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Check if the irq migration is in progress. If so, we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * haven't received the cleanup request yet for this irq.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#move_in_progress\">move_in_progress</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock\">unlock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vector\">vector</a> == <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#vector\">vector</a> && <a class=\"id\" href=\"#cpumask_test_cpu\">cpumask_test_cpu</a>(<a class=\"id\" href=\"#me\">me</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#domain\">domain</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock\">unlock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irr\">irr</a> = <a class=\"id\" href=\"#apic_read\">apic_read</a>(<a class=\"id\" href=\"#APIC_IRR\">APIC_IRR</a> + (<a class=\"id\" href=\"#vector\">vector</a> / 32 * 0x10));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Check if the vector that needs to be cleanedup is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * registered at the cpu's IRR. If so, then this is not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the best time to clean it up. Lets clean it up in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * next attempt by sending another IRQ_MOVE_CLEANUP_VECTOR</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to myself.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#irr\">irr</a>  &amp; (1 << (<a class=\"id\" href=\"#vector\">vector</a> % 32))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#send_IPI_self\">send_IPI_self</a>(<a class=\"id\" href=\"#IRQ_MOVE_CLEANUP_VECTOR\">IRQ_MOVE_CLEANUP_VECTOR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock\">unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#vector_irq\">vector_irq</a>)[<a class=\"id\" href=\"#vector\">vector</a>] = -1;", 
"<a class=\"id\" href=\"#unlock\">unlock</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_exit\">irq_exit</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__irq_complete_move\">__irq_complete_move</a>(struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> **<a class=\"id\" href=\"#descp\">descp</a>, unsigned <a class=\"id\" href=\"#vector\">vector</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = *<a class=\"id\" href=\"#descp\">descp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#me\">me</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(!<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#move_in_progress\">move_in_progress</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#me\">me</a> = <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vector\">vector</a> == <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#vector\">vector</a> && <a class=\"id\" href=\"#cpumask_test_cpu\">cpumask_test_cpu</a>(<a class=\"id\" href=\"#me\">me</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#domain\">domain</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#send_cleanup_vector\">send_cleanup_vector</a>(<a class=\"id\" href=\"#cfg\">cfg</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#irq_complete_move\">irq_complete_move</a>(struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> **<a class=\"id\" href=\"#descp\">descp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__irq_complete_move\">__irq_complete_move</a>(<a class=\"id\" href=\"#descp\">descp</a>, ~<a class=\"id\" href=\"#get_irq_regs\">get_irq_regs</a>()-><a class=\"id\" href=\"#orig_ax\">orig_ax</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#irq_force_complete_move\">irq_force_complete_move</a>(int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfg\">cfg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__irq_complete_move\">__irq_complete_move</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#vector\">vector</a>);", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#irq_complete_move\">irq_complete_move</a>(struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> **<a class=\"id\" href=\"#descp\">descp</a>) {}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static void <a class=\"id\" href=\"#ack_apic_edge\">ack_apic_edge</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_complete_move\">irq_complete_move</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#move_native_irq\">move_native_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ack_APIC_irq\">ack_APIC_irq</a>();", 
"}", 
"", 
"<a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#irq_mis_count\">irq_mis_count</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * IO-APIC versions below 0x20 don't support EOI register.</span>", 
"<span class=\"comment\"> * For the record, here is the information about various versions:</span>", 
"<span class=\"comment\"> *     0Xh     82489DX</span>", 
"<span class=\"comment\"> *     1Xh     I/OAPIC or I/O(x)APIC which are not PCI 2.2 Compliant</span>", 
"<span class=\"comment\"> *     2Xh     I/O(x)APIC which is PCI 2.2 Compliant</span>", 
"<span class=\"comment\"> *     30h-FFh Reserved</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Some of the Intel ICH Specs (ICH2 to ICH5) documents the io-apic</span>", 
"<span class=\"comment\"> * version as 0x2. This is an error with documentation and these ICH chips</span>", 
"<span class=\"comment\"> * use io-apic's of version 0x20.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * For IO-APIC's with EOI register, we use that to do an explicit EOI.</span>", 
"<span class=\"comment\"> * Otherwise, we simulate the EOI message manually by changing the trigger</span>", 
"<span class=\"comment\"> * mode to edge and then back to level, with RTE being masked during this.</span>", 
"<span class=\"comment\">*/</span>", 
"static void <a class=\"id\" href=\"#__eoi_ioapic_irq\">__eoi_ioapic_irq</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_pin_list\">irq_pin_list</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_irq_pin\">for_each_irq_pin</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#irq_2_pin\">irq_2_pin</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mp_ioapics\">mp_ioapics</a>[<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#apic\">apic</a>].<a class=\"id\" href=\"#apicver\">apicver</a> >= 0x20) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Intr-remapping uses pin number as the virtual vector</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * in the RTE. Actual vector is programmed in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * intr-remapping table entry. Hence for the io-apic</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * EOI we use the pin number.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#irq_remapped\">irq_remapped</a>(<a class=\"id\" href=\"#irq\">irq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#io_apic_eoi\">io_apic_eoi</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#pin\">pin</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#io_apic_eoi\">io_apic_eoi</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#vector\">vector</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__mask_and_edge_IO_APIC_irq\">__mask_and_edge_IO_APIC_irq</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__unmask_and_level_IO_APIC_irq\">__unmask_and_level_IO_APIC_irq</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#eoi_ioapic_irq\">eoi_ioapic_irq</a>(struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#irq\">irq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#ioapic_lock\">ioapic_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__eoi_ioapic_irq\">__eoi_ioapic_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#cfg\">cfg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#ioapic_lock\">ioapic_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ack_apic_level\">ack_apic_level</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#do_unmask_irq\">do_unmask_irq</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_complete_move\">irq_complete_move</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_GENERIC_PENDING_IRQ\">CONFIG_GENERIC_PENDING_IRQ</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* If we are moving the irq we need to mask it */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#IRQ_MOVE_PENDING\">IRQ_MOVE_PENDING</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_unmask_irq\">do_unmask_irq</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask_IO_APIC_irq_desc\">mask_IO_APIC_irq_desc</a>(<a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It appears there is an erratum which affects at least version 0x11</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * of I/O APIC (that's the 82093AA and cores integrated into various</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * chipsets).  Under certain conditions a level-triggered interrupt is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * erroneously delivered as edge-triggered one but the respective IRR</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * bit gets set nevertheless.  As a result the I/O unit expects an EOI</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * message but it will never arrive and further interrupts are blocked</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * from the source.  The exact reason is so far unknown, but the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * phenomenon was observed when two consecutive interrupt requests</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * from a given source get delivered to the same CPU and the source is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * temporarily disabled in between.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * A workaround is to simulate an EOI message manually.  We achieve it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * by setting the trigger mode to edge and then to level when the edge</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * trigger mode gets detected in the TMR of a local APIC for a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * level-triggered interrupt.  We mask the source for the time of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * operation to prevent an edge-triggered interrupt escaping meanwhile.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The idea is from Manfred Spraul.  --macro</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Also in the case when cpu goes offline, fixup_irqs() will forward</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * any unhandled interrupt on the offlined cpu to the new cpu</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * destination that is handling the corresponding interrupt. This</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * interrupt forwarding is done via IPI's. Hence, in this case also</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * level-triggered io-apic interrupt will be seen as an edge</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * interrupt in the IRR. And we can't rely on the cpu's EOI</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to be broadcasted to the IO-APIC's which will clear the remoteIRR</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * corresponding to the level-triggered interrupt. Hence on IO-APIC's</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * supporting EOI register, we do an explicit EOI to clear the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * remote IRR and on IO-APIC's which don't have an EOI register,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we use the above logic (mask+edge followed by unmask+level) from</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Manfred Spraul to clear the remote IRR.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#vector\">vector</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a> = <a class=\"id\" href=\"#apic_read\">apic_read</a>(<a class=\"id\" href=\"#APIC_TMR\">APIC_TMR</a> + ((<a class=\"id\" href=\"#i\">i</a> &amp; ~0x1f) >> 1));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We must acknowledge the irq before we move it or the acknowledge will</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * not propagate properly.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ack_APIC_irq\">ack_APIC_irq</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Tail end of clearing remote IRR bit (either by delivering the EOI</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * message via io-apic EOI register write or simulating it using</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mask+edge followed by unnask+level logic) manually when the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * level triggered interrupt is seen as the edge triggered interrupt</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * at the cpu.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#v\">v</a> &amp; (1 << (<a class=\"id\" href=\"#i\">i</a> &amp; 0x1f)))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#irq_mis_count\">irq_mis_count</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eoi_ioapic_irq\">eoi_ioapic_irq</a>(<a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Now we can move and renable the irq */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#do_unmask_irq\">do_unmask_irq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Only migrate the irq if the ack has been received.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * On rare occasions the broadcast level triggered ack gets</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * delayed going to ioapics, and if we reprogram the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * vector while Remote IRR is still set the irq will never</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * fire again.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * To prevent this scenario we read the Remote IRR bit</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * of the ioapic.  This has two effects.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * - On any sane system the read of the ioapic will</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *   flush writes (and acks) going to the ioapic from</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *   this cpu.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * - We get to see if the ACK has actually been delivered.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Based on failed experiments of reprogramming the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * ioapic entry from outside of irq context starting</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * with masking the ioapic entry and then polling until</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Remote IRR was clear before reprogramming the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * ioapic I don't trust the Remote IRR bit to be</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * completey accurate.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * However there appears to be no other way to plug</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * this race, so if the Remote IRR bit is not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * accurate and is causing problems then it is a hardware bug</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and you can go talk to the chipset vendor about it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#io_apic_level_ack_pending\">io_apic_level_ack_pending</a>(<a class=\"id\" href=\"#cfg\">cfg</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#move_masked_irq\">move_masked_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unmask_IO_APIC_irq_desc\">unmask_IO_APIC_irq_desc</a>(<a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_INTR_REMAP\">CONFIG_INTR_REMAP</a>", 
"static void <a class=\"id\" href=\"#ir_ack_apic_edge\">ir_ack_apic_edge</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ack_APIC_irq\">ack_APIC_irq</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ir_ack_apic_level\">ir_ack_apic_level</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ack_APIC_irq\">ack_APIC_irq</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eoi_ioapic_irq\">eoi_ioapic_irq</a>(<a class=\"id\" href=\"#desc\">desc</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_INTR_REMAP */</span>", 
"", 
"static struct <a class=\"id\" href=\"#irq_chip\">irq_chip</a> <a class=\"id\" href=\"#ioapic_chip\">ioapic_chip</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"IO-APIC\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#startup\">startup</a><span class=\"ts\"/>= <a class=\"id\" href=\"#startup_ioapic_irq\">startup_ioapic_irq</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mask\">mask</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#mask_IO_APIC_irq\">mask_IO_APIC_irq</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unmask\">unmask</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#unmask_IO_APIC_irq\">unmask_IO_APIC_irq</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ack\">ack</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ack_apic_edge\">ack_apic_edge</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#eoi\">eoi</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ack_apic_level\">ack_apic_level</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_affinity\">set_affinity</a><span class=\"ts\"/>= <a class=\"id\" href=\"#set_ioapic_affinity_irq\">set_ioapic_affinity_irq</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#retrigger\">retrigger</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ioapic_retrigger_irq\">ioapic_retrigger_irq</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#irq_chip\">irq_chip</a> <a class=\"id\" href=\"#ir_ioapic_chip\">ir_ioapic_chip</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"IR-IO-APIC\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#startup\">startup</a><span class=\"ts\"/>= <a class=\"id\" href=\"#startup_ioapic_irq\">startup_ioapic_irq</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mask\">mask</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#mask_IO_APIC_irq\">mask_IO_APIC_irq</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unmask\">unmask</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#unmask_IO_APIC_irq\">unmask_IO_APIC_irq</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_INTR_REMAP\">CONFIG_INTR_REMAP</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ack\">ack</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ir_ack_apic_edge\">ir_ack_apic_edge</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#eoi\">eoi</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ir_ack_apic_level\">ir_ack_apic_level</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_affinity\">set_affinity</a><span class=\"ts\"/>= <a class=\"id\" href=\"#set_ir_ioapic_affinity_irq\">set_ir_ioapic_affinity_irq</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#retrigger\">retrigger</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ioapic_retrigger_irq\">ioapic_retrigger_irq</a>,", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#init_IO_APIC_traps\">init_IO_APIC_traps</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * NOTE! The local APIC isn't very good at handling</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * multiple interrupts at the same interrupt level.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * As the interrupt level is determined by taking the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * vector number and shifting that right by 4, we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * want to spread these out a bit so that they don't</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * all fall in the same interrupt level.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Also, we've got to be careful not to trash gate</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 0x80, because int 0x80 is hm, kind of importantish. ;)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_irq_desc\">for_each_irq_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#desc\">desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IO_APIC_IRQ\">IO_APIC_IRQ</a>(<a class=\"id\" href=\"#irq\">irq</a>) && <a class=\"id\" href=\"#cfg\">cfg</a> && !<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#vector\">vector</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Hmm.. We don't have an entry for this,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * so default to an old-fashioned 8259</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * interrupt if we can..</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a> &lt; <a class=\"id\" href=\"#legacy_pic\">legacy_pic</a>-><a class=\"id\" href=\"#nr_legacy_irqs\">nr_legacy_irqs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#legacy_pic\">legacy_pic</a>-><a class=\"id\" href=\"#make_irq\">make_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Strange. Oh, well.. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a> = &amp;<a class=\"id\" href=\"#no_irq_chip\">no_irq_chip</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The local APIC irq-chip implementation:</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#mask_lapic_irq\">mask_lapic_irq</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#v\">v</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a> = <a class=\"id\" href=\"#apic_read\">apic_read</a>(<a class=\"id\" href=\"#APIC_LVT0\">APIC_LVT0</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_write\">apic_write</a>(<a class=\"id\" href=\"#APIC_LVT0\">APIC_LVT0</a>, <a class=\"id\" href=\"#v\">v</a> | <a class=\"id\" href=\"#APIC_LVT_MASKED\">APIC_LVT_MASKED</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#unmask_lapic_irq\">unmask_lapic_irq</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#v\">v</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a> = <a class=\"id\" href=\"#apic_read\">apic_read</a>(<a class=\"id\" href=\"#APIC_LVT0\">APIC_LVT0</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_write\">apic_write</a>(<a class=\"id\" href=\"#APIC_LVT0\">APIC_LVT0</a>, <a class=\"id\" href=\"#v\">v</a> &amp; ~<a class=\"id\" href=\"#APIC_LVT_MASKED\">APIC_LVT_MASKED</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ack_lapic_irq\">ack_lapic_irq</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ack_APIC_irq\">ack_APIC_irq</a>();", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#irq_chip\">irq_chip</a> <a class=\"id\" href=\"#lapic_chip\">lapic_chip</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"local-APIC\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mask\">mask</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#mask_lapic_irq\">mask_lapic_irq</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unmask\">unmask</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#unmask_lapic_irq\">unmask_lapic_irq</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ack\">ack</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ack_lapic_irq\">ack_lapic_irq</a>,", 
"};", 
"", 
"static void <a class=\"id\" href=\"#lapic_register_intr\">lapic_register_intr</a>(int <a class=\"id\" href=\"#irq\">irq</a>, struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> &= ~<a class=\"id\" href=\"#IRQ_LEVEL\">IRQ_LEVEL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_irq_chip_and_handler_name\">set_irq_chip_and_handler_name</a>(<a class=\"id\" href=\"#irq\">irq</a>, &amp;<a class=\"id\" href=\"#lapic_chip\">lapic_chip</a>, <a class=\"id\" href=\"#handle_edge_irq\">handle_edge_irq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"edge\");", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#setup_nmi\">setup_nmi</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Dirty trick to enable the NMI watchdog ...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We put the 8259A master into AEOI mode and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * unmask on all local APICs LVT0 as NMI.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The idea to use the 8259A in AEOI mode ('8259A Virtual Wire')</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is from Maciej W. Rozycki - so we do not have to EOI from</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the NMI handler or the timer interrupt.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_VERBOSE\">APIC_VERBOSE</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"activating NMI Watchdog ...\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#enable_NMI_through_LVT0\">enable_NMI_through_LVT0</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_VERBOSE\">APIC_VERBOSE</a>, \" done.\\n\");", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This looks a bit hackish but it's about the only one way of sending</span>", 
"<span class=\"comment\"> * a few INTA cycles to 8259As and any associated glue logic.  ICR does</span>", 
"<span class=\"comment\"> * not support the ExtINT mode, unfortunately.  We need to send these</span>", 
"<span class=\"comment\"> * cycles as some i82489DX-based boards have glue logic that keeps the</span>", 
"<span class=\"comment\"> * 8259A interrupt line asserted until INTA.  --macro</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#unlock_ExtINT_logic\">unlock_ExtINT_logic</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#pin\">pin</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#IO_APIC_route_entry\">IO_APIC_route_entry</a> <a class=\"id\" href=\"#entry0\">entry0</a>, <a class=\"id\" href=\"#entry1\">entry1</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#save_control\">save_control</a>, <a class=\"id\" href=\"#save_freq_select\">save_freq_select</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pin\">pin</a>  = <a class=\"id\" href=\"#find_isa_irq_pin\">find_isa_irq_pin</a>(8, <a class=\"id\" href=\"#mp_INT\">mp_INT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pin\">pin</a> == -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic\">apic</a> = <a class=\"id\" href=\"#find_isa_irq_apic\">find_isa_irq_apic</a>(8, <a class=\"id\" href=\"#mp_INT\">mp_INT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#apic\">apic</a> == -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry0\">entry0</a> = <a class=\"id\" href=\"#ioapic_read_entry\">ioapic_read_entry</a>(<a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#pin\">pin</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_IO_APIC_pin\">clear_IO_APIC_pin</a>(<a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#pin\">pin</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#entry1\">entry1</a>, 0, sizeof(<a class=\"id\" href=\"#entry1\">entry1</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry1\">entry1</a>.<a class=\"id\" href=\"#dest_mode\">dest_mode</a> = 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* physical delivery */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry1\">entry1</a>.<a class=\"id\" href=\"#mask\">mask</a> = 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* unmask IRQ now */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry1\">entry1</a>.<a class=\"id\" href=\"#dest\">dest</a> = <a class=\"id\" href=\"#hard_smp_processor_id\">hard_smp_processor_id</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry1\">entry1</a>.<a class=\"id\" href=\"#delivery_mode\">delivery_mode</a> = <a class=\"id\" href=\"#dest_ExtINT\">dest_ExtINT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry1\">entry1</a>.<a class=\"id\" href=\"#polarity\">polarity</a> = <a class=\"id\" href=\"#entry0\">entry0</a>.<a class=\"id\" href=\"#polarity\">polarity</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry1\">entry1</a>.<a class=\"id\" href=\"#trigger\">trigger</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry1\">entry1</a>.<a class=\"id\" href=\"#vector\">vector</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ioapic_write_entry\">ioapic_write_entry</a>(<a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#pin\">pin</a>, <a class=\"id\" href=\"#entry1\">entry1</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#save_control\">save_control</a> = <a class=\"id\" href=\"#CMOS_READ\">CMOS_READ</a>(<a class=\"id\" href=\"#RTC_CONTROL\">RTC_CONTROL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#save_freq_select\">save_freq_select</a> = <a class=\"id\" href=\"#CMOS_READ\">CMOS_READ</a>(<a class=\"id\" href=\"#RTC_FREQ_SELECT\">RTC_FREQ_SELECT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CMOS_WRITE\">CMOS_WRITE</a>((<a class=\"id\" href=\"#save_freq_select\">save_freq_select</a> &amp; ~<a class=\"id\" href=\"#RTC_RATE_SELECT\">RTC_RATE_SELECT</a>) | 0x6,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#RTC_FREQ_SELECT\">RTC_FREQ_SELECT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CMOS_WRITE\">CMOS_WRITE</a>(<a class=\"id\" href=\"#save_control\">save_control</a> | <a class=\"id\" href=\"#RTC_PIE\">RTC_PIE</a>, <a class=\"id\" href=\"#RTC_CONTROL\">RTC_CONTROL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = 100;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#i\">i</a>-- &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mdelay\">mdelay</a>(10);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#CMOS_READ\">CMOS_READ</a>(<a class=\"id\" href=\"#RTC_INTR_FLAGS\">RTC_INTR_FLAGS</a>) &amp; <a class=\"id\" href=\"#RTC_PF\">RTC_PF</a>) == <a class=\"id\" href=\"#RTC_PF\">RTC_PF</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> -= 10;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CMOS_WRITE\">CMOS_WRITE</a>(<a class=\"id\" href=\"#save_control\">save_control</a>, <a class=\"id\" href=\"#RTC_CONTROL\">RTC_CONTROL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CMOS_WRITE\">CMOS_WRITE</a>(<a class=\"id\" href=\"#save_freq_select\">save_freq_select</a>, <a class=\"id\" href=\"#RTC_FREQ_SELECT\">RTC_FREQ_SELECT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_IO_APIC_pin\">clear_IO_APIC_pin</a>(<a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#pin\">pin</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ioapic_write_entry\">ioapic_write_entry</a>(<a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#pin\">pin</a>, <a class=\"id\" href=\"#entry0\">entry0</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#disable_timer_pin_1\">disable_timer_pin_1</a> <a class=\"id\" href=\"#__initdata\">__initdata</a>;", 
"<span class=\"comment\">/* Actually the next is obsolete, but keep it for paranoid reasons -AK */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#disable_timer_pin_setup\">disable_timer_pin_setup</a>(char *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disable_timer_pin_1\">disable_timer_pin_1</a> = 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#early_param\">early_param</a>(\"disable_timer_pin_1\", <a class=\"id\" href=\"#disable_timer_pin_setup\">disable_timer_pin_setup</a>);", 
"", 
"int <a class=\"id\" href=\"#timer_through_8259\">timer_through_8259</a> <a class=\"id\" href=\"#__initdata\">__initdata</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This code may look a bit paranoid, but it's supposed to cooperate with</span>", 
"<span class=\"comment\"> * a wide range of boards and BIOS bugs.  Fortunately only the timer IRQ</span>", 
"<span class=\"comment\"> * is so screwy.  Thanks to Brian Perkins for testing/hacking this beast</span>", 
"<span class=\"comment\"> * fanatically on his truly buggy board.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FIXME: really need to revamp this for all platforms.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#check_timer\">check_timer</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(0);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#cpu_to_node\">cpu_to_node</a>(<a class=\"id\" href=\"#boot_cpu_id\">boot_cpu_id</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#apic1\">apic1</a>, <a class=\"id\" href=\"#pin1\">pin1</a>, <a class=\"id\" href=\"#apic2\">apic2</a>, <a class=\"id\" href=\"#pin2\">pin2</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#no_pin1\">no_pin1</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * get/set the timer IRQ vector:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#legacy_pic\">legacy_pic</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#mask\">mask</a>(0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#assign_irq_vector\">assign_irq_vector</a>(0, <a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#target_cpus\">target_cpus</a>());", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * As IRQ0 is to be enabled in the 8259A, the virtual</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * wire has to be disabled in the local APIC.  Also</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * timer interrupts need to be acknowledged manually in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the 8259A for the i82489DX when using the NMI</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * watchdog as that APIC treats NMIs as level-triggered.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The AEOI mode will finish them in the 8259A</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * automatically.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_write\">apic_write</a>(<a class=\"id\" href=\"#APIC_LVT0\">APIC_LVT0</a>, <a class=\"id\" href=\"#APIC_LVT_MASKED\">APIC_LVT_MASKED</a> | <a class=\"id\" href=\"#APIC_DM_EXTINT\">APIC_DM_EXTINT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#legacy_pic\">legacy_pic</a>-><a class=\"id\" href=\"#init\">init</a>(1);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ver\">ver</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ver\">ver</a> = <a class=\"id\" href=\"#apic_read\">apic_read</a>(<a class=\"id\" href=\"#APIC_LVR\">APIC_LVR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ver\">ver</a> = <a class=\"id\" href=\"#GET_APIC_VERSION\">GET_APIC_VERSION</a>(<a class=\"id\" href=\"#ver\">ver</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timer_ack\">timer_ack</a> = (<a class=\"id\" href=\"#nmi_watchdog\">nmi_watchdog</a> == <a class=\"id\" href=\"#NMI_IO_APIC\">NMI_IO_APIC</a> && !<a class=\"id\" href=\"#APIC_INTEGRATED\">APIC_INTEGRATED</a>(<a class=\"id\" href=\"#ver\">ver</a>));", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pin1\">pin1</a>  = <a class=\"id\" href=\"#find_isa_irq_pin\">find_isa_irq_pin</a>(0, <a class=\"id\" href=\"#mp_INT\">mp_INT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic1\">apic1</a> = <a class=\"id\" href=\"#find_isa_irq_apic\">find_isa_irq_apic</a>(0, <a class=\"id\" href=\"#mp_INT\">mp_INT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pin2\">pin2</a>  = <a class=\"id\" href=\"#ioapic_i8259\">ioapic_i8259</a>.<a class=\"id\" href=\"#pin\">pin</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic2\">apic2</a> = <a class=\"id\" href=\"#ioapic_i8259\">ioapic_i8259</a>.<a class=\"id\" href=\"#apic\">apic</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_QUIET\">APIC_QUIET</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"..TIMER: vector=0x%02X \"", 
"<span class=\"ts\"/><span class=\"ts\"/>    \"apic1=%d pin1=%d apic2=%d pin2=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#vector\">vector</a>, <a class=\"id\" href=\"#apic1\">apic1</a>, <a class=\"id\" href=\"#pin1\">pin1</a>, <a class=\"id\" href=\"#apic2\">apic2</a>, <a class=\"id\" href=\"#pin2\">pin2</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Some BIOS writers are clueless and report the ExtINTA</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * I/O APIC input from the cascaded 8259A as the timer</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * interrupt input.  So just in case, if only one pin</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * was found above, try it both directly and through the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 8259A.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pin1\">pin1</a> == -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#intr_remapping_enabled\">intr_remapping_enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"BIOS bug: timer not connected to IO-APIC\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pin1\">pin1</a> = <a class=\"id\" href=\"#pin2\">pin2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic1\">apic1</a> = <a class=\"id\" href=\"#apic2\">apic2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#no_pin1\">no_pin1</a> = 1;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#pin2\">pin2</a> == -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pin2\">pin2</a> = <a class=\"id\" href=\"#pin1\">pin1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic2\">apic2</a> = <a class=\"id\" href=\"#apic1\">apic1</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pin1\">pin1</a> != -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Ok, does IRQ0 through the IOAPIC work?</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#no_pin1\">no_pin1</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_pin_to_irq_node\">add_pin_to_irq_node</a>(<a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#apic1\">apic1</a>, <a class=\"id\" href=\"#pin1\">pin1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#setup_timer_IRQ0_pin\">setup_timer_IRQ0_pin</a>(<a class=\"id\" href=\"#apic1\">apic1</a>, <a class=\"id\" href=\"#pin1\">pin1</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#vector\">vector</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* for edge trigger, setup_IO_APIC_irq already</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * leave it unmasked.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * so only need to unmask if it is level-trigger</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * do we really have level trigger timer?</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> = <a class=\"id\" href=\"#find_irq_entry\">find_irq_entry</a>(<a class=\"id\" href=\"#apic1\">apic1</a>, <a class=\"id\" href=\"#pin1\">pin1</a>, <a class=\"id\" href=\"#mp_INT\">mp_INT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idx\">idx</a> != -1 && <a class=\"id\" href=\"#irq_trigger\">irq_trigger</a>(<a class=\"id\" href=\"#idx\">idx</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unmask_IO_APIC_irq_desc\">unmask_IO_APIC_irq_desc</a>(<a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#timer_irq_works\">timer_irq_works</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nmi_watchdog\">nmi_watchdog</a> == <a class=\"id\" href=\"#NMI_IO_APIC\">NMI_IO_APIC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#setup_nmi\">setup_nmi</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#legacy_pic\">legacy_pic</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#unmask\">unmask</a>(0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#disable_timer_pin_1\">disable_timer_pin_1</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_IO_APIC_pin\">clear_IO_APIC_pin</a>(0, <a class=\"id\" href=\"#pin1\">pin1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#intr_remapping_enabled\">intr_remapping_enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"timer doesn't work through Interrupt-remapped IO-APIC\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_irq_disable\">local_irq_disable</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_IO_APIC_pin\">clear_IO_APIC_pin</a>(<a class=\"id\" href=\"#apic1\">apic1</a>, <a class=\"id\" href=\"#pin1\">pin1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#no_pin1\">no_pin1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_QUIET\">APIC_QUIET</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"..MP-BIOS bug: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"8254 timer not connected to IO-APIC\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_QUIET\">APIC_QUIET</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"...trying to set up timer \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"(IRQ0) through the 8259A ...\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_QUIET\">APIC_QUIET</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"..... (found apic %d pin %d) ...\\n\", <a class=\"id\" href=\"#apic2\">apic2</a>, <a class=\"id\" href=\"#pin2\">pin2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * legacy devices should be connected to IO APIC #0</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#replace_pin_at_irq_node\">replace_pin_at_irq_node</a>(<a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#apic1\">apic1</a>, <a class=\"id\" href=\"#pin1\">pin1</a>, <a class=\"id\" href=\"#apic2\">apic2</a>, <a class=\"id\" href=\"#pin2\">pin2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#setup_timer_IRQ0_pin\">setup_timer_IRQ0_pin</a>(<a class=\"id\" href=\"#apic2\">apic2</a>, <a class=\"id\" href=\"#pin2\">pin2</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#vector\">vector</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#legacy_pic\">legacy_pic</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#unmask\">unmask</a>(0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#timer_irq_works\">timer_irq_works</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_QUIET\">APIC_QUIET</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"....... works.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timer_through_8259\">timer_through_8259</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nmi_watchdog\">nmi_watchdog</a> == <a class=\"id\" href=\"#NMI_IO_APIC\">NMI_IO_APIC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#legacy_pic\">legacy_pic</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#mask\">mask</a>(0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#setup_nmi\">setup_nmi</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#legacy_pic\">legacy_pic</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#unmask\">unmask</a>(0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Cleanup, just in case ...</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_irq_disable\">local_irq_disable</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#legacy_pic\">legacy_pic</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#mask\">mask</a>(0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_IO_APIC_pin\">clear_IO_APIC_pin</a>(<a class=\"id\" href=\"#apic2\">apic2</a>, <a class=\"id\" href=\"#pin2\">pin2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_QUIET\">APIC_QUIET</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"....... failed.\\n\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nmi_watchdog\">nmi_watchdog</a> == <a class=\"id\" href=\"#NMI_IO_APIC\">NMI_IO_APIC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_QUIET\">APIC_QUIET</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"timer doesn't work \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"through the IO-APIC - disabling NMI Watchdog!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nmi_watchdog\">nmi_watchdog</a> = <a class=\"id\" href=\"#NMI_NONE\">NMI_NONE</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timer_ack\">timer_ack</a> = 0;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_QUIET\">APIC_QUIET</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    \"...trying to set up timer as Virtual Wire IRQ...\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lapic_register_intr\">lapic_register_intr</a>(0, <a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_write\">apic_write</a>(<a class=\"id\" href=\"#APIC_LVT0\">APIC_LVT0</a>, <a class=\"id\" href=\"#APIC_DM_FIXED\">APIC_DM_FIXED</a> | <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#vector\">vector</a>);<span class=\"ts\"/><span class=\"comment\">/* Fixed mode */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#legacy_pic\">legacy_pic</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#unmask\">unmask</a>(0);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#timer_irq_works\">timer_irq_works</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_QUIET\">APIC_QUIET</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"..... works.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_disable\">local_irq_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#legacy_pic\">legacy_pic</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#mask\">mask</a>(0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_write\">apic_write</a>(<a class=\"id\" href=\"#APIC_LVT0\">APIC_LVT0</a>, <a class=\"id\" href=\"#APIC_LVT_MASKED\">APIC_LVT_MASKED</a> | <a class=\"id\" href=\"#APIC_DM_FIXED\">APIC_DM_FIXED</a> | <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#vector\">vector</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_QUIET\">APIC_QUIET</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"..... failed.\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_QUIET\">APIC_QUIET</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    \"...trying to set up timer as ExtINT IRQ...\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#legacy_pic\">legacy_pic</a>-><a class=\"id\" href=\"#init\">init</a>(0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#legacy_pic\">legacy_pic</a>-><a class=\"id\" href=\"#make_irq\">make_irq</a>(0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_write\">apic_write</a>(<a class=\"id\" href=\"#APIC_LVT0\">APIC_LVT0</a>, <a class=\"id\" href=\"#APIC_DM_EXTINT\">APIC_DM_EXTINT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_ExtINT_logic\">unlock_ExtINT_logic</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#timer_irq_works\">timer_irq_works</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_QUIET\">APIC_QUIET</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"..... works.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_disable\">local_irq_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_QUIET\">APIC_QUIET</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"..... failed :(.\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"IO-APIC + timer doesn't work!  Boot with apic=debug and send a \"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"report.  Then try booting with the 'noapic' option.\\n\");", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Traditionally ISA IRQ2 is the cascade IRQ, and is not available</span>", 
"<span class=\"comment\"> * to devices.  However there may be an I/O APIC pin available for</span>", 
"<span class=\"comment\"> * this interrupt regardless.  The pin may be left unconnected, but</span>", 
"<span class=\"comment\"> * typically it will be reused as an ExtINT cascade interrupt for</span>", 
"<span class=\"comment\"> * the master 8259A.  In the MPS case such a pin will normally be</span>", 
"<span class=\"comment\"> * reported as an ExtINT interrupt in the MP table.  With ACPI</span>", 
"<span class=\"comment\"> * there is no provision for ExtINT interrupts, and in the absence</span>", 
"<span class=\"comment\"> * of an override it would be treated as an ordinary ISA I/O APIC</span>", 
"<span class=\"comment\"> * interrupt, that is edge-triggered and unmasked by default.  We</span>", 
"<span class=\"comment\"> * used to do this, but it caused problems on some systems because</span>", 
"<span class=\"comment\"> * of the NMI watchdog and sometimes IRQ0 of the 8254 timer using</span>", 
"<span class=\"comment\"> * the same ExtINT cascade interrupt to drive the local APIC of the</span>", 
"<span class=\"comment\"> * bootstrap processor.  Therefore we refrain from routing IRQ2 to</span>", 
"<span class=\"comment\"> * the I/O APIC in all cases now.  No actual device should request</span>", 
"<span class=\"comment\"> * it anyway.  --macro</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PIC_IRQS\">PIC_IRQS</a><span class=\"ts\"/>(1UL << <a class=\"id\" href=\"#PIC_CASCADE_IR\">PIC_CASCADE_IR</a>)", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#setup_IO_APIC\">setup_IO_APIC</a>(void)", 
"{", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * calling enable_IO_APIC() is moved to setup_local_APIC for BP</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io_apic_irqs\">io_apic_irqs</a> = <a class=\"id\" href=\"#legacy_pic\">legacy_pic</a>-><a class=\"id\" href=\"#nr_legacy_irqs\">nr_legacy_irqs</a> ? ~<a class=\"id\" href=\"#PIC_IRQS\">PIC_IRQS</a> : ~0UL;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_VERBOSE\">APIC_VERBOSE</a>, \"ENABLING IO-APIC IRQs\\n\");", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\">         * Set up IO-APIC IRQ routing.</span>", 
"<span class=\"comment\">         */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#mpparse\">mpparse</a>.<a class=\"id\" href=\"#setup_ioapic_ids\">setup_ioapic_ids</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sync_Arb_IDs\">sync_Arb_IDs</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_IO_APIC_irqs\">setup_IO_APIC_irqs</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_IO_APIC_traps\">init_IO_APIC_traps</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#legacy_pic\">legacy_pic</a>-><a class=\"id\" href=\"#nr_legacy_irqs\">nr_legacy_irqs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#check_timer\">check_timer</a>();", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *      Called after all the initialization is done. If we didnt find any</span>", 
"<span class=\"comment\"> *      APIC bugs then we can allow the modify fast path</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#io_apic_bug_finalize\">io_apic_bug_finalize</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sis_apic_bug\">sis_apic_bug</a> == -1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sis_apic_bug\">sis_apic_bug</a> = 0;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#late_initcall\">late_initcall</a>(<a class=\"id\" href=\"#io_apic_bug_finalize\">io_apic_bug_finalize</a>);", 
"", 
"struct <a class=\"id\" href=\"#sysfs_ioapic_data\">sysfs_ioapic_data</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sys_device\">sys_device</a> <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#IO_APIC_route_entry\">IO_APIC_route_entry</a> <a class=\"id\" href=\"#entry\">entry</a>[0];", 
"};", 
"static struct <a class=\"id\" href=\"#sysfs_ioapic_data\">sysfs_ioapic_data</a> * <a class=\"id\" href=\"#mp_ioapic_data\">mp_ioapic_data</a>[<a class=\"id\" href=\"#MAX_IO_APICS\">MAX_IO_APICS</a>];", 
"", 
"static int <a class=\"id\" href=\"#ioapic_suspend\">ioapic_suspend</a>(struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pm_message_t\">pm_message_t</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#IO_APIC_route_entry\">IO_APIC_route_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_ioapic_data\">sysfs_ioapic_data</a> *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#sysfs_ioapic_data\">sysfs_ioapic_data</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_ioapic_registers\">nr_ioapic_registers</a>[<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>]; <a class=\"id\" href=\"#i\">i</a> ++, <a class=\"id\" href=\"#entry\">entry</a> ++ )", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#ioapic_read_entry\">ioapic_read_entry</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ioapic_resume\">ioapic_resume</a>(struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#IO_APIC_route_entry\">IO_APIC_route_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sysfs_ioapic_data\">sysfs_ioapic_data</a> *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#IO_APIC_reg_00\">IO_APIC_reg_00</a> <a class=\"id\" href=\"#reg_00\">reg_00</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#sysfs_ioapic_data\">sysfs_ioapic_data</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#ioapic_lock\">ioapic_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reg_00\">reg_00</a>.<a class=\"id\" href=\"#raw\">raw</a> = <a class=\"id\" href=\"#io_apic_read\">io_apic_read</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#reg_00\">reg_00</a>.<a class=\"id\" href=\"#bits\">bits</a>.<a class=\"id\" href=\"#ID\">ID</a> != <a class=\"id\" href=\"#mp_ioapics\">mp_ioapics</a>[<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>].<a class=\"id\" href=\"#apicid\">apicid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg_00\">reg_00</a>.<a class=\"id\" href=\"#bits\">bits</a>.<a class=\"id\" href=\"#ID\">ID</a> = <a class=\"id\" href=\"#mp_ioapics\">mp_ioapics</a>[<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>].<a class=\"id\" href=\"#apicid\">apicid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#io_apic_write\">io_apic_write</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>, 0, <a class=\"id\" href=\"#reg_00\">reg_00</a>.<a class=\"id\" href=\"#raw\">raw</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#ioapic_lock\">ioapic_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_ioapic_registers\">nr_ioapic_registers</a>[<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>]; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ioapic_write_entry\">ioapic_write_entry</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#entry\">entry</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#sysdev_class\">sysdev_class</a> <a class=\"id\" href=\"#ioapic_sysdev_class\">ioapic_sysdev_class</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> = \"ioapic\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#suspend\">suspend</a> = <a class=\"id\" href=\"#ioapic_suspend\">ioapic_suspend</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#resume\">resume</a> = <a class=\"id\" href=\"#ioapic_resume\">ioapic_resume</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#ioapic_init_sysfs\">ioapic_init_sysfs</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sys_device\">sys_device</a> * <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysdev_class_register\">sysdev_class_register</a>(&amp;<a class=\"id\" href=\"#ioapic_sysdev_class\">ioapic_sysdev_class</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_ioapics\">nr_ioapics</a>; <a class=\"id\" href=\"#i\">i</a>++ ) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = sizeof(struct <a class=\"id\" href=\"#sys_device\">sys_device</a>) + <a class=\"id\" href=\"#nr_ioapic_registers\">nr_ioapic_registers</a>[<a class=\"id\" href=\"#i\">i</a>]", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>* sizeof(struct <a class=\"id\" href=\"#IO_APIC_route_entry\">IO_APIC_route_entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mp_ioapic_data\">mp_ioapic_data</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#mp_ioapic_data\">mp_ioapic_data</a>[<a class=\"id\" href=\"#i\">i</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"Can't suspend/resume IOAPIC %d\\n\", <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = &amp;<a class=\"id\" href=\"#mp_ioapic_data\">mp_ioapic_data</a>[<a class=\"id\" href=\"#i\">i</a>]-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cls\">cls</a> = &amp;<a class=\"id\" href=\"#ioapic_sysdev_class\">ioapic_sysdev_class</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysdev_register\">sysdev_register</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#mp_ioapic_data\">mp_ioapic_data</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mp_ioapic_data\">mp_ioapic_data</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"Can't suspend/resume IOAPIC %d\\n\", <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#device_initcall\">device_initcall</a>(<a class=\"id\" href=\"#ioapic_init_sysfs\">ioapic_init_sysfs</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Dynamic irq allocate and deallocation</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned int <a class=\"id\" href=\"#create_irq_nr\">create_irq_nr</a>(unsigned int <a class=\"id\" href=\"#irq_want\">irq_want</a>, int <a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Allocate an unused irq */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg_new\">cfg_new</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc_new\">desc_new</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#irq_want\">irq_want</a> &lt; <a class=\"id\" href=\"#nr_irqs_gsi\">nr_irqs_gsi</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq_want\">irq_want</a> = <a class=\"id\" href=\"#nr_irqs_gsi\">nr_irqs_gsi</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#vector_lock\">vector_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#new\">new</a> = <a class=\"id\" href=\"#irq_want\">irq_want</a>; <a class=\"id\" href=\"#new\">new</a> &lt; <a class=\"id\" href=\"#nr_irqs\">nr_irqs</a>; <a class=\"id\" href=\"#new\">new</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc_new\">desc_new</a> = <a class=\"id\" href=\"#irq_to_desc_alloc_node\">irq_to_desc_alloc_node</a>(<a class=\"id\" href=\"#new\">new</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc_new\">desc_new</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"can not get irq_desc for %d\\n\", <a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg_new\">cfg_new</a> = <a class=\"id\" href=\"#desc_new\">desc_new</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg_new\">cfg_new</a>-><a class=\"id\" href=\"#vector\">vector</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc_new\">desc_new</a> = <a class=\"id\" href=\"#move_irq_desc\">move_irq_desc</a>(<a class=\"id\" href=\"#desc_new\">desc_new</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg_new\">cfg_new</a> = <a class=\"id\" href=\"#desc_new\">desc_new</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__assign_irq_vector\">__assign_irq_vector</a>(<a class=\"id\" href=\"#new\">new</a>, <a class=\"id\" href=\"#cfg_new\">cfg_new</a>, <a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#target_cpus\">target_cpus</a>()) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#vector_lock\">vector_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dynamic_irq_init_keep_chip_data\">dynamic_irq_init_keep_chip_data</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#irq\">irq</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#create_irq\">create_irq</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#cpu_to_node\">cpu_to_node</a>(<a class=\"id\" href=\"#boot_cpu_id\">boot_cpu_id</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#irq_want\">irq_want</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#irq\">irq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_want\">irq_want</a> = <a class=\"id\" href=\"#nr_irqs_gsi\">nr_irqs_gsi</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#create_irq_nr\">create_irq_nr</a>(<a class=\"id\" href=\"#irq_want\">irq_want</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = -1;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#irq\">irq</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#destroy_irq\">destroy_irq</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dynamic_irq_cleanup_keep_chip_data\">dynamic_irq_cleanup_keep_chip_data</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_irte\">free_irte</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#vector_lock\">vector_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__clear_irq_vector\">__clear_irq_vector</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#get_irq_chip_data\">get_irq_chip_data</a>(<a class=\"id\" href=\"#irq\">irq</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#vector_lock\">vector_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * MSI message composition</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCI_MSI\">CONFIG_PCI_MSI</a>", 
"static int <a class=\"id\" href=\"#msi_compose_msg\">msi_compose_msg</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, unsigned int <a class=\"id\" href=\"#irq\">irq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#msi_msg\">msi_msg</a> *<a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#hpet_id\">hpet_id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#dest\">dest</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#disable_apic\">disable_apic</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#assign_irq_vector\">assign_irq_vector</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#target_cpus\">target_cpus</a>());", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dest\">dest</a> = <a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#cpu_mask_to_apicid_and\">cpu_mask_to_apicid_and</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#domain\">domain</a>, <a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#target_cpus\">target_cpus</a>());", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#irq_remapped\">irq_remapped</a>(<a class=\"id\" href=\"#irq\">irq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#irte\">irte</a> <a class=\"id\" href=\"#irte\">irte</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ir_index\">ir_index</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#sub_handle\">sub_handle</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ir_index\">ir_index</a> = <a class=\"id\" href=\"#map_irq_to_irte_handle\">map_irq_to_irte_handle</a>(<a class=\"id\" href=\"#irq\">irq</a>, &amp;<a class=\"id\" href=\"#sub_handle\">sub_handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#ir_index\">ir_index</a> == -1);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a> (&amp;<a class=\"id\" href=\"#irte\">irte</a>, 0, sizeof(<a class=\"id\" href=\"#irte\">irte</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irte\">irte</a>.<a class=\"id\" href=\"#present\">present</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irte\">irte</a>.<a class=\"id\" href=\"#dst_mode\">dst_mode</a> = <a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#irq_dest_mode\">irq_dest_mode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irte\">irte</a>.<a class=\"id\" href=\"#trigger_mode\">trigger_mode</a> = 0; <span class=\"comment\">/* edge */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irte\">irte</a>.<a class=\"id\" href=\"#dlvry_mode\">dlvry_mode</a> = <a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#irq_delivery_mode\">irq_delivery_mode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irte\">irte</a>.<a class=\"id\" href=\"#vector\">vector</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#vector\">vector</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irte\">irte</a>.<a class=\"id\" href=\"#dest_id\">dest_id</a> = <a class=\"id\" href=\"#IRTE_DEST\">IRTE_DEST</a>(<a class=\"id\" href=\"#dest\">dest</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Set source-id of interrupt request */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_msi_sid\">set_msi_sid</a>(&amp;<a class=\"id\" href=\"#irte\">irte</a>, <a class=\"id\" href=\"#pdev\">pdev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_hpet_sid\">set_hpet_sid</a>(&amp;<a class=\"id\" href=\"#irte\">irte</a>, <a class=\"id\" href=\"#hpet_id\">hpet_id</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#modify_irte\">modify_irte</a>(<a class=\"id\" href=\"#irq\">irq</a>, &amp;<a class=\"id\" href=\"#irte\">irte</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#address_hi\">address_hi</a> = <a class=\"id\" href=\"#MSI_ADDR_BASE_HI\">MSI_ADDR_BASE_HI</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#sub_handle\">sub_handle</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#address_lo\">address_lo</a> = <a class=\"id\" href=\"#MSI_ADDR_BASE_LO\">MSI_ADDR_BASE_LO</a> | <a class=\"id\" href=\"#MSI_ADDR_IR_EXT_INT\">MSI_ADDR_IR_EXT_INT</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#MSI_ADDR_IR_SHV\">MSI_ADDR_IR_SHV</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#MSI_ADDR_IR_INDEX1\">MSI_ADDR_IR_INDEX1</a>(<a class=\"id\" href=\"#ir_index\">ir_index</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#MSI_ADDR_IR_INDEX2\">MSI_ADDR_IR_INDEX2</a>(<a class=\"id\" href=\"#ir_index\">ir_index</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#x2apic_enabled\">x2apic_enabled</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#address_hi\">address_hi</a> = <a class=\"id\" href=\"#MSI_ADDR_BASE_HI\">MSI_ADDR_BASE_HI</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#MSI_ADDR_EXT_DEST_ID\">MSI_ADDR_EXT_DEST_ID</a>(<a class=\"id\" href=\"#dest\">dest</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#address_hi\">address_hi</a> = <a class=\"id\" href=\"#MSI_ADDR_BASE_HI\">MSI_ADDR_BASE_HI</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#address_lo\">address_lo</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MSI_ADDR_BASE_LO\">MSI_ADDR_BASE_LO</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#irq_dest_mode\">irq_dest_mode</a> == 0) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MSI_ADDR_DEST_MODE_PHYSICAL\">MSI_ADDR_DEST_MODE_PHYSICAL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MSI_ADDR_DEST_MODE_LOGICAL\">MSI_ADDR_DEST_MODE_LOGICAL</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#irq_delivery_mode\">irq_delivery_mode</a> != <a class=\"id\" href=\"#dest_LowestPrio\">dest_LowestPrio</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MSI_ADDR_REDIRECTION_CPU\">MSI_ADDR_REDIRECTION_CPU</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MSI_ADDR_REDIRECTION_LOWPRI\">MSI_ADDR_REDIRECTION_LOWPRI</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MSI_ADDR_DEST_ID\">MSI_ADDR_DEST_ID</a>(<a class=\"id\" href=\"#dest\">dest</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#data\">data</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MSI_DATA_TRIGGER_EDGE\">MSI_DATA_TRIGGER_EDGE</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MSI_DATA_LEVEL_ASSERT\">MSI_DATA_LEVEL_ASSERT</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#irq_delivery_mode\">irq_delivery_mode</a> != <a class=\"id\" href=\"#dest_LowestPrio\">dest_LowestPrio</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MSI_DATA_DELIVERY_FIXED\">MSI_DATA_DELIVERY_FIXED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MSI_DATA_DELIVERY_LOWPRI\">MSI_DATA_DELIVERY_LOWPRI</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MSI_DATA_VECTOR\">MSI_DATA_VECTOR</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#vector\">vector</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"static int <a class=\"id\" href=\"#set_msi_irq_affinity\">set_msi_irq_affinity</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#msi_msg\">msi_msg</a> <a class=\"id\" href=\"#msg\">msg</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#dest\">dest</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#set_desc_affinity\">set_desc_affinity</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#mask\">mask</a>, &amp;<a class=\"id\" href=\"#dest\">dest</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_cached_msi_msg_desc\">get_cached_msi_msg_desc</a>(<a class=\"id\" href=\"#desc\">desc</a>, &amp;<a class=\"id\" href=\"#msg\">msg</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#data\">data</a> &= ~<a class=\"id\" href=\"#MSI_DATA_VECTOR_MASK\">MSI_DATA_VECTOR_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#data\">data</a> |= <a class=\"id\" href=\"#MSI_DATA_VECTOR\">MSI_DATA_VECTOR</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#vector\">vector</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#address_lo\">address_lo</a> &= ~<a class=\"id\" href=\"#MSI_ADDR_DEST_ID_MASK\">MSI_ADDR_DEST_ID_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#address_lo\">address_lo</a> |= <a class=\"id\" href=\"#MSI_ADDR_DEST_ID\">MSI_ADDR_DEST_ID</a>(<a class=\"id\" href=\"#dest\">dest</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_msi_msg_desc\">write_msi_msg_desc</a>(<a class=\"id\" href=\"#desc\">desc</a>, &amp;<a class=\"id\" href=\"#msg\">msg</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_INTR_REMAP\">CONFIG_INTR_REMAP</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Migrate the MSI irq to another cpumask. This migration is</span>", 
"<span class=\"comment\"> * done in the process context using interrupt-remapping hardware.</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#ir_set_msi_irq_affinity\">ir_set_msi_irq_affinity</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#dest\">dest</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irte\">irte</a> <a class=\"id\" href=\"#irte\">irte</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#get_irte\">get_irte</a>(<a class=\"id\" href=\"#irq\">irq</a>, &amp;<a class=\"id\" href=\"#irte\">irte</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#set_desc_affinity\">set_desc_affinity</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#mask\">mask</a>, &amp;<a class=\"id\" href=\"#dest\">dest</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irte\">irte</a>.<a class=\"id\" href=\"#vector\">vector</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#vector\">vector</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irte\">irte</a>.<a class=\"id\" href=\"#dest_id\">dest_id</a> = <a class=\"id\" href=\"#IRTE_DEST\">IRTE_DEST</a>(<a class=\"id\" href=\"#dest\">dest</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * atomically update the IRTE with the new destination and vector.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#modify_irte\">modify_irte</a>(<a class=\"id\" href=\"#irq\">irq</a>, &amp;<a class=\"id\" href=\"#irte\">irte</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * After this point, all the interrupts will start arriving</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * at the new destination. So, time to cleanup the previous</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * vector allocation.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#move_in_progress\">move_in_progress</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#send_cleanup_vector\">send_cleanup_vector</a>(<a class=\"id\" href=\"#cfg\">cfg</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SMP */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * IRQ Chip for MSI PCI/PCI-X/PCI-Express Devices,</span>", 
"<span class=\"comment\"> * which implement the MSI or MSI-X Capability Structure.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#irq_chip\">irq_chip</a> <a class=\"id\" href=\"#msi_chip\">msi_chip</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"PCI-MSI\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unmask\">unmask</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#unmask_msi_irq\">unmask_msi_irq</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mask\">mask</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#mask_msi_irq\">mask_msi_irq</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ack\">ack</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ack_apic_edge\">ack_apic_edge</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_affinity\">set_affinity</a><span class=\"ts\"/>= <a class=\"id\" href=\"#set_msi_irq_affinity\">set_msi_irq_affinity</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#retrigger\">retrigger</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ioapic_retrigger_irq\">ioapic_retrigger_irq</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#irq_chip\">irq_chip</a> <a class=\"id\" href=\"#msi_ir_chip\">msi_ir_chip</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"IR-PCI-MSI\",", 
];
xr_frag_insert('l/f5/9b089eb1e76d3eb92e990b5d5df5b4f6adf11a.xr', __xr_tmp);
