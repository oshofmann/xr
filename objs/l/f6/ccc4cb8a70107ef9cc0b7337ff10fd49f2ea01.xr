var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright 2006 Andi Kleen, SUSE Labs.</span>", 
"<span class=\"comment\"> * Subject to the GNU Public License, v.2</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Fast user context implementation of getcpu()</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#getcpu\">getcpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jiffies\">jiffies</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#vsyscall\">vsyscall</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#vgtod\">vgtod</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"vextern.h\"", 
"", 
"<a class=\"id\" href=\"#notrace\">notrace</a> long", 
"<a class=\"id\" href=\"#__vdso_getcpu\">__vdso_getcpu</a>(unsigned *<a class=\"id\" href=\"#cpu\">cpu</a>, unsigned *<a class=\"id\" href=\"#node\">node</a>, struct <a class=\"id\" href=\"#getcpu_cache\">getcpu_cache</a> *<a class=\"id\" href=\"#unused\">unused</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#vdso_vgetcpu_mode\">vdso_vgetcpu_mode</a> == <a class=\"id\" href=\"#VGETCPU_RDTSCP\">VGETCPU_RDTSCP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Load per CPU data from RDTSCP */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#native_read_tscp\">native_read_tscp</a>(&amp;<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Load per CPU data from GDT */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"lsl %1,%0\" : \"=r\" (<a class=\"id\" href=\"#p\">p</a>) : \"r\" (<a class=\"id\" href=\"#__PER_CPU_SEG\">__PER_CPU_SEG</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu\">cpu</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#p\">p</a> &amp; 0xfff;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#p\">p</a> >> 12;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"long <a class=\"id\" href=\"#getcpu\">getcpu</a>(unsigned *<a class=\"id\" href=\"#cpu\">cpu</a>, unsigned *<a class=\"id\" href=\"#node\">node</a>, struct <a class=\"id\" href=\"#getcpu_cache\">getcpu_cache</a> *<a class=\"id\" href=\"#tcache\">tcache</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#weak\">weak</a>, <a class=\"id\" href=\"#alias\">alias</a>(\"__vdso_getcpu\")));", 
];
xr_frag_insert('l/f6/ccc4cb8a70107ef9cc0b7337ff10fd49f2ea01.xr', __xr_tmp);
