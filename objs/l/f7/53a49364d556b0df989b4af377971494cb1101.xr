var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/fs/proc/inode.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 1991, 1992  Linus Torvalds</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#stat\">stat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#completion\">completion</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#poll\">poll</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#file\">file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#limits\">limits</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp_lock\">smp_lock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"internal.h\"", 
"", 
"static void <a class=\"id\" href=\"#proc_evict_inode\">proc_evict_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#de\">de</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#truncate_inode_pages\">truncate_inode_pages</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_data\">i_data</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end_writeback\">end_writeback</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Stop tracking associated processes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#PROC_I\">PROC_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#pid\">pid</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Let go of any associated proc directory entry */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#de\">de</a> = <a class=\"id\" href=\"#PROC_I\">PROC_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#pde\">pde</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#de\">de</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pde_put\">pde_put</a>(<a class=\"id\" href=\"#de\">de</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PROC_I\">PROC_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#sysctl\">sysctl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysctl_head_put\">sysctl_head_put</a>(<a class=\"id\" href=\"#PROC_I\">PROC_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#sysctl\">sysctl</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#proc_mnt\">proc_mnt</a>;", 
"", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> * <a class=\"id\" href=\"#proc_inode_cachep\">proc_inode_cachep</a>;", 
"", 
"static struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#proc_alloc_inode\">proc_alloc_inode</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_inode\">proc_inode</a> *<a class=\"id\" href=\"#ei\">ei</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a> = (struct <a class=\"id\" href=\"#proc_inode\">proc_inode</a> *)<a class=\"id\" href=\"#kmem_cache_alloc\">kmem_cache_alloc</a>(<a class=\"id\" href=\"#proc_inode_cachep\">proc_inode_cachep</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ei\">ei</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#fd\">fd</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#op\">op</a>.<a class=\"id\" href=\"#proc_get_link\">proc_get_link</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#pde\">pde</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#sysctl\">sysctl</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#sysctl_entry\">sysctl_entry</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = &amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#vfs_inode\">vfs_inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_atime\">i_atime</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#CURRENT_TIME\">CURRENT_TIME</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#inode\">inode</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#proc_destroy_inode\">proc_destroy_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#proc_inode_cachep\">proc_inode_cachep</a>, <a class=\"id\" href=\"#PROC_I\">PROC_I</a>(<a class=\"id\" href=\"#inode\">inode</a>));", 
"}", 
"", 
"static void <a class=\"id\" href=\"#init_once\">init_once</a>(void *<a class=\"id\" href=\"#foo\">foo</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_inode\">proc_inode</a> *<a class=\"id\" href=\"#ei\">ei</a> = (struct <a class=\"id\" href=\"#proc_inode\">proc_inode</a> *) <a class=\"id\" href=\"#foo\">foo</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode_init_once\">inode_init_once</a>(&amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#vfs_inode\">vfs_inode</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#proc_init_inodecache\">proc_init_inodecache</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_inode_cachep\">proc_inode_cachep</a> = <a class=\"id\" href=\"#kmem_cache_create\">kmem_cache_create</a>(\"proc_inode_cache\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     sizeof(struct <a class=\"id\" href=\"#proc_inode\">proc_inode</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     0, (<a class=\"id\" href=\"#SLAB_RECLAIM_ACCOUNT\">SLAB_RECLAIM_ACCOUNT</a>|", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SLAB_MEM_SPREAD\">SLAB_MEM_SPREAD</a>|<a class=\"id\" href=\"#SLAB_PANIC\">SLAB_PANIC</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#init_once\">init_once</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#super_operations\">super_operations</a> <a class=\"id\" href=\"#proc_sops\">proc_sops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#alloc_inode\">alloc_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_alloc_inode\">proc_alloc_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#destroy_inode\">destroy_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_destroy_inode\">proc_destroy_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#drop_inode\">drop_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_delete_inode\">generic_delete_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#evict_inode\">evict_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_evict_inode\">proc_evict_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#statfs\">statfs</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#simple_statfs\">simple_statfs</a>,", 
"};", 
"", 
"static void <a class=\"id\" href=\"#__pde_users_dec\">__pde_users_dec</a>(struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#pde\">pde</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_users\">pde_users</a>--;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_completion\">pde_unload_completion</a> && <a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_users\">pde_users</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#complete\">complete</a>(<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_completion\">pde_unload_completion</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#pde_users_dec\">pde_users_dec</a>(struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#pde\">pde</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__pde_users_dec\">__pde_users_dec</a>(<a class=\"id\" href=\"#pde\">pde</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#proc_reg_llseek\">proc_reg_llseek</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a>, int <a class=\"id\" href=\"#whence\">whence</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#pde\">pde</a> = <a class=\"id\" href=\"#PDE\">PDE</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#rv\">rv</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> (*<a class=\"id\" href=\"#llseek\">llseek</a>)(struct <a class=\"id\" href=\"#file\">file</a> *, <a class=\"id\" href=\"#loff_t\">loff_t</a>, int);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * remove_proc_entry() is going to delete PDE (as part of module</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cleanup sequence). No new callers into module allowed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#proc_fops\">proc_fops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Bump refcount so that remove_proc_entry will wail for -&gt;llseek to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * complete.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_users\">pde_users</a>++;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Save function pointer under lock, to protect against -&gt;proc_fops</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * NULL'ifying right after -&gt;pde_unload_lock is dropped.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#llseek\">llseek</a> = <a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#proc_fops\">proc_fops</a>-><a class=\"id\" href=\"#llseek\">llseek</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#llseek\">llseek</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#llseek\">llseek</a> = <a class=\"id\" href=\"#default_llseek\">default_llseek</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = <a class=\"id\" href=\"#llseek\">llseek</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#whence\">whence</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde_users_dec\">pde_users_dec</a>(<a class=\"id\" href=\"#pde\">pde</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#proc_reg_read\">proc_reg_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#pde\">pde</a> = <a class=\"id\" href=\"#PDE\">PDE</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#rv\">rv</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> (*<a class=\"id\" href=\"#read\">read</a>)(struct <a class=\"id\" href=\"#file\">file</a> *, char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#proc_fops\">proc_fops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_users\">pde_users</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#proc_fops\">proc_fops</a>-><a class=\"id\" href=\"#read\">read</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#read\">read</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = <a class=\"id\" href=\"#read\">read</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#ppos\">ppos</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde_users_dec\">pde_users_dec</a>(<a class=\"id\" href=\"#pde\">pde</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#proc_reg_write\">proc_reg_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#pde\">pde</a> = <a class=\"id\" href=\"#PDE\">PDE</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#rv\">rv</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> (*<a class=\"id\" href=\"#write\">write</a>)(struct <a class=\"id\" href=\"#file\">file</a> *, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#proc_fops\">proc_fops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_users\">pde_users</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write\">write</a> = <a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#proc_fops\">proc_fops</a>-><a class=\"id\" href=\"#write\">write</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#write\">write</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = <a class=\"id\" href=\"#write\">write</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#ppos\">ppos</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde_users_dec\">pde_users_dec</a>(<a class=\"id\" href=\"#pde\">pde</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#proc_reg_poll\">proc_reg_poll</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, struct <a class=\"id\" href=\"#poll_table_struct\">poll_table_struct</a> *<a class=\"id\" href=\"#pts\">pts</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#pde\">pde</a> = <a class=\"id\" href=\"#PDE\">PDE</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#rv\">rv</a> = <a class=\"id\" href=\"#DEFAULT_POLLMASK\">DEFAULT_POLLMASK</a>;", 
"<span class=\"ts\"/>unsigned int (*<a class=\"id\" href=\"#poll\">poll</a>)(struct <a class=\"id\" href=\"#file\">file</a> *, struct <a class=\"id\" href=\"#poll_table_struct\">poll_table_struct</a> *);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#proc_fops\">proc_fops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_users\">pde_users</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#poll\">poll</a> = <a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#proc_fops\">proc_fops</a>-><a class=\"id\" href=\"#poll\">poll</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#poll\">poll</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = <a class=\"id\" href=\"#poll\">poll</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#pts\">pts</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde_users_dec\">pde_users_dec</a>(<a class=\"id\" href=\"#pde\">pde</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"}", 
"", 
"static long <a class=\"id\" href=\"#proc_reg_unlocked_ioctl\">proc_reg_unlocked_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#pde\">pde</a> = <a class=\"id\" href=\"#PDE\">PDE</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#rv\">rv</a> = -<a class=\"id\" href=\"#ENOTTY\">ENOTTY</a>;", 
"<span class=\"ts\"/>long (*<a class=\"id\" href=\"#ioctl\">ioctl</a>)(struct <a class=\"id\" href=\"#file\">file</a> *, unsigned int, unsigned long);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#proc_fops\">proc_fops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_users\">pde_users</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ioctl\">ioctl</a> = <a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#proc_fops\">proc_fops</a>-><a class=\"id\" href=\"#unlocked_ioctl\">unlocked_ioctl</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ioctl\">ioctl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = <a class=\"id\" href=\"#ioctl\">ioctl</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde_users_dec\">pde_users_dec</a>(<a class=\"id\" href=\"#pde\">pde</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"static long <a class=\"id\" href=\"#proc_reg_compat_ioctl\">proc_reg_compat_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#pde\">pde</a> = <a class=\"id\" href=\"#PDE\">PDE</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#rv\">rv</a> = -<a class=\"id\" href=\"#ENOTTY\">ENOTTY</a>;", 
"<span class=\"ts\"/>long (*<a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a>)(struct <a class=\"id\" href=\"#file\">file</a> *, unsigned int, unsigned long);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#proc_fops\">proc_fops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_users\">pde_users</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a> = <a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#proc_fops\">proc_fops</a>-><a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = <a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde_users_dec\">pde_users_dec</a>(<a class=\"id\" href=\"#pde\">pde</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#proc_reg_mmap\">proc_reg_mmap</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#pde\">pde</a> = <a class=\"id\" href=\"#PDE\">PDE</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rv\">rv</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#mmap\">mmap</a>)(struct <a class=\"id\" href=\"#file\">file</a> *, struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#proc_fops\">proc_fops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_users\">pde_users</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mmap\">mmap</a> = <a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#proc_fops\">proc_fops</a>-><a class=\"id\" href=\"#mmap\">mmap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mmap\">mmap</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = <a class=\"id\" href=\"#mmap\">mmap</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#vma\">vma</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde_users_dec\">pde_users_dec</a>(<a class=\"id\" href=\"#pde\">pde</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#proc_reg_open\">proc_reg_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#pde\">pde</a> = <a class=\"id\" href=\"#PDE\">PDE</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rv\">rv</a> = 0;", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#open\">open</a>)(struct <a class=\"id\" href=\"#inode\">inode</a> *, struct <a class=\"id\" href=\"#file\">file</a> *);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#release\">release</a>)(struct <a class=\"id\" href=\"#inode\">inode</a> *, struct <a class=\"id\" href=\"#file\">file</a> *);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pde_opener\">pde_opener</a> *<a class=\"id\" href=\"#pdeo\">pdeo</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * What for, you ask? Well, we can have open, rmmod, remove_proc_entry</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * sequence. -&gt;release won't be called because -&gt;proc_fops will be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cleared. Depending on complexity of -&gt;release, consequences vary.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We can't wait for mercy when close will be done for real, it's</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * deadlockable: rmmod foo &lt;/proc/foo . So, we're going to do -&gt;release</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * by hand in remove_proc_entry(). For this, save opener's credentials</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for later.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pdeo\">pdeo</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(struct <a class=\"id\" href=\"#pde_opener\">pde_opener</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pdeo\">pdeo</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#proc_fops\">proc_fops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pdeo\">pdeo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_users\">pde_users</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#proc_fops\">proc_fops</a>-><a class=\"id\" href=\"#open\">open</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#proc_fops\">proc_fops</a>-><a class=\"id\" href=\"#release\">release</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#open\">open</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = <a class=\"id\" href=\"#open\">open</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rv\">rv</a> == 0 && <a class=\"id\" href=\"#release\">release</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* To know what to release. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pdeo\">pdeo</a>-><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pdeo\">pdeo</a>-><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Strictly for \"too late\" -&gt;release in proc_reg_release(). */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pdeo\">pdeo</a>-><a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#release\">release</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#pdeo\">pdeo</a>-><a class=\"id\" href=\"#lh\">lh</a>, &amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_openers\">pde_openers</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pdeo\">pdeo</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__pde_users_dec\">__pde_users_dec</a>(<a class=\"id\" href=\"#pde\">pde</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pde_opener\">pde_opener</a> *<a class=\"id\" href=\"#find_pde_opener\">find_pde_opener</a>(struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#pde\">pde</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pde_opener\">pde_opener</a> *<a class=\"id\" href=\"#pdeo\">pdeo</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#pdeo\">pdeo</a>, &amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_openers\">pde_openers</a>, <a class=\"id\" href=\"#lh\">lh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pdeo\">pdeo</a>-><a class=\"id\" href=\"#inode\">inode</a> == <a class=\"id\" href=\"#inode\">inode</a> && <a class=\"id\" href=\"#pdeo\">pdeo</a>-><a class=\"id\" href=\"#file\">file</a> == <a class=\"id\" href=\"#file\">file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pdeo\">pdeo</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#proc_reg_release\">proc_reg_release</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#pde\">pde</a> = <a class=\"id\" href=\"#PDE\">PDE</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rv\">rv</a> = 0;", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#release\">release</a>)(struct <a class=\"id\" href=\"#inode\">inode</a> *, struct <a class=\"id\" href=\"#file\">file</a> *);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pde_opener\">pde_opener</a> *<a class=\"id\" href=\"#pdeo\">pdeo</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pdeo\">pdeo</a> = <a class=\"id\" href=\"#find_pde_opener\">find_pde_opener</a>(<a class=\"id\" href=\"#pde\">pde</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#proc_fops\">proc_fops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Can't simply exit, __fput() will think that everything is OK,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and move on to freeing struct file. remove_proc_entry() will</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * find slacker in opener's list and will try to do non-trivial</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * things with struct file. Therefore, remove opener from list.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * But if opener is removed from list, who will -&gt;release it?</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pdeo\">pdeo</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#pdeo\">pdeo</a>-><a class=\"id\" href=\"#lh\">lh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = <a class=\"id\" href=\"#pdeo\">pdeo</a>-><a class=\"id\" href=\"#release\">release</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pdeo\">pdeo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_users\">pde_users</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#proc_fops\">proc_fops</a>-><a class=\"id\" href=\"#release\">release</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdeo\">pdeo</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#pdeo\">pdeo</a>-><a class=\"id\" href=\"#lh\">lh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pdeo\">pdeo</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pde\">pde</a>-><a class=\"id\" href=\"#pde_unload_lock\">pde_unload_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#release\">release</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = <a class=\"id\" href=\"#release\">release</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde_users_dec\">pde_users_dec</a>(<a class=\"id\" href=\"#pde\">pde</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_reg_file_ops\">proc_reg_file_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_reg_llseek\">proc_reg_llseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_reg_read\">proc_reg_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_reg_write\">proc_reg_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_reg_poll\">proc_reg_poll</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unlocked_ioctl\">unlocked_ioctl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_reg_unlocked_ioctl\">proc_reg_unlocked_ioctl</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_reg_compat_ioctl\">proc_reg_compat_ioctl</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mmap\">mmap</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_reg_mmap\">proc_reg_mmap</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_reg_open\">proc_reg_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_reg_release\">proc_reg_release</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_reg_file_ops_no_compat\">proc_reg_file_ops_no_compat</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_reg_llseek\">proc_reg_llseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_reg_read\">proc_reg_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_reg_write\">proc_reg_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_reg_poll\">proc_reg_poll</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unlocked_ioctl\">unlocked_ioctl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_reg_unlocked_ioctl\">proc_reg_unlocked_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mmap\">mmap</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_reg_mmap\">proc_reg_mmap</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_reg_open\">proc_reg_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_reg_release\">proc_reg_release</a>,", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#proc_get_inode\">proc_get_inode</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, unsigned int <a class=\"id\" href=\"#ino\">ino</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#de\">de</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#inode\">inode</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#iget_locked\">iget_locked</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ino\">ino</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_state\">i_state</a> &amp; <a class=\"id\" href=\"#I_NEW\">I_NEW</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_atime\">i_atime</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#CURRENT_TIME\">CURRENT_TIME</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PROC_I\">PROC_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#fd\">fd</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PROC_I\">PROC_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#pde\">pde</a> = <a class=\"id\" href=\"#de\">de</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#mode\">mode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> = <a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#mode\">mode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a> = <a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#uid\">uid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_gid\">i_gid</a> = <a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#gid\">gid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#size\">size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> = <a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#nlink\">nlink</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_nlink\">i_nlink</a> = <a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#nlink\">nlink</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#proc_iops\">proc_iops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a> = <a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#proc_iops\">proc_iops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#proc_fops\">proc_fops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISREG\">S_ISREG</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>)) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#proc_fops\">proc_fops</a>-><a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_fop\">i_fop</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#proc_reg_file_ops_no_compat\">proc_reg_file_ops_no_compat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_fop\">i_fop</a> = &amp;<a class=\"id\" href=\"#proc_reg_file_ops\">proc_reg_file_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_fop\">i_fop</a> = <a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#proc_fops\">proc_fops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_new_inode\">unlock_new_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#pde_put\">pde_put</a>(<a class=\"id\" href=\"#de\">de</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#inode\">inode</a>;", 
"}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>", 
"", 
"int <a class=\"id\" href=\"#proc_fill_super\">proc_fill_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#s\">s</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#root_inode\">root_inode</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> |= <a class=\"id\" href=\"#MS_NODIRATIME\">MS_NODIRATIME</a> | <a class=\"id\" href=\"#MS_NOSUID\">MS_NOSUID</a> | <a class=\"id\" href=\"#MS_NOEXEC\">MS_NOEXEC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> = 1024;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a> = 10;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a> = <a class=\"id\" href=\"#PROC_SUPER_MAGIC\">PROC_SUPER_MAGIC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#s_op\">s_op</a> = &amp;<a class=\"id\" href=\"#proc_sops\">proc_sops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#s_time_gran\">s_time_gran</a> = 1;", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde_get\">pde_get</a>(&amp;<a class=\"id\" href=\"#proc_root\">proc_root</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root_inode\">root_inode</a> = <a class=\"id\" href=\"#proc_get_inode\">proc_get_inode</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#PROC_ROOT_INO\">PROC_ROOT_INO</a>, &amp;<a class=\"id\" href=\"#proc_root\">proc_root</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#root_inode\">root_inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_no_root\">out_no_root</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root_inode\">root_inode</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root_inode\">root_inode</a>-><a class=\"id\" href=\"#i_gid\">i_gid</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#s_root\">s_root</a> = <a class=\"id\" href=\"#d_alloc_root\">d_alloc_root</a>(<a class=\"id\" href=\"#root_inode\">root_inode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#s_root\">s_root</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_no_root\">out_no_root</a>;", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out_no_root\">out_no_root</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"proc_read_super: get root inode failed\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#root_inode\">root_inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde_put\">pde_put</a>(&amp;<a class=\"id\" href=\"#proc_root\">proc_root</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"}", 
];
xr_frag_insert('l/f7/53a49364d556b0df989b4af377971494cb1101.xr', __xr_tmp);
