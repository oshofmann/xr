var __xr_tmp = [
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Quirk: v2 perfmon does not report fixed-purpose events, so</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * assume at least 3 events:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#version\">version</a> &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#num_counters_fixed\">num_counters_fixed</a> = <a class=\"id\" href=\"#max\">max</a>((int)<a class=\"id\" href=\"#edx\">edx</a>.<a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#num_counters_fixed\">num_counters_fixed</a>, 3);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * v2 and above have a perf capabilities MSR</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#version\">version</a> &gt; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#capabilities\">capabilities</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#MSR_IA32_PERF_CAPABILITIES\">MSR_IA32_PERF_CAPABILITIES</a>, <a class=\"id\" href=\"#capabilities\">capabilities</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#intel_cap\">intel_cap</a>.<a class=\"id\" href=\"#capabilities\">capabilities</a> = <a class=\"id\" href=\"#capabilities\">capabilities</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#intel_ds_init\">intel_ds_init</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Install the hw-cache-events table:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_model\">x86_model</a>) {", 
"<span class=\"ts\"/>case 14: <span class=\"comment\">/* 65 nm core solo/duo, \"Yonah\" */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_cont\">pr_cont</a>(\"Core events, \");", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case 15: <span class=\"comment\">/* original 65 nm celeron/pentium/core2/xeon, \"Merom\"/\"Conroe\" */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#quirks\">quirks</a> = <a class=\"id\" href=\"#intel_clovertown_quirks\">intel_clovertown_quirks</a>;", 
"<span class=\"ts\"/>case 22: <span class=\"comment\">/* single-core 65 nm celeron/core2solo \"Merom-L\"/\"Conroe-L\" */</span>", 
"<span class=\"ts\"/>case 23: <span class=\"comment\">/* current 45 nm celeron/core2/xeon \"Penryn\"/\"Wolfdale\" */</span>", 
"<span class=\"ts\"/>case 29: <span class=\"comment\">/* six-core 45 nm xeon \"Dunnington\" */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#hw_cache_event_ids\">hw_cache_event_ids</a>, <a class=\"id\" href=\"#core2_hw_cache_event_ids\">core2_hw_cache_event_ids</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       sizeof(<a class=\"id\" href=\"#hw_cache_event_ids\">hw_cache_event_ids</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intel_pmu_lbr_init_core\">intel_pmu_lbr_init_core</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#event_constraints\">event_constraints</a> = <a class=\"id\" href=\"#intel_core2_event_constraints\">intel_core2_event_constraints</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_cont\">pr_cont</a>(\"Core2 events, \");", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case 26: <span class=\"comment\">/* 45 nm nehalem, \"Bloomfield\" */</span>", 
"<span class=\"ts\"/>case 30: <span class=\"comment\">/* 45 nm nehalem, \"Lynnfield\" */</span>", 
"<span class=\"ts\"/>case 46: <span class=\"comment\">/* 45 nm nehalem-ex, \"Beckton\" */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#hw_cache_event_ids\">hw_cache_event_ids</a>, <a class=\"id\" href=\"#nehalem_hw_cache_event_ids\">nehalem_hw_cache_event_ids</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       sizeof(<a class=\"id\" href=\"#hw_cache_event_ids\">hw_cache_event_ids</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intel_pmu_lbr_init_nhm\">intel_pmu_lbr_init_nhm</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#event_constraints\">event_constraints</a> = <a class=\"id\" href=\"#intel_nehalem_event_constraints\">intel_nehalem_event_constraints</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#enable_all\">enable_all</a> = <a class=\"id\" href=\"#intel_pmu_nhm_enable_all\">intel_pmu_nhm_enable_all</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_cont\">pr_cont</a>(\"Nehalem events, \");", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case 28: <span class=\"comment\">/* Atom */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#hw_cache_event_ids\">hw_cache_event_ids</a>, <a class=\"id\" href=\"#atom_hw_cache_event_ids\">atom_hw_cache_event_ids</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       sizeof(<a class=\"id\" href=\"#hw_cache_event_ids\">hw_cache_event_ids</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intel_pmu_lbr_init_atom\">intel_pmu_lbr_init_atom</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#event_constraints\">event_constraints</a> = <a class=\"id\" href=\"#intel_gen_event_constraints\">intel_gen_event_constraints</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_cont\">pr_cont</a>(\"Atom events, \");", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case 37: <span class=\"comment\">/* 32 nm nehalem, \"Clarkdale\" */</span>", 
"<span class=\"ts\"/>case 44: <span class=\"comment\">/* 32 nm nehalem, \"Gulftown\" */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#hw_cache_event_ids\">hw_cache_event_ids</a>, <a class=\"id\" href=\"#westmere_hw_cache_event_ids\">westmere_hw_cache_event_ids</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       sizeof(<a class=\"id\" href=\"#hw_cache_event_ids\">hw_cache_event_ids</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intel_pmu_lbr_init_nhm\">intel_pmu_lbr_init_nhm</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#event_constraints\">event_constraints</a> = <a class=\"id\" href=\"#intel_westmere_event_constraints\">intel_westmere_event_constraints</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#enable_all\">enable_all</a> = <a class=\"id\" href=\"#intel_pmu_nhm_enable_all\">intel_pmu_nhm_enable_all</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_cont\">pr_cont</a>(\"Westmere events, \");", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * default constraints for v2 and up</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#event_constraints\">event_constraints</a> = <a class=\"id\" href=\"#intel_gen_event_constraints\">intel_gen_event_constraints</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_cont\">pr_cont</a>(\"generic architected perfmon, \");", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#else <span class=\"comment\">/* CONFIG_CPU_SUP_INTEL */</span>", 
"", 
"static int <a class=\"id\" href=\"#intel_pmu_init\">intel_pmu_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_CPU_SUP_INTEL */</span>", 
];
xr_frag_insert('l/f7/59adfdbfd18fef42350365ea8c2f380b260eb6.xr', __xr_tmp);
