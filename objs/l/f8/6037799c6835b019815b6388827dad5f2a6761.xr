var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__LINUX_PERCPU_H\">__LINUX_PERCPU_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__LINUX_PERCPU_H\">__LINUX_PERCPU_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#preempt\">preempt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpumask\">cpumask</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pfn\">pfn</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#percpu\">percpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* enough to cover all DEFINE_PER_CPUs in modules */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MODULES\">CONFIG_MODULES</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PERCPU_MODULE_RESERVE\">PERCPU_MODULE_RESERVE</a><span class=\"ts\"/><span class=\"ts\"/>(8 << 10)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PERCPU_MODULE_RESERVE\">PERCPU_MODULE_RESERVE</a><span class=\"ts\"/><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#PERCPU_ENOUGH_ROOM\">PERCPU_ENOUGH_ROOM</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PERCPU_ENOUGH_ROOM\">PERCPU_ENOUGH_ROOM</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#ALIGN\">ALIGN</a>(<a class=\"id\" href=\"#__per_cpu_end\">__per_cpu_end</a> - <a class=\"id\" href=\"#__per_cpu_start\">__per_cpu_start</a>, <a class=\"id\" href=\"#SMP_CACHE_BYTES\">SMP_CACHE_BYTES</a>) +<span class=\"ts\"/>\\", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#PERCPU_MODULE_RESERVE\">PERCPU_MODULE_RESERVE</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Must be an lvalue. Since @var must be a simple identifier,</span>", 
"<span class=\"comment\"> * we force a syntax error here if it isn't.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#get_cpu_var\">get_cpu_var</a>(<a class=\"id\" href=\"#var\">var</a>) (*({<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#var\">var</a>); }))", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The weird &amp; is necessary because sparse considers (void)(var) to be</span>", 
"<span class=\"comment\"> * a direct dereference of percpu variable (var).</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#put_cpu_var\">put_cpu_var</a>(<a class=\"id\" href=\"#var\">var</a>) do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(void)&amp;(<a class=\"id\" href=\"#var\">var</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_enable\">preempt_enable</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"} while (0)", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"", 
"<span class=\"comment\">/* minimum unit size, also is the maximum supported allocation size */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCPU_MIN_UNIT_SIZE\">PCPU_MIN_UNIT_SIZE</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PFN_ALIGN\">PFN_ALIGN</a>(64 << 10)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Percpu allocator can serve percpu allocations before slab is</span>", 
"<span class=\"comment\"> * initialized which allows slab to depend on the percpu allocator.</span>", 
"<span class=\"comment\"> * The following two parameters decide how much resource to</span>", 
"<span class=\"comment\"> * preallocate for this.  Keep PERCPU_DYNAMIC_RESERVE equal to or</span>", 
"<span class=\"comment\"> * larger than PERCPU_DYNAMIC_EARLY_SIZE.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PERCPU_DYNAMIC_EARLY_SLOTS\">PERCPU_DYNAMIC_EARLY_SLOTS</a><span class=\"ts\"/>128", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PERCPU_DYNAMIC_EARLY_SIZE\">PERCPU_DYNAMIC_EARLY_SIZE</a><span class=\"ts\"/>(12 << 10)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * PERCPU_DYNAMIC_RESERVE indicates the amount of free area to piggy</span>", 
"<span class=\"comment\"> * back on the first chunk for dynamic percpu allocation if arch is</span>", 
"<span class=\"comment\"> * manually allocating and mapping it for faster access (as a part of</span>", 
"<span class=\"comment\"> * large page mapping for example).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The following values give between one and two pages of free space</span>", 
"<span class=\"comment\"> * after typical minimal boot (2-way SMP, single disk and NIC) with</span>", 
"<span class=\"comment\"> * both defconfig and a distro config on x86_64 and 32.  More</span>", 
"<span class=\"comment\"> * intelligent way to determine this would be nice.</span>", 
"<span class=\"comment\"> */</span>", 
"#if <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a> &gt; 32", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PERCPU_DYNAMIC_RESERVE\">PERCPU_DYNAMIC_RESERVE</a><span class=\"ts\"/><span class=\"ts\"/>(20 << 10)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PERCPU_DYNAMIC_RESERVE\">PERCPU_DYNAMIC_RESERVE</a><span class=\"ts\"/><span class=\"ts\"/>(12 << 10)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern void *<a class=\"id\" href=\"#pcpu_base_addr\">pcpu_base_addr</a>;", 
"extern const unsigned long *<a class=\"id\" href=\"#pcpu_unit_offsets\">pcpu_unit_offsets</a>;", 
"", 
"struct <a class=\"id\" href=\"#pcpu_group_info\">pcpu_group_info</a> {", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_units\">nr_units</a>;<span class=\"ts\"/><span class=\"comment\">/* aligned # of units */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#base_offset\">base_offset</a>;<span class=\"ts\"/><span class=\"comment\">/* base address offset */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#cpu_map\">cpu_map</a>;<span class=\"ts\"/><span class=\"comment\">/* unit-&gt;cpu map, empty</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * entries contain NR_CPUS */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#pcpu_alloc_info\">pcpu_alloc_info</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#static_size\">static_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reserved_size\">reserved_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dyn_size\">dyn_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unit_size\">unit_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atom_size\">atom_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alloc_size\">alloc_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ai_size\">__ai_size</a>;<span class=\"ts\"/><span class=\"comment\">/* internal, don't use */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_groups\">nr_groups</a>;<span class=\"ts\"/><span class=\"comment\">/* 0 if grouping unnecessary */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcpu_group_info\">pcpu_group_info</a><span class=\"ts\"/><a class=\"id\" href=\"#groups\">groups</a>[];", 
"};", 
"", 
"enum <a class=\"id\" href=\"#pcpu_fc\">pcpu_fc</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCPU_FC_AUTO\">PCPU_FC_AUTO</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCPU_FC_EMBED\">PCPU_FC_EMBED</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCPU_FC_PAGE\">PCPU_FC_PAGE</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCPU_FC_NR\">PCPU_FC_NR</a>,", 
"};", 
"extern const char *<a class=\"id\" href=\"#pcpu_fc_names\">pcpu_fc_names</a>[<a class=\"id\" href=\"#PCPU_FC_NR\">PCPU_FC_NR</a>];", 
"", 
"extern enum <a class=\"id\" href=\"#pcpu_fc\">pcpu_fc</a> <a class=\"id\" href=\"#pcpu_chosen_fc\">pcpu_chosen_fc</a>;", 
"", 
"typedef void * (*<a class=\"id\" href=\"#pcpu_fc_alloc_fn_t\">pcpu_fc_alloc_fn_t</a>)(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#align\">align</a>);", 
"typedef void (*<a class=\"id\" href=\"#pcpu_fc_free_fn_t\">pcpu_fc_free_fn_t</a>)(void *<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>);", 
"typedef void (*<a class=\"id\" href=\"#pcpu_fc_populate_pte_fn_t\">pcpu_fc_populate_pte_fn_t</a>)(unsigned long <a class=\"id\" href=\"#addr\">addr</a>);", 
"typedef int (<a class=\"id\" href=\"#pcpu_fc_cpu_distance_fn_t\">pcpu_fc_cpu_distance_fn_t</a>)(unsigned int <a class=\"id\" href=\"#from\">from</a>, unsigned int <a class=\"id\" href=\"#to\">to</a>);", 
"", 
"extern struct <a class=\"id\" href=\"#pcpu_alloc_info\">pcpu_alloc_info</a> * <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pcpu_alloc_alloc_info\">pcpu_alloc_alloc_info</a>(int <a class=\"id\" href=\"#nr_groups\">nr_groups</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#nr_units\">nr_units</a>);", 
"extern void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pcpu_free_alloc_info\">pcpu_free_alloc_info</a>(struct <a class=\"id\" href=\"#pcpu_alloc_info\">pcpu_alloc_info</a> *<a class=\"id\" href=\"#ai\">ai</a>);", 
"", 
"extern int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pcpu_setup_first_chunk\">pcpu_setup_first_chunk</a>(const struct <a class=\"id\" href=\"#pcpu_alloc_info\">pcpu_alloc_info</a> *<a class=\"id\" href=\"#ai\">ai</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void *<a class=\"id\" href=\"#base_addr\">base_addr</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NEED_PER_CPU_EMBED_FIRST_CHUNK\">CONFIG_NEED_PER_CPU_EMBED_FIRST_CHUNK</a>", 
"extern int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pcpu_embed_first_chunk\">pcpu_embed_first_chunk</a>(<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#reserved_size\">reserved_size</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#dyn_size\">dyn_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#atom_size\">atom_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcpu_fc_cpu_distance_fn_t\">pcpu_fc_cpu_distance_fn_t</a> <a class=\"id\" href=\"#cpu_distance_fn\">cpu_distance_fn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcpu_fc_alloc_fn_t\">pcpu_fc_alloc_fn_t</a> <a class=\"id\" href=\"#alloc_fn\">alloc_fn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcpu_fc_free_fn_t\">pcpu_fc_free_fn_t</a> <a class=\"id\" href=\"#free_fn\">free_fn</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NEED_PER_CPU_PAGE_FIRST_CHUNK\">CONFIG_NEED_PER_CPU_PAGE_FIRST_CHUNK</a>", 
"extern int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pcpu_page_first_chunk\">pcpu_page_first_chunk</a>(<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#reserved_size\">reserved_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcpu_fc_alloc_fn_t\">pcpu_fc_alloc_fn_t</a> <a class=\"id\" href=\"#alloc_fn\">alloc_fn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcpu_fc_free_fn_t\">pcpu_fc_free_fn_t</a> <a class=\"id\" href=\"#free_fn\">free_fn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcpu_fc_populate_pte_fn_t\">pcpu_fc_populate_pte_fn_t</a> <a class=\"id\" href=\"#populate_pte_fn\">populate_pte_fn</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Use this to get to a cpu's version of the per-cpu object</span>", 
"<span class=\"comment\"> * dynamically allocated. Non-atomic access to the current CPU's</span>", 
"<span class=\"comment\"> * version should probably be combined with get_cpu()/put_cpu().</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#per_cpu_ptr\">per_cpu_ptr</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#cpu\">cpu</a>)<span class=\"ts\"/><a class=\"id\" href=\"#SHIFT_PERCPU_PTR\">SHIFT_PERCPU_PTR</a>((<a class=\"id\" href=\"#ptr\">ptr</a>), <a class=\"id\" href=\"#per_cpu_offset\">per_cpu_offset</a>((<a class=\"id\" href=\"#cpu\">cpu</a>)))", 
"", 
"extern void <a class=\"id\" href=\"#__percpu\">__percpu</a> *<a class=\"id\" href=\"#__alloc_reserved_percpu\">__alloc_reserved_percpu</a>(<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#align\">align</a>);", 
"extern <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_kernel_percpu_address\">is_kernel_percpu_address</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_HAVE_SETUP_PER_CPU_AREA\">CONFIG_HAVE_SETUP_PER_CPU_AREA</a>", 
"extern void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#setup_per_cpu_areas\">setup_per_cpu_areas</a>(void);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"extern void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#percpu_init_late\">percpu_init_late</a>(void);", 
"", 
"#else <span class=\"comment\">/* CONFIG_SMP */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#per_cpu_ptr\">per_cpu_ptr</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) ({ (void)(<a class=\"id\" href=\"#cpu\">cpu</a>); <a class=\"id\" href=\"#VERIFY_PERCPU_PTR\">VERIFY_PERCPU_PTR</a>((<a class=\"id\" href=\"#ptr\">ptr</a>)); })", 
"", 
"<span class=\"comment\">/* can't distinguish from other static vars, always false */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_kernel_percpu_address\">is_kernel_percpu_address</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#setup_per_cpu_areas\">setup_per_cpu_areas</a>(void) { }", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#percpu_init_late\">percpu_init_late</a>(void) { }", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void *<a class=\"id\" href=\"#pcpu_lpage_remapped\">pcpu_lpage_remapped</a>(void *<a class=\"id\" href=\"#kaddr\">kaddr</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SMP */</span>", 
"", 
"extern void <a class=\"id\" href=\"#__percpu\">__percpu</a> *<a class=\"id\" href=\"#__alloc_percpu\">__alloc_percpu</a>(<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#align\">align</a>);", 
"extern void <a class=\"id\" href=\"#free_percpu\">free_percpu</a>(void <a class=\"id\" href=\"#__percpu\">__percpu</a> *<a class=\"id\" href=\"#__pdata\">__pdata</a>);", 
"extern <a class=\"id\" href=\"#phys_addr_t\">phys_addr_t</a> <a class=\"id\" href=\"#per_cpu_ptr_to_phys\">per_cpu_ptr_to_phys</a>(void *<a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#alloc_percpu\">alloc_percpu</a>(<a class=\"id\" href=\"#type\">type</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#typeof\">typeof</a>(<a class=\"id\" href=\"#type\">type</a>) <a class=\"id\" href=\"#__percpu\">__percpu</a> *)<a class=\"id\" href=\"#__alloc_percpu\">__alloc_percpu</a>(sizeof(<a class=\"id\" href=\"#type\">type</a>), <a class=\"id\" href=\"#__alignof__\">__alignof__</a>(<a class=\"id\" href=\"#type\">type</a>))", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Optional methods for optimized non-lvalue per-cpu variable access.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @var can be a percpu variable or a field of it and its size should</span>", 
"<span class=\"comment\"> * equal char, int or long.  percpu_read() evaluates to a lvalue and</span>", 
"<span class=\"comment\"> * all others to void.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * These operations are guaranteed to be atomic w.r.t. preemption.</span>", 
"<span class=\"comment\"> * The generic versions use plain get/put_cpu_var().  Archs are</span>", 
"<span class=\"comment\"> * encouraged to implement single-instruction alternatives which don't</span>", 
"<span class=\"comment\"> * require preemption protection.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#percpu_read\">percpu_read</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#percpu_read\">percpu_read</a>(<a class=\"id\" href=\"#var\">var</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"  ({<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#typeof\">typeof</a>(<a class=\"id\" href=\"#var\">var</a>) *<a class=\"id\" href=\"#pr_ptr__\">pr_ptr__</a> = &amp;(<a class=\"id\" href=\"#var\">var</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#typeof\">typeof</a>(<a class=\"id\" href=\"#var\">var</a>) <a class=\"id\" href=\"#pr_ret__\">pr_ret__</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_ret__\">pr_ret__</a> = <a class=\"id\" href=\"#get_cpu_var\">get_cpu_var</a>(*<a class=\"id\" href=\"#pr_ptr__\">pr_ptr__</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_cpu_var\">put_cpu_var</a>(*<a class=\"id\" href=\"#pr_ptr__\">pr_ptr__</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_ret__\">pr_ret__</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"  })", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__percpu_generic_to_op\">__percpu_generic_to_op</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#op\">op</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#typeof\">typeof</a>(<a class=\"id\" href=\"#var\">var</a>) *<a class=\"id\" href=\"#pgto_ptr__\">pgto_ptr__</a> = &amp;(<a class=\"id\" href=\"#var\">var</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_cpu_var\">get_cpu_var</a>(*<a class=\"id\" href=\"#pgto_ptr__\">pgto_ptr__</a>) <a class=\"id\" href=\"#op\">op</a> <a class=\"id\" href=\"#val\">val</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_cpu_var\">put_cpu_var</a>(*<a class=\"id\" href=\"#pgto_ptr__\">pgto_ptr__</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"} while (0)", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#percpu_write\">percpu_write</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#percpu_write\">percpu_write</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__percpu_generic_to_op\">__percpu_generic_to_op</a>(<a class=\"id\" href=\"#var\">var</a>, (<a class=\"id\" href=\"#val\">val</a>), =)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#percpu_add\">percpu_add</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#percpu_add\">percpu_add</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__percpu_generic_to_op\">__percpu_generic_to_op</a>(<a class=\"id\" href=\"#var\">var</a>, (<a class=\"id\" href=\"#val\">val</a>), +=)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#percpu_sub\">percpu_sub</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#percpu_sub\">percpu_sub</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__percpu_generic_to_op\">__percpu_generic_to_op</a>(<a class=\"id\" href=\"#var\">var</a>, (<a class=\"id\" href=\"#val\">val</a>), -=)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#percpu_and\">percpu_and</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#percpu_and\">percpu_and</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__percpu_generic_to_op\">__percpu_generic_to_op</a>(<a class=\"id\" href=\"#var\">var</a>, (<a class=\"id\" href=\"#val\">val</a>), &=)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#percpu_or\">percpu_or</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#percpu_or\">percpu_or</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__percpu_generic_to_op\">__percpu_generic_to_op</a>(<a class=\"id\" href=\"#var\">var</a>, (<a class=\"id\" href=\"#val\">val</a>), |=)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#percpu_xor\">percpu_xor</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#percpu_xor\">percpu_xor</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__percpu_generic_to_op\">__percpu_generic_to_op</a>(<a class=\"id\" href=\"#var\">var</a>, (<a class=\"id\" href=\"#val\">val</a>), ^=)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Branching function to split up a function into a set of functions that</span>", 
"<span class=\"comment\"> * are called for different scalar sizes of the objects handled.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"extern void <a class=\"id\" href=\"#__bad_size_call_parameter\">__bad_size_call_parameter</a>(void);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__pcpu_size_call_return\">__pcpu_size_call_return</a>(<a class=\"id\" href=\"#stem\">stem</a>, <a class=\"id\" href=\"#variable\">variable</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"({<span class=\"ts\"/><a class=\"id\" href=\"#typeof\">typeof</a>(<a class=\"id\" href=\"#variable\">variable</a>) <a class=\"id\" href=\"#pscr_ret__\">pscr_ret__</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__verify_pcpu_ptr\">__verify_pcpu_ptr</a>(&amp;(<a class=\"id\" href=\"#variable\">variable</a>));<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>switch(sizeof(<a class=\"id\" href=\"#variable\">variable</a>)) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>case 1: <a class=\"id\" href=\"#pscr_ret__\">pscr_ret__</a> = <a class=\"id\" href=\"#stem\">stem</a>##1(<a class=\"id\" href=\"#variable\">variable</a>);break;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>case 2: <a class=\"id\" href=\"#pscr_ret__\">pscr_ret__</a> = <a class=\"id\" href=\"#stem\">stem</a>##2(<a class=\"id\" href=\"#variable\">variable</a>);break;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>case 4: <a class=\"id\" href=\"#pscr_ret__\">pscr_ret__</a> = <a class=\"id\" href=\"#stem\">stem</a>##4(<a class=\"id\" href=\"#variable\">variable</a>);break;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>case 8: <a class=\"id\" href=\"#pscr_ret__\">pscr_ret__</a> = <a class=\"id\" href=\"#stem\">stem</a>##8(<a class=\"id\" href=\"#variable\">variable</a>);break;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>default:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__bad_size_call_parameter\">__bad_size_call_parameter</a>();break;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pscr_ret__\">pscr_ret__</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"})", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__pcpu_size_call\">__pcpu_size_call</a>(<a class=\"id\" href=\"#stem\">stem</a>, <a class=\"id\" href=\"#variable\">variable</a>, ...)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__verify_pcpu_ptr\">__verify_pcpu_ptr</a>(&amp;(<a class=\"id\" href=\"#variable\">variable</a>));<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>switch(sizeof(<a class=\"id\" href=\"#variable\">variable</a>)) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>case 1: <a class=\"id\" href=\"#stem\">stem</a>##1(<a class=\"id\" href=\"#variable\">variable</a>, <a class=\"id\" href=\"#__VA_ARGS__\">__VA_ARGS__</a>);break;<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>case 2: <a class=\"id\" href=\"#stem\">stem</a>##2(<a class=\"id\" href=\"#variable\">variable</a>, <a class=\"id\" href=\"#__VA_ARGS__\">__VA_ARGS__</a>);break;<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>case 4: <a class=\"id\" href=\"#stem\">stem</a>##4(<a class=\"id\" href=\"#variable\">variable</a>, <a class=\"id\" href=\"#__VA_ARGS__\">__VA_ARGS__</a>);break;<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>case 8: <a class=\"id\" href=\"#stem\">stem</a>##8(<a class=\"id\" href=\"#variable\">variable</a>, <a class=\"id\" href=\"#__VA_ARGS__\">__VA_ARGS__</a>);break;<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>default: <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__bad_size_call_parameter\">__bad_size_call_parameter</a>();break;<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"} while (0)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Optimized manipulation for memory allocated through the per cpu</span>", 
"<span class=\"comment\"> * allocator or for addresses of per cpu variables.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * These operation guarantee exclusivity of access for other operations</span>", 
"<span class=\"comment\"> * on the *same* processor. The assumption is that per cpu data is only</span>", 
"<span class=\"comment\"> * accessed by a single processor instance (the current one).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The first group is used for accesses that must be done in a</span>", 
"<span class=\"comment\"> * preemption safe way since we know that the context is not preempt</span>", 
"<span class=\"comment\"> * safe. Interrupts may occur. If the interrupt modifies the variable</span>", 
"<span class=\"comment\"> * too then RMW actions will not be reliable.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The arch code can provide optimized functions in two ways:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * 1. Override the function completely. F.e. define this_cpu_add().</span>", 
"<span class=\"comment\"> *    The arch must then ensure that the various scalar format passed</span>", 
"<span class=\"comment\"> *    are handled correctly.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * 2. Provide functions for certain scalar sizes. F.e. provide</span>", 
"<span class=\"comment\"> *    this_cpu_add_2() to provide per cpu atomic operations for 2 byte</span>", 
"<span class=\"comment\"> *    sized RMW actions. If arch code does not provide operations for</span>", 
"<span class=\"comment\"> *    a scalar size then the fallback in the generic code will be</span>", 
"<span class=\"comment\"> *    used.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_this_cpu_generic_read\">_this_cpu_generic_read</a>(<a class=\"id\" href=\"#pcp\">pcp</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"({<span class=\"ts\"/><a class=\"id\" href=\"#typeof\">typeof</a>(<a class=\"id\" href=\"#pcp\">pcp</a>) <a class=\"id\" href=\"#ret__\">ret__</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret__\">ret__</a> = *<a class=\"id\" href=\"#this_cpu_ptr\">this_cpu_ptr</a>(&amp;(<a class=\"id\" href=\"#pcp\">pcp</a>));<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_enable\">preempt_enable</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret__\">ret__</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"})", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_read\">this_cpu_read</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_read_1\">this_cpu_read_1</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_read_1\">this_cpu_read_1</a>(<a class=\"id\" href=\"#pcp\">pcp</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_read\">_this_cpu_generic_read</a>(<a class=\"id\" href=\"#pcp\">pcp</a>)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_read_2\">this_cpu_read_2</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_read_2\">this_cpu_read_2</a>(<a class=\"id\" href=\"#pcp\">pcp</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_read\">_this_cpu_generic_read</a>(<a class=\"id\" href=\"#pcp\">pcp</a>)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_read_4\">this_cpu_read_4</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_read_4\">this_cpu_read_4</a>(<a class=\"id\" href=\"#pcp\">pcp</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_read\">_this_cpu_generic_read</a>(<a class=\"id\" href=\"#pcp\">pcp</a>)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_read_8\">this_cpu_read_8</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_read_8\">this_cpu_read_8</a>(<a class=\"id\" href=\"#pcp\">pcp</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_read\">_this_cpu_generic_read</a>(<a class=\"id\" href=\"#pcp\">pcp</a>)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_read\">this_cpu_read</a>(<a class=\"id\" href=\"#pcp\">pcp</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__pcpu_size_call_return\">__pcpu_size_call_return</a>(<a class=\"id\" href=\"#this_cpu_read_\">this_cpu_read_</a>, (<a class=\"id\" href=\"#pcp\">pcp</a>))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_this_cpu_generic_to_op\">_this_cpu_generic_to_op</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#op\">op</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#__this_cpu_ptr\">__this_cpu_ptr</a>(&amp;(<a class=\"id\" href=\"#pcp\">pcp</a>)) <a class=\"id\" href=\"#op\">op</a> <a class=\"id\" href=\"#val\">val</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_enable\">preempt_enable</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"} while (0)", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_write\">this_cpu_write</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_write_1\">this_cpu_write_1</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_write_1\">this_cpu_write_1</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_to_op\">_this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), =)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_write_2\">this_cpu_write_2</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_write_2\">this_cpu_write_2</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_to_op\">_this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), =)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_write_4\">this_cpu_write_4</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_write_4\">this_cpu_write_4</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_to_op\">_this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), =)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_write_8\">this_cpu_write_8</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_write_8\">this_cpu_write_8</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_to_op\">_this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), =)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_write\">this_cpu_write</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__pcpu_size_call\">__pcpu_size_call</a>(<a class=\"id\" href=\"#this_cpu_write_\">this_cpu_write_</a>, (<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_add\">this_cpu_add</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_add_1\">this_cpu_add_1</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_add_1\">this_cpu_add_1</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_to_op\">_this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), +=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_add_2\">this_cpu_add_2</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_add_2\">this_cpu_add_2</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_to_op\">_this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), +=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_add_4\">this_cpu_add_4</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_add_4\">this_cpu_add_4</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_to_op\">_this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), +=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_add_8\">this_cpu_add_8</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_add_8\">this_cpu_add_8</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_to_op\">_this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), +=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_add\">this_cpu_add</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__pcpu_size_call\">__pcpu_size_call</a>(<a class=\"id\" href=\"#this_cpu_add_\">this_cpu_add_</a>, (<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_sub\">this_cpu_sub</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_sub\">this_cpu_sub</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_cpu_add\">this_cpu_add</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), -(<a class=\"id\" href=\"#val\">val</a>))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_inc\">this_cpu_inc</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_inc\">this_cpu_inc</a>(<a class=\"id\" href=\"#pcp\">pcp</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_cpu_add\">this_cpu_add</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), 1)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_dec\">this_cpu_dec</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_dec\">this_cpu_dec</a>(<a class=\"id\" href=\"#pcp\">pcp</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_cpu_sub\">this_cpu_sub</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), 1)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_and\">this_cpu_and</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_and_1\">this_cpu_and_1</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_and_1\">this_cpu_and_1</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_to_op\">_this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), &=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_and_2\">this_cpu_and_2</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_and_2\">this_cpu_and_2</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_to_op\">_this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), &=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_and_4\">this_cpu_and_4</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_and_4\">this_cpu_and_4</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_to_op\">_this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), &=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_and_8\">this_cpu_and_8</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_and_8\">this_cpu_and_8</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_to_op\">_this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), &=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_and\">this_cpu_and</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__pcpu_size_call\">__pcpu_size_call</a>(<a class=\"id\" href=\"#this_cpu_and_\">this_cpu_and_</a>, (<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_or\">this_cpu_or</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_or_1\">this_cpu_or_1</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_or_1\">this_cpu_or_1</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_to_op\">_this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), |=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_or_2\">this_cpu_or_2</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_or_2\">this_cpu_or_2</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_to_op\">_this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), |=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_or_4\">this_cpu_or_4</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_or_4\">this_cpu_or_4</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_to_op\">_this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), |=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_or_8\">this_cpu_or_8</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_or_8\">this_cpu_or_8</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_to_op\">_this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), |=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_or\">this_cpu_or</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__pcpu_size_call\">__pcpu_size_call</a>(<a class=\"id\" href=\"#this_cpu_or_\">this_cpu_or_</a>, (<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_xor\">this_cpu_xor</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_xor_1\">this_cpu_xor_1</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_xor_1\">this_cpu_xor_1</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_to_op\">_this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), ^=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_xor_2\">this_cpu_xor_2</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_xor_2\">this_cpu_xor_2</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_to_op\">_this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), ^=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_xor_4\">this_cpu_xor_4</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_xor_4\">this_cpu_xor_4</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_to_op\">_this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), ^=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#this_cpu_xor_8\">this_cpu_xor_8</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_xor_8\">this_cpu_xor_8</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#_this_cpu_generic_to_op\">_this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), ^=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#this_cpu_xor\">this_cpu_xor</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__pcpu_size_call\">__pcpu_size_call</a>(<a class=\"id\" href=\"#this_cpu_or_\">this_cpu_or_</a>, (<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Generic percpu operations that do not require preemption handling.</span>", 
"<span class=\"comment\"> * Either we do not care about races or the caller has the</span>", 
"<span class=\"comment\"> * responsibility of handling preemptions issues. Arch code can still</span>", 
"<span class=\"comment\"> * override these instructions since the arch per cpu code may be more</span>", 
"<span class=\"comment\"> * efficient and may actually get race freeness for free (that is the</span>", 
"<span class=\"comment\"> * case for x86 for example).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If there is no other protection through preempt disable and/or</span>", 
"<span class=\"comment\"> * disabling interupts then one of these RMW operations can show unexpected</span>", 
"<span class=\"comment\"> * behavior because the execution thread was rescheduled on another processor</span>", 
"<span class=\"comment\"> * or an interrupt occurred and the same percpu variable was modified from</span>", 
"<span class=\"comment\"> * the interrupt context.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_read\">__this_cpu_read</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_read_1\">__this_cpu_read_1</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_read_1\">__this_cpu_read_1</a>(<a class=\"id\" href=\"#pcp\">pcp</a>)<span class=\"ts\"/>(*<a class=\"id\" href=\"#__this_cpu_ptr\">__this_cpu_ptr</a>(&amp;(<a class=\"id\" href=\"#pcp\">pcp</a>)))", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_read_2\">__this_cpu_read_2</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_read_2\">__this_cpu_read_2</a>(<a class=\"id\" href=\"#pcp\">pcp</a>)<span class=\"ts\"/>(*<a class=\"id\" href=\"#__this_cpu_ptr\">__this_cpu_ptr</a>(&amp;(<a class=\"id\" href=\"#pcp\">pcp</a>)))", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_read_4\">__this_cpu_read_4</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_read_4\">__this_cpu_read_4</a>(<a class=\"id\" href=\"#pcp\">pcp</a>)<span class=\"ts\"/>(*<a class=\"id\" href=\"#__this_cpu_ptr\">__this_cpu_ptr</a>(&amp;(<a class=\"id\" href=\"#pcp\">pcp</a>)))", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_read_8\">__this_cpu_read_8</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_read_8\">__this_cpu_read_8</a>(<a class=\"id\" href=\"#pcp\">pcp</a>)<span class=\"ts\"/>(*<a class=\"id\" href=\"#__this_cpu_ptr\">__this_cpu_ptr</a>(&amp;(<a class=\"id\" href=\"#pcp\">pcp</a>)))", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_read\">__this_cpu_read</a>(<a class=\"id\" href=\"#pcp\">pcp</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__pcpu_size_call_return\">__pcpu_size_call_return</a>(<a class=\"id\" href=\"#__this_cpu_read_\">__this_cpu_read_</a>, (<a class=\"id\" href=\"#pcp\">pcp</a>))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_generic_to_op\">__this_cpu_generic_to_op</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#op\">op</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#__this_cpu_ptr\">__this_cpu_ptr</a>(&amp;(<a class=\"id\" href=\"#pcp\">pcp</a>)) <a class=\"id\" href=\"#op\">op</a> <a class=\"id\" href=\"#val\">val</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"} while (0)", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_write\">__this_cpu_write</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_write_1\">__this_cpu_write_1</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_write_1\">__this_cpu_write_1</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_generic_to_op\">__this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), =)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_write_2\">__this_cpu_write_2</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_write_2\">__this_cpu_write_2</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_generic_to_op\">__this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), =)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_write_4\">__this_cpu_write_4</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_write_4\">__this_cpu_write_4</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_generic_to_op\">__this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), =)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_write_8\">__this_cpu_write_8</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_write_8\">__this_cpu_write_8</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_generic_to_op\">__this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), =)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_write\">__this_cpu_write</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__pcpu_size_call\">__pcpu_size_call</a>(<a class=\"id\" href=\"#__this_cpu_write_\">__this_cpu_write_</a>, (<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_add\">__this_cpu_add</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_add_1\">__this_cpu_add_1</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_add_1\">__this_cpu_add_1</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_generic_to_op\">__this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), +=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_add_2\">__this_cpu_add_2</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_add_2\">__this_cpu_add_2</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_generic_to_op\">__this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), +=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_add_4\">__this_cpu_add_4</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_add_4\">__this_cpu_add_4</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_generic_to_op\">__this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), +=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_add_8\">__this_cpu_add_8</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_add_8\">__this_cpu_add_8</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_generic_to_op\">__this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), +=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_add\">__this_cpu_add</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__pcpu_size_call\">__pcpu_size_call</a>(<a class=\"id\" href=\"#__this_cpu_add_\">__this_cpu_add_</a>, (<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_sub\">__this_cpu_sub</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_sub\">__this_cpu_sub</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_add\">__this_cpu_add</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), -(<a class=\"id\" href=\"#val\">val</a>))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_inc\">__this_cpu_inc</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_inc\">__this_cpu_inc</a>(<a class=\"id\" href=\"#pcp\">pcp</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_add\">__this_cpu_add</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), 1)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_dec\">__this_cpu_dec</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_dec\">__this_cpu_dec</a>(<a class=\"id\" href=\"#pcp\">pcp</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_sub\">__this_cpu_sub</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), 1)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_and\">__this_cpu_and</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_and_1\">__this_cpu_and_1</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_and_1\">__this_cpu_and_1</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_generic_to_op\">__this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), &=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_and_2\">__this_cpu_and_2</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_and_2\">__this_cpu_and_2</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_generic_to_op\">__this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), &=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_and_4\">__this_cpu_and_4</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_and_4\">__this_cpu_and_4</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_generic_to_op\">__this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), &=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_and_8\">__this_cpu_and_8</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_and_8\">__this_cpu_and_8</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_generic_to_op\">__this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), &=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_and\">__this_cpu_and</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__pcpu_size_call\">__pcpu_size_call</a>(<a class=\"id\" href=\"#__this_cpu_and_\">__this_cpu_and_</a>, (<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_or\">__this_cpu_or</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_or_1\">__this_cpu_or_1</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_or_1\">__this_cpu_or_1</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_generic_to_op\">__this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), |=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_or_2\">__this_cpu_or_2</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_or_2\">__this_cpu_or_2</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_generic_to_op\">__this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), |=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_or_4\">__this_cpu_or_4</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_or_4\">__this_cpu_or_4</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_generic_to_op\">__this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), |=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_or_8\">__this_cpu_or_8</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_or_8\">__this_cpu_or_8</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_generic_to_op\">__this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), |=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_or\">__this_cpu_or</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__pcpu_size_call\">__pcpu_size_call</a>(<a class=\"id\" href=\"#__this_cpu_or_\">__this_cpu_or_</a>, (<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_xor\">__this_cpu_xor</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_xor_1\">__this_cpu_xor_1</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_xor_1\">__this_cpu_xor_1</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_generic_to_op\">__this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), ^=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_xor_2\">__this_cpu_xor_2</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_xor_2\">__this_cpu_xor_2</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_generic_to_op\">__this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), ^=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_xor_4\">__this_cpu_xor_4</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_xor_4\">__this_cpu_xor_4</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_generic_to_op\">__this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), ^=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__this_cpu_xor_8\">__this_cpu_xor_8</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_xor_8\">__this_cpu_xor_8</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_generic_to_op\">__this_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), ^=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__this_cpu_xor\">__this_cpu_xor</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__pcpu_size_call\">__pcpu_size_call</a>(<a class=\"id\" href=\"#__this_cpu_xor_\">__this_cpu_xor_</a>, (<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * IRQ safe versions of the per cpu RMW operations. Note that these operations</span>", 
"<span class=\"comment\"> * are *not* safe against modification of the same variable from another</span>", 
"<span class=\"comment\"> * processors (which one gets when using regular atomic operations)</span>", 
"<span class=\"comment\"> . They are guaranteed to be atomic vs. local interrupts and</span>", 
"<span class=\"comment\"> * preemption only.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_generic_to_op\">irqsafe_cpu_generic_to_op</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#op\">op</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#__this_cpu_ptr\">__this_cpu_ptr</a>(&amp;(<a class=\"id\" href=\"#pcp\">pcp</a>)) <a class=\"id\" href=\"#op\">op</a> <a class=\"id\" href=\"#val\">val</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"} while (0)", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_add\">irqsafe_cpu_add</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_add_1\">irqsafe_cpu_add_1</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_add_1\">irqsafe_cpu_add_1</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>) <a class=\"id\" href=\"#irqsafe_cpu_generic_to_op\">irqsafe_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), +=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_add_2\">irqsafe_cpu_add_2</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_add_2\">irqsafe_cpu_add_2</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>) <a class=\"id\" href=\"#irqsafe_cpu_generic_to_op\">irqsafe_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), +=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_add_4\">irqsafe_cpu_add_4</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_add_4\">irqsafe_cpu_add_4</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>) <a class=\"id\" href=\"#irqsafe_cpu_generic_to_op\">irqsafe_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), +=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_add_8\">irqsafe_cpu_add_8</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_add_8\">irqsafe_cpu_add_8</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>) <a class=\"id\" href=\"#irqsafe_cpu_generic_to_op\">irqsafe_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), +=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_add\">irqsafe_cpu_add</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>) <a class=\"id\" href=\"#__pcpu_size_call\">__pcpu_size_call</a>(<a class=\"id\" href=\"#irqsafe_cpu_add_\">irqsafe_cpu_add_</a>, (<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_sub\">irqsafe_cpu_sub</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_sub\">irqsafe_cpu_sub</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#irqsafe_cpu_add\">irqsafe_cpu_add</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), -(<a class=\"id\" href=\"#val\">val</a>))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_inc\">irqsafe_cpu_inc</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_inc\">irqsafe_cpu_inc</a>(<a class=\"id\" href=\"#pcp\">pcp</a>)<span class=\"ts\"/><a class=\"id\" href=\"#irqsafe_cpu_add\">irqsafe_cpu_add</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), 1)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_dec\">irqsafe_cpu_dec</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_dec\">irqsafe_cpu_dec</a>(<a class=\"id\" href=\"#pcp\">pcp</a>)<span class=\"ts\"/><a class=\"id\" href=\"#irqsafe_cpu_sub\">irqsafe_cpu_sub</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), 1)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_and\">irqsafe_cpu_and</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_and_1\">irqsafe_cpu_and_1</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_and_1\">irqsafe_cpu_and_1</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>) <a class=\"id\" href=\"#irqsafe_cpu_generic_to_op\">irqsafe_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), &=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_and_2\">irqsafe_cpu_and_2</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_and_2\">irqsafe_cpu_and_2</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>) <a class=\"id\" href=\"#irqsafe_cpu_generic_to_op\">irqsafe_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), &=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_and_4\">irqsafe_cpu_and_4</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_and_4\">irqsafe_cpu_and_4</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>) <a class=\"id\" href=\"#irqsafe_cpu_generic_to_op\">irqsafe_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), &=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_and_8\">irqsafe_cpu_and_8</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_and_8\">irqsafe_cpu_and_8</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>) <a class=\"id\" href=\"#irqsafe_cpu_generic_to_op\">irqsafe_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), &=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_and\">irqsafe_cpu_and</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>) <a class=\"id\" href=\"#__pcpu_size_call\">__pcpu_size_call</a>(<a class=\"id\" href=\"#irqsafe_cpu_and_\">irqsafe_cpu_and_</a>, (<a class=\"id\" href=\"#val\">val</a>))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_or\">irqsafe_cpu_or</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_or_1\">irqsafe_cpu_or_1</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_or_1\">irqsafe_cpu_or_1</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>) <a class=\"id\" href=\"#irqsafe_cpu_generic_to_op\">irqsafe_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), |=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_or_2\">irqsafe_cpu_or_2</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_or_2\">irqsafe_cpu_or_2</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>) <a class=\"id\" href=\"#irqsafe_cpu_generic_to_op\">irqsafe_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), |=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_or_4\">irqsafe_cpu_or_4</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_or_4\">irqsafe_cpu_or_4</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>) <a class=\"id\" href=\"#irqsafe_cpu_generic_to_op\">irqsafe_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), |=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_or_8\">irqsafe_cpu_or_8</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_or_8\">irqsafe_cpu_or_8</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>) <a class=\"id\" href=\"#irqsafe_cpu_generic_to_op\">irqsafe_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), |=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_or\">irqsafe_cpu_or</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>) <a class=\"id\" href=\"#__pcpu_size_call\">__pcpu_size_call</a>(<a class=\"id\" href=\"#irqsafe_cpu_or_\">irqsafe_cpu_or_</a>, (<a class=\"id\" href=\"#val\">val</a>))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_xor\">irqsafe_cpu_xor</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_xor_1\">irqsafe_cpu_xor_1</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_xor_1\">irqsafe_cpu_xor_1</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>) <a class=\"id\" href=\"#irqsafe_cpu_generic_to_op\">irqsafe_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), ^=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_xor_2\">irqsafe_cpu_xor_2</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_xor_2\">irqsafe_cpu_xor_2</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>) <a class=\"id\" href=\"#irqsafe_cpu_generic_to_op\">irqsafe_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), ^=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_xor_4\">irqsafe_cpu_xor_4</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_xor_4\">irqsafe_cpu_xor_4</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>) <a class=\"id\" href=\"#irqsafe_cpu_generic_to_op\">irqsafe_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), ^=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#irqsafe_cpu_xor_8\">irqsafe_cpu_xor_8</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_xor_8\">irqsafe_cpu_xor_8</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>) <a class=\"id\" href=\"#irqsafe_cpu_generic_to_op\">irqsafe_cpu_generic_to_op</a>((<a class=\"id\" href=\"#pcp\">pcp</a>), (<a class=\"id\" href=\"#val\">val</a>), ^=)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irqsafe_cpu_xor\">irqsafe_cpu_xor</a>(<a class=\"id\" href=\"#pcp\">pcp</a>, <a class=\"id\" href=\"#val\">val</a>) <a class=\"id\" href=\"#__pcpu_size_call\">__pcpu_size_call</a>(<a class=\"id\" href=\"#irqsafe_cpu_xor_\">irqsafe_cpu_xor_</a>, (<a class=\"id\" href=\"#val\">val</a>))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __LINUX_PERCPU_H */</span>", 
];
xr_frag_insert('l/f8/6037799c6835b019815b6388827dad5f2a6761.xr', __xr_tmp);
