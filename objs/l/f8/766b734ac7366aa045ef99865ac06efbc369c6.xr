var __xr_tmp = [
"<span class=\"comment\"> * @cpumask:<span class=\"ts\"/><span class=\"ts\"/>cpumask to indicate for which CPUs this device works</span>", 
"<span class=\"comment\"> * @set_next_event:<span class=\"ts\"/>set next event function</span>", 
"<span class=\"comment\"> * @set_mode:<span class=\"ts\"/><span class=\"ts\"/>set mode function</span>", 
"<span class=\"comment\"> * @event_handler:<span class=\"ts\"/>Assigned by the framework to be called by the low</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>level handler of the event source</span>", 
"<span class=\"comment\"> * @broadcast:<span class=\"ts\"/><span class=\"ts\"/>function to broadcast events</span>", 
"<span class=\"comment\"> * @list:<span class=\"ts\"/><span class=\"ts\"/>list head for the management code</span>", 
"<span class=\"comment\"> * @mode:<span class=\"ts\"/><span class=\"ts\"/>operating mode assigned by the management code</span>", 
"<span class=\"comment\"> * @next_event:<span class=\"ts\"/><span class=\"ts\"/>local storage for the next event in oneshot mode</span>", 
"<span class=\"comment\"> * @retries:<span class=\"ts\"/><span class=\"ts\"/>number of forced programming retries</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> {", 
"<span class=\"ts\"/>const char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#features\">features</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_delta_ns\">max_delta_ns</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_delta_ns\">min_delta_ns</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mult\">mult</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rating\">rating</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cpumask\">cpumask</a><span class=\"ts\"/>*<a class=\"id\" href=\"#cpumask\">cpumask</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#set_next_event\">set_next_event</a>)(unsigned long <a class=\"id\" href=\"#evt\">evt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#set_mode\">set_mode</a>)(enum <a class=\"id\" href=\"#clock_event_mode\">clock_event_mode</a> <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#event_handler\">event_handler</a>)(struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#broadcast\">broadcast</a>)(const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#clock_event_mode\">clock_event_mode</a><span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next_event\">next_event</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retries\">retries</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Calculate a multiplication factor for scaled math, which is used to convert</span>", 
"<span class=\"comment\"> * nanoseconds based values to clock ticks:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * clock_ticks = (nanoseconds * factor) &gt;&gt; shift.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * div_sc is the rearranged equation to calculate a factor from a given clock</span>", 
"<span class=\"comment\"> * ticks / nanoseconds ratio:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * factor = (clock_ticks &lt;&lt; shift) / nanoseconds</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#div_sc\">div_sc</a>(unsigned long <a class=\"id\" href=\"#ticks\">ticks</a>, unsigned long <a class=\"id\" href=\"#nsec\">nsec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#shift\">shift</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint64_t\">uint64_t</a> <a class=\"id\" href=\"#tmp\">tmp</a> = ((<a class=\"id\" href=\"#uint64_t\">uint64_t</a>)<a class=\"id\" href=\"#ticks\">ticks</a>) << <a class=\"id\" href=\"#shift\">shift</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#nsec\">nsec</a>);", 
"<span class=\"ts\"/>return (unsigned long) <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Clock event layer functions */</span>", 
"extern <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#clockevent_delta2ns\">clockevent_delta2ns</a>(unsigned long <a class=\"id\" href=\"#latch\">latch</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#evt\">evt</a>);", 
"extern void <a class=\"id\" href=\"#clockevents_register_device\">clockevents_register_device</a>(struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"extern void <a class=\"id\" href=\"#clockevents_exchange_device\">clockevents_exchange_device</a>(struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#old\">old</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#new\">new</a>);", 
"extern void <a class=\"id\" href=\"#clockevents_set_mode\">clockevents_set_mode</a>(struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> enum <a class=\"id\" href=\"#clock_event_mode\">clock_event_mode</a> <a class=\"id\" href=\"#mode\">mode</a>);", 
"extern int <a class=\"id\" href=\"#clockevents_register_notifier\">clockevents_register_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>);", 
"extern int <a class=\"id\" href=\"#clockevents_program_event\">clockevents_program_event</a>(struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#expires\">expires</a>, <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#now\">now</a>);", 
"", 
"extern void <a class=\"id\" href=\"#clockevents_handle_noop\">clockevents_handle_noop</a>(struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#clockevents_calc_mult_shift\">clockevents_calc_mult_shift</a>(struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#ce\">ce</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#freq\">freq</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#minsec\">minsec</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#clocks_calc_mult_shift\">clocks_calc_mult_shift</a>(&amp;<a class=\"id\" href=\"#ce\">ce</a>-><a class=\"id\" href=\"#mult\">mult</a>, &amp;<a class=\"id\" href=\"#ce\">ce</a>-><a class=\"id\" href=\"#shift\">shift</a>, <a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#freq\">freq</a>, <a class=\"id\" href=\"#minsec\">minsec</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_GENERIC_CLOCKEVENTS\">CONFIG_GENERIC_CLOCKEVENTS</a>", 
"extern void <a class=\"id\" href=\"#clockevents_notify\">clockevents_notify</a>(unsigned long <a class=\"id\" href=\"#reason\">reason</a>, void *<a class=\"id\" href=\"#arg\">arg</a>);", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#clockevents_notify\">clockevents_notify</a>(<a class=\"id\" href=\"#reason\">reason</a>, <a class=\"id\" href=\"#arg\">arg</a>) do { } while (0)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#else <span class=\"comment\">/* CONFIG_GENERIC_CLOCKEVENTS_BUILD */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#clockevents_notify\">clockevents_notify</a>(<a class=\"id\" href=\"#reason\">reason</a>, <a class=\"id\" href=\"#arg\">arg</a>) do { } while (0)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/f8/766b734ac7366aa045ef99865ac06efbc369c6.xr', __xr_tmp);
