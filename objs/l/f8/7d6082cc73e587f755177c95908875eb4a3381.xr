var __xr_tmp = [
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#d_percpu\">d_percpu</a> && !<a class=\"id\" href=\"#once\">once</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#once\">once</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"Could not create debugfs directory 'per_cpu'\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#d_percpu\">d_percpu</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tracing_init_debugfs_percpu\">tracing_init_debugfs_percpu</a>(long <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#d_percpu\">d_percpu</a> = <a class=\"id\" href=\"#tracing_dentry_percpu\">tracing_dentry_percpu</a>();", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#d_cpu\">d_cpu</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* strlen(cpu) + MAX(log10(cpu)) + '\\0' */</span>", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#cpu_dir\">cpu_dir</a>[7];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu\">cpu</a> &gt; 999 || <a class=\"id\" href=\"#cpu\">cpu</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#cpu_dir\">cpu_dir</a>, \"cpu%ld\", <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_cpu\">d_cpu</a> = <a class=\"id\" href=\"#debugfs_create_dir\">debugfs_create_dir</a>(<a class=\"id\" href=\"#cpu_dir\">cpu_dir</a>, <a class=\"id\" href=\"#d_percpu\">d_percpu</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#d_cpu\">d_cpu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"Could not create debugfs '%s' entry\\n\", <a class=\"id\" href=\"#cpu_dir\">cpu_dir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* per cpu trace_pipe */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"trace_pipe\", 0444, <a class=\"id\" href=\"#d_cpu\">d_cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(void *) <a class=\"id\" href=\"#cpu\">cpu</a>, &amp;<a class=\"id\" href=\"#tracing_pipe_fops\">tracing_pipe_fops</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* per cpu trace */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"trace\", 0644, <a class=\"id\" href=\"#d_cpu\">d_cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(void *) <a class=\"id\" href=\"#cpu\">cpu</a>, &amp;<a class=\"id\" href=\"#tracing_fops\">tracing_fops</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"trace_pipe_raw\", 0444, <a class=\"id\" href=\"#d_cpu\">d_cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(void *) <a class=\"id\" href=\"#cpu\">cpu</a>, &amp;<a class=\"id\" href=\"#tracing_buffers_fops\">tracing_buffers_fops</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"stats\", 0444, <a class=\"id\" href=\"#d_cpu\">d_cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(void *) <a class=\"id\" href=\"#cpu\">cpu</a>, &amp;<a class=\"id\" href=\"#tracing_stats_fops\">tracing_stats_fops</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FTRACE_SELFTEST\">CONFIG_FTRACE_SELFTEST</a>", 
"<span class=\"comment\">/* Let selftest have access to static functions in this file */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> \"trace_selftest.c\"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"struct <a class=\"id\" href=\"#trace_option_dentry\">trace_option_dentry</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tracer_opt\">tracer_opt</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#opt\">opt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tracer_flags\">tracer_flags</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#entry\">entry</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#trace_options_read\">trace_options_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#cnt\">cnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_option_dentry\">trace_option_dentry</a> *<a class=\"id\" href=\"#topt\">topt</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#topt\">topt</a>-><a class=\"id\" href=\"#flags\">flags</a>-><a class=\"id\" href=\"#val\">val</a> &amp; <a class=\"id\" href=\"#topt\">topt</a>-><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#bit\">bit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = \"1\\n\";", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = \"0\\n\";", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#simple_read_from_buffer\">simple_read_from_buffer</a>(<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#buf\">buf</a>, 2);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#trace_options_write\">trace_options_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#cnt\">cnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_option_dentry\">trace_option_dentry</a> *<a class=\"id\" href=\"#topt\">topt</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[64];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cnt\">cnt</a> >= sizeof(<a class=\"id\" href=\"#buf\">buf</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#cnt\">cnt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#strict_strtoul\">strict_strtoul</a>(<a class=\"id\" href=\"#buf\">buf</a>, 10, &amp;<a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> != 0 && <a class=\"id\" href=\"#val\">val</a> != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (!!(<a class=\"id\" href=\"#topt\">topt</a>-><a class=\"id\" href=\"#flags\">flags</a>-><a class=\"id\" href=\"#val\">val</a> &amp; <a class=\"id\" href=\"#topt\">topt</a>-><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#bit\">bit</a>) != <a class=\"id\" href=\"#val\">val</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#trace_types_lock\">trace_types_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__set_tracer_option\">__set_tracer_option</a>(<a class=\"id\" href=\"#current_trace\">current_trace</a>, <a class=\"id\" href=\"#topt\">topt</a>-><a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#topt\">topt</a>-><a class=\"id\" href=\"#opt\">opt</a>, !<a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#trace_types_lock\">trace_types_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ppos\">ppos</a> += <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"}", 
"", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#trace_options_fops\">trace_options_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#tracing_open_generic\">tracing_open_generic</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#trace_options_read\">trace_options_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a> = <a class=\"id\" href=\"#trace_options_write\">trace_options_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_llseek\">generic_file_llseek</a>,", 
"};", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#trace_options_core_read\">trace_options_core_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#cnt\">cnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#index\">index</a> = (long)<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#trace_flags\">trace_flags</a> &amp; (1 << <a class=\"id\" href=\"#index\">index</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = \"1\\n\";", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = \"0\\n\";", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#simple_read_from_buffer\">simple_read_from_buffer</a>(<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#buf\">buf</a>, 2);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#trace_options_core_write\">trace_options_core_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#cnt\">cnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#index\">index</a> = (long)<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[64];", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cnt\">cnt</a> >= sizeof(<a class=\"id\" href=\"#buf\">buf</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#cnt\">cnt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#strict_strtoul\">strict_strtoul</a>(<a class=\"id\" href=\"#buf\">buf</a>, 10, &amp;<a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> != 0 && <a class=\"id\" href=\"#val\">val</a> != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_tracer_flags\">set_tracer_flags</a>(1 << <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ppos\">ppos</a> += <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#trace_options_core_fops\">trace_options_core_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#tracing_open_generic\">tracing_open_generic</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#trace_options_core_read\">trace_options_core_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a> = <a class=\"id\" href=\"#trace_options_core_write\">trace_options_core_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a> = <a class=\"id\" href=\"#generic_file_llseek\">generic_file_llseek</a>,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(const char *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#mode_t\">mode_t</a> <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#parent\">parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> *<a class=\"id\" href=\"#fops\">fops</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#debugfs_create_file\">debugfs_create_file</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#fops\">fops</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"Could not create debugfs '%s' entry\\n\", <a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#trace_options_init_dentry\">trace_options_init_dentry</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#d_tracer\">d_tracer</a>;", 
"<span class=\"ts\"/>static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#t_options\">t_options</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#t_options\">t_options</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#t_options\">t_options</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_tracer\">d_tracer</a> = <a class=\"id\" href=\"#tracing_init_dentry\">tracing_init_dentry</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#d_tracer\">d_tracer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t_options\">t_options</a> = <a class=\"id\" href=\"#debugfs_create_dir\">debugfs_create_dir</a>(\"options\", <a class=\"id\" href=\"#d_tracer\">d_tracer</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#t_options\">t_options</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"Could not create debugfs directory 'options'\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#t_options\">t_options</a>;", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#create_trace_option_file\">create_trace_option_file</a>(struct <a class=\"id\" href=\"#trace_option_dentry\">trace_option_dentry</a> *<a class=\"id\" href=\"#topt\">topt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#tracer_flags\">tracer_flags</a> *<a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#tracer_opt\">tracer_opt</a> *<a class=\"id\" href=\"#opt\">opt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#t_options\">t_options</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t_options\">t_options</a> = <a class=\"id\" href=\"#trace_options_init_dentry\">trace_options_init_dentry</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#t_options\">t_options</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#topt\">topt</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#topt\">topt</a>-><a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#opt\">opt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#topt\">topt</a>-><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#name\">name</a>, 0644, <a class=\"id\" href=\"#t_options\">t_options</a>, <a class=\"id\" href=\"#topt\">topt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#trace_options_fops\">trace_options_fops</a>);", 
"", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#trace_option_dentry\">trace_option_dentry</a> *", 
"<a class=\"id\" href=\"#create_trace_option_files\">create_trace_option_files</a>(struct <a class=\"id\" href=\"#tracer\">tracer</a> *<a class=\"id\" href=\"#tracer\">tracer</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_option_dentry\">trace_option_dentry</a> *<a class=\"id\" href=\"#topts\">topts</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tracer_flags\">tracer_flags</a> *<a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tracer_opt\">tracer_opt</a> *<a class=\"id\" href=\"#opts\">opts</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tracer\">tracer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#tracer\">tracer</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#flags\">flags</a> || !<a class=\"id\" href=\"#flags\">flags</a>-><a class=\"id\" href=\"#opts\">opts</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a> = <a class=\"id\" href=\"#flags\">flags</a>-><a class=\"id\" href=\"#opts\">opts</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#opts\">opts</a>[<a class=\"id\" href=\"#cnt\">cnt</a>].<a class=\"id\" href=\"#name\">name</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#topts\">topts</a> = <a class=\"id\" href=\"#kcalloc\">kcalloc</a>(<a class=\"id\" href=\"#cnt\">cnt</a> + 1, sizeof(*<a class=\"id\" href=\"#topts\">topts</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#topts\">topts</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#opts\">opts</a>[<a class=\"id\" href=\"#cnt\">cnt</a>].<a class=\"id\" href=\"#name\">name</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#create_trace_option_file\">create_trace_option_file</a>(&amp;<a class=\"id\" href=\"#topts\">topts</a>[<a class=\"id\" href=\"#cnt\">cnt</a>], <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#opts\">opts</a>[<a class=\"id\" href=\"#cnt\">cnt</a>]);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#topts\">topts</a>;", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#destroy_trace_option_files\">destroy_trace_option_files</a>(struct <a class=\"id\" href=\"#trace_option_dentry\">trace_option_dentry</a> *<a class=\"id\" href=\"#topts\">topts</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#topts\">topts</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#topts\">topts</a>[<a class=\"id\" href=\"#cnt\">cnt</a>].<a class=\"id\" href=\"#opt\">opt</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#topts\">topts</a>[<a class=\"id\" href=\"#cnt\">cnt</a>].<a class=\"id\" href=\"#entry\">entry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#debugfs_remove\">debugfs_remove</a>(<a class=\"id\" href=\"#topts\">topts</a>[<a class=\"id\" href=\"#cnt\">cnt</a>].<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#topts\">topts</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *", 
"<a class=\"id\" href=\"#create_trace_option_core_file\">create_trace_option_core_file</a>(const char *<a class=\"id\" href=\"#option\">option</a>, long <a class=\"id\" href=\"#index\">index</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#t_options\">t_options</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t_options\">t_options</a> = <a class=\"id\" href=\"#trace_options_init_dentry\">trace_options_init_dentry</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#t_options\">t_options</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(<a class=\"id\" href=\"#option\">option</a>, 0644, <a class=\"id\" href=\"#t_options\">t_options</a>, (void *)<a class=\"id\" href=\"#index\">index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#trace_options_core_fops\">trace_options_core_fops</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#__init\">__init</a> void <a class=\"id\" href=\"#create_trace_options_dir\">create_trace_options_dir</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#t_options\">t_options</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t_options\">t_options</a> = <a class=\"id\" href=\"#trace_options_init_dentry\">trace_options_init_dentry</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#t_options\">t_options</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#trace_options\">trace_options</a>[<a class=\"id\" href=\"#i\">i</a>]; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#create_trace_option_core_file\">create_trace_option_core_file</a>(<a class=\"id\" href=\"#trace_options\">trace_options</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#i\">i</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#__init\">__init</a> int <a class=\"id\" href=\"#tracer_init_debugfs\">tracer_init_debugfs</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#d_tracer\">d_tracer</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_access_lock_init\">trace_access_lock_init</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_tracer\">d_tracer</a> = <a class=\"id\" href=\"#tracing_init_dentry\">tracing_init_dentry</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"tracing_enabled\", 0644, <a class=\"id\" href=\"#d_tracer\">d_tracer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#global_trace\">global_trace</a>, &amp;<a class=\"id\" href=\"#tracing_ctrl_fops\">tracing_ctrl_fops</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"trace_options\", 0644, <a class=\"id\" href=\"#d_tracer\">d_tracer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#tracing_iter_fops\">tracing_iter_fops</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"tracing_cpumask\", 0644, <a class=\"id\" href=\"#d_tracer\">d_tracer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#tracing_cpumask_fops\">tracing_cpumask_fops</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"trace\", 0644, <a class=\"id\" href=\"#d_tracer\">d_tracer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(void *) <a class=\"id\" href=\"#TRACE_PIPE_ALL_CPU\">TRACE_PIPE_ALL_CPU</a>, &amp;<a class=\"id\" href=\"#tracing_fops\">tracing_fops</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"available_tracers\", 0444, <a class=\"id\" href=\"#d_tracer\">d_tracer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#global_trace\">global_trace</a>, &amp;<a class=\"id\" href=\"#show_traces_fops\">show_traces_fops</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"current_tracer\", 0644, <a class=\"id\" href=\"#d_tracer\">d_tracer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#global_trace\">global_trace</a>, &amp;<a class=\"id\" href=\"#set_tracer_fops\">set_tracer_fops</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TRACER_MAX_TRACE\">CONFIG_TRACER_MAX_TRACE</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"tracing_max_latency\", 0644, <a class=\"id\" href=\"#d_tracer\">d_tracer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#tracing_max_latency\">tracing_max_latency</a>, &amp;<a class=\"id\" href=\"#tracing_max_lat_fops\">tracing_max_lat_fops</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"tracing_thresh\", 0644, <a class=\"id\" href=\"#d_tracer\">d_tracer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#tracing_thresh\">tracing_thresh</a>, &amp;<a class=\"id\" href=\"#tracing_max_lat_fops\">tracing_max_lat_fops</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"README\", 0444, <a class=\"id\" href=\"#d_tracer\">d_tracer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#tracing_readme_fops\">tracing_readme_fops</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"trace_pipe\", 0444, <a class=\"id\" href=\"#d_tracer\">d_tracer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(void *) <a class=\"id\" href=\"#TRACE_PIPE_ALL_CPU\">TRACE_PIPE_ALL_CPU</a>, &amp;<a class=\"id\" href=\"#tracing_pipe_fops\">tracing_pipe_fops</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"buffer_size_kb\", 0644, <a class=\"id\" href=\"#d_tracer\">d_tracer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#global_trace\">global_trace</a>, &amp;<a class=\"id\" href=\"#tracing_entries_fops\">tracing_entries_fops</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"trace_marker\", 0220, <a class=\"id\" href=\"#d_tracer\">d_tracer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#tracing_mark_fops\">tracing_mark_fops</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"saved_cmdlines\", 0444, <a class=\"id\" href=\"#d_tracer\">d_tracer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#tracing_saved_cmdlines_fops\">tracing_saved_cmdlines_fops</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"trace_clock\", 0644, <a class=\"id\" href=\"#d_tracer\">d_tracer</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#trace_clock_fops\">trace_clock_fops</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DYNAMIC_FTRACE\">CONFIG_DYNAMIC_FTRACE</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"dyn_ftrace_total_info\", 0444, <a class=\"id\" href=\"#d_tracer\">d_tracer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#ftrace_update_tot_cnt\">ftrace_update_tot_cnt</a>, &amp;<a class=\"id\" href=\"#tracing_dyn_info_fops\">tracing_dyn_info_fops</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#create_trace_options_dir\">create_trace_options_dir</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_tracing_cpu\">for_each_tracing_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tracing_init_debugfs_percpu\">tracing_init_debugfs_percpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#trace_panic_handler\">trace_panic_handler</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#this\">this</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#event\">event</a>, void *<a class=\"id\" href=\"#unused\">unused</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ftrace_dump_on_oops\">ftrace_dump_on_oops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ftrace_dump\">ftrace_dump</a>(<a class=\"id\" href=\"#ftrace_dump_on_oops\">ftrace_dump_on_oops</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> <a class=\"id\" href=\"#trace_panic_notifier\">trace_panic_notifier</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#notifier_call\">notifier_call</a>  = <a class=\"id\" href=\"#trace_panic_handler\">trace_panic_handler</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a>           = <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#priority\">priority</a>       = 150   <span class=\"comment\">/* priority: INT_MAX &gt;= x &gt;= 0 */</span>", 
"};", 
"", 
"static int <a class=\"id\" href=\"#trace_die_handler\">trace_die_handler</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#self\">self</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#val\">val</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#val\">val</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DIE_OOPS\">DIE_OOPS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ftrace_dump_on_oops\">ftrace_dump_on_oops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ftrace_dump\">ftrace_dump</a>(<a class=\"id\" href=\"#ftrace_dump_on_oops\">ftrace_dump_on_oops</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> <a class=\"id\" href=\"#trace_die_notifier\">trace_die_notifier</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#notifier_call\">notifier_call</a> = <a class=\"id\" href=\"#trace_die_handler\">trace_die_handler</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#priority\">priority</a> = 200", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * printk is set to max of 1024, we really don't need it that big.</span>", 
"<span class=\"comment\"> * Nothing should be printing 1000 characters anyway.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TRACE_MAX_PRINT\">TRACE_MAX_PRINT</a><span class=\"ts\"/><span class=\"ts\"/>1000", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Define here KERN_TRACE so that we have one place to modify</span>", 
"<span class=\"comment\"> * it if we decide to change what log level the ftrace dump</span>", 
"<span class=\"comment\"> * should be at.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KERN_TRACE\">KERN_TRACE</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#KERN_EMERG\">KERN_EMERG</a>", 
"", 
"void", 
"<a class=\"id\" href=\"#trace_printk_seq\">trace_printk_seq</a>(struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Probably should print a warning here. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a> >= 1000)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a> = 1000;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* should be zero ended, but we are paranoid. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a>] = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_TRACE\">KERN_TRACE</a> \"%s\", <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#buffer\">buffer</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_seq_init\">trace_seq_init</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#trace_init_global_iter\">trace_init_global_iter</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#tr\">tr</a> = &amp;<a class=\"id\" href=\"#global_trace\">global_trace</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#trace\">trace</a> = <a class=\"id\" href=\"#current_trace\">current_trace</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#cpu_file\">cpu_file</a> = <a class=\"id\" href=\"#TRACE_PIPE_ALL_CPU\">TRACE_PIPE_ALL_CPU</a>;", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#__ftrace_dump\">__ftrace_dump</a>(<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#disable_tracing\">disable_tracing</a>, enum <a class=\"id\" href=\"#ftrace_dump_mode\">ftrace_dump_mode</a> <a class=\"id\" href=\"#oops_dump_mode\">oops_dump_mode</a>)", 
"{", 
"<span class=\"ts\"/>static <a class=\"id\" href=\"#arch_spinlock_t\">arch_spinlock_t</a> <a class=\"id\" href=\"#ftrace_dump_lock\">ftrace_dump_lock</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#arch_spinlock_t\">arch_spinlock_t</a>)<a class=\"id\" href=\"#__ARCH_SPIN_LOCK_UNLOCKED\">__ARCH_SPIN_LOCK_UNLOCKED</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* use static because iter can be a bit big for the stack */</span>", 
"<span class=\"ts\"/>static struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> <a class=\"id\" href=\"#iter\">iter</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#old_userobj\">old_userobj</a>;", 
"<span class=\"ts\"/>static int <a class=\"id\" href=\"#dump_ran\">dump_ran</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cnt\">cnt</a> = 0, <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* only one dump */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arch_spin_lock\">arch_spin_lock</a>(&amp;<a class=\"id\" href=\"#ftrace_dump_lock\">ftrace_dump_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dump_ran\">dump_ran</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dump_ran\">dump_ran</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tracing_off\">tracing_off</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#disable_tracing\">disable_tracing</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ftrace_kill\">ftrace_kill</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_init_global_iter\">trace_init_global_iter</a>(&amp;<a class=\"id\" href=\"#iter\">iter</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_tracing_cpu\">for_each_tracing_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#iter\">iter</a>.<a class=\"id\" href=\"#tr\">tr</a>-><a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#cpu\">cpu</a>]-><a class=\"id\" href=\"#disabled\">disabled</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_userobj\">old_userobj</a> = <a class=\"id\" href=\"#trace_flags\">trace_flags</a> &amp; <a class=\"id\" href=\"#TRACE_ITER_SYM_USEROBJ\">TRACE_ITER_SYM_USEROBJ</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* don't look at user memory in panic mode */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_flags\">trace_flags</a> &= ~<a class=\"id\" href=\"#TRACE_ITER_SYM_USEROBJ\">TRACE_ITER_SYM_USEROBJ</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Simulate the iterator */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>.<a class=\"id\" href=\"#tr\">tr</a> = &amp;<a class=\"id\" href=\"#global_trace\">global_trace</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>.<a class=\"id\" href=\"#trace\">trace</a> = <a class=\"id\" href=\"#current_trace\">current_trace</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#oops_dump_mode\">oops_dump_mode</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DUMP_ALL\">DUMP_ALL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>.<a class=\"id\" href=\"#cpu_file\">cpu_file</a> = <a class=\"id\" href=\"#TRACE_PIPE_ALL_CPU\">TRACE_PIPE_ALL_CPU</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DUMP_ORIG\">DUMP_ORIG</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>.<a class=\"id\" href=\"#cpu_file\">cpu_file</a> = <a class=\"id\" href=\"#raw_smp_processor_id\">raw_smp_processor_id</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DUMP_NONE\">DUMP_NONE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_enable\">out_enable</a>;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_TRACE\">KERN_TRACE</a> \"Bad dumping mode, switching to all CPUs dump\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>.<a class=\"id\" href=\"#cpu_file\">cpu_file</a> = <a class=\"id\" href=\"#TRACE_PIPE_ALL_CPU\">TRACE_PIPE_ALL_CPU</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_TRACE\">KERN_TRACE</a> \"Dumping ftrace buffer:\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We need to stop all tracing on all CPUS to read the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the next buffer. This is a bit expensive, but is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * not done often. We fill all what we can read,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and then release the locks again.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#trace_empty\">trace_empty</a>(&amp;<a class=\"id\" href=\"#iter\">iter</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cnt\">cnt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_TRACE\">KERN_TRACE</a> \"---------------------------------\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cnt\">cnt</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* reset all but tr, trace, and overruns */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#iter\">iter</a>.<a class=\"id\" href=\"#seq\">seq</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/>       sizeof(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a>, <a class=\"id\" href=\"#seq\">seq</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>.<a class=\"id\" href=\"#iter_flags\">iter_flags</a> |= <a class=\"id\" href=\"#TRACE_FILE_LAT_FMT\">TRACE_FILE_LAT_FMT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>.<a class=\"id\" href=\"#pos\">pos</a> = -1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#trace_find_next_entry_inc\">trace_find_next_entry_inc</a>(&amp;<a class=\"id\" href=\"#iter\">iter</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#print_trace_line\">print_trace_line</a>(&amp;<a class=\"id\" href=\"#iter\">iter</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != <a class=\"id\" href=\"#TRACE_TYPE_NO_CONSUME\">TRACE_TYPE_NO_CONSUME</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_consume\">trace_consume</a>(&amp;<a class=\"id\" href=\"#iter\">iter</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_printk_seq\">trace_printk_seq</a>(&amp;<a class=\"id\" href=\"#iter\">iter</a>.<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cnt\">cnt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_TRACE\">KERN_TRACE</a> \"   (ftrace buffer empty)\\n\");", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_TRACE\">KERN_TRACE</a> \"---------------------------------\\n\");", 
"", 
" <a class=\"id\" href=\"#out_enable\">out_enable</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* Re-enable tracing if requested */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#disable_tracing\">disable_tracing</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_flags\">trace_flags</a> |= <a class=\"id\" href=\"#old_userobj\">old_userobj</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_tracing_cpu\">for_each_tracing_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#iter\">iter</a>.<a class=\"id\" href=\"#tr\">tr</a>-><a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#cpu\">cpu</a>]-><a class=\"id\" href=\"#disabled\">disabled</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tracing_on\">tracing_on</a>();", 
"<span class=\"ts\"/>}", 
"", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arch_spin_unlock\">arch_spin_unlock</a>(&amp;<a class=\"id\" href=\"#ftrace_dump_lock\">ftrace_dump_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<span class=\"comment\">/* By default: disable tracing after the dump */</span>", 
"void <a class=\"id\" href=\"#ftrace_dump\">ftrace_dump</a>(enum <a class=\"id\" href=\"#ftrace_dump_mode\">ftrace_dump_mode</a> <a class=\"id\" href=\"#oops_dump_mode\">oops_dump_mode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ftrace_dump\">__ftrace_dump</a>(<a class=\"id\" href=\"#true\">true</a>, <a class=\"id\" href=\"#oops_dump_mode\">oops_dump_mode</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#__init\">__init</a> static int <a class=\"id\" href=\"#tracer_alloc_buffers\">tracer_alloc_buffers</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ring_buf_size\">ring_buf_size</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#alloc_cpumask_var\">alloc_cpumask_var</a>(&amp;<a class=\"id\" href=\"#tracing_buffer_mask\">tracing_buffer_mask</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#alloc_cpumask_var\">alloc_cpumask_var</a>(&amp;<a class=\"id\" href=\"#tracing_cpumask\">tracing_cpumask</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_buffer_mask\">out_free_buffer_mask</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* To save memory, keep the ring buffer size to its minimum */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ring_buffer_expanded\">ring_buffer_expanded</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ring_buf_size\">ring_buf_size</a> = <a class=\"id\" href=\"#trace_buf_size\">trace_buf_size</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ring_buf_size\">ring_buf_size</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_copy\">cpumask_copy</a>(<a class=\"id\" href=\"#tracing_buffer_mask\">tracing_buffer_mask</a>, <a class=\"id\" href=\"#cpu_possible_mask\">cpu_possible_mask</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_copy\">cpumask_copy</a>(<a class=\"id\" href=\"#tracing_cpumask\">tracing_cpumask</a>, <a class=\"id\" href=\"#cpu_all_mask\">cpu_all_mask</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* TODO: make the number of buffers hot pluggable with CPUS */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#global_trace\">global_trace</a>.<a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#ring_buffer_alloc\">ring_buffer_alloc</a>(<a class=\"id\" href=\"#ring_buf_size\">ring_buf_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#TRACE_BUFFER_FLAGS\">TRACE_BUFFER_FLAGS</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#global_trace\">global_trace</a>.<a class=\"id\" href=\"#buffer\">buffer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"tracer: failed to allocate ring buffer!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_cpumask\">out_free_cpumask</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#global_trace\">global_trace</a>.<a class=\"id\" href=\"#entries\">entries</a> = <a class=\"id\" href=\"#ring_buffer_size\">ring_buffer_size</a>(<a class=\"id\" href=\"#global_trace\">global_trace</a>.<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TRACER_MAX_TRACE\">CONFIG_TRACER_MAX_TRACE</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_tr\">max_tr</a>.<a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#ring_buffer_alloc\">ring_buffer_alloc</a>(1, <a class=\"id\" href=\"#TRACE_BUFFER_FLAGS\">TRACE_BUFFER_FLAGS</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#max_tr\">max_tr</a>.<a class=\"id\" href=\"#buffer\">buffer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"tracer: failed to allocate max ring buffer!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ring_buffer_free\">ring_buffer_free</a>(<a class=\"id\" href=\"#global_trace\">global_trace</a>.<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_cpumask\">out_free_cpumask</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_tr\">max_tr</a>.<a class=\"id\" href=\"#entries\">entries</a> = 1;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Allocate the first page for all buffers */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_tracing_cpu\">for_each_tracing_cpu</a>(<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#global_trace\">global_trace</a>.<a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#i\">i</a>] = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#global_trace_cpu\">global_trace_cpu</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_tr\">max_tr</a>.<a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#i\">i</a>] = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#max_tr_data\">max_tr_data</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_init_cmdlines\">trace_init_cmdlines</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#register_tracer\">register_tracer</a>(&amp;<a class=\"id\" href=\"#nop_trace\">nop_trace</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current_trace\">current_trace</a> = &amp;<a class=\"id\" href=\"#nop_trace\">nop_trace</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* All seems OK, enable tracing */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tracing_disabled\">tracing_disabled</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_notifier_chain_register\">atomic_notifier_chain_register</a>(&amp;<a class=\"id\" href=\"#panic_notifier_list\">panic_notifier_list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#trace_panic_notifier\">trace_panic_notifier</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#register_die_notifier\">register_die_notifier</a>(&amp;<a class=\"id\" href=\"#trace_die_notifier\">trace_die_notifier</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out_free_cpumask\">out_free_cpumask</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_cpumask_var\">free_cpumask_var</a>(<a class=\"id\" href=\"#tracing_cpumask\">tracing_cpumask</a>);", 
"<a class=\"id\" href=\"#out_free_buffer_mask\">out_free_buffer_mask</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_cpumask_var\">free_cpumask_var</a>(<a class=\"id\" href=\"#tracing_buffer_mask\">tracing_buffer_mask</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#__init\">__init</a> static int <a class=\"id\" href=\"#clear_boot_tracer\">clear_boot_tracer</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The default tracer at boot buffer is an init section.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This function is called in lateinit. If we did not</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * find the boot tracer, then clear it out, to prevent</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * later registration from accessing the buffer that is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * about to be freed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#default_bootup_tracer\">default_bootup_tracer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"ftrace bootup tracer '%s' not registered.\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#default_bootup_tracer\">default_bootup_tracer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#default_bootup_tracer\">default_bootup_tracer</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#early_initcall\">early_initcall</a>(<a class=\"id\" href=\"#tracer_alloc_buffers\">tracer_alloc_buffers</a>);", 
"<a class=\"id\" href=\"#fs_initcall\">fs_initcall</a>(<a class=\"id\" href=\"#tracer_init_debugfs\">tracer_init_debugfs</a>);", 
"<a class=\"id\" href=\"#late_initcall\">late_initcall</a>(<a class=\"id\" href=\"#clear_boot_tracer\">clear_boot_tracer</a>);", 
];
xr_frag_insert('l/f8/7d6082cc73e587f755177c95908875eb4a3381.xr', __xr_tmp);
