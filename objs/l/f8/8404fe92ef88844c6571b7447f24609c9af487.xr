var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Intel IO-APIC support for multi-Pentium hosts.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Copyright (C) 1997, 1998, 1999, 2000, 2009 Ingo Molnar, Hajnalka Szabo</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Many thanks to Stig Venaas for trying out countless experimental</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>patches and reporting/debugging problems patiently!</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(c) 1999, Multiple IO-APIC support, developed by</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Ken-ichi Yaku &lt;yaku@css1.kbnes.nec.co.jp&gt; and</span>", 
"<span class=\"comment\"> *      Hidemi Kishimoto &lt;kisimoto@css1.kbnes.nec.co.jp&gt;,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>further tested and cleaned up by Zach Brown &lt;zab@redhat.com&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and Ingo Molnar &lt;mingo@redhat.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Fixes</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Maciej W. Rozycki<span class=\"ts\"/>:<span class=\"ts\"/>Bits for genuine 82489DX APICs;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>thanks to Eric Gilmore</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>and Rolf G. Tews</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for testing these extensively</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Paul Diefenbaugh<span class=\"ts\"/>:<span class=\"ts\"/>Added full ACPI support</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mc146818rtc\">mc146818rtc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compiler\">compiler</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#msi\">msi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#htirq\">htirq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#freezer\">freezer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kthread\">kthread</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jiffies\">jiffies</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"comment\">/* time_after() */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ACPI\">CONFIG_ACPI</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi_bus\">acpi_bus</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bootmem\">bootmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dmar\">dmar</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hpet\">hpet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#idle\">idle</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#desc\">desc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#proto\">proto</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#dma\">dma</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#i8259\">i8259</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#nmi\">nmi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#msidef\">msidef</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#hypertransport\">hypertransport</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#setup\">setup</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#irq_remapping\">irq_remapping</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#hpet\">hpet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#hw_irq\">hw_irq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#apic\">apic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__apicdebuginit\">__apicdebuginit</a>(<a class=\"id\" href=\"#type\">type</a>) static <a class=\"id\" href=\"#type\">type</a> <a class=\"id\" href=\"#__init\">__init</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#for_each_irq_pin\">for_each_irq_pin</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#head\">head</a>) \\", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#head\">head</a>; <a class=\"id\" href=\"#entry\">entry</a>; <a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#next\">next</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *      Is the SiS APIC rmw bug present ?</span>", 
"<span class=\"comment\"> *      -1 = don't know, 0 = no, 1 = yes</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#sis_apic_bug\">sis_apic_bug</a> = -1;", 
"", 
"static <a class=\"id\" href=\"#DEFINE_RAW_SPINLOCK\">DEFINE_RAW_SPINLOCK</a>(<a class=\"id\" href=\"#ioapic_lock\">ioapic_lock</a>);", 
"static <a class=\"id\" href=\"#DEFINE_RAW_SPINLOCK\">DEFINE_RAW_SPINLOCK</a>(<a class=\"id\" href=\"#vector_lock\">vector_lock</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * # of IRQ routing registers</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#nr_ioapic_registers\">nr_ioapic_registers</a>[<a class=\"id\" href=\"#MAX_IO_APICS\">MAX_IO_APICS</a>];", 
"", 
"<span class=\"comment\">/* I/O APIC entries */</span>", 
"struct <a class=\"id\" href=\"#mpc_ioapic\">mpc_ioapic</a> <a class=\"id\" href=\"#mp_ioapics\">mp_ioapics</a>[<a class=\"id\" href=\"#MAX_IO_APICS\">MAX_IO_APICS</a>];", 
"int <a class=\"id\" href=\"#nr_ioapics\">nr_ioapics</a>;", 
"", 
"<span class=\"comment\">/* IO APIC gsi routing info */</span>", 
"struct <a class=\"id\" href=\"#mp_ioapic_gsi\">mp_ioapic_gsi</a>  <a class=\"id\" href=\"#mp_gsi_routing\">mp_gsi_routing</a>[<a class=\"id\" href=\"#MAX_IO_APICS\">MAX_IO_APICS</a>];", 
"", 
"<span class=\"comment\">/* The one past the highest gsi number used */</span>", 
"<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#gsi_top\">gsi_top</a>;", 
"", 
"<span class=\"comment\">/* MP IRQ source entries */</span>", 
"struct <a class=\"id\" href=\"#mpc_intsrc\">mpc_intsrc</a> <a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#MAX_IRQ_SOURCES\">MAX_IRQ_SOURCES</a>];", 
"", 
"<span class=\"comment\">/* # of MP IRQ source entries */</span>", 
"int <a class=\"id\" href=\"#mp_irq_entries\">mp_irq_entries</a>;", 
"", 
"<span class=\"comment\">/* GSI interrupts */</span>", 
"static int <a class=\"id\" href=\"#nr_irqs_gsi\">nr_irqs_gsi</a> = <a class=\"id\" href=\"#NR_IRQS_LEGACY\">NR_IRQS_LEGACY</a>;", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a> (<a class=\"id\" href=\"#CONFIG_MCA\">CONFIG_MCA</a>) || <a class=\"id\" href=\"#defined\">defined</a> (<a class=\"id\" href=\"#CONFIG_EISA\">CONFIG_EISA</a>)", 
"int <a class=\"id\" href=\"#mp_bus_id_to_type\">mp_bus_id_to_type</a>[<a class=\"id\" href=\"#MAX_MP_BUSSES\">MAX_MP_BUSSES</a>];", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<a class=\"id\" href=\"#DECLARE_BITMAP\">DECLARE_BITMAP</a>(<a class=\"id\" href=\"#mp_bus_not_pci\">mp_bus_not_pci</a>, <a class=\"id\" href=\"#MAX_MP_BUSSES\">MAX_MP_BUSSES</a>);", 
"", 
"int <a class=\"id\" href=\"#skip_ioapic_setup\">skip_ioapic_setup</a>;", 
"", 
"void <a class=\"id\" href=\"#arch_disable_smp_support\">arch_disable_smp_support</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCI\">CONFIG_PCI</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#noioapicquirk\">noioapicquirk</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#noioapicreroute\">noioapicreroute</a> = -1;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skip_ioapic_setup\">skip_ioapic_setup</a> = 1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#parse_noapic\">parse_noapic</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* disable IO-APIC */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arch_disable_smp_support\">arch_disable_smp_support</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#early_param\">early_param</a>(\"noapic\", <a class=\"id\" href=\"#parse_noapic\">parse_noapic</a>);", 
"", 
"struct <a class=\"id\" href=\"#irq_pin_list\">irq_pin_list</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#pin\">pin</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_pin_list\">irq_pin_list</a> *<a class=\"id\" href=\"#next\">next</a>;", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#irq_pin_list\">irq_pin_list</a> *<a class=\"id\" href=\"#get_one_free_irq_2_pin\">get_one_free_irq_2_pin</a>(int <a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_pin_list\">irq_pin_list</a> *<a class=\"id\" href=\"#pin\">pin</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pin\">pin</a> = <a class=\"id\" href=\"#kzalloc_node\">kzalloc_node</a>(sizeof(*<a class=\"id\" href=\"#pin\">pin</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pin\">pin</a>;", 
"}", 
"", 
"<span class=\"comment\">/* irq_cfg is indexed by the sum of all RTEs in all I/O APICs. */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SPARSE_IRQ\">CONFIG_SPARSE_IRQ</a>", 
"static struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> <a class=\"id\" href=\"#irq_cfgx\">irq_cfgx</a>[<a class=\"id\" href=\"#NR_IRQS_LEGACY\">NR_IRQS_LEGACY</a>];", 
"#else", 
"static struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> <a class=\"id\" href=\"#irq_cfgx\">irq_cfgx</a>[<a class=\"id\" href=\"#NR_IRQS\">NR_IRQS</a>];", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#arch_early_irq_init\">arch_early_irq_init</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#legacy_pic\">legacy_pic</a>-><a class=\"id\" href=\"#nr_legacy_irqs\">nr_legacy_irqs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_irqs_gsi\">nr_irqs_gsi</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#io_apic_irqs\">io_apic_irqs</a> = ~0UL;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#irq_cfgx\">irq_cfgx</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#irq_cfgx\">irq_cfgx</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>= <a class=\"id\" href=\"#cpu_to_node\">cpu_to_node</a>(<a class=\"id\" href=\"#boot_cpu_id\">boot_cpu_id</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#count\">count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a> = &amp;<a class=\"id\" href=\"#cfg\">cfg</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zalloc_cpumask_var_node\">zalloc_cpumask_var_node</a>(&amp;<a class=\"id\" href=\"#cfg\">cfg</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#domain\">domain</a>, <a class=\"id\" href=\"#GFP_NOWAIT\">GFP_NOWAIT</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zalloc_cpumask_var_node\">zalloc_cpumask_var_node</a>(&amp;<a class=\"id\" href=\"#cfg\">cfg</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#old_domain\">old_domain</a>, <a class=\"id\" href=\"#GFP_NOWAIT\">GFP_NOWAIT</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * For legacy IRQ's, start with assigning irq0 to irq15 to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * IRQ0_VECTOR to IRQ15_VECTOR on cpu 0.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#legacy_pic\">legacy_pic</a>-><a class=\"id\" href=\"#nr_legacy_irqs\">nr_legacy_irqs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#vector\">vector</a> = <a class=\"id\" href=\"#IRQ0_VECTOR\">IRQ0_VECTOR</a> + <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpumask_set_cpu\">cpumask_set_cpu</a>(0, <a class=\"id\" href=\"#cfg\">cfg</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#domain\">domain</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SPARSE_IRQ\">CONFIG_SPARSE_IRQ</a>", 
"struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#irq_cfg\">irq_cfg</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cfg\">cfg</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#get_one_free_irq_cfg\">get_one_free_irq_cfg</a>(int <a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#kzalloc_node\">kzalloc_node</a>(sizeof(*<a class=\"id\" href=\"#cfg\">cfg</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#zalloc_cpumask_var_node\">zalloc_cpumask_var_node</a>(&amp;<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#domain\">domain</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>, <a class=\"id\" href=\"#node\">node</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#cfg\">cfg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#zalloc_cpumask_var_node\">zalloc_cpumask_var_node</a>(&amp;<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#old_domain\">old_domain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>, <a class=\"id\" href=\"#node\">node</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_cpumask_var\">free_cpumask_var</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#domain\">domain</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#cfg\">cfg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cfg\">cfg</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#arch_init_chip_data\">arch_init_chip_data</a>(struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, int <a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfg\">cfg</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a> = <a class=\"id\" href=\"#get_one_free_irq_cfg\">get_one_free_irq_cfg</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"can not alloc irq_cfg\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* for move_irq_desc */</span>", 
"static void", 
"<a class=\"id\" href=\"#init_copy_irq_2_pin\">init_copy_irq_2_pin</a>(struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#old_cfg\">old_cfg</a>, struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>, int <a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_pin_list\">irq_pin_list</a> *<a class=\"id\" href=\"#old_entry\">old_entry</a>, *<a class=\"id\" href=\"#head\">head</a>, *<a class=\"id\" href=\"#tail\">tail</a>, *<a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#irq_2_pin\">irq_2_pin</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_entry\">old_entry</a> = <a class=\"id\" href=\"#old_cfg\">old_cfg</a>-><a class=\"id\" href=\"#irq_2_pin\">irq_2_pin</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#old_entry\">old_entry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#get_one_free_irq_2_pin\">get_one_free_irq_2_pin</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#entry\">entry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#apic\">apic</a><span class=\"ts\"/>= <a class=\"id\" href=\"#old_entry\">old_entry</a>-><a class=\"id\" href=\"#apic\">apic</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#pin\">pin</a><span class=\"ts\"/>= <a class=\"id\" href=\"#old_entry\">old_entry</a>-><a class=\"id\" href=\"#pin\">pin</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tail\">tail</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_entry\">old_entry</a><span class=\"ts\"/>= <a class=\"id\" href=\"#old_entry\">old_entry</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#old_entry\">old_entry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#get_one_free_irq_2_pin\">get_one_free_irq_2_pin</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#entry\">entry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#entry\">entry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* still use the old one */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#apic\">apic</a><span class=\"ts\"/>= <a class=\"id\" href=\"#old_entry\">old_entry</a>-><a class=\"id\" href=\"#apic\">apic</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#pin\">pin</a><span class=\"ts\"/>= <a class=\"id\" href=\"#old_entry\">old_entry</a>-><a class=\"id\" href=\"#pin\">pin</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tail\">tail</a>-><a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/>= <a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tail\">tail</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_entry\">old_entry</a><span class=\"ts\"/>= <a class=\"id\" href=\"#old_entry\">old_entry</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tail\">tail</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#irq_2_pin\">irq_2_pin</a> = <a class=\"id\" href=\"#head\">head</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#free_irq_2_pin\">free_irq_2_pin</a>(struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#old_cfg\">old_cfg</a>, struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_pin_list\">irq_pin_list</a> *<a class=\"id\" href=\"#entry\">entry</a>, *<a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_cfg\">old_cfg</a>-><a class=\"id\" href=\"#irq_2_pin\">irq_2_pin</a> == <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#irq_2_pin\">irq_2_pin</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#old_cfg\">old_cfg</a>-><a class=\"id\" href=\"#irq_2_pin\">irq_2_pin</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#entry\">entry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_cfg\">old_cfg</a>-><a class=\"id\" href=\"#irq_2_pin\">irq_2_pin</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#arch_init_copy_chip_data\">arch_init_copy_chip_data</a>(struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#old_desc\">old_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, int <a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#old_cfg\">old_cfg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#get_one_free_irq_cfg\">get_one_free_irq_cfg</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cfg\">cfg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a> = <a class=\"id\" href=\"#cfg\">cfg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_cfg\">old_cfg</a> = <a class=\"id\" href=\"#old_desc\">old_desc</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#vector\">vector</a> = <a class=\"id\" href=\"#old_cfg\">old_cfg</a>-><a class=\"id\" href=\"#vector\">vector</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#move_in_progress\">move_in_progress</a> = <a class=\"id\" href=\"#old_cfg\">old_cfg</a>-><a class=\"id\" href=\"#move_in_progress\">move_in_progress</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_copy\">cpumask_copy</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#domain\">domain</a>, <a class=\"id\" href=\"#old_cfg\">old_cfg</a>-><a class=\"id\" href=\"#domain\">domain</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_copy\">cpumask_copy</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#old_domain\">old_domain</a>, <a class=\"id\" href=\"#old_cfg\">old_cfg</a>-><a class=\"id\" href=\"#old_domain\">old_domain</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_copy_irq_2_pin\">init_copy_irq_2_pin</a>(<a class=\"id\" href=\"#old_cfg\">old_cfg</a>, <a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#free_irq_cfg\">free_irq_cfg</a>(struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_cpumask_var\">free_cpumask_var</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#domain\">domain</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_cpumask_var\">free_cpumask_var</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#old_domain\">old_domain</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#cfg\">cfg</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#arch_free_chip_data\">arch_free_chip_data</a>(struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#old_desc\">old_desc</a>, struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#old_cfg\">old_cfg</a>, *<a class=\"id\" href=\"#cfg\">cfg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_cfg\">old_cfg</a> = <a class=\"id\" href=\"#old_desc\">old_desc</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_cfg\">old_cfg</a> == <a class=\"id\" href=\"#cfg\">cfg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_cfg\">old_cfg</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_irq_2_pin\">free_irq_2_pin</a>(<a class=\"id\" href=\"#old_cfg\">old_cfg</a>, <a class=\"id\" href=\"#cfg\">cfg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_irq_cfg\">free_irq_cfg</a>(<a class=\"id\" href=\"#old_cfg\">old_cfg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_desc\">old_desc</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"<span class=\"comment\">/* end for move_irq_desc */</span>", 
"", 
"#else", 
"struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#irq_cfg\">irq_cfg</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#irq\">irq</a> &lt; <a class=\"id\" href=\"#nr_irqs\">nr_irqs</a> ? <a class=\"id\" href=\"#irq_cfgx\">irq_cfgx</a> + <a class=\"id\" href=\"#irq\">irq</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"struct <a class=\"id\" href=\"#io_apic\">io_apic</a> {", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#unused\">unused</a>[3];", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#unused2\">unused2</a>[11];", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#eoi\">eoi</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#__attribute_const__\">__attribute_const__</a> struct <a class=\"id\" href=\"#io_apic\">io_apic</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#io_apic_base\">io_apic_base</a>(int <a class=\"id\" href=\"#idx\">idx</a>)", 
"{", 
"<span class=\"ts\"/>return (void <a class=\"id\" href=\"#__iomem\">__iomem</a> *) <a class=\"id\" href=\"#__fix_to_virt\">__fix_to_virt</a>(<a class=\"id\" href=\"#FIX_IO_APIC_BASE_0\">FIX_IO_APIC_BASE_0</a> + <a class=\"id\" href=\"#idx\">idx</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>+ (<a class=\"id\" href=\"#mp_ioapics\">mp_ioapics</a>[<a class=\"id\" href=\"#idx\">idx</a>].<a class=\"id\" href=\"#apicaddr\">apicaddr</a> &amp; ~<a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#io_apic_eoi\">io_apic_eoi</a>(unsigned int <a class=\"id\" href=\"#apic\">apic</a>, unsigned int <a class=\"id\" href=\"#vector\">vector</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#io_apic\">io_apic</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#io_apic\">io_apic</a> = <a class=\"id\" href=\"#io_apic_base\">io_apic_base</a>(<a class=\"id\" href=\"#apic\">apic</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writel\">writel</a>(<a class=\"id\" href=\"#vector\">vector</a>, &amp;<a class=\"id\" href=\"#io_apic\">io_apic</a>-><a class=\"id\" href=\"#eoi\">eoi</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#io_apic_read\">io_apic_read</a>(unsigned int <a class=\"id\" href=\"#apic\">apic</a>, unsigned int <a class=\"id\" href=\"#reg\">reg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#io_apic\">io_apic</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#io_apic\">io_apic</a> = <a class=\"id\" href=\"#io_apic_base\">io_apic_base</a>(<a class=\"id\" href=\"#apic\">apic</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writel\">writel</a>(<a class=\"id\" href=\"#reg\">reg</a>, &amp;<a class=\"id\" href=\"#io_apic\">io_apic</a>-><a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#readl\">readl</a>(&amp;<a class=\"id\" href=\"#io_apic\">io_apic</a>-><a class=\"id\" href=\"#data\">data</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#io_apic_write\">io_apic_write</a>(unsigned int <a class=\"id\" href=\"#apic\">apic</a>, unsigned int <a class=\"id\" href=\"#reg\">reg</a>, unsigned int <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#io_apic\">io_apic</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#io_apic\">io_apic</a> = <a class=\"id\" href=\"#io_apic_base\">io_apic_base</a>(<a class=\"id\" href=\"#apic\">apic</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writel\">writel</a>(<a class=\"id\" href=\"#reg\">reg</a>, &amp;<a class=\"id\" href=\"#io_apic\">io_apic</a>-><a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writel\">writel</a>(<a class=\"id\" href=\"#value\">value</a>, &amp;<a class=\"id\" href=\"#io_apic\">io_apic</a>-><a class=\"id\" href=\"#data\">data</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Re-write a value: to be used for read-modify-write</span>", 
"<span class=\"comment\"> * cycles where the read already set up the index register.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Older SiS APIC requires we rewrite the index register</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#io_apic_modify\">io_apic_modify</a>(unsigned int <a class=\"id\" href=\"#apic\">apic</a>, unsigned int <a class=\"id\" href=\"#reg\">reg</a>, unsigned int <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#io_apic\">io_apic</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#io_apic\">io_apic</a> = <a class=\"id\" href=\"#io_apic_base\">io_apic_base</a>(<a class=\"id\" href=\"#apic\">apic</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sis_apic_bug\">sis_apic_bug</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#writel\">writel</a>(<a class=\"id\" href=\"#reg\">reg</a>, &amp;<a class=\"id\" href=\"#io_apic\">io_apic</a>-><a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writel\">writel</a>(<a class=\"id\" href=\"#value\">value</a>, &amp;<a class=\"id\" href=\"#io_apic\">io_apic</a>-><a class=\"id\" href=\"#data\">data</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#io_apic_level_ack_pending\">io_apic_level_ack_pending</a>(struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_pin_list\">irq_pin_list</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#ioapic_lock\">ioapic_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_irq_pin\">for_each_irq_pin</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#irq_2_pin\">irq_2_pin</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#reg\">reg</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#pin\">pin</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pin\">pin</a> = <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#pin\">pin</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg\">reg</a> = <a class=\"id\" href=\"#io_apic_read\">io_apic_read</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#apic\">apic</a>, 0x10 + <a class=\"id\" href=\"#pin\">pin</a>*2);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Is the remote IRR bit set? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#reg\">reg</a> &amp; <a class=\"id\" href=\"#IO_APIC_REDIR_REMOTE_IRR\">IO_APIC_REDIR_REMOTE_IRR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#ioapic_lock\">ioapic_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#ioapic_lock\">ioapic_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"union <a class=\"id\" href=\"#entry_union\">entry_union</a> {", 
"<span class=\"ts\"/>struct { <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#w1\">w1</a>, <a class=\"id\" href=\"#w2\">w2</a>; };", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#IO_APIC_route_entry\">IO_APIC_route_entry</a> <a class=\"id\" href=\"#entry\">entry</a>;", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#IO_APIC_route_entry\">IO_APIC_route_entry</a> <a class=\"id\" href=\"#ioapic_read_entry\">ioapic_read_entry</a>(int <a class=\"id\" href=\"#apic\">apic</a>, int <a class=\"id\" href=\"#pin\">pin</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#entry_union\">entry_union</a> <a class=\"id\" href=\"#eu\">eu</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#ioapic_lock\">ioapic_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eu\">eu</a>.<a class=\"id\" href=\"#w1\">w1</a> = <a class=\"id\" href=\"#io_apic_read\">io_apic_read</a>(<a class=\"id\" href=\"#apic\">apic</a>, 0x10 + 2 * <a class=\"id\" href=\"#pin\">pin</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eu\">eu</a>.<a class=\"id\" href=\"#w2\">w2</a> = <a class=\"id\" href=\"#io_apic_read\">io_apic_read</a>(<a class=\"id\" href=\"#apic\">apic</a>, 0x11 + 2 * <a class=\"id\" href=\"#pin\">pin</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#ioapic_lock\">ioapic_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#eu\">eu</a>.<a class=\"id\" href=\"#entry\">entry</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * When we write a new IO APIC routing entry, we need to write the high</span>", 
"<span class=\"comment\"> * word first! If the mask bit in the low word is clear, we will enable</span>", 
"<span class=\"comment\"> * the interrupt, and we need to make sure the entry is fully populated</span>", 
"<span class=\"comment\"> * before that happens.</span>", 
"<span class=\"comment\"> */</span>", 
"static void", 
"<a class=\"id\" href=\"#__ioapic_write_entry\">__ioapic_write_entry</a>(int <a class=\"id\" href=\"#apic\">apic</a>, int <a class=\"id\" href=\"#pin\">pin</a>, struct <a class=\"id\" href=\"#IO_APIC_route_entry\">IO_APIC_route_entry</a> <a class=\"id\" href=\"#e\">e</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#entry_union\">entry_union</a> <a class=\"id\" href=\"#eu\">eu</a> = {{0, 0}};", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eu\">eu</a>.<a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io_apic_write\">io_apic_write</a>(<a class=\"id\" href=\"#apic\">apic</a>, 0x11 + 2*<a class=\"id\" href=\"#pin\">pin</a>, <a class=\"id\" href=\"#eu\">eu</a>.<a class=\"id\" href=\"#w2\">w2</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io_apic_write\">io_apic_write</a>(<a class=\"id\" href=\"#apic\">apic</a>, 0x10 + 2*<a class=\"id\" href=\"#pin\">pin</a>, <a class=\"id\" href=\"#eu\">eu</a>.<a class=\"id\" href=\"#w1\">w1</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#ioapic_write_entry\">ioapic_write_entry</a>(int <a class=\"id\" href=\"#apic\">apic</a>, int <a class=\"id\" href=\"#pin\">pin</a>, struct <a class=\"id\" href=\"#IO_APIC_route_entry\">IO_APIC_route_entry</a> <a class=\"id\" href=\"#e\">e</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#ioapic_lock\">ioapic_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ioapic_write_entry\">__ioapic_write_entry</a>(<a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#pin\">pin</a>, <a class=\"id\" href=\"#e\">e</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#ioapic_lock\">ioapic_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * When we mask an IO APIC routing entry, we need to write the low</span>", 
"<span class=\"comment\"> * word first, in order to set the mask bit before we change the</span>", 
"<span class=\"comment\"> * high bits!</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ioapic_mask_entry\">ioapic_mask_entry</a>(int <a class=\"id\" href=\"#apic\">apic</a>, int <a class=\"id\" href=\"#pin\">pin</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#entry_union\">entry_union</a> <a class=\"id\" href=\"#eu\">eu</a> = { .<a class=\"id\" href=\"#entry\">entry</a>.<a class=\"id\" href=\"#mask\">mask</a> = 1 };", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#ioapic_lock\">ioapic_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io_apic_write\">io_apic_write</a>(<a class=\"id\" href=\"#apic\">apic</a>, 0x10 + 2*<a class=\"id\" href=\"#pin\">pin</a>, <a class=\"id\" href=\"#eu\">eu</a>.<a class=\"id\" href=\"#w1\">w1</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io_apic_write\">io_apic_write</a>(<a class=\"id\" href=\"#apic\">apic</a>, 0x11 + 2*<a class=\"id\" href=\"#pin\">pin</a>, <a class=\"id\" href=\"#eu\">eu</a>.<a class=\"id\" href=\"#w2\">w2</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#ioapic_lock\">ioapic_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The common case is 1:1 IRQ&lt;-&gt;pin mappings. Sometimes there are</span>", 
"<span class=\"comment\"> * shared ISA-space IRQs, so we have to support them. We are super</span>", 
"<span class=\"comment\"> * fast in the common case, and fast for shared ISA-space IRQs.</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#add_pin_to_irq_node_nopanic\">add_pin_to_irq_node_nopanic</a>(struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>, int <a class=\"id\" href=\"#node\">node</a>, int <a class=\"id\" href=\"#apic\">apic</a>, int <a class=\"id\" href=\"#pin\">pin</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_pin_list\">irq_pin_list</a> **<a class=\"id\" href=\"#last\">last</a>, *<a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* don't allow duplicates */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = &amp;<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#irq_2_pin\">irq_2_pin</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_irq_pin\">for_each_irq_pin</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#irq_2_pin\">irq_2_pin</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#apic\">apic</a> == <a class=\"id\" href=\"#apic\">apic</a> && <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#pin\">pin</a> == <a class=\"id\" href=\"#pin\">pin</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = &amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#get_one_free_irq_2_pin\">get_one_free_irq_2_pin</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#entry\">entry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"can not alloc irq_pin_list (%d,%d,%d)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#pin\">pin</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#apic\">apic</a> = <a class=\"id\" href=\"#apic\">apic</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#pin\">pin</a> = <a class=\"id\" href=\"#pin\">pin</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#add_pin_to_irq_node\">add_pin_to_irq_node</a>(struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>, int <a class=\"id\" href=\"#node\">node</a>, int <a class=\"id\" href=\"#apic\">apic</a>, int <a class=\"id\" href=\"#pin\">pin</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#add_pin_to_irq_node_nopanic\">add_pin_to_irq_node_nopanic</a>(<a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#pin\">pin</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"IO-APIC: failed to add irq-pin. Can not proceed\\n\");", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Reroute an IRQ to a different pin.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#replace_pin_at_irq_node\">replace_pin_at_irq_node</a>(struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>, int <a class=\"id\" href=\"#node\">node</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#oldapic\">oldapic</a>, int <a class=\"id\" href=\"#oldpin\">oldpin</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#newapic\">newapic</a>, int <a class=\"id\" href=\"#newpin\">newpin</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_pin_list\">irq_pin_list</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_irq_pin\">for_each_irq_pin</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#irq_2_pin\">irq_2_pin</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#apic\">apic</a> == <a class=\"id\" href=\"#oldapic\">oldapic</a> && <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#pin\">pin</a> == <a class=\"id\" href=\"#oldpin\">oldpin</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#apic\">apic</a> = <a class=\"id\" href=\"#newapic\">newapic</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#pin\">pin</a> = <a class=\"id\" href=\"#newpin\">newpin</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* every one is different, right? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* old apic/pin didn't exist, so just add new ones */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_pin_to_irq_node\">add_pin_to_irq_node</a>(<a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#newapic\">newapic</a>, <a class=\"id\" href=\"#newpin\">newpin</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__io_apic_modify_irq\">__io_apic_modify_irq</a>(struct <a class=\"id\" href=\"#irq_pin_list\">irq_pin_list</a> *<a class=\"id\" href=\"#entry\">entry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#mask_and\">mask_and</a>, int <a class=\"id\" href=\"#mask_or\">mask_or</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void (*<a class=\"id\" href=\"#final\">final</a>)(struct <a class=\"id\" href=\"#irq_pin_list\">irq_pin_list</a> *<a class=\"id\" href=\"#entry\">entry</a>))", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#pin\">pin</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pin\">pin</a> = <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#pin\">pin</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reg\">reg</a> = <a class=\"id\" href=\"#io_apic_read\">io_apic_read</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#apic\">apic</a>, 0x10 + <a class=\"id\" href=\"#pin\">pin</a> * 2);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reg\">reg</a> &= <a class=\"id\" href=\"#mask_and\">mask_and</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reg\">reg</a> |= <a class=\"id\" href=\"#mask_or\">mask_or</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io_apic_modify\">io_apic_modify</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#apic\">apic</a>, 0x10 + <a class=\"id\" href=\"#pin\">pin</a> * 2, <a class=\"id\" href=\"#reg\">reg</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#final\">final</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#final\">final</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#io_apic_modify_irq\">io_apic_modify_irq</a>(struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#mask_and\">mask_and</a>, int <a class=\"id\" href=\"#mask_or\">mask_or</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       void (*<a class=\"id\" href=\"#final\">final</a>)(struct <a class=\"id\" href=\"#irq_pin_list\">irq_pin_list</a> *<a class=\"id\" href=\"#entry\">entry</a>))", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_pin_list\">irq_pin_list</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_irq_pin\">for_each_irq_pin</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#irq_2_pin\">irq_2_pin</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__io_apic_modify_irq\">__io_apic_modify_irq</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#mask_and\">mask_and</a>, <a class=\"id\" href=\"#mask_or\">mask_or</a>, <a class=\"id\" href=\"#final\">final</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__mask_and_edge_IO_APIC_irq\">__mask_and_edge_IO_APIC_irq</a>(struct <a class=\"id\" href=\"#irq_pin_list\">irq_pin_list</a> *<a class=\"id\" href=\"#entry\">entry</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__io_apic_modify_irq\">__io_apic_modify_irq</a>(<a class=\"id\" href=\"#entry\">entry</a>, ~<a class=\"id\" href=\"#IO_APIC_REDIR_LEVEL_TRIGGER\">IO_APIC_REDIR_LEVEL_TRIGGER</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#IO_APIC_REDIR_MASKED\">IO_APIC_REDIR_MASKED</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__unmask_and_level_IO_APIC_irq\">__unmask_and_level_IO_APIC_irq</a>(struct <a class=\"id\" href=\"#irq_pin_list\">irq_pin_list</a> *<a class=\"id\" href=\"#entry\">entry</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__io_apic_modify_irq\">__io_apic_modify_irq</a>(<a class=\"id\" href=\"#entry\">entry</a>, ~<a class=\"id\" href=\"#IO_APIC_REDIR_MASKED\">IO_APIC_REDIR_MASKED</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#IO_APIC_REDIR_LEVEL_TRIGGER\">IO_APIC_REDIR_LEVEL_TRIGGER</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__unmask_IO_APIC_irq\">__unmask_IO_APIC_irq</a>(struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io_apic_modify_irq\">io_apic_modify_irq</a>(<a class=\"id\" href=\"#cfg\">cfg</a>, ~<a class=\"id\" href=\"#IO_APIC_REDIR_MASKED\">IO_APIC_REDIR_MASKED</a>, 0, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#io_apic_sync\">io_apic_sync</a>(struct <a class=\"id\" href=\"#irq_pin_list\">irq_pin_list</a> *<a class=\"id\" href=\"#entry\">entry</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Synchronize the IO-APIC and the CPU by doing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a dummy read from the IO-APIC</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#io_apic\">io_apic</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#io_apic\">io_apic</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io_apic\">io_apic</a> = <a class=\"id\" href=\"#io_apic_base\">io_apic_base</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#apic\">apic</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#readl\">readl</a>(&amp;<a class=\"id\" href=\"#io_apic\">io_apic</a>-><a class=\"id\" href=\"#data\">data</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__mask_IO_APIC_irq\">__mask_IO_APIC_irq</a>(struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io_apic_modify_irq\">io_apic_modify_irq</a>(<a class=\"id\" href=\"#cfg\">cfg</a>, ~0, <a class=\"id\" href=\"#IO_APIC_REDIR_MASKED\">IO_APIC_REDIR_MASKED</a>, &amp;<a class=\"id\" href=\"#io_apic_sync\">io_apic_sync</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#mask_IO_APIC_irq_desc\">mask_IO_APIC_irq_desc</a>(struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#cfg\">cfg</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#ioapic_lock\">ioapic_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__mask_IO_APIC_irq\">__mask_IO_APIC_irq</a>(<a class=\"id\" href=\"#cfg\">cfg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#ioapic_lock\">ioapic_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#unmask_IO_APIC_irq_desc\">unmask_IO_APIC_irq_desc</a>(struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip_data\">chip_data</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#ioapic_lock\">ioapic_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__unmask_IO_APIC_irq\">__unmask_IO_APIC_irq</a>(<a class=\"id\" href=\"#cfg\">cfg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#ioapic_lock\">ioapic_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#mask_IO_APIC_irq\">mask_IO_APIC_irq</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask_IO_APIC_irq_desc\">mask_IO_APIC_irq_desc</a>(<a class=\"id\" href=\"#desc\">desc</a>);", 
"}", 
"static void <a class=\"id\" href=\"#unmask_IO_APIC_irq\">unmask_IO_APIC_irq</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unmask_IO_APIC_irq_desc\">unmask_IO_APIC_irq_desc</a>(<a class=\"id\" href=\"#desc\">desc</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#clear_IO_APIC_pin\">clear_IO_APIC_pin</a>(unsigned int <a class=\"id\" href=\"#apic\">apic</a>, unsigned int <a class=\"id\" href=\"#pin\">pin</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#IO_APIC_route_entry\">IO_APIC_route_entry</a> <a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check delivery_mode to be sure we're not clearing an SMI pin */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#ioapic_read_entry\">ioapic_read_entry</a>(<a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#pin\">pin</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>.<a class=\"id\" href=\"#delivery_mode\">delivery_mode</a> == <a class=\"id\" href=\"#dest_SMI\">dest_SMI</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Disable it in the IO-APIC irq-routing table:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ioapic_mask_entry\">ioapic_mask_entry</a>(<a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#pin\">pin</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#clear_IO_APIC\">clear_IO_APIC</a> (void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#pin\">pin</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#apic\">apic</a> = 0; <a class=\"id\" href=\"#apic\">apic</a> &lt; <a class=\"id\" href=\"#nr_ioapics\">nr_ioapics</a>; <a class=\"id\" href=\"#apic\">apic</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#pin\">pin</a> = 0; <a class=\"id\" href=\"#pin\">pin</a> &lt; <a class=\"id\" href=\"#nr_ioapic_registers\">nr_ioapic_registers</a>[<a class=\"id\" href=\"#apic\">apic</a>]; <a class=\"id\" href=\"#pin\">pin</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_IO_APIC_pin\">clear_IO_APIC_pin</a>(<a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#pin\">pin</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * support for broken MP BIOSs, enables hand-redirection of PIRQ0-7 to</span>", 
"<span class=\"comment\"> * specific CPU-side IRQs.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_PIRQS\">MAX_PIRQS</a> 8", 
"static int <a class=\"id\" href=\"#pirq_entries\">pirq_entries</a>[<a class=\"id\" href=\"#MAX_PIRQS\">MAX_PIRQS</a>] = {", 
"<span class=\"ts\"/>[0 ... <a class=\"id\" href=\"#MAX_PIRQS\">MAX_PIRQS</a> - 1] = -1", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#ioapic_pirq_setup\">ioapic_pirq_setup</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#max\">max</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ints\">ints</a>[<a class=\"id\" href=\"#MAX_PIRQS\">MAX_PIRQS</a>+1];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_options\">get_options</a>(<a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#ints\">ints</a>), <a class=\"id\" href=\"#ints\">ints</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_VERBOSE\">APIC_VERBOSE</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"PIRQ redirection, working around broken MP-BIOS.\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#MAX_PIRQS\">MAX_PIRQS</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ints\">ints</a>[0] &lt; <a class=\"id\" href=\"#MAX_PIRQS\">MAX_PIRQS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#ints\">ints</a>[0];", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#max\">max</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_VERBOSE\">APIC_VERBOSE</a>, <a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"... PIRQ%d -> IRQ %d\\n\", <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#ints\">ints</a>[<a class=\"id\" href=\"#i\">i</a>+1]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * PIRQs are mapped upside down, usually.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pirq_entries\">pirq_entries</a>[<a class=\"id\" href=\"#MAX_PIRQS\">MAX_PIRQS</a>-<a class=\"id\" href=\"#i\">i</a>-1] = <a class=\"id\" href=\"#ints\">ints</a>[<a class=\"id\" href=\"#i\">i</a>+1];", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"pirq=\", <a class=\"id\" href=\"#ioapic_pirq_setup\">ioapic_pirq_setup</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_X86_32 */</span>", 
"", 
"struct <a class=\"id\" href=\"#IO_APIC_route_entry\">IO_APIC_route_entry</a> **<a class=\"id\" href=\"#alloc_ioapic_entries\">alloc_ioapic_entries</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#apic\">apic</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#IO_APIC_route_entry\">IO_APIC_route_entry</a> **<a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>) * <a class=\"id\" href=\"#nr_ioapics\">nr_ioapics</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#apic\">apic</a> = 0; <a class=\"id\" href=\"#apic\">apic</a> &lt; <a class=\"id\" href=\"#nr_ioapics\">nr_ioapics</a>; <a class=\"id\" href=\"#apic\">apic</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>[<a class=\"id\" href=\"#apic\">apic</a>] =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#IO_APIC_route_entry\">IO_APIC_route_entry</a>) *", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_ioapic_registers\">nr_ioapic_registers</a>[<a class=\"id\" href=\"#apic\">apic</a>], <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>[<a class=\"id\" href=\"#apic\">apic</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#nomem\">nomem</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>;", 
"", 
"<a class=\"id\" href=\"#nomem\">nomem</a>:", 
"<span class=\"ts\"/>while (--<a class=\"id\" href=\"#apic\">apic</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>[<a class=\"id\" href=\"#apic\">apic</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Saves all the IO-APIC RTE's</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#save_IO_APIC_setup\">save_IO_APIC_setup</a>(struct <a class=\"id\" href=\"#IO_APIC_route_entry\">IO_APIC_route_entry</a> **<a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#pin\">pin</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#apic\">apic</a> = 0; <a class=\"id\" href=\"#apic\">apic</a> &lt; <a class=\"id\" href=\"#nr_ioapics\">nr_ioapics</a>; <a class=\"id\" href=\"#apic\">apic</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>[<a class=\"id\" href=\"#apic\">apic</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#pin\">pin</a> = 0; <a class=\"id\" href=\"#pin\">pin</a> &lt; <a class=\"id\" href=\"#nr_ioapic_registers\">nr_ioapic_registers</a>[<a class=\"id\" href=\"#apic\">apic</a>]; <a class=\"id\" href=\"#pin\">pin</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>[<a class=\"id\" href=\"#apic\">apic</a>][<a class=\"id\" href=\"#pin\">pin</a>] =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ioapic_read_entry\">ioapic_read_entry</a>(<a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#pin\">pin</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Mask all IO APIC entries.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#mask_IO_APIC_setup\">mask_IO_APIC_setup</a>(struct <a class=\"id\" href=\"#IO_APIC_route_entry\">IO_APIC_route_entry</a> **<a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#pin\">pin</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#apic\">apic</a> = 0; <a class=\"id\" href=\"#apic\">apic</a> &lt; <a class=\"id\" href=\"#nr_ioapics\">nr_ioapics</a>; <a class=\"id\" href=\"#apic\">apic</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>[<a class=\"id\" href=\"#apic\">apic</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#pin\">pin</a> = 0; <a class=\"id\" href=\"#pin\">pin</a> &lt; <a class=\"id\" href=\"#nr_ioapic_registers\">nr_ioapic_registers</a>[<a class=\"id\" href=\"#apic\">apic</a>]; <a class=\"id\" href=\"#pin\">pin</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#IO_APIC_route_entry\">IO_APIC_route_entry</a> <a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>[<a class=\"id\" href=\"#apic\">apic</a>][<a class=\"id\" href=\"#pin\">pin</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#entry\">entry</a>.<a class=\"id\" href=\"#mask\">mask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>.<a class=\"id\" href=\"#mask\">mask</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ioapic_write_entry\">ioapic_write_entry</a>(<a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#pin\">pin</a>, <a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Restore IO APIC entries which was saved in ioapic_entries.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#restore_IO_APIC_setup\">restore_IO_APIC_setup</a>(struct <a class=\"id\" href=\"#IO_APIC_route_entry\">IO_APIC_route_entry</a> **<a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#pin\">pin</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#apic\">apic</a> = 0; <a class=\"id\" href=\"#apic\">apic</a> &lt; <a class=\"id\" href=\"#nr_ioapics\">nr_ioapics</a>; <a class=\"id\" href=\"#apic\">apic</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>[<a class=\"id\" href=\"#apic\">apic</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#pin\">pin</a> = 0; <a class=\"id\" href=\"#pin\">pin</a> &lt; <a class=\"id\" href=\"#nr_ioapic_registers\">nr_ioapic_registers</a>[<a class=\"id\" href=\"#apic\">apic</a>]; <a class=\"id\" href=\"#pin\">pin</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ioapic_write_entry\">ioapic_write_entry</a>(<a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#pin\">pin</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>[<a class=\"id\" href=\"#apic\">apic</a>][<a class=\"id\" href=\"#pin\">pin</a>]);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#free_ioapic_entries\">free_ioapic_entries</a>(struct <a class=\"id\" href=\"#IO_APIC_route_entry\">IO_APIC_route_entry</a> **<a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#apic\">apic</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#apic\">apic</a> = 0; <a class=\"id\" href=\"#apic\">apic</a> &lt; <a class=\"id\" href=\"#nr_ioapics\">nr_ioapics</a>; <a class=\"id\" href=\"#apic\">apic</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>[<a class=\"id\" href=\"#apic\">apic</a>]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ioapic_entries\">ioapic_entries</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Find the IRQ entry number of a certain pin.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#find_irq_entry\">find_irq_entry</a>(int <a class=\"id\" href=\"#apic\">apic</a>, int <a class=\"id\" href=\"#pin\">pin</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#mp_irq_entries\">mp_irq_entries</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#irqtype\">irqtype</a> == <a class=\"id\" href=\"#type\">type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#dstapic\">dstapic</a> == <a class=\"id\" href=\"#mp_ioapics\">mp_ioapics</a>[<a class=\"id\" href=\"#apic\">apic</a>].<a class=\"id\" href=\"#apicid\">apicid</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#dstapic\">dstapic</a> == <a class=\"id\" href=\"#MP_APIC_ALL\">MP_APIC_ALL</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#dstirq\">dstirq</a> == <a class=\"id\" href=\"#pin\">pin</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Find the pin to which IRQ[irq] (ISA) is connected</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#find_isa_irq_pin\">find_isa_irq_pin</a>(int <a class=\"id\" href=\"#irq\">irq</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#mp_irq_entries\">mp_irq_entries</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#lbus\">lbus</a> = <a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#srcbus\">srcbus</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#lbus\">lbus</a>, <a class=\"id\" href=\"#mp_bus_not_pci\">mp_bus_not_pci</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#irqtype\">irqtype</a> == <a class=\"id\" href=\"#type\">type</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#srcbusirq\">srcbusirq</a> == <a class=\"id\" href=\"#irq\">irq</a>))", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#dstirq\">dstirq</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#find_isa_irq_apic\">find_isa_irq_apic</a>(int <a class=\"id\" href=\"#irq\">irq</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#mp_irq_entries\">mp_irq_entries</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#lbus\">lbus</a> = <a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#srcbus\">srcbus</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#lbus\">lbus</a>, <a class=\"id\" href=\"#mp_bus_not_pci\">mp_bus_not_pci</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#irqtype\">irqtype</a> == <a class=\"id\" href=\"#type\">type</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#srcbusirq\">srcbusirq</a> == <a class=\"id\" href=\"#irq\">irq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#mp_irq_entries\">mp_irq_entries</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#apic\">apic</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>for(<a class=\"id\" href=\"#apic\">apic</a> = 0; <a class=\"id\" href=\"#apic\">apic</a> &lt; <a class=\"id\" href=\"#nr_ioapics\">nr_ioapics</a>; <a class=\"id\" href=\"#apic\">apic</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mp_ioapics\">mp_ioapics</a>[<a class=\"id\" href=\"#apic\">apic</a>].<a class=\"id\" href=\"#apicid\">apicid</a> == <a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#dstapic\">dstapic</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#apic\">apic</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_EISA\">CONFIG_EISA</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_MCA\">CONFIG_MCA</a>)", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * EISA Edge/Level control register, ELCR</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#EISA_ELCR\">EISA_ELCR</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a> &lt; <a class=\"id\" href=\"#legacy_pic\">legacy_pic</a>-><a class=\"id\" href=\"#nr_legacy_irqs\">nr_legacy_irqs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#port\">port</a> = 0x4d0 + (<a class=\"id\" href=\"#irq\">irq</a> >> 3);", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#inb\">inb</a>(<a class=\"id\" href=\"#port\">port</a>) >> (<a class=\"id\" href=\"#irq\">irq</a> &amp; 7)) &amp; 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_VERBOSE\">APIC_VERBOSE</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Broken MPtable reports ISA irq %d\\n\", <a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* ISA interrupts are always polarity zero edge triggered,</span>", 
"<span class=\"comment\"> * when listed as conforming in the MP table. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#default_ISA_trigger\">default_ISA_trigger</a>(<a class=\"id\" href=\"#idx\">idx</a>)<span class=\"ts\"/>(0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#default_ISA_polarity\">default_ISA_polarity</a>(<a class=\"id\" href=\"#idx\">idx</a>)<span class=\"ts\"/>(0)", 
"", 
"<span class=\"comment\">/* EISA interrupts are always polarity zero and can be edge or level</span>", 
"<span class=\"comment\"> * trigger depending on the ELCR value.  If an interrupt is listed as</span>", 
"<span class=\"comment\"> * EISA conforming in the MP table, that means its trigger type must</span>", 
"<span class=\"comment\"> * be read in from the ELCR */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#default_EISA_trigger\">default_EISA_trigger</a>(<a class=\"id\" href=\"#idx\">idx</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#EISA_ELCR\">EISA_ELCR</a>(<a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#idx\">idx</a>].<a class=\"id\" href=\"#srcbusirq\">srcbusirq</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#default_EISA_polarity\">default_EISA_polarity</a>(<a class=\"id\" href=\"#idx\">idx</a>)<span class=\"ts\"/><a class=\"id\" href=\"#default_ISA_polarity\">default_ISA_polarity</a>(<a class=\"id\" href=\"#idx\">idx</a>)", 
"", 
"<span class=\"comment\">/* PCI interrupts are always polarity one level triggered,</span>", 
"<span class=\"comment\"> * when listed as conforming in the MP table. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#default_PCI_trigger\">default_PCI_trigger</a>(<a class=\"id\" href=\"#idx\">idx</a>)<span class=\"ts\"/>(1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#default_PCI_polarity\">default_PCI_polarity</a>(<a class=\"id\" href=\"#idx\">idx</a>)<span class=\"ts\"/>(1)", 
"", 
"<span class=\"comment\">/* MCA interrupts are always polarity zero level triggered,</span>", 
"<span class=\"comment\"> * when listed as conforming in the MP table. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#default_MCA_trigger\">default_MCA_trigger</a>(<a class=\"id\" href=\"#idx\">idx</a>)<span class=\"ts\"/>(1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#default_MCA_polarity\">default_MCA_polarity</a>(<a class=\"id\" href=\"#idx\">idx</a>)<span class=\"ts\"/><a class=\"id\" href=\"#default_ISA_polarity\">default_ISA_polarity</a>(<a class=\"id\" href=\"#idx\">idx</a>)", 
"", 
"static int <a class=\"id\" href=\"#MPBIOS_polarity\">MPBIOS_polarity</a>(int <a class=\"id\" href=\"#idx\">idx</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#idx\">idx</a>].<a class=\"id\" href=\"#srcbus\">srcbus</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#polarity\">polarity</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Determine IRQ line polarity (high active or low active):</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#idx\">idx</a>].<a class=\"id\" href=\"#irqflag\">irqflag</a> &amp; 3)", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0: <span class=\"comment\">/* conforms, ie. bus-type dependent polarity */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#mp_bus_not_pci\">mp_bus_not_pci</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#polarity\">polarity</a> = <a class=\"id\" href=\"#default_ISA_polarity\">default_ISA_polarity</a>(<a class=\"id\" href=\"#idx\">idx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#polarity\">polarity</a> = <a class=\"id\" href=\"#default_PCI_polarity\">default_PCI_polarity</a>(<a class=\"id\" href=\"#idx\">idx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 1: <span class=\"comment\">/* high active */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#polarity\">polarity</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>case 2: <span class=\"comment\">/* reserved */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"broken BIOS!!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#polarity\">polarity</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>case 3: <span class=\"comment\">/* low active */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#polarity\">polarity</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>default: <span class=\"comment\">/* invalid */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"broken BIOS!!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#polarity\">polarity</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#polarity\">polarity</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#MPBIOS_trigger\">MPBIOS_trigger</a>(int <a class=\"id\" href=\"#idx\">idx</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#idx\">idx</a>].<a class=\"id\" href=\"#srcbus\">srcbus</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#trigger\">trigger</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Determine IRQ trigger mode (edge or level sensitive):</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch ((<a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#idx\">idx</a>].<a class=\"id\" href=\"#irqflag\">irqflag</a>>>2) &amp; 3)", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0: <span class=\"comment\">/* conforms, ie. bus-type dependent */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#mp_bus_not_pci\">mp_bus_not_pci</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trigger\">trigger</a> = <a class=\"id\" href=\"#default_ISA_trigger\">default_ISA_trigger</a>(<a class=\"id\" href=\"#idx\">idx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trigger\">trigger</a> = <a class=\"id\" href=\"#default_PCI_trigger\">default_PCI_trigger</a>(<a class=\"id\" href=\"#idx\">idx</a>);", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_EISA\">CONFIG_EISA</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_MCA\">CONFIG_MCA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#mp_bus_id_to_type\">mp_bus_id_to_type</a>[<a class=\"id\" href=\"#bus\">bus</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#MP_BUS_ISA\">MP_BUS_ISA</a>: <span class=\"comment\">/* ISA pin */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set before the switch */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#MP_BUS_EISA\">MP_BUS_EISA</a>: <span class=\"comment\">/* EISA pin */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trigger\">trigger</a> = <a class=\"id\" href=\"#default_EISA_trigger\">default_EISA_trigger</a>(<a class=\"id\" href=\"#idx\">idx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#MP_BUS_PCI\">MP_BUS_PCI</a>: <span class=\"comment\">/* PCI pin */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set before the switch */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#MP_BUS_MCA\">MP_BUS_MCA</a>: <span class=\"comment\">/* MCA pin */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trigger\">trigger</a> = <a class=\"id\" href=\"#default_MCA_trigger\">default_MCA_trigger</a>(<a class=\"id\" href=\"#idx\">idx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"broken BIOS!!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trigger\">trigger</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 1: <span class=\"comment\">/* edge */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trigger\">trigger</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>case 2: <span class=\"comment\">/* reserved */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"broken BIOS!!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trigger\">trigger</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>case 3: <span class=\"comment\">/* level */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trigger\">trigger</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>default: <span class=\"comment\">/* invalid */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"broken BIOS!!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trigger\">trigger</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#trigger\">trigger</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#irq_polarity\">irq_polarity</a>(int <a class=\"id\" href=\"#idx\">idx</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#MPBIOS_polarity\">MPBIOS_polarity</a>(<a class=\"id\" href=\"#idx\">idx</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#irq_trigger\">irq_trigger</a>(int <a class=\"id\" href=\"#idx\">idx</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#MPBIOS_trigger\">MPBIOS_trigger</a>(<a class=\"id\" href=\"#idx\">idx</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pin_2_irq\">pin_2_irq</a>(int <a class=\"id\" href=\"#idx\">idx</a>, int <a class=\"id\" href=\"#apic\">apic</a>, int <a class=\"id\" href=\"#pin\">pin</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#idx\">idx</a>].<a class=\"id\" href=\"#srcbus\">srcbus</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Debugging check, we are in big trouble if this message pops up!</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#idx\">idx</a>].<a class=\"id\" href=\"#dstirq\">dstirq</a> != <a class=\"id\" href=\"#pin\">pin</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"broken BIOS or MPTABLE parser, ayiee!!\\n\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#mp_bus_not_pci\">mp_bus_not_pci</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#idx\">idx</a>].<a class=\"id\" href=\"#srcbusirq\">srcbusirq</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#gsi\">gsi</a> = <a class=\"id\" href=\"#mp_gsi_routing\">mp_gsi_routing</a>[<a class=\"id\" href=\"#apic\">apic</a>].<a class=\"id\" href=\"#gsi_base\">gsi_base</a> + <a class=\"id\" href=\"#pin\">pin</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#gsi\">gsi</a> >= <a class=\"id\" href=\"#NR_IRQS_LEGACY\">NR_IRQS_LEGACY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#gsi\">gsi</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#gsi_top\">gsi_top</a> + <a class=\"id\" href=\"#gsi\">gsi</a>;", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * PCI IRQ command line redirection. Yes, limits are hardcoded.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#pin\">pin</a> >= 16) && (<a class=\"id\" href=\"#pin\">pin</a> <= 23)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pirq_entries\">pirq_entries</a>[<a class=\"id\" href=\"#pin\">pin</a>-16] != -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pirq_entries\">pirq_entries</a>[<a class=\"id\" href=\"#pin\">pin</a>-16]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_VERBOSE\">APIC_VERBOSE</a>, <a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"disabling PIRQ%d\\n\", <a class=\"id\" href=\"#pin\">pin</a>-16);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#pirq_entries\">pirq_entries</a>[<a class=\"id\" href=\"#pin\">pin</a>-16];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_VERBOSE\">APIC_VERBOSE</a>, <a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"using PIRQ%d -> IRQ %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pin\">pin</a>-16, <a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#irq\">irq</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Find a specific PCI IRQ entry.</span>", 
"<span class=\"comment\"> * Not an __init, possibly needed by modules</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#IO_APIC_get_PCI_irq_vector\">IO_APIC_get_PCI_irq_vector</a>(int <a class=\"id\" href=\"#bus\">bus</a>, int <a class=\"id\" href=\"#slot\">slot</a>, int <a class=\"id\" href=\"#pin\">pin</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#io_apic_irq_attr\">io_apic_irq_attr</a> *<a class=\"id\" href=\"#irq_attr\">irq_attr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#best_guess\">best_guess</a> = -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_DEBUG\">APIC_DEBUG</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    \"querying PCI -> IRQ mapping bus:%d, slot:%d, pin:%d.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, <a class=\"id\" href=\"#pin\">pin</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#mp_bus_not_pci\">mp_bus_not_pci</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#APIC_VERBOSE\">APIC_VERBOSE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"PCI BIOS passed nonexistent PCI bus %d!\\n\", <a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#mp_irq_entries\">mp_irq_entries</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#lbus\">lbus</a> = <a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#srcbus\">srcbus</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#apic\">apic</a> = 0; <a class=\"id\" href=\"#apic\">apic</a> &lt; <a class=\"id\" href=\"#nr_ioapics\">nr_ioapics</a>; <a class=\"id\" href=\"#apic\">apic</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mp_ioapics\">mp_ioapics</a>[<a class=\"id\" href=\"#apic\">apic</a>].<a class=\"id\" href=\"#apicid\">apicid</a> == <a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#dstapic\">dstapic</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#dstapic\">dstapic</a> == <a class=\"id\" href=\"#MP_APIC_ALL\">MP_APIC_ALL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#lbus\">lbus</a>, <a class=\"id\" href=\"#mp_bus_not_pci\">mp_bus_not_pci</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#irqtype\">irqtype</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#bus\">bus</a> == <a class=\"id\" href=\"#lbus\">lbus</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#slot\">slot</a> == ((<a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#srcbusirq\">srcbusirq</a> >> 2) &amp; 0x1f))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#pin_2_irq\">pin_2_irq</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#apic\">apic</a>, <a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#dstirq\">dstirq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#apic\">apic</a> || <a class=\"id\" href=\"#IO_APIC_IRQ\">IO_APIC_IRQ</a>(<a class=\"id\" href=\"#irq\">irq</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pin\">pin</a> == (<a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#srcbusirq\">srcbusirq</a> &amp; 3)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_io_apic_irq_attr\">set_io_apic_irq_attr</a>(<a class=\"id\" href=\"#irq_attr\">irq_attr</a>, <a class=\"id\" href=\"#apic\">apic</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#dstirq\">dstirq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#irq_trigger\">irq_trigger</a>(<a class=\"id\" href=\"#i\">i</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#irq_polarity\">irq_polarity</a>(<a class=\"id\" href=\"#i\">i</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Use the first all-but-pin matching entry as a</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * best-guess fuzzy result for broken mptables.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#best_guess\">best_guess</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_io_apic_irq_attr\">set_io_apic_irq_attr</a>(<a class=\"id\" href=\"#irq_attr\">irq_attr</a>, <a class=\"id\" href=\"#apic\">apic</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#mp_irqs\">mp_irqs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#dstirq\">dstirq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#irq_trigger\">irq_trigger</a>(<a class=\"id\" href=\"#i\">i</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#irq_polarity\">irq_polarity</a>(<a class=\"id\" href=\"#i\">i</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#best_guess\">best_guess</a> = <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#best_guess\">best_guess</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#IO_APIC_get_PCI_irq_vector\">IO_APIC_get_PCI_irq_vector</a>);", 
"", 
"void <a class=\"id\" href=\"#lock_vector_lock\">lock_vector_lock</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Used to the online set of cpus does not change</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * during assign_irq_vector.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#vector_lock\">vector_lock</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#unlock_vector_lock\">unlock_vector_lock</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#vector_lock\">vector_lock</a>);", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#__assign_irq_vector\">__assign_irq_vector</a>(int <a class=\"id\" href=\"#irq\">irq</a>, struct <a class=\"id\" href=\"#irq_cfg\">irq_cfg</a> *<a class=\"id\" href=\"#cfg\">cfg</a>, const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * NOTE! The local APIC isn't very good at handling</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * multiple interrupts at the same interrupt level.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * As the interrupt level is determined by taking the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * vector number and shifting that right by 4, we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * want to spread these out a bit so that they don't</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * all fall in the same interrupt level.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Also, we've got to be careful not to trash gate</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 0x80, because int 0x80 is hm, kind of importantish. ;)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>static int <a class=\"id\" href=\"#current_vector\">current_vector</a> = <a class=\"id\" href=\"#FIRST_EXTERNAL_VECTOR\">FIRST_EXTERNAL_VECTOR</a> + <a class=\"id\" href=\"#VECTOR_OFFSET_START\">VECTOR_OFFSET_START</a>;", 
"<span class=\"ts\"/>static int <a class=\"id\" href=\"#current_offset\">current_offset</a> = <a class=\"id\" href=\"#VECTOR_OFFSET_START\">VECTOR_OFFSET_START</a> % 8;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#old_vector\">old_vector</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_var_t\">cpumask_var_t</a> <a class=\"id\" href=\"#tmp_mask\">tmp_mask</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#move_in_progress\">move_in_progress</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#alloc_cpumask_var\">alloc_cpumask_var</a>(&amp;<a class=\"id\" href=\"#tmp_mask\">tmp_mask</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_vector\">old_vector</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#vector\">vector</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_vector\">old_vector</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpumask_and\">cpumask_and</a>(<a class=\"id\" href=\"#tmp_mask\">tmp_mask</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#cpu_online_mask\">cpu_online_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpumask_and\">cpumask_and</a>(<a class=\"id\" href=\"#tmp_mask\">tmp_mask</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#domain\">domain</a>, <a class=\"id\" href=\"#tmp_mask\">tmp_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpumask_empty\">cpumask_empty</a>(<a class=\"id\" href=\"#tmp_mask\">tmp_mask</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_cpumask_var\">free_cpumask_var</a>(<a class=\"id\" href=\"#tmp_mask\">tmp_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Only try and allocate irqs on cpus that are present */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu_and\">for_each_cpu_and</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#cpu_online_mask\">cpu_online_mask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#new_cpu\">new_cpu</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#vector\">vector</a>, <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#vector_allocation_domain\">vector_allocation_domain</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#tmp_mask\">tmp_mask</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vector\">vector</a> = <a class=\"id\" href=\"#current_vector\">current_vector</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#current_offset\">current_offset</a>;", 
"<a class=\"id\" href=\"#next\">next</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vector\">vector</a> += 8;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vector\">vector</a> >= <a class=\"id\" href=\"#first_system_vector\">first_system_vector</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If out of vectors on large boxen, must share them. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = (<a class=\"id\" href=\"#offset\">offset</a> + 1) % 8;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vector\">vector</a> = <a class=\"id\" href=\"#FIRST_EXTERNAL_VECTOR\">FIRST_EXTERNAL_VECTOR</a> + <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#current_vector\">current_vector</a> == <a class=\"id\" href=\"#vector\">vector</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#vector\">vector</a>, <a class=\"id\" href=\"#used_vectors\">used_vectors</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu_and\">for_each_cpu_and</a>(<a class=\"id\" href=\"#new_cpu\">new_cpu</a>, <a class=\"id\" href=\"#tmp_mask\">tmp_mask</a>, <a class=\"id\" href=\"#cpu_online_mask\">cpu_online_mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#vector_irq\">vector_irq</a>, <a class=\"id\" href=\"#new_cpu\">new_cpu</a>)[<a class=\"id\" href=\"#vector\">vector</a>] != -1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Found one! */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current_vector\">current_vector</a> = <a class=\"id\" href=\"#vector\">vector</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current_offset\">current_offset</a> = <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#old_vector\">old_vector</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#move_in_progress\">move_in_progress</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpumask_copy\">cpumask_copy</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#old_domain\">old_domain</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#domain\">domain</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu_and\">for_each_cpu_and</a>(<a class=\"id\" href=\"#new_cpu\">new_cpu</a>, <a class=\"id\" href=\"#tmp_mask\">tmp_mask</a>, <a class=\"id\" href=\"#cpu_online_mask\">cpu_online_mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#vector_irq\">vector_irq</a>, <a class=\"id\" href=\"#new_cpu\">new_cpu</a>)[<a class=\"id\" href=\"#vector\">vector</a>] = <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#vector\">vector</a> = <a class=\"id\" href=\"#vector\">vector</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpumask_copy\">cpumask_copy</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#domain\">domain</a>, <a class=\"id\" href=\"#tmp_mask\">tmp_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
];
xr_frag_insert('l/f8/8404fe92ef88844c6571b7447f24609c9af487.xr', __xr_tmp);
