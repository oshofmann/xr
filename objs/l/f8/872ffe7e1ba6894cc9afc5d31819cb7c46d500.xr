var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#d\">d</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#nd\">nd</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#dsa_probe\">dsa_probe</a>(struct <a class=\"id\" href=\"#platform_device\">platform_device</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>static int <a class=\"id\" href=\"#dsa_version_printed\">dsa_version_printed</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dsa_platform_data\">dsa_platform_data</a> *<a class=\"id\" href=\"#pd\">pd</a> = <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#platform_data\">platform_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dsa_switch_tree\">dsa_switch_tree</a> *<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dsa_version_printed\">dsa_version_printed</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> \"Distributed Switch Architecture \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"driver version %s\\n\", <a class=\"id\" href=\"#dsa_driver_version\">dsa_driver_version</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pd\">pd</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#netdev\">netdev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev_to_net_device\">dev_to_net_device</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#netdev\">netdev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dsa_ptr\">dsa_ptr</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#dst\">dst</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#platform_set_drvdata\">platform_set_drvdata</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#dst\">dst</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#pd\">pd</a> = <a class=\"id\" href=\"#pd\">pd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#master_netdev\">master_netdev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#cpu_switch\">cpu_switch</a> = -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#cpu_port\">cpu_port</a> = -1;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#nr_chips\">nr_chips</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mii_bus\">mii_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#dev_to_mii_bus\">dev_to_mii_bus</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#chip\">chip</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#mii_bus\">mii_bus</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bus\">bus</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s[%d]: no mii bus found for \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"dsa switch\\n\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ds\">ds</a> = <a class=\"id\" href=\"#dsa_switch_setup\">dsa_switch_setup</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ds\">ds</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s[%d]: couldn't create dsa switch \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"instance (error %ld)\\n\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#ds\">ds</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#ds\">ds</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#ds\">ds</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#poll_link\">poll_link</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#link_poll_needed\">link_poll_needed</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we use a tagging format that doesn't have an ethertype</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * field, make sure that all packets from this point on get</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * sent to the tag format's receive function.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wmb\">wmb</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dsa_ptr\">dsa_ptr</a> = (void *)<a class=\"id\" href=\"#dst\">dst</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#link_poll_needed\">link_poll_needed</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#link_poll_work\">link_poll_work</a>, <a class=\"id\" href=\"#dsa_link_poll_work\">dsa_link_poll_work</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_timer\">init_timer</a>(&amp;<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#link_poll_timer\">link_poll_timer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#link_poll_timer\">link_poll_timer</a>.<a class=\"id\" href=\"#data\">data</a> = (unsigned long)<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#link_poll_timer\">link_poll_timer</a>.<a class=\"id\" href=\"#function\">function</a> = <a class=\"id\" href=\"#dsa_link_poll_timer\">dsa_link_poll_timer</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#link_poll_timer\">link_poll_timer</a>.<a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#round_jiffies\">round_jiffies</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#HZ\">HZ</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_timer\">add_timer</a>(&amp;<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#link_poll_timer\">link_poll_timer</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#dsa_remove\">dsa_remove</a>(struct <a class=\"id\" href=\"#platform_device\">platform_device</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dsa_switch_tree\">dsa_switch_tree</a> *<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#platform_get_drvdata\">platform_get_drvdata</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#link_poll_needed\">link_poll_needed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#del_timer_sync\">del_timer_sync</a>(&amp;<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#link_poll_timer\">link_poll_timer</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_scheduled_work\">flush_scheduled_work</a>();", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#nr_chips\">nr_chips</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#ds\">ds</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ds\">ds</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dsa_switch_destroy\">dsa_switch_destroy</a>(<a class=\"id\" href=\"#ds\">ds</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dsa_shutdown\">dsa_shutdown</a>(struct <a class=\"id\" href=\"#platform_device\">platform_device</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#platform_driver\">platform_driver</a> <a class=\"id\" href=\"#dsa_driver\">dsa_driver</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#probe\">probe</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#dsa_probe\">dsa_probe</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#remove\">remove</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#dsa_remove\">dsa_remove</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#shutdown\">shutdown</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dsa_shutdown\">dsa_shutdown</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#driver\">driver</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/>= \"dsa\",", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>},", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#dsa_init_module\">dsa_init_module</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#platform_driver_register\">platform_driver_register</a>(&amp;<a class=\"id\" href=\"#dsa_driver\">dsa_driver</a>);", 
"}", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#dsa_init_module\">dsa_init_module</a>);", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#dsa_cleanup_module\">dsa_cleanup_module</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#platform_driver_unregister\">platform_driver_unregister</a>(&amp;<a class=\"id\" href=\"#dsa_driver\">dsa_driver</a>);", 
"}", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#dsa_cleanup_module\">dsa_cleanup_module</a>);", 
"", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"Lennert Buytenhek <buytenh@wantstofly.org>\")", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"Driver for Distributed Switch Architecture switch chips\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"<a class=\"id\" href=\"#MODULE_ALIAS\">MODULE_ALIAS</a>(\"platform:dsa\");", 
];
xr_frag_insert('l/f8/872ffe7e1ba6894cc9afc5d31819cb7c46d500.xr', __xr_tmp);
