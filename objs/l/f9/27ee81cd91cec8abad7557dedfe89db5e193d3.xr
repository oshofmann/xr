var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Architecture specific (i386/x86_64) functions for kexec based crash dumps.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Created by: Hariprasad Nellitheertha (hari@in.ibm.com)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) IBM Corporation, 2004. All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#reboot\">reboot</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kexec\">kexec</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#elf\">elf</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#elfcore\">elfcore</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#hardirq\">hardirq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#nmi\">nmi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#hw_irq\">hw_irq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#apic\">apic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#hpet\">hpet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kdebug\">kdebug</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#reboot\">reboot</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#virtext\">virtext</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"int <a class=\"id\" href=\"#in_crash_kexec\">in_crash_kexec</a>;", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>) && <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>)", 
"", 
"static void <a class=\"id\" href=\"#kdump_nmi_callback\">kdump_nmi_callback</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>, struct <a class=\"id\" href=\"#die_args\">die_args</a> *<a class=\"id\" href=\"#args\">args</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> <a class=\"id\" href=\"#fixed_regs\">fixed_regs</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a> = <a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#regs\">regs</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#user_mode_vm\">user_mode_vm</a>(<a class=\"id\" href=\"#regs\">regs</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crash_fixup_ss_esp\">crash_fixup_ss_esp</a>(&amp;<a class=\"id\" href=\"#fixed_regs\">fixed_regs</a>, <a class=\"id\" href=\"#regs\">regs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a> = &amp;<a class=\"id\" href=\"#fixed_regs\">fixed_regs</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crash_save_cpu\">crash_save_cpu</a>(<a class=\"id\" href=\"#regs\">regs</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Disable VMX or SVM if needed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We need to disable virtualization on all CPUs.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Having VMX or SVM enabled on any CPU may break rebooting</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * after the kdump kernel has finished its task.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_emergency_vmxoff\">cpu_emergency_vmxoff</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_emergency_svm_disable\">cpu_emergency_svm_disable</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disable_local_APIC\">disable_local_APIC</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#kdump_nmi_shootdown_cpus\">kdump_nmi_shootdown_cpus</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_crash_kexec\">in_crash_kexec</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nmi_shootdown_cpus\">nmi_shootdown_cpus</a>(<a class=\"id\" href=\"#kdump_nmi_callback\">kdump_nmi_callback</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disable_local_APIC\">disable_local_APIC</a>();", 
"}", 
"", 
"#else", 
"static void <a class=\"id\" href=\"#kdump_nmi_shootdown_cpus\">kdump_nmi_shootdown_cpus</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* There are no cpus to shootdown */</span>", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"void <a class=\"id\" href=\"#native_machine_crash_shutdown\">native_machine_crash_shutdown</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* This function is only called after the system</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * has panicked or is otherwise in a critical state.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The minimum amount of code to allow a kexec'd kernel</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to run successfully needs to happen here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * In practice this means shooting down the other cpus in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * an SMP system.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* The kernel is broken so disable interrupts */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_disable\">local_irq_disable</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kdump_nmi_shootdown_cpus\">kdump_nmi_shootdown_cpus</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Booting kdump kernel with VMX or SVM enabled won't work,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * because (among other limitations) we can't disable paging</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * with the virt flags.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_emergency_vmxoff\">cpu_emergency_vmxoff</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_emergency_svm_disable\">cpu_emergency_svm_disable</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lapic_shutdown\">lapic_shutdown</a>();", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86_IO_APIC\">CONFIG_X86_IO_APIC</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disable_IO_APIC\">disable_IO_APIC</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HPET_TIMER\">CONFIG_HPET_TIMER</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_disable\">hpet_disable</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crash_save_cpu\">crash_save_cpu</a>(<a class=\"id\" href=\"#regs\">regs</a>, <a class=\"id\" href=\"#safe_smp_processor_id\">safe_smp_processor_id</a>());", 
"}", 
];
xr_frag_insert('l/f9/27ee81cd91cec8abad7557dedfe89db5e193d3.xr', __xr_tmp);
