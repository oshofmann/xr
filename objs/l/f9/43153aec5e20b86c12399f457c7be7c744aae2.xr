var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/mm/swap.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 1991, 1992, 1993, 1994  Linus Torvalds</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This file contains the default values for the operation of the</span>", 
"<span class=\"comment\"> * Linux VM subsystem. Fine-tuning documentation can be found in</span>", 
"<span class=\"comment\"> * Documentation/sysctl/vm.txt.</span>", 
"<span class=\"comment\"> * Started 18.12.91</span>", 
"<span class=\"comment\"> * Swap aging added 23.2.95, Stephen Tweedie.</span>", 
"<span class=\"comment\"> * Buffermem limits added 12.3.98, Rik van Riel.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel_stat\">kernel_stat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mman\">mman</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pagemap\">pagemap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pagevec\">pagevec</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm_inline\">mm_inline</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#buffer_head\">buffer_head</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"comment\">/* for try_to_release_page() */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu_counter\">percpu_counter</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu\">percpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#notifier\">notifier</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#backing\">backing</a>-<a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#memcontrol\">memcontrol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"internal.h\"", 
"", 
"<span class=\"comment\">/* How many pages do we try to swap or page in/out together? */</span>", 
"int <a class=\"id\" href=\"#page_cluster\">page_cluster</a>;", 
"", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#pagevec\">pagevec</a>[<a class=\"id\" href=\"#NR_LRU_LISTS\">NR_LRU_LISTS</a>], <a class=\"id\" href=\"#lru_add_pvecs\">lru_add_pvecs</a>);", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#pagevec\">pagevec</a>, <a class=\"id\" href=\"#lru_rotate_pvecs\">lru_rotate_pvecs</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This path almost never happens for VM activity - pages are normally</span>", 
"<span class=\"comment\"> * freed via pagevecs.  But it gets used by networking.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__page_cache_release\">__page_cache_release</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PageLRU\">PageLRU</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a> = <a class=\"id\" href=\"#page_zone\">page_zone</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lru_lock\">lru_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VM_BUG_ON\">VM_BUG_ON</a>(!<a class=\"id\" href=\"#PageLRU\">PageLRU</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ClearPageLRU\">__ClearPageLRU</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#del_page_from_lru\">del_page_from_lru</a>(<a class=\"id\" href=\"#zone\">zone</a>, <a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lru_lock\">lru_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_hot_cold_page\">free_hot_cold_page</a>(<a class=\"id\" href=\"#page\">page</a>, 0);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#put_compound_page\">put_compound_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#compound_head\">compound_head</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#put_page_testzero\">put_page_testzero</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compound_page_dtor\">compound_page_dtor</a> *<a class=\"id\" href=\"#dtor\">dtor</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dtor\">dtor</a> = <a class=\"id\" href=\"#get_compound_page_dtor\">get_compound_page_dtor</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#dtor\">dtor</a>)(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#put_page\">put_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#PageCompound\">PageCompound</a>(<a class=\"id\" href=\"#page\">page</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_compound_page\">put_compound_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#put_page_testzero\">put_page_testzero</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__page_cache_release\">__page_cache_release</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#put_page\">put_page</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * put_pages_list() - release a list of pages</span>", 
"<span class=\"comment\"> * @pages: list of pages threaded on page-&gt;lru</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Release a list of pages which are strung together on page.lru.  Currently</span>", 
"<span class=\"comment\"> * used by read_cache_pages() and related error recovery code.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#put_pages_list\">put_pages_list</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#pages\">pages</a>)", 
"{", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(<a class=\"id\" href=\"#pages\">pages</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#victim\">victim</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#victim\">victim</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#pages\">pages</a>-><a class=\"id\" href=\"#prev\">prev</a>, struct <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#lru\">lru</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#victim\">victim</a>-><a class=\"id\" href=\"#lru\">lru</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#victim\">victim</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#put_pages_list\">put_pages_list</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * pagevec_move_tail() must be called with IRQ disabled.</span>", 
"<span class=\"comment\"> * Otherwise this may cause nasty races.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#pagevec_move_tail\">pagevec_move_tail</a>(struct <a class=\"id\" href=\"#pagevec\">pagevec</a> *<a class=\"id\" href=\"#pvec\">pvec</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pgmoved\">pgmoved</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#pagevec_count\">pagevec_count</a>(<a class=\"id\" href=\"#pvec\">pvec</a>); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#pvec\">pvec</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#pagezone\">pagezone</a> = <a class=\"id\" href=\"#page_zone\">page_zone</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pagezone\">pagezone</a> != <a class=\"id\" href=\"#zone\">zone</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#zone\">zone</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lru_lock\">lru_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zone\">zone</a> = <a class=\"id\" href=\"#pagezone\">pagezone</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lru_lock\">lru_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#PageLRU\">PageLRU</a>(<a class=\"id\" href=\"#page\">page</a>) && !<a class=\"id\" href=\"#PageActive\">PageActive</a>(<a class=\"id\" href=\"#page\">page</a>) && !<a class=\"id\" href=\"#PageUnevictable\">PageUnevictable</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#lru\">lru</a> = <a class=\"id\" href=\"#page_lru_base_type\">page_lru_base_type</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_move_tail\">list_move_tail</a>(&amp;<a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#lru\">lru</a>, &amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lru\">lru</a>[<a class=\"id\" href=\"#lru\">lru</a>].<a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgmoved\">pgmoved</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#zone\">zone</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lru_lock\">lru_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__count_vm_events\">__count_vm_events</a>(<a class=\"id\" href=\"#PGROTATED\">PGROTATED</a>, <a class=\"id\" href=\"#pgmoved\">pgmoved</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_pages\">release_pages</a>(<a class=\"id\" href=\"#pvec\">pvec</a>-><a class=\"id\" href=\"#pages\">pages</a>, <a class=\"id\" href=\"#pvec\">pvec</a>-><a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#pvec\">pvec</a>-><a class=\"id\" href=\"#cold\">cold</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pagevec_reinit\">pagevec_reinit</a>(<a class=\"id\" href=\"#pvec\">pvec</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Writeback is about to end against a page which has been marked for immediate</span>", 
"<span class=\"comment\"> * reclaim.  If it still appears to be reclaimable, move it to the tail of the</span>", 
"<span class=\"comment\"> * inactive list.</span>", 
"<span class=\"comment\"> */</span>", 
"void  <a class=\"id\" href=\"#rotate_reclaimable_page\">rotate_reclaimable_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#PageLocked\">PageLocked</a>(<a class=\"id\" href=\"#page\">page</a>) && !<a class=\"id\" href=\"#PageDirty\">PageDirty</a>(<a class=\"id\" href=\"#page\">page</a>) && !<a class=\"id\" href=\"#PageActive\">PageActive</a>(<a class=\"id\" href=\"#page\">page</a>) &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#PageUnevictable\">PageUnevictable</a>(<a class=\"id\" href=\"#page\">page</a>) && <a class=\"id\" href=\"#PageLRU\">PageLRU</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pagevec\">pagevec</a> *<a class=\"id\" href=\"#pvec\">pvec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_get\">page_cache_get</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pvec\">pvec</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#lru_rotate_pvecs\">lru_rotate_pvecs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pagevec_add\">pagevec_add</a>(<a class=\"id\" href=\"#pvec\">pvec</a>, <a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pagevec_move_tail\">pagevec_move_tail</a>(<a class=\"id\" href=\"#pvec\">pvec</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#update_page_reclaim_stat\">update_page_reclaim_stat</a>(struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#file\">file</a>, int <a class=\"id\" href=\"#rotated\">rotated</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#zone_reclaim_stat\">zone_reclaim_stat</a> *<a class=\"id\" href=\"#reclaim_stat\">reclaim_stat</a> = &amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#reclaim_stat\">reclaim_stat</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#zone_reclaim_stat\">zone_reclaim_stat</a> *<a class=\"id\" href=\"#memcg_reclaim_stat\">memcg_reclaim_stat</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcg_reclaim_stat\">memcg_reclaim_stat</a> = <a class=\"id\" href=\"#mem_cgroup_get_reclaim_stat_from_page\">mem_cgroup_get_reclaim_stat_from_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reclaim_stat\">reclaim_stat</a>-><a class=\"id\" href=\"#recent_scanned\">recent_scanned</a>[<a class=\"id\" href=\"#file\">file</a>]++;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rotated\">rotated</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reclaim_stat\">reclaim_stat</a>-><a class=\"id\" href=\"#recent_rotated\">recent_rotated</a>[<a class=\"id\" href=\"#file\">file</a>]++;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#memcg_reclaim_stat\">memcg_reclaim_stat</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcg_reclaim_stat\">memcg_reclaim_stat</a>-><a class=\"id\" href=\"#recent_scanned\">recent_scanned</a>[<a class=\"id\" href=\"#file\">file</a>]++;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rotated\">rotated</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcg_reclaim_stat\">memcg_reclaim_stat</a>-><a class=\"id\" href=\"#recent_rotated\">recent_rotated</a>[<a class=\"id\" href=\"#file\">file</a>]++;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * FIXME: speed this up?</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#activate_page\">activate_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a> = <a class=\"id\" href=\"#page_zone\">page_zone</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lru_lock\">lru_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PageLRU\">PageLRU</a>(<a class=\"id\" href=\"#page\">page</a>) && !<a class=\"id\" href=\"#PageActive\">PageActive</a>(<a class=\"id\" href=\"#page\">page</a>) && !<a class=\"id\" href=\"#PageUnevictable\">PageUnevictable</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#page_is_file_cache\">page_is_file_cache</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#lru\">lru</a> = <a class=\"id\" href=\"#page_lru_base_type\">page_lru_base_type</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#del_page_from_lru_list\">del_page_from_lru_list</a>(<a class=\"id\" href=\"#zone\">zone</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#lru\">lru</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SetPageActive\">SetPageActive</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lru\">lru</a> += <a class=\"id\" href=\"#LRU_ACTIVE\">LRU_ACTIVE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_page_to_lru_list\">add_page_to_lru_list</a>(<a class=\"id\" href=\"#zone\">zone</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#lru\">lru</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__count_vm_event\">__count_vm_event</a>(<a class=\"id\" href=\"#PGACTIVATE\">PGACTIVATE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#update_page_reclaim_stat\">update_page_reclaim_stat</a>(<a class=\"id\" href=\"#zone\">zone</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#file\">file</a>, 1);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lru_lock\">lru_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Mark a page as having seen activity.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * inactive,unreferenced<span class=\"ts\"/>-&gt;<span class=\"ts\"/>inactive,referenced</span>", 
"<span class=\"comment\"> * inactive,referenced<span class=\"ts\"/><span class=\"ts\"/>-&gt;<span class=\"ts\"/>active,unreferenced</span>", 
"<span class=\"comment\"> * active,unreferenced<span class=\"ts\"/><span class=\"ts\"/>-&gt;<span class=\"ts\"/>active,referenced</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#mark_page_accessed\">mark_page_accessed</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#PageActive\">PageActive</a>(<a class=\"id\" href=\"#page\">page</a>) && !<a class=\"id\" href=\"#PageUnevictable\">PageUnevictable</a>(<a class=\"id\" href=\"#page\">page</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PageReferenced\">PageReferenced</a>(<a class=\"id\" href=\"#page\">page</a>) && <a class=\"id\" href=\"#PageLRU\">PageLRU</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#activate_page\">activate_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ClearPageReferenced\">ClearPageReferenced</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#PageReferenced\">PageReferenced</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SetPageReferenced\">SetPageReferenced</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#mark_page_accessed\">mark_page_accessed</a>);", 
"", 
"void <a class=\"id\" href=\"#__lru_cache_add\">__lru_cache_add</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#lru\">lru</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pagevec\">pagevec</a> *<a class=\"id\" href=\"#pvec\">pvec</a> = &amp;<a class=\"id\" href=\"#get_cpu_var\">get_cpu_var</a>(<a class=\"id\" href=\"#lru_add_pvecs\">lru_add_pvecs</a>)[<a class=\"id\" href=\"#lru\">lru</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page_cache_get\">page_cache_get</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pagevec_add\">pagevec_add</a>(<a class=\"id\" href=\"#pvec\">pvec</a>, <a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#____pagevec_lru_add\">____pagevec_lru_add</a>(<a class=\"id\" href=\"#pvec\">pvec</a>, <a class=\"id\" href=\"#lru\">lru</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_cpu_var\">put_cpu_var</a>(<a class=\"id\" href=\"#lru_add_pvecs\">lru_add_pvecs</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__lru_cache_add\">__lru_cache_add</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * lru_cache_add_lru - add a page to a page list</span>", 
"<span class=\"comment\"> * @page: the page to be added to the LRU.</span>", 
"<span class=\"comment\"> * @lru: the LRU list to which the page is added.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#lru_cache_add_lru\">lru_cache_add_lru</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#lru\">lru</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PageActive\">PageActive</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VM_BUG_ON\">VM_BUG_ON</a>(<a class=\"id\" href=\"#PageUnevictable\">PageUnevictable</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ClearPageActive\">ClearPageActive</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#PageUnevictable\">PageUnevictable</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VM_BUG_ON\">VM_BUG_ON</a>(<a class=\"id\" href=\"#PageActive\">PageActive</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ClearPageUnevictable\">ClearPageUnevictable</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VM_BUG_ON\">VM_BUG_ON</a>(<a class=\"id\" href=\"#PageLRU\">PageLRU</a>(<a class=\"id\" href=\"#page\">page</a>) || <a class=\"id\" href=\"#PageActive\">PageActive</a>(<a class=\"id\" href=\"#page\">page</a>) || <a class=\"id\" href=\"#PageUnevictable\">PageUnevictable</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__lru_cache_add\">__lru_cache_add</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#lru\">lru</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * add_page_to_unevictable_list - add a page to the unevictable list</span>", 
"<span class=\"comment\"> * @page:  the page to be added to the unevictable list</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Add page directly to its zone's unevictable list.  To avoid races with</span>", 
"<span class=\"comment\"> * tasks that might be making the page evictable, through eg. munlock,</span>", 
"<span class=\"comment\"> * munmap or exit, while it's not on the lru, we want to add the page</span>", 
"<span class=\"comment\"> * while it's locked or otherwise \"invisible\" to other tasks.  This is</span>", 
"<span class=\"comment\"> * difficult to do when using the pagevec cache, so bypass that.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#add_page_to_unevictable_list\">add_page_to_unevictable_list</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a> = <a class=\"id\" href=\"#page_zone\">page_zone</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lru_lock\">lru_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SetPageUnevictable\">SetPageUnevictable</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SetPageLRU\">SetPageLRU</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_page_to_lru_list\">add_page_to_lru_list</a>(<a class=\"id\" href=\"#zone\">zone</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#LRU_UNEVICTABLE\">LRU_UNEVICTABLE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lru_lock\">lru_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Drain pages out of the cpu's pagevecs.</span>", 
"<span class=\"comment\"> * Either \"cpu\" is the current CPU, and preemption has already been</span>", 
"<span class=\"comment\"> * disabled; or \"cpu\" is being hot-unplugged, and is already dead.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#drain_cpu_pagevecs\">drain_cpu_pagevecs</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pagevec\">pagevec</a> *<a class=\"id\" href=\"#pvecs\">pvecs</a> = <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#lru_add_pvecs\">lru_add_pvecs</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pagevec\">pagevec</a> *<a class=\"id\" href=\"#pvec\">pvec</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#lru\">lru</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_lru\">for_each_lru</a>(<a class=\"id\" href=\"#lru\">lru</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pvec\">pvec</a> = &amp;<a class=\"id\" href=\"#pvecs\">pvecs</a>[<a class=\"id\" href=\"#lru\">lru</a> - <a class=\"id\" href=\"#LRU_BASE\">LRU_BASE</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pagevec_count\">pagevec_count</a>(<a class=\"id\" href=\"#pvec\">pvec</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#____pagevec_lru_add\">____pagevec_lru_add</a>(<a class=\"id\" href=\"#pvec\">pvec</a>, <a class=\"id\" href=\"#lru\">lru</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pvec\">pvec</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#lru_rotate_pvecs\">lru_rotate_pvecs</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pagevec_count\">pagevec_count</a>(<a class=\"id\" href=\"#pvec\">pvec</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No harm done if a racing interrupt already did this */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pagevec_move_tail\">pagevec_move_tail</a>(<a class=\"id\" href=\"#pvec\">pvec</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#lru_add_drain\">lru_add_drain</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drain_cpu_pagevecs\">drain_cpu_pagevecs</a>(<a class=\"id\" href=\"#get_cpu\">get_cpu</a>());", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_cpu\">put_cpu</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#lru_add_drain_per_cpu\">lru_add_drain_per_cpu</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#dummy\">dummy</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lru_add_drain\">lru_add_drain</a>();", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Returns 0 for success</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#lru_add_drain_all\">lru_add_drain_all</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#schedule_on_each_cpu\">schedule_on_each_cpu</a>(<a class=\"id\" href=\"#lru_add_drain_per_cpu\">lru_add_drain_per_cpu</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Batched page_cache_release().  Decrement the reference count on all the</span>", 
"<span class=\"comment\"> * passed pages.  If it fell to zero then remove the page from the LRU and</span>", 
"<span class=\"comment\"> * free it.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Avoid taking zone-&gt;lru_lock if possible, but if it is taken, retain it</span>", 
"<span class=\"comment\"> * for the remainder of the operation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The locking in this function is against shrink_inactive_list(): we recheck</span>", 
"<span class=\"comment\"> * the page count inside the lock to see whether shrink_inactive_list()</span>", 
"<span class=\"comment\"> * grabbed the page via the LRU.  If it did, give up: shrink_inactive_list()</span>", 
"<span class=\"comment\"> * will free it.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#release_pages\">release_pages</a>(struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#pages\">pages</a>, int <a class=\"id\" href=\"#nr\">nr</a>, int <a class=\"id\" href=\"#cold\">cold</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pagevec\">pagevec</a> <a class=\"id\" href=\"#pages_to_free\">pages_to_free</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#uninitialized_var\">uninitialized_var</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pagevec_init\">pagevec_init</a>(&amp;<a class=\"id\" href=\"#pages_to_free\">pages_to_free</a>, <a class=\"id\" href=\"#cold\">cold</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr\">nr</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#PageCompound\">PageCompound</a>(<a class=\"id\" href=\"#page\">page</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#zone\">zone</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lru_lock\">lru_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zone\">zone</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_compound_page\">put_compound_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#put_page_testzero\">put_page_testzero</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#PageLRU\">PageLRU</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#pagezone\">pagezone</a> = <a class=\"id\" href=\"#page_zone\">page_zone</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pagezone\">pagezone</a> != <a class=\"id\" href=\"#zone\">zone</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#zone\">zone</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lru_lock\">lru_lock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zone\">zone</a> = <a class=\"id\" href=\"#pagezone\">pagezone</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lru_lock\">lru_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VM_BUG_ON\">VM_BUG_ON</a>(!<a class=\"id\" href=\"#PageLRU\">PageLRU</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ClearPageLRU\">__ClearPageLRU</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#del_page_from_lru\">del_page_from_lru</a>(<a class=\"id\" href=\"#zone\">zone</a>, <a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pagevec_add\">pagevec_add</a>(&amp;<a class=\"id\" href=\"#pages_to_free\">pages_to_free</a>, <a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#zone\">zone</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lru_lock\">lru_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zone\">zone</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__pagevec_free\">__pagevec_free</a>(&amp;<a class=\"id\" href=\"#pages_to_free\">pages_to_free</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pagevec_reinit\">pagevec_reinit</a>(&amp;<a class=\"id\" href=\"#pages_to_free\">pages_to_free</a>);", 
"  <span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#zone\">zone</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lru_lock\">lru_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pagevec_free\">pagevec_free</a>(&amp;<a class=\"id\" href=\"#pages_to_free\">pages_to_free</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The pages which we're about to release may be in the deferred lru-addition</span>", 
"<span class=\"comment\"> * queues.  That would prevent them from really being freed right now.  That's</span>", 
"<span class=\"comment\"> * OK from a correctness point of view but is inefficient - those pages may be</span>", 
"<span class=\"comment\"> * cache-warm and we want to give them back to the page allocator ASAP.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * So __pagevec_release() will drain those queues here.  __pagevec_lru_add()</span>", 
"<span class=\"comment\"> * and __pagevec_lru_add_active() call release_pages() directly to avoid</span>", 
"<span class=\"comment\"> * mutual recursion.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__pagevec_release\">__pagevec_release</a>(struct <a class=\"id\" href=\"#pagevec\">pagevec</a> *<a class=\"id\" href=\"#pvec\">pvec</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lru_add_drain\">lru_add_drain</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_pages\">release_pages</a>(<a class=\"id\" href=\"#pvec\">pvec</a>-><a class=\"id\" href=\"#pages\">pages</a>, <a class=\"id\" href=\"#pagevec_count\">pagevec_count</a>(<a class=\"id\" href=\"#pvec\">pvec</a>), <a class=\"id\" href=\"#pvec\">pvec</a>-><a class=\"id\" href=\"#cold\">cold</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pagevec_reinit\">pagevec_reinit</a>(<a class=\"id\" href=\"#pvec\">pvec</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__pagevec_release\">__pagevec_release</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Add the passed pages to the LRU, then drop the caller's refcount</span>", 
"<span class=\"comment\"> * on them.  Reinitialises the caller's pagevec.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#____pagevec_lru_add\">____pagevec_lru_add</a>(struct <a class=\"id\" href=\"#pagevec\">pagevec</a> *<a class=\"id\" href=\"#pvec\">pvec</a>, enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#lru\">lru</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VM_BUG_ON\">VM_BUG_ON</a>(<a class=\"id\" href=\"#is_unevictable_lru\">is_unevictable_lru</a>(<a class=\"id\" href=\"#lru\">lru</a>));", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#pagevec_count\">pagevec_count</a>(<a class=\"id\" href=\"#pvec\">pvec</a>); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#pvec\">pvec</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#pagezone\">pagezone</a> = <a class=\"id\" href=\"#page_zone\">page_zone</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#active\">active</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pagezone\">pagezone</a> != <a class=\"id\" href=\"#zone\">zone</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#zone\">zone</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lru_lock\">lru_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zone\">zone</a> = <a class=\"id\" href=\"#pagezone\">pagezone</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lru_lock\">lru_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VM_BUG_ON\">VM_BUG_ON</a>(<a class=\"id\" href=\"#PageActive\">PageActive</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VM_BUG_ON\">VM_BUG_ON</a>(<a class=\"id\" href=\"#PageUnevictable\">PageUnevictable</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VM_BUG_ON\">VM_BUG_ON</a>(<a class=\"id\" href=\"#PageLRU\">PageLRU</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SetPageLRU\">SetPageLRU</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#active\">active</a> = <a class=\"id\" href=\"#is_active_lru\">is_active_lru</a>(<a class=\"id\" href=\"#lru\">lru</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#is_file_lru\">is_file_lru</a>(<a class=\"id\" href=\"#lru\">lru</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#active\">active</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SetPageActive\">SetPageActive</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#update_page_reclaim_stat\">update_page_reclaim_stat</a>(<a class=\"id\" href=\"#zone\">zone</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#active\">active</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_page_to_lru_list\">add_page_to_lru_list</a>(<a class=\"id\" href=\"#zone\">zone</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#lru\">lru</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#zone\">zone</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lru_lock\">lru_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_pages\">release_pages</a>(<a class=\"id\" href=\"#pvec\">pvec</a>-><a class=\"id\" href=\"#pages\">pages</a>, <a class=\"id\" href=\"#pvec\">pvec</a>-><a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#pvec\">pvec</a>-><a class=\"id\" href=\"#cold\">cold</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pagevec_reinit\">pagevec_reinit</a>(<a class=\"id\" href=\"#pvec\">pvec</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#____pagevec_lru_add\">____pagevec_lru_add</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Try to drop buffers from the pages in a pagevec</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#pagevec_strip\">pagevec_strip</a>(struct <a class=\"id\" href=\"#pagevec\">pagevec</a> *<a class=\"id\" href=\"#pvec\">pvec</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#pagevec_count\">pagevec_count</a>(<a class=\"id\" href=\"#pvec\">pvec</a>); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#pvec\">pvec</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page_has_private\">page_has_private</a>(<a class=\"id\" href=\"#page\">page</a>) && <a class=\"id\" href=\"#trylock_page\">trylock_page</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page_has_private\">page_has_private</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#try_to_release_page\">try_to_release_page</a>(<a class=\"id\" href=\"#page\">page</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pagevec_lookup - gang pagecache lookup</span>", 
"<span class=\"comment\"> * @pvec:<span class=\"ts\"/>Where the resulting pages are placed</span>", 
"<span class=\"comment\"> * @mapping:<span class=\"ts\"/>The address_space to search</span>", 
"<span class=\"comment\"> * @start:<span class=\"ts\"/>The starting page index</span>", 
"<span class=\"comment\"> * @nr_pages:<span class=\"ts\"/>The maximum number of pages</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * pagevec_lookup() will search for and return a group of up to @nr_pages pages</span>", 
"<span class=\"comment\"> * in the mapping.  The pages are placed in @pvec.  pagevec_lookup() takes a</span>", 
"<span class=\"comment\"> * reference against the pages in @pvec.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The search returns a group of mapping-contiguous pages with ascending</span>", 
"<span class=\"comment\"> * indexes.  There may be holes in the indices due to not-present pages.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * pagevec_lookup() returns the number of pages which were found.</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned <a class=\"id\" href=\"#pagevec_lookup\">pagevec_lookup</a>(struct <a class=\"id\" href=\"#pagevec\">pagevec</a> *<a class=\"id\" href=\"#pvec\">pvec</a>, struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#start\">start</a>, unsigned <a class=\"id\" href=\"#nr_pages\">nr_pages</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pvec\">pvec</a>-><a class=\"id\" href=\"#nr\">nr</a> = <a class=\"id\" href=\"#find_get_pages\">find_get_pages</a>(<a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#nr_pages\">nr_pages</a>, <a class=\"id\" href=\"#pvec\">pvec</a>-><a class=\"id\" href=\"#pages\">pages</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pagevec_count\">pagevec_count</a>(<a class=\"id\" href=\"#pvec\">pvec</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pagevec_lookup\">pagevec_lookup</a>);", 
"", 
"unsigned <a class=\"id\" href=\"#pagevec_lookup_tag\">pagevec_lookup_tag</a>(struct <a class=\"id\" href=\"#pagevec\">pagevec</a> *<a class=\"id\" href=\"#pvec\">pvec</a>, struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> *<a class=\"id\" href=\"#index\">index</a>, int <a class=\"id\" href=\"#tag\">tag</a>, unsigned <a class=\"id\" href=\"#nr_pages\">nr_pages</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pvec\">pvec</a>-><a class=\"id\" href=\"#nr\">nr</a> = <a class=\"id\" href=\"#find_get_pages_tag\">find_get_pages_tag</a>(<a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#tag\">tag</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_pages\">nr_pages</a>, <a class=\"id\" href=\"#pvec\">pvec</a>-><a class=\"id\" href=\"#pages\">pages</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pagevec_count\">pagevec_count</a>(<a class=\"id\" href=\"#pvec\">pvec</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pagevec_lookup_tag\">pagevec_lookup_tag</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Perform any setup for the swap system</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#swap_setup\">swap_setup</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#megs\">megs</a> = <a class=\"id\" href=\"#totalram_pages\">totalram_pages</a> >> (20 - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SWAP\">CONFIG_SWAP</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bdi_init\">bdi_init</a>(<a class=\"id\" href=\"#swapper_space\">swapper_space</a>.<a class=\"id\" href=\"#backing_dev_info\">backing_dev_info</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Use a smaller cluster for small-memory machines */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#megs\">megs</a> &lt; 16)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cluster\">page_cluster</a> = 2;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cluster\">page_cluster</a> = 3;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Right now other parts of the system means that we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * _really_ don't want to cluster much more</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"}", 
];
xr_frag_insert('l/f9/43153aec5e20b86c12399f457c7be7c744aae2.xr', __xr_tmp);
