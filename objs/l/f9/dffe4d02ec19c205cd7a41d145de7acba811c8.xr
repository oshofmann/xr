var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Definitions of structures and functions for quota formats using trie</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_DQBLK_QTREE_H\">_LINUX_DQBLK_QTREE_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_DQBLK_QTREE_H\">_LINUX_DQBLK_QTREE_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Numbers of blocks needed for updates - we count with the smallest</span>", 
"<span class=\"comment\"> * possible block size (1024) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QTREE_INIT_ALLOC\">QTREE_INIT_ALLOC</a> 4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QTREE_INIT_REWRITE\">QTREE_INIT_REWRITE</a> 2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QTREE_DEL_ALLOC\">QTREE_DEL_ALLOC</a> 0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QTREE_DEL_REWRITE\">QTREE_DEL_REWRITE</a> 6", 
"", 
"struct <a class=\"id\" href=\"#dquot\">dquot</a>;", 
"", 
"<span class=\"comment\">/* Operations */</span>", 
"struct <a class=\"id\" href=\"#qtree_fmt_operations\">qtree_fmt_operations</a> {", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#mem2disk_dqblk\">mem2disk_dqblk</a>)(void *<a class=\"id\" href=\"#disk\">disk</a>, struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>);<span class=\"ts\"/><span class=\"comment\">/* Convert given entry from in memory format to disk one */</span>", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#disk2mem_dqblk\">disk2mem_dqblk</a>)(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>, void *<a class=\"id\" href=\"#disk\">disk</a>);<span class=\"ts\"/><span class=\"comment\">/* Convert given entry from disk format to in memory one */</span>", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#is_id\">is_id</a>)(void *<a class=\"id\" href=\"#disk\">disk</a>, struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>);<span class=\"ts\"/><span class=\"comment\">/* Is this structure for given id? */</span>", 
"};", 
"", 
"<span class=\"comment\">/* Inmemory copy of version specific information */</span>", 
"struct <a class=\"id\" href=\"#qtree_mem_dqinfo\">qtree_mem_dqinfo</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#dqi_sb\">dqi_sb</a>;<span class=\"ts\"/><span class=\"comment\">/* Sb quota is on */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#dqi_type\">dqi_type</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Quota type */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#dqi_blocks\">dqi_blocks</a>;<span class=\"ts\"/><span class=\"comment\">/* # of blocks in quota file */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#dqi_free_blk\">dqi_free_blk</a>;<span class=\"ts\"/><span class=\"comment\">/* First block in list of free blocks */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#dqi_free_entry\">dqi_free_entry</a>;<span class=\"ts\"/><span class=\"comment\">/* First block with free entry */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#dqi_blocksize_bits\">dqi_blocksize_bits</a>;<span class=\"ts\"/><span class=\"comment\">/* Block size of quota file */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#dqi_entry_size\">dqi_entry_size</a>;<span class=\"ts\"/><span class=\"comment\">/* Size of quota entry in quota file */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#dqi_usable_bs\">dqi_usable_bs</a>;<span class=\"ts\"/><span class=\"comment\">/* Space usable in block for quota data */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#dqi_qtree_depth\">dqi_qtree_depth</a>;<span class=\"ts\"/><span class=\"comment\">/* Precomputed depth of quota tree */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#qtree_fmt_operations\">qtree_fmt_operations</a> *<a class=\"id\" href=\"#dqi_ops\">dqi_ops</a>;<span class=\"ts\"/><span class=\"comment\">/* Operations for entry manipulation */</span>", 
"};", 
"", 
"int <a class=\"id\" href=\"#qtree_write_dquot\">qtree_write_dquot</a>(struct <a class=\"id\" href=\"#qtree_mem_dqinfo\">qtree_mem_dqinfo</a> *<a class=\"id\" href=\"#info\">info</a>, struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"int <a class=\"id\" href=\"#qtree_read_dquot\">qtree_read_dquot</a>(struct <a class=\"id\" href=\"#qtree_mem_dqinfo\">qtree_mem_dqinfo</a> *<a class=\"id\" href=\"#info\">info</a>, struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"int <a class=\"id\" href=\"#qtree_delete_dquot\">qtree_delete_dquot</a>(struct <a class=\"id\" href=\"#qtree_mem_dqinfo\">qtree_mem_dqinfo</a> *<a class=\"id\" href=\"#info\">info</a>, struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"int <a class=\"id\" href=\"#qtree_release_dquot\">qtree_release_dquot</a>(struct <a class=\"id\" href=\"#qtree_mem_dqinfo\">qtree_mem_dqinfo</a> *<a class=\"id\" href=\"#info\">info</a>, struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"int <a class=\"id\" href=\"#qtree_entry_unused\">qtree_entry_unused</a>(struct <a class=\"id\" href=\"#qtree_mem_dqinfo\">qtree_mem_dqinfo</a> *<a class=\"id\" href=\"#info\">info</a>, char *<a class=\"id\" href=\"#disk\">disk</a>);", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#qtree_depth\">qtree_depth</a>(struct <a class=\"id\" href=\"#qtree_mem_dqinfo\">qtree_mem_dqinfo</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#epb\">epb</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#dqi_usable_bs\">dqi_usable_bs</a> >> 2;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#entries\">entries</a> = <a class=\"id\" href=\"#epb\">epb</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 1; <a class=\"id\" href=\"#entries\">entries</a> &lt; (1ULL << 32); <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entries\">entries</a> *= <a class=\"id\" href=\"#epb\">epb</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#i\">i</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_DQBLK_QTREE_H */</span>", 
];
xr_frag_insert('l/f9/dffe4d02ec19c205cd7a41d145de7acba811c8.xr', __xr_tmp);
