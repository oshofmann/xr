var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Generic address resolution entity</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Authors:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pedro Roque<span class=\"ts\"/><span class=\"ts\"/>&lt;roque@di.fc.ul.pt&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Alexey Kuznetsov<span class=\"ts\"/>&lt;kuznet@ms2.inr.ac.ru&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *      modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *      as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *      2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Fixes:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Vitaly E. Lavrov<span class=\"ts\"/>releasing NULL neighbor in neigh_add.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Harald Welte<span class=\"ts\"/><span class=\"ts\"/>Add neighbour cache statistics like rtstat</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#times\">times</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#neighbour\">neighbour</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#netevent\">netevent</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#netlink\">netlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rtnetlink\">rtnetlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#random\">random</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#log2\">log2</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NEIGH_DEBUG\">NEIGH_DEBUG</a> 1", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NEIGH_PRINTK\">NEIGH_PRINTK</a>(<a class=\"id\" href=\"#x\">x</a>...) <a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#x\">x</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NEIGH_NOPRINTK\">NEIGH_NOPRINTK</a>(<a class=\"id\" href=\"#x\">x</a>...) do { ; } while(0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NEIGH_PRINTK0\">NEIGH_PRINTK0</a> <a class=\"id\" href=\"#NEIGH_PRINTK\">NEIGH_PRINTK</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NEIGH_PRINTK1\">NEIGH_PRINTK1</a> <a class=\"id\" href=\"#NEIGH_NOPRINTK\">NEIGH_NOPRINTK</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NEIGH_PRINTK2\">NEIGH_PRINTK2</a> <a class=\"id\" href=\"#NEIGH_NOPRINTK\">NEIGH_NOPRINTK</a>", 
"", 
"#if <a class=\"id\" href=\"#NEIGH_DEBUG\">NEIGH_DEBUG</a> >= 1", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#NEIGH_PRINTK1\">NEIGH_PRINTK1</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NEIGH_PRINTK1\">NEIGH_PRINTK1</a> <a class=\"id\" href=\"#NEIGH_PRINTK\">NEIGH_PRINTK</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#if <a class=\"id\" href=\"#NEIGH_DEBUG\">NEIGH_DEBUG</a> >= 2", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#NEIGH_PRINTK2\">NEIGH_PRINTK2</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NEIGH_PRINTK2\">NEIGH_PRINTK2</a> <a class=\"id\" href=\"#NEIGH_PRINTK\">NEIGH_PRINTK</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PNEIGH_HASHMASK\">PNEIGH_HASHMASK</a><span class=\"ts\"/><span class=\"ts\"/>0xF", 
"", 
"static void <a class=\"id\" href=\"#neigh_timer_handler\">neigh_timer_handler</a>(unsigned long <a class=\"id\" href=\"#arg\">arg</a>);", 
"static void <a class=\"id\" href=\"#__neigh_notify\">__neigh_notify</a>(struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#n\">n</a>, int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#flags\">flags</a>);", 
"static void <a class=\"id\" href=\"#neigh_update_notify\">neigh_update_notify</a>(struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>);", 
"static int <a class=\"id\" href=\"#pneigh_ifdown\">pneigh_ifdown</a>(struct <a class=\"id\" href=\"#neigh_table\">neigh_table</a> *<a class=\"id\" href=\"#tbl\">tbl</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"static struct <a class=\"id\" href=\"#neigh_table\">neigh_table</a> *<a class=\"id\" href=\"#neigh_tables\">neigh_tables</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#neigh_stat_seq_fops\">neigh_stat_seq_fops</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\">   Neighbour hash table buckets are protected with rwlock tbl-&gt;lock.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   - All the scans/updates to hash buckets MUST be made under this lock.</span>", 
"<span class=\"comment\">   - NOTHING clever should be made under this lock: no callbacks</span>", 
"<span class=\"comment\">     to protocol backends, no attempts to send something to network.</span>", 
"<span class=\"comment\">     It will result in deadlocks, if backend/driver wants to use neighbour</span>", 
"<span class=\"comment\">     cache.</span>", 
"<span class=\"comment\">   - If the entry requires some non-trivial actions, increase</span>", 
"<span class=\"comment\">     its reference count and release table lock.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   Neighbour entries are protected:</span>", 
"<span class=\"comment\">   - with reference count.</span>", 
"<span class=\"comment\">   - with rwlock neigh-&gt;lock</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   Reference count prevents destruction.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   neigh-&gt;lock mainly serializes ll address data and its validity state.</span>", 
"<span class=\"comment\">   However, the same lock is used to protect another entry fields:</span>", 
"<span class=\"comment\">    - timer</span>", 
"<span class=\"comment\">    - resolution queue</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   Again, nothing clever shall be made under neigh-&gt;lock,</span>", 
"<span class=\"comment\">   the most complicated procedure, which we allow is dev-&gt;hard_header.</span>", 
"<span class=\"comment\">   It is supposed, that dev-&gt;hard_header is simplistic and does</span>", 
"<span class=\"comment\">   not make callbacks to neighbour tables.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   The last lock is neigh_tbl_lock. It is pure SMP lock, protecting</span>", 
"<span class=\"comment\">   list of neighbour tables. This list is used only in process context,</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#DEFINE_RWLOCK\">DEFINE_RWLOCK</a>(<a class=\"id\" href=\"#neigh_tbl_lock\">neigh_tbl_lock</a>);", 
"", 
"static int <a class=\"id\" href=\"#neigh_blackhole\">neigh_blackhole</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENETDOWN\">ENETDOWN</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#neigh_cleanup_and_release\">neigh_cleanup_and_release</a>(struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#parms\">parms</a>-><a class=\"id\" href=\"#neigh_cleanup\">neigh_cleanup</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#parms\">parms</a>-><a class=\"id\" href=\"#neigh_cleanup\">neigh_cleanup</a>(<a class=\"id\" href=\"#neigh\">neigh</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__neigh_notify\">__neigh_notify</a>(<a class=\"id\" href=\"#neigh\">neigh</a>, <a class=\"id\" href=\"#RTM_DELNEIGH\">RTM_DELNEIGH</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neigh_release\">neigh_release</a>(<a class=\"id\" href=\"#neigh\">neigh</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * It is random distribution in the interval (1/2)*base...(3/2)*base.</span>", 
"<span class=\"comment\"> * It corresponds to default IPv6 settings and is not overridable,</span>", 
"<span class=\"comment\"> * because it is really reasonable choice.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"unsigned long <a class=\"id\" href=\"#neigh_rand_reach_time\">neigh_rand_reach_time</a>(unsigned long <a class=\"id\" href=\"#base\">base</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#base\">base</a> ? (<a class=\"id\" href=\"#net_random\">net_random</a>() % <a class=\"id\" href=\"#base\">base</a>) + (<a class=\"id\" href=\"#base\">base</a> >> 1) : 0);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#neigh_rand_reach_time\">neigh_rand_reach_time</a>);", 
"", 
"", 
"static int <a class=\"id\" href=\"#neigh_forced_gc\">neigh_forced_gc</a>(struct <a class=\"id\" href=\"#neigh_table\">neigh_table</a> *<a class=\"id\" href=\"#tbl\">tbl</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#shrunk\">shrunk</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NEIGH_CACHE_STAT_INC\">NEIGH_CACHE_STAT_INC</a>(<a class=\"id\" href=\"#tbl\">tbl</a>, <a class=\"id\" href=\"#forced_gc_runs\">forced_gc_runs</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> <= <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash_mask\">hash_mask</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#n\">n</a>, **<a class=\"id\" href=\"#np\">np</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a> = &amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash_buckets\">hash_buckets</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>while ((<a class=\"id\" href=\"#n\">n</a> = *<a class=\"id\" href=\"#np\">np</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Neighbour record may be discarded if:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * - nobody refers to it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * - it is not permanent</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>) == 1 &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a> &amp; <a class=\"id\" href=\"#NUD_PERMANENT\">NUD_PERMANENT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#np\">np</a><span class=\"ts\"/>= <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#dead\">dead</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shrunk\">shrunk</a><span class=\"ts\"/>= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_cleanup_and_release\">neigh_cleanup_and_release</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a> = &amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#last_flush\">last_flush</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#shrunk\">shrunk</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#neigh_add_timer\">neigh_add_timer</a>(struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#n\">n</a>, unsigned long <a class=\"id\" href=\"#when\">when</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neigh_hold\">neigh_hold</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#when\">when</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"NEIGH: BUG, double timer add, state is %x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dump_stack\">dump_stack</a>();", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#neigh_del_timer\">neigh_del_timer</a>(struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a> &amp; <a class=\"id\" href=\"#NUD_IN_TIMER\">NUD_IN_TIMER</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#del_timer\">del_timer</a>(&amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#timer\">timer</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_release\">neigh_release</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pneigh_queue_purge\">pneigh_queue_purge</a>(struct <a class=\"id\" href=\"#sk_buff_head\">sk_buff_head</a> *<a class=\"id\" href=\"#list\">list</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_dequeue\">skb_dequeue</a>(<a class=\"id\" href=\"#list\">list</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#neigh_flush_dev\">neigh_flush_dev</a>(struct <a class=\"id\" href=\"#neigh_table\">neigh_table</a> *<a class=\"id\" href=\"#tbl\">tbl</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> <= <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash_mask\">hash_mask</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#n\">n</a>, **<a class=\"id\" href=\"#np\">np</a> = &amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash_buckets\">hash_buckets</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>while ((<a class=\"id\" href=\"#n\">n</a> = *<a class=\"id\" href=\"#np\">np</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> && <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#dev\">dev</a> != <a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a> = &amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_del_timer\">neigh_del_timer</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#dead\">dead</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>) != 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The most unpleasant situation.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   We must destroy neighbour entry,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   but someone still uses it.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   The destroy will be delayed until</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   the last user releases us, but</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   we must kill timers etc. and move</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   it to safe state.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_purge\">skb_queue_purge</a>(&amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#arp_queue\">arp_queue</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#output\">output</a> = <a class=\"id\" href=\"#neigh_blackhole\">neigh_blackhole</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a> &amp; <a class=\"id\" href=\"#NUD_VALID\">NUD_VALID</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a> = <a class=\"id\" href=\"#NUD_NOARP\">NUD_NOARP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a> = <a class=\"id\" href=\"#NUD_NONE\">NUD_NONE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NEIGH_PRINTK2\">NEIGH_PRINTK2</a>(\"neigh %p is stray.\\n\", <a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_cleanup_and_release\">neigh_cleanup_and_release</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#neigh_changeaddr\">neigh_changeaddr</a>(struct <a class=\"id\" href=\"#neigh_table\">neigh_table</a> *<a class=\"id\" href=\"#tbl\">tbl</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neigh_flush_dev\">neigh_flush_dev</a>(<a class=\"id\" href=\"#tbl\">tbl</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#neigh_changeaddr\">neigh_changeaddr</a>);", 
"", 
"int <a class=\"id\" href=\"#neigh_ifdown\">neigh_ifdown</a>(struct <a class=\"id\" href=\"#neigh_table\">neigh_table</a> *<a class=\"id\" href=\"#tbl\">tbl</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neigh_flush_dev\">neigh_flush_dev</a>(<a class=\"id\" href=\"#tbl\">tbl</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pneigh_ifdown\">pneigh_ifdown</a>(<a class=\"id\" href=\"#tbl\">tbl</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#del_timer_sync\">del_timer_sync</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#proxy_timer\">proxy_timer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pneigh_queue_purge\">pneigh_queue_purge</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#proxy_queue\">proxy_queue</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#neigh_ifdown\">neigh_ifdown</a>);", 
"", 
"static struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh_alloc\">neigh_alloc</a>(struct <a class=\"id\" href=\"#neigh_table\">neigh_table</a> *<a class=\"id\" href=\"#tbl\">tbl</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#entries\">entries</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entries\">entries</a> = <a class=\"id\" href=\"#atomic_inc_return\">atomic_inc_return</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#entries\">entries</a>) - 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entries\">entries</a> >= <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#gc_thresh3\">gc_thresh3</a> ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#entries\">entries</a> >= <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#gc_thresh2\">gc_thresh2</a> &&", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#now\">now</a>, <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#last_flush\">last_flush</a> + 5 * <a class=\"id\" href=\"#HZ\">HZ</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#neigh_forced_gc\">neigh_forced_gc</a>(<a class=\"id\" href=\"#tbl\">tbl</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#entries\">entries</a> >= <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#gc_thresh3\">gc_thresh3</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_entries\">out_entries</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#kmem_cache_zalloc\">kmem_cache_zalloc</a>(<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#kmem_cachep\">kmem_cachep</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_entries\">out_entries</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_head_init\">skb_queue_head_init</a>(&amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#arp_queue\">arp_queue</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rwlock_init\">rwlock_init</a>(&amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#updated\">updated</a><span class=\"ts\"/>  = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#used\">used</a> = <a class=\"id\" href=\"#now\">now</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a><span class=\"ts\"/>  = <a class=\"id\" href=\"#NUD_NONE\">NUD_NONE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#output\">output</a><span class=\"ts\"/>  = <a class=\"id\" href=\"#neigh_blackhole\">neigh_blackhole</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#parms\">parms</a><span class=\"ts\"/>  = <a class=\"id\" href=\"#neigh_parms_clone\">neigh_parms_clone</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#parms\">parms</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_timer\">setup_timer</a>(&amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#neigh_timer_handler\">neigh_timer_handler</a>, (unsigned long)<a class=\"id\" href=\"#n\">n</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NEIGH_CACHE_STAT_INC\">NEIGH_CACHE_STAT_INC</a>(<a class=\"id\" href=\"#tbl\">tbl</a>, <a class=\"id\" href=\"#allocs\">allocs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#tbl\">tbl</a><span class=\"ts\"/><span class=\"ts\"/>  = <a class=\"id\" href=\"#tbl\">tbl</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#dead\">dead</a><span class=\"ts\"/><span class=\"ts\"/>  = 1;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<a class=\"id\" href=\"#out_entries\">out_entries</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#entries\">entries</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#neighbour\">neighbour</a> **<a class=\"id\" href=\"#neigh_hash_alloc\">neigh_hash_alloc</a>(unsigned int <a class=\"id\" href=\"#entries\">entries</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#entries\">entries</a> * sizeof(struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#neighbour\">neighbour</a> **<a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> <= <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = (struct <a class=\"id\" href=\"#neighbour\">neighbour</a> **)", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#__get_free_pages\">__get_free_pages</a>(<a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>|<a class=\"id\" href=\"#__GFP_ZERO\">__GFP_ZERO</a>, <a class=\"id\" href=\"#get_order\">get_order</a>(<a class=\"id\" href=\"#size\">size</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#neigh_hash_free\">neigh_hash_free</a>(struct <a class=\"id\" href=\"#neighbour\">neighbour</a> **<a class=\"id\" href=\"#hash\">hash</a>, unsigned int <a class=\"id\" href=\"#entries\">entries</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#entries\">entries</a> * sizeof(struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> <= <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_pages\">free_pages</a>((unsigned long)<a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#get_order\">get_order</a>(<a class=\"id\" href=\"#size\">size</a>));", 
"}", 
"", 
"static void <a class=\"id\" href=\"#neigh_hash_grow\">neigh_hash_grow</a>(struct <a class=\"id\" href=\"#neigh_table\">neigh_table</a> *<a class=\"id\" href=\"#tbl\">tbl</a>, unsigned long <a class=\"id\" href=\"#new_entries\">new_entries</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#neighbour\">neighbour</a> **<a class=\"id\" href=\"#new_hash\">new_hash</a>, **<a class=\"id\" href=\"#old_hash\">old_hash</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#new_hash_mask\">new_hash_mask</a>, <a class=\"id\" href=\"#old_entries\">old_entries</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NEIGH_CACHE_STAT_INC\">NEIGH_CACHE_STAT_INC</a>(<a class=\"id\" href=\"#tbl\">tbl</a>, <a class=\"id\" href=\"#hash_grows\">hash_grows</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#is_power_of_2\">is_power_of_2</a>(<a class=\"id\" href=\"#new_entries\">new_entries</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_hash\">new_hash</a> = <a class=\"id\" href=\"#neigh_hash_alloc\">neigh_hash_alloc</a>(<a class=\"id\" href=\"#new_entries\">new_entries</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_hash\">new_hash</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_entries\">old_entries</a> = <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash_mask\">hash_mask</a> + 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_hash_mask\">new_hash_mask</a> = <a class=\"id\" href=\"#new_entries\">new_entries</a> - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_hash\">old_hash</a> = <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash_buckets\">hash_buckets</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_random_bytes\">get_random_bytes</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash_rnd\">hash_rnd</a>, sizeof(<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash_rnd\">hash_rnd</a>));", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#old_entries\">old_entries</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#n\">n</a>, *<a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#old_hash\">old_hash</a>[<a class=\"id\" href=\"#i\">i</a>]; <a class=\"id\" href=\"#n\">n</a>; <a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash_val\">hash_val</a> = <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash\">hash</a>(<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#primary_key\">primary_key</a>, <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash_val\">hash_val</a> &= <a class=\"id\" href=\"#new_hash_mask\">new_hash_mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#new_hash\">new_hash</a>[<a class=\"id\" href=\"#hash_val\">hash_val</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_hash\">new_hash</a>[<a class=\"id\" href=\"#hash_val\">hash_val</a>] = <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash_buckets\">hash_buckets</a> = <a class=\"id\" href=\"#new_hash\">new_hash</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash_mask\">hash_mask</a> = <a class=\"id\" href=\"#new_hash_mask\">new_hash_mask</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neigh_hash_free\">neigh_hash_free</a>(<a class=\"id\" href=\"#old_hash\">old_hash</a>, <a class=\"id\" href=\"#old_entries\">old_entries</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh_lookup\">neigh_lookup</a>(struct <a class=\"id\" href=\"#neigh_table\">neigh_table</a> *<a class=\"id\" href=\"#tbl\">tbl</a>, const void *<a class=\"id\" href=\"#pkey\">pkey</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#key_len\">key_len</a> = <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#key_len\">key_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#hash_val\">hash_val</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NEIGH_CACHE_STAT_INC\">NEIGH_CACHE_STAT_INC</a>(<a class=\"id\" href=\"#tbl\">tbl</a>, <a class=\"id\" href=\"#lookups\">lookups</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash_val\">hash_val</a> = <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash\">hash</a>(<a class=\"id\" href=\"#pkey\">pkey</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash_buckets\">hash_buckets</a>[<a class=\"id\" href=\"#hash_val\">hash_val</a> &amp; <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash_mask\">hash_mask</a>]; <a class=\"id\" href=\"#n\">n</a>; <a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#dev\">dev</a> && !<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#primary_key\">primary_key</a>, <a class=\"id\" href=\"#pkey\">pkey</a>, <a class=\"id\" href=\"#key_len\">key_len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_hold\">neigh_hold</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NEIGH_CACHE_STAT_INC\">NEIGH_CACHE_STAT_INC</a>(<a class=\"id\" href=\"#tbl\">tbl</a>, <a class=\"id\" href=\"#hits\">hits</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#neigh_lookup\">neigh_lookup</a>);", 
"", 
"struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh_lookup_nodev\">neigh_lookup_nodev</a>(struct <a class=\"id\" href=\"#neigh_table\">neigh_table</a> *<a class=\"id\" href=\"#tbl\">tbl</a>, struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const void *<a class=\"id\" href=\"#pkey\">pkey</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#key_len\">key_len</a> = <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#key_len\">key_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#hash_val\">hash_val</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NEIGH_CACHE_STAT_INC\">NEIGH_CACHE_STAT_INC</a>(<a class=\"id\" href=\"#tbl\">tbl</a>, <a class=\"id\" href=\"#lookups\">lookups</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash_val\">hash_val</a> = <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash\">hash</a>(<a class=\"id\" href=\"#pkey\">pkey</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash_buckets\">hash_buckets</a>[<a class=\"id\" href=\"#hash_val\">hash_val</a> &amp; <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash_mask\">hash_mask</a>]; <a class=\"id\" href=\"#n\">n</a>; <a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#primary_key\">primary_key</a>, <a class=\"id\" href=\"#pkey\">pkey</a>, <a class=\"id\" href=\"#key_len\">key_len</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#net\">net</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_hold\">neigh_hold</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NEIGH_CACHE_STAT_INC\">NEIGH_CACHE_STAT_INC</a>(<a class=\"id\" href=\"#tbl\">tbl</a>, <a class=\"id\" href=\"#hits\">hits</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#neigh_lookup_nodev\">neigh_lookup_nodev</a>);", 
"", 
"struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh_create\">neigh_create</a>(struct <a class=\"id\" href=\"#neigh_table\">neigh_table</a> *<a class=\"id\" href=\"#tbl\">tbl</a>, const void *<a class=\"id\" href=\"#pkey\">pkey</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#hash_val\">hash_val</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#key_len\">key_len</a> = <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#key_len\">key_len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#n1\">n1</a>, *<a class=\"id\" href=\"#rc\">rc</a>, *<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#neigh_alloc\">neigh_alloc</a>(<a class=\"id\" href=\"#tbl\">tbl</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#primary_key\">primary_key</a>, <a class=\"id\" href=\"#pkey\">pkey</a>, <a class=\"id\" href=\"#key_len\">key_len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Protocol specific setup. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#constructor\">constructor</a> &&<span class=\"ts\"/>(<a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#constructor\">constructor</a>(<a class=\"id\" href=\"#n\">n</a>)) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_neigh_release\">out_neigh_release</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Device specific setup. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#parms\">parms</a>-><a class=\"id\" href=\"#neigh_setup\">neigh_setup</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#parms\">parms</a>-><a class=\"id\" href=\"#neigh_setup\">neigh_setup</a>(<a class=\"id\" href=\"#n\">n</a>)) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_neigh_release\">out_neigh_release</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#confirmed\">confirmed</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> - (<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#parms\">parms</a>-><a class=\"id\" href=\"#base_reachable_time\">base_reachable_time</a> << 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#entries\">entries</a>) &gt; (<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash_mask\">hash_mask</a> + 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_hash_grow\">neigh_hash_grow</a>(<a class=\"id\" href=\"#tbl\">tbl</a>, (<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash_mask\">hash_mask</a> + 1) << 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash_val\">hash_val</a> = <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash\">hash</a>(<a class=\"id\" href=\"#pkey\">pkey</a>, <a class=\"id\" href=\"#dev\">dev</a>) &amp; <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash_mask\">hash_mask</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#parms\">parms</a>-><a class=\"id\" href=\"#dead\">dead</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_tbl_unlock\">out_tbl_unlock</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#n1\">n1</a> = <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash_buckets\">hash_buckets</a>[<a class=\"id\" href=\"#hash_val\">hash_val</a>]; <a class=\"id\" href=\"#n1\">n1</a>; <a class=\"id\" href=\"#n1\">n1</a> = <a class=\"id\" href=\"#n1\">n1</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#n1\">n1</a>-><a class=\"id\" href=\"#dev\">dev</a> && !<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#n1\">n1</a>-><a class=\"id\" href=\"#primary_key\">primary_key</a>, <a class=\"id\" href=\"#pkey\">pkey</a>, <a class=\"id\" href=\"#key_len\">key_len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_hold\">neigh_hold</a>(<a class=\"id\" href=\"#n1\">n1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#n1\">n1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_tbl_unlock\">out_tbl_unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash_buckets\">hash_buckets</a>[<a class=\"id\" href=\"#hash_val\">hash_val</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#hash_buckets\">hash_buckets</a>[<a class=\"id\" href=\"#hash_val\">hash_val</a>] = <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#dead\">dead</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neigh_hold\">neigh_hold</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NEIGH_PRINTK2\">NEIGH_PRINTK2</a>(\"neigh %p is created.\\n\", <a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#n\">n</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<a class=\"id\" href=\"#out_tbl_unlock\">out_tbl_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<a class=\"id\" href=\"#out_neigh_release\">out_neigh_release</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neigh_release\">neigh_release</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#neigh_create\">neigh_create</a>);", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pneigh_hash\">pneigh_hash</a>(const void *<a class=\"id\" href=\"#pkey\">pkey</a>, int <a class=\"id\" href=\"#key_len\">key_len</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#hash_val\">hash_val</a> = *(<a class=\"id\" href=\"#u32\">u32</a> *)(<a class=\"id\" href=\"#pkey\">pkey</a> + <a class=\"id\" href=\"#key_len\">key_len</a> - 4);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash_val\">hash_val</a> ^= (<a class=\"id\" href=\"#hash_val\">hash_val</a> >> 16);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash_val\">hash_val</a> ^= <a class=\"id\" href=\"#hash_val\">hash_val</a> >> 8;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash_val\">hash_val</a> ^= <a class=\"id\" href=\"#hash_val\">hash_val</a> >> 4;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash_val\">hash_val</a> &= <a class=\"id\" href=\"#PNEIGH_HASHMASK\">PNEIGH_HASHMASK</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hash_val\">hash_val</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pneigh_entry\">pneigh_entry</a> *<a class=\"id\" href=\"#__pneigh_lookup_1\">__pneigh_lookup_1</a>(struct <a class=\"id\" href=\"#pneigh_entry\">pneigh_entry</a> *<a class=\"id\" href=\"#n\">n</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const void *<a class=\"id\" href=\"#pkey\">pkey</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#key_len\">key_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#pkey\">pkey</a>, <a class=\"id\" href=\"#key_len\">key_len</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#pneigh_net\">pneigh_net</a>(<a class=\"id\" href=\"#n\">n</a>), <a class=\"id\" href=\"#net\">net</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#dev\">dev</a> || !<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#pneigh_entry\">pneigh_entry</a> *<a class=\"id\" href=\"#__pneigh_lookup\">__pneigh_lookup</a>(struct <a class=\"id\" href=\"#neigh_table\">neigh_table</a> *<a class=\"id\" href=\"#tbl\">tbl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, const void *<a class=\"id\" href=\"#pkey\">pkey</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#key_len\">key_len</a> = <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#key_len\">key_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#hash_val\">hash_val</a> = <a class=\"id\" href=\"#pneigh_hash\">pneigh_hash</a>(<a class=\"id\" href=\"#pkey\">pkey</a>, <a class=\"id\" href=\"#key_len\">key_len</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__pneigh_lookup_1\">__pneigh_lookup_1</a>(<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#phash_buckets\">phash_buckets</a>[<a class=\"id\" href=\"#hash_val\">hash_val</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#pkey\">pkey</a>, <a class=\"id\" href=\"#key_len\">key_len</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__pneigh_lookup\">__pneigh_lookup</a>);", 
"", 
"struct <a class=\"id\" href=\"#pneigh_entry\">pneigh_entry</a> * <a class=\"id\" href=\"#pneigh_lookup\">pneigh_lookup</a>(struct <a class=\"id\" href=\"#neigh_table\">neigh_table</a> *<a class=\"id\" href=\"#tbl\">tbl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, const void *<a class=\"id\" href=\"#pkey\">pkey</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#creat\">creat</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pneigh_entry\">pneigh_entry</a> *<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#key_len\">key_len</a> = <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#key_len\">key_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#hash_val\">hash_val</a> = <a class=\"id\" href=\"#pneigh_hash\">pneigh_hash</a>(<a class=\"id\" href=\"#pkey\">pkey</a>, <a class=\"id\" href=\"#key_len\">key_len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#__pneigh_lookup_1\">__pneigh_lookup_1</a>(<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#phash_buckets\">phash_buckets</a>[<a class=\"id\" href=\"#hash_val\">hash_val</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#pkey\">pkey</a>, <a class=\"id\" href=\"#key_len\">key_len</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a> || !<a class=\"id\" href=\"#creat\">creat</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#n\">n</a>) + <a class=\"id\" href=\"#key_len\">key_len</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_pnet\">write_pnet</a>(&amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hold_net\">hold_net</a>(<a class=\"id\" href=\"#net\">net</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#pkey\">pkey</a>, <a class=\"id\" href=\"#key_len\">key_len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#pconstructor\">pconstructor</a> && <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#pconstructor\">pconstructor</a>(<a class=\"id\" href=\"#n\">n</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_net\">release_net</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#phash_buckets\">phash_buckets</a>[<a class=\"id\" href=\"#hash_val\">hash_val</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#phash_buckets\">phash_buckets</a>[<a class=\"id\" href=\"#hash_val\">hash_val</a>] = <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pneigh_lookup\">pneigh_lookup</a>);", 
"", 
"", 
"int <a class=\"id\" href=\"#pneigh_delete\">pneigh_delete</a>(struct <a class=\"id\" href=\"#neigh_table\">neigh_table</a> *<a class=\"id\" href=\"#tbl\">tbl</a>, struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, const void *<a class=\"id\" href=\"#pkey\">pkey</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pneigh_entry\">pneigh_entry</a> *<a class=\"id\" href=\"#n\">n</a>, **<a class=\"id\" href=\"#np\">np</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#key_len\">key_len</a> = <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#key_len\">key_len</a>;", 
];
xr_frag_insert('l/fa/27ed4a4e1e0e475d77316c3ddd3d3f2ea34fa6.xr', __xr_tmp);
