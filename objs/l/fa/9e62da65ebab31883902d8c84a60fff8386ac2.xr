var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ptrace\">ptrace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#syscall\">syscall</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static int <a class=\"id\" href=\"#collect_syscall\">collect_syscall</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#target\">target</a>, long *<a class=\"id\" href=\"#callno\">callno</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned long <a class=\"id\" href=\"#args\">args</a>[6], unsigned int <a class=\"id\" href=\"#maxargs\">maxargs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned long *<a class=\"id\" href=\"#sp\">sp</a>, unsigned long *<a class=\"id\" href=\"#pc\">pc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a> = <a class=\"id\" href=\"#task_pt_regs\">task_pt_regs</a>(<a class=\"id\" href=\"#target\">target</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#regs\">regs</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#sp\">sp</a> = <a class=\"id\" href=\"#user_stack_pointer\">user_stack_pointer</a>(<a class=\"id\" href=\"#regs\">regs</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#pc\">pc</a> = <a class=\"id\" href=\"#instruction_pointer\">instruction_pointer</a>(<a class=\"id\" href=\"#regs\">regs</a>);", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#callno\">callno</a> = <a class=\"id\" href=\"#syscall_get_nr\">syscall_get_nr</a>(<a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#regs\">regs</a>);", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#callno\">callno</a> != -1L && <a class=\"id\" href=\"#maxargs\">maxargs</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#syscall_get_arguments\">syscall_get_arguments</a>(<a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#regs\">regs</a>, 0, <a class=\"id\" href=\"#maxargs\">maxargs</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * task_current_syscall - Discover what a blocked task is doing.</span>", 
"<span class=\"comment\"> * @target:<span class=\"ts\"/><span class=\"ts\"/>thread to examine</span>", 
"<span class=\"comment\"> * @callno:<span class=\"ts\"/><span class=\"ts\"/>filled with system call number or -1</span>", 
"<span class=\"comment\"> * @args:<span class=\"ts\"/><span class=\"ts\"/>filled with @maxargs system call arguments</span>", 
"<span class=\"comment\"> * @maxargs:<span class=\"ts\"/><span class=\"ts\"/>number of elements in @args to fill</span>", 
"<span class=\"comment\"> * @sp:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>filled with user stack pointer</span>", 
"<span class=\"comment\"> * @pc:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>filled with user PC</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If @target is blocked in a system call, returns zero with *@callno</span>", 
"<span class=\"comment\"> * set to the the call's number and @args filled in with its arguments.</span>", 
"<span class=\"comment\"> * Registers not used for system call arguments may not be available and</span>", 
"<span class=\"comment\"> * it is not kosher to use &amp;struct user_regset calls while the system</span>", 
"<span class=\"comment\"> * call is still in progress.  Note we may get this result if @target</span>", 
"<span class=\"comment\"> * has finished its system call but not yet returned to user mode, such</span>", 
"<span class=\"comment\"> * as when it's stopped for signal handling or syscall exit tracing.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If @target is blocked in the kernel during a fault or exception,</span>", 
"<span class=\"comment\"> * returns zero with *@callno set to -1 and does not fill in @args.</span>", 
"<span class=\"comment\"> * If so, it's now safe to examine @target using &amp;struct user_regset</span>", 
"<span class=\"comment\"> * get() calls as long as we're sure @target won't return to user mode.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns -%EAGAIN if @target does not remain blocked.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns -%EINVAL if @maxargs is too large (maximum is six).</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#task_current_syscall\">task_current_syscall</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#target\">target</a>, long *<a class=\"id\" href=\"#callno\">callno</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#args\">args</a>[6], unsigned int <a class=\"id\" href=\"#maxargs\">maxargs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long *<a class=\"id\" href=\"#sp\">sp</a>, unsigned long *<a class=\"id\" href=\"#pc\">pc</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ncsw\">ncsw</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#maxargs\">maxargs</a> &gt; 6))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#target\">target</a> == <a class=\"id\" href=\"#current\">current</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#collect_syscall\">collect_syscall</a>(<a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#callno\">callno</a>, <a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#maxargs\">maxargs</a>, <a class=\"id\" href=\"#sp\">sp</a>, <a class=\"id\" href=\"#pc\">pc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#state\">state</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ncsw\">ncsw</a> = <a class=\"id\" href=\"#wait_task_inactive\">wait_task_inactive</a>(<a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#ncsw\">ncsw</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#collect_syscall\">collect_syscall</a>(<a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#callno\">callno</a>, <a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#maxargs\">maxargs</a>, <a class=\"id\" href=\"#sp\">sp</a>, <a class=\"id\" href=\"#pc\">pc</a>)) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#wait_task_inactive\">wait_task_inactive</a>(<a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#state\">state</a>) != <a class=\"id\" href=\"#ncsw\">ncsw</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#task_current_syscall\">task_current_syscall</a>);", 
];
xr_frag_insert('l/fa/9e62da65ebab31883902d8c84a60fff8386ac2.xr', __xr_tmp);
