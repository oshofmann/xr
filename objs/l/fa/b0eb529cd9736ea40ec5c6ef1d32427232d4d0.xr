var __xr_tmp = [
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#scan_mutex\">scan_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_lock\">host_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#scsi_host_set_state\">scsi_host_set_state</a>(<a class=\"id\" href=\"#shost\">shost</a>, <a class=\"id\" href=\"#SHOST_CANCEL\">SHOST_CANCEL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#scsi_host_set_state\">scsi_host_set_state</a>(<a class=\"id\" href=\"#shost\">shost</a>, <a class=\"id\" href=\"#SHOST_CANCEL_RECOVERY\">SHOST_CANCEL_RECOVERY</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_lock\">host_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#scan_mutex\">scan_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_lock\">host_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_autopm_get_host\">scsi_autopm_get_host</a>(<a class=\"id\" href=\"#shost\">shost</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_forget_host\">scsi_forget_host</a>(<a class=\"id\" href=\"#shost\">shost</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#scan_mutex\">scan_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_proc_host_rm\">scsi_proc_host_rm</a>(<a class=\"id\" href=\"#shost\">shost</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_lock\">host_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#scsi_host_set_state\">scsi_host_set_state</a>(<a class=\"id\" href=\"#shost\">shost</a>, <a class=\"id\" href=\"#SHOST_DEL\">SHOST_DEL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#scsi_host_set_state\">scsi_host_set_state</a>(<a class=\"id\" href=\"#shost\">shost</a>, <a class=\"id\" href=\"#SHOST_DEL_RECOVERY\">SHOST_DEL_RECOVERY</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_lock\">host_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transport_unregister_device\">transport_unregister_device</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_gendev\">shost_gendev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_unregister\">device_unregister</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_dev\">shost_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_del\">device_del</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_gendev\">shost_gendev</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#scsi_remove_host\">scsi_remove_host</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * scsi_add_host_with_dma - add a scsi host with dma device</span>", 
"<span class=\"comment\"> * @shost:<span class=\"ts\"/>scsi host pointer to add</span>", 
"<span class=\"comment\"> * @dev:<span class=\"ts\"/>a struct device of type scsi class</span>", 
"<span class=\"comment\"> * @dma_dev:<span class=\"ts\"/>dma device for the host</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note: You rarely need to worry about this unless you're in a</span>", 
"<span class=\"comment\"> * virtualised host environments, so use the simpler scsi_add_host()</span>", 
"<span class=\"comment\"> * function instead.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return value: </span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>0 on success / != 0 for error</span>", 
"<span class=\"comment\"> **/</span>", 
"int <a class=\"id\" href=\"#scsi_add_host_with_dma\">scsi_add_host_with_dma</a>(struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#shost\">shost</a>, struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dma_dev\">dma_dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_host_template\">scsi_host_template</a> *<a class=\"id\" href=\"#sht\">sht</a> = <a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#hostt\">hostt</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"scsi%d : %s\\n\", <a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_no\">host_no</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#info\">info</a> ? <a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#info\">info</a>(<a class=\"id\" href=\"#shost\">shost</a>) : <a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#can_queue\">can_queue</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: can_queue = 0 no longer supported\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#scsi_setup_command_freelist\">scsi_setup_command_freelist</a>(<a class=\"id\" href=\"#shost\">shost</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_gendev\">shost_gendev</a>.<a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_gendev\">shost_gendev</a>.<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#dev\">dev</a> ? <a class=\"id\" href=\"#dev\">dev</a> : &amp;<a class=\"id\" href=\"#platform_bus\">platform_bus</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#dma_dev\">dma_dev</a> = <a class=\"id\" href=\"#dma_dev\">dma_dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_add\">device_add</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_gendev\">shost_gendev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pm_runtime_set_active\">pm_runtime_set_active</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_gendev\">shost_gendev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pm_runtime_enable\">pm_runtime_enable</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_gendev\">shost_gendev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_enable_async_suspend\">device_enable_async_suspend</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_gendev\">shost_gendev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_host_set_state\">scsi_host_set_state</a>(<a class=\"id\" href=\"#shost\">shost</a>, <a class=\"id\" href=\"#SHOST_RUNNING\">SHOST_RUNNING</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_device\">get_device</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_gendev\">shost_gendev</a>.<a class=\"id\" href=\"#parent\">parent</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_enable_async_suspend\">device_enable_async_suspend</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_dev\">shost_dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_add\">device_add</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_dev\">shost_dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_del_gendev\">out_del_gendev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_device\">get_device</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_gendev\">shost_gendev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#transportt\">transportt</a>-><a class=\"id\" href=\"#host_size\">host_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_data\">shost_data</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#transportt\">transportt</a>-><a class=\"id\" href=\"#host_size\">host_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_data\">shost_data</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_del_dev\">out_del_dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#transportt\">transportt</a>-><a class=\"id\" href=\"#create_work_queue\">create_work_queue</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#work_q_name\">work_q_name</a>, sizeof(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#work_q_name\">work_q_name</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"scsi_wq_%d\", <a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_no\">host_no</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#work_q\">work_q</a> = <a class=\"id\" href=\"#create_singlethread_workqueue\">create_singlethread_workqueue</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#work_q_name\">work_q_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#work_q\">work_q</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_shost_data\">out_free_shost_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#scsi_sysfs_add_host\">scsi_sysfs_add_host</a>(<a class=\"id\" href=\"#shost\">shost</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_destroy_host\">out_destroy_host</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_proc_host_add\">scsi_proc_host_add</a>(<a class=\"id\" href=\"#shost\">shost</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
" <a class=\"id\" href=\"#out_destroy_host\">out_destroy_host</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#work_q\">work_q</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#destroy_workqueue\">destroy_workqueue</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#work_q\">work_q</a>);", 
" <a class=\"id\" href=\"#out_free_shost_data\">out_free_shost_data</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_data\">shost_data</a>);", 
" <a class=\"id\" href=\"#out_del_dev\">out_del_dev</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_del\">device_del</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_dev\">shost_dev</a>);", 
" <a class=\"id\" href=\"#out_del_gendev\">out_del_gendev</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_del\">device_del</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_gendev\">shost_gendev</a>);", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_destroy_command_freelist\">scsi_destroy_command_freelist</a>(<a class=\"id\" href=\"#shost\">shost</a>);", 
" <a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#scsi_add_host_with_dma\">scsi_add_host_with_dma</a>);", 
"", 
"static void <a class=\"id\" href=\"#scsi_host_dev_release\">scsi_host_dev_release</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#shost\">shost</a> = <a class=\"id\" href=\"#dev_to_shost\">dev_to_shost</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_proc_hostdir_rm\">scsi_proc_hostdir_rm</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#hostt\">hostt</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#ehandler\">ehandler</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kthread_stop\">kthread_stop</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#ehandler\">ehandler</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#work_q\">work_q</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#destroy_workqueue\">destroy_workqueue</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#work_q\">work_q</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#uspace_req_q\">uspace_req_q</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#uspace_req_q\">uspace_req_q</a>-><a class=\"id\" href=\"#queuedata\">queuedata</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_free_queue\">scsi_free_queue</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#uspace_req_q\">uspace_req_q</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_destroy_command_freelist\">scsi_destroy_command_freelist</a>(<a class=\"id\" href=\"#shost\">shost</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#bqt\">bqt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_free_tags\">blk_free_tags</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#bqt\">bqt</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_data\">shost_data</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#shost\">shost</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#device_type\">device_type</a> <a class=\"id\" href=\"#scsi_host_type\">scsi_host_type</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> =<span class=\"ts\"/><span class=\"ts\"/>\"scsi_host\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> =<span class=\"ts\"/><a class=\"id\" href=\"#scsi_host_dev_release\">scsi_host_dev_release</a>,", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * scsi_host_alloc - register a scsi host adapter instance.</span>", 
"<span class=\"comment\"> * @sht:<span class=\"ts\"/>pointer to scsi host template</span>", 
"<span class=\"comment\"> * @privsize:<span class=\"ts\"/>extra bytes to allocate for driver</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note:</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Allocate a new Scsi_Host and perform basic initialization.</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>The host is not published to the scsi midlayer until scsi_add_host</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>is called.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return value:</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Pointer to a new Scsi_Host</span>", 
"<span class=\"comment\"> **/</span>", 
"struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#scsi_host_alloc\">scsi_host_alloc</a>(struct <a class=\"id\" href=\"#scsi_host_template\">scsi_host_template</a> *<a class=\"id\" href=\"#sht\">sht</a>, int <a class=\"id\" href=\"#privsize\">privsize</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#shost\">shost</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a> = <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#unchecked_isa_dma\">unchecked_isa_dma</a> && <a class=\"id\" href=\"#privsize\">privsize</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gfp_mask\">gfp_mask</a> |= <a class=\"id\" href=\"#__GFP_DMA\">__GFP_DMA</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a>) + <a class=\"id\" href=\"#privsize\">privsize</a>, <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#shost\">shost</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_lock\">host_lock</a> = &amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#default_lock\">default_lock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_lock\">host_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_state\">shost_state</a> = <a class=\"id\" href=\"#SHOST_CREATED\">SHOST_CREATED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#__devices\">__devices</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#__targets\">__targets</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#eh_cmd_q\">eh_cmd_q</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#starved_list\">starved_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_wait\">host_wait</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#scan_mutex\">scan_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * subtract one because we increment first then return, but we need to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * know what the next host number was before increment</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_no\">host_no</a> = <a class=\"id\" href=\"#atomic_inc_return\">atomic_inc_return</a>(&amp;<a class=\"id\" href=\"#scsi_host_next_hn\">scsi_host_next_hn</a>) - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#dma_channel\">dma_channel</a> = 0xff;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* These three are default values which can be overridden */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#max_channel\">max_channel</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#max_id\">max_id</a> = 8;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#max_lun\">max_lun</a> = 8;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Give each shost a default transportt */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#transportt\">transportt</a> = &amp;<a class=\"id\" href=\"#blank_transport_template\">blank_transport_template</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * All drivers right now should be able to handle 12 byte</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * commands.  Every so often there are requests for 16 byte</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * commands, but individual low-level drivers need to certify that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * they actually do something sensible with such commands.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#max_cmd_len\">max_cmd_len</a> = 12;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#hostt\">hostt</a> = <a class=\"id\" href=\"#sht\">sht</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#this_id\">this_id</a> = <a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#this_id\">this_id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#can_queue\">can_queue</a> = <a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#can_queue\">can_queue</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#sg_tablesize\">sg_tablesize</a> = <a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#sg_tablesize\">sg_tablesize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#cmd_per_lun\">cmd_per_lun</a> = <a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#cmd_per_lun\">cmd_per_lun</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#unchecked_isa_dma\">unchecked_isa_dma</a> = <a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#unchecked_isa_dma\">unchecked_isa_dma</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#use_clustering\">use_clustering</a> = <a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#use_clustering\">use_clustering</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#ordered_tag\">ordered_tag</a> = <a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#ordered_tag\">ordered_tag</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#supported_mode\">supported_mode</a> == <a class=\"id\" href=\"#MODE_UNKNOWN\">MODE_UNKNOWN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* means we didn't set it ... default to INITIATOR */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#active_mode\">active_mode</a> = <a class=\"id\" href=\"#MODE_INITIATOR\">MODE_INITIATOR</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#active_mode\">active_mode</a> = <a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#supported_mode\">supported_mode</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#max_host_blocked\">max_host_blocked</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#max_host_blocked\">max_host_blocked</a> = <a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#max_host_blocked\">max_host_blocked</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#max_host_blocked\">max_host_blocked</a> = <a class=\"id\" href=\"#SCSI_DEFAULT_HOST_BLOCKED\">SCSI_DEFAULT_HOST_BLOCKED</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the driver imposes no hard sector transfer limit, start at</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * machine infinity initially.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#max_sectors\">max_sectors</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#max_sectors\">max_sectors</a> = <a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#max_sectors\">max_sectors</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#max_sectors\">max_sectors</a> = <a class=\"id\" href=\"#SCSI_DEFAULT_MAX_SECTORS\">SCSI_DEFAULT_MAX_SECTORS</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * assume a 4GB boundary, if not set</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#dma_boundary\">dma_boundary</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#dma_boundary\">dma_boundary</a> = <a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#dma_boundary\">dma_boundary</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#dma_boundary\">dma_boundary</a> = 0xffffffff;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_initialize\">device_initialize</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_gendev\">shost_gendev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_set_name\">dev_set_name</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_gendev\">shost_gendev</a>, \"host%d\", <a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_no\">host_no</a>);", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_SYSFS_DEPRECATED\">CONFIG_SYSFS_DEPRECATED</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_gendev\">shost_gendev</a>.<a class=\"id\" href=\"#bus\">bus</a> = &amp;<a class=\"id\" href=\"#scsi_bus_type\">scsi_bus_type</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_gendev\">shost_gendev</a>.<a class=\"id\" href=\"#type\">type</a> = &amp;<a class=\"id\" href=\"#scsi_host_type\">scsi_host_type</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_initialize\">device_initialize</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_dev\">shost_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_dev\">shost_dev</a>.<a class=\"id\" href=\"#parent\">parent</a> = &amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_gendev\">shost_gendev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_dev\">shost_dev</a>.<a class=\"id\" href=\"#class\">class</a> = &amp;<a class=\"id\" href=\"#shost_class\">shost_class</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_set_name\">dev_set_name</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_dev\">shost_dev</a>, \"host%d\", <a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_no\">host_no</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_dev\">shost_dev</a>.<a class=\"id\" href=\"#groups\">groups</a> = <a class=\"id\" href=\"#scsi_sysfs_shost_attr_groups\">scsi_sysfs_shost_attr_groups</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#ehandler\">ehandler</a> = <a class=\"id\" href=\"#kthread_run\">kthread_run</a>(<a class=\"id\" href=\"#scsi_error_handler\">scsi_error_handler</a>, <a class=\"id\" href=\"#shost\">shost</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"scsi_eh_%d\", <a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_no\">host_no</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#ehandler\">ehandler</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"scsi%d: error handler thread failed to spawn, error = %ld\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_no\">host_no</a>, <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#ehandler\">ehandler</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail_kfree\">fail_kfree</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_proc_hostdir_add\">scsi_proc_hostdir_add</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#hostt\">hostt</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#shost\">shost</a>;", 
"", 
" <a class=\"id\" href=\"#fail_kfree\">fail_kfree</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#shost\">shost</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#scsi_host_alloc\">scsi_host_alloc</a>);", 
"", 
"struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#scsi_register\">scsi_register</a>(struct <a class=\"id\" href=\"#scsi_host_template\">scsi_host_template</a> *<a class=\"id\" href=\"#sht\">sht</a>, int <a class=\"id\" href=\"#privsize\">privsize</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#shost\">shost</a> = <a class=\"id\" href=\"#scsi_host_alloc\">scsi_host_alloc</a>(<a class=\"id\" href=\"#sht\">sht</a>, <a class=\"id\" href=\"#privsize\">privsize</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#detect\">detect</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"scsi_register() called on new-style \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"template for driver %s\\n\", <a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dump_stack\">dump_stack</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#shost\">shost</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#sht_legacy_list\">sht_legacy_list</a>, &amp;<a class=\"id\" href=\"#sht\">sht</a>-><a class=\"id\" href=\"#legacy_hosts\">legacy_hosts</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#shost\">shost</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#scsi_register\">scsi_register</a>);", 
"", 
"void <a class=\"id\" href=\"#scsi_unregister\">scsi_unregister</a>(struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#shost\">shost</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#sht_legacy_list\">sht_legacy_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_host_put\">scsi_host_put</a>(<a class=\"id\" href=\"#shost\">shost</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#scsi_unregister\">scsi_unregister</a>);", 
"", 
"static int <a class=\"id\" href=\"#__scsi_host_match\">__scsi_host_match</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>unsigned short *<a class=\"id\" href=\"#hostnum\">hostnum</a> = (unsigned short *)<a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#class_to_shost\">class_to_shost</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#host_no\">host_no</a> == *<a class=\"id\" href=\"#hostnum\">hostnum</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * scsi_host_lookup - get a reference to a Scsi_Host by host no</span>", 
"<span class=\"comment\"> * @hostnum:<span class=\"ts\"/>host number to locate</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return value:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>A pointer to located Scsi_Host or NULL.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The caller must do a scsi_host_put() to drop the reference</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>that scsi_host_get() took. The put_device() below dropped</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the reference from class_find_device().</span>", 
"<span class=\"comment\"> **/</span>", 
"struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#scsi_host_lookup\">scsi_host_lookup</a>(unsigned short <a class=\"id\" href=\"#hostnum\">hostnum</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#cdev\">cdev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#shost\">shost</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdev\">cdev</a> = <a class=\"id\" href=\"#class_find_device\">class_find_device</a>(&amp;<a class=\"id\" href=\"#shost_class\">shost_class</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#hostnum\">hostnum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#__scsi_host_match\">__scsi_host_match</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdev\">cdev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a> = <a class=\"id\" href=\"#scsi_host_get\">scsi_host_get</a>(<a class=\"id\" href=\"#class_to_shost\">class_to_shost</a>(<a class=\"id\" href=\"#cdev\">cdev</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#cdev\">cdev</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#shost\">shost</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#scsi_host_lookup\">scsi_host_lookup</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * scsi_host_get - inc a Scsi_Host ref count</span>", 
"<span class=\"comment\"> * @shost:<span class=\"ts\"/>Pointer to Scsi_Host to inc.</span>", 
"<span class=\"comment\"> **/</span>", 
"struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#scsi_host_get\">scsi_host_get</a>(struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#shost\">shost</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_state\">shost_state</a> == <a class=\"id\" href=\"#SHOST_DEL\">SHOST_DEL</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#get_device\">get_device</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_gendev\">shost_gendev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#shost\">shost</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#scsi_host_get\">scsi_host_get</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * scsi_host_put - dec a Scsi_Host ref count</span>", 
"<span class=\"comment\"> * @shost:<span class=\"ts\"/>Pointer to Scsi_Host to dec.</span>", 
"<span class=\"comment\"> **/</span>", 
"void <a class=\"id\" href=\"#scsi_host_put\">scsi_host_put</a>(struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#shost\">shost</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_gendev\">shost_gendev</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#scsi_host_put\">scsi_host_put</a>);", 
"", 
"int <a class=\"id\" href=\"#scsi_init_hosts\">scsi_init_hosts</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#class_register\">class_register</a>(&amp;<a class=\"id\" href=\"#shost_class\">shost_class</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#scsi_exit_hosts\">scsi_exit_hosts</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#class_unregister\">class_unregister</a>(&amp;<a class=\"id\" href=\"#shost_class\">shost_class</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#scsi_is_host_device\">scsi_is_host_device</a>(const struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a> == &amp;<a class=\"id\" href=\"#scsi_host_type\">scsi_host_type</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#scsi_is_host_device\">scsi_is_host_device</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * scsi_queue_work - Queue work to the Scsi_Host workqueue.</span>", 
"<span class=\"comment\"> * @shost:<span class=\"ts\"/>Pointer to Scsi_Host.</span>", 
"<span class=\"comment\"> * @work:<span class=\"ts\"/>Work to queue for execution.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return value:</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>1 - work queued for execution</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 - work is already queued</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>-EINVAL - work queue doesn't exist</span>", 
"<span class=\"comment\"> **/</span>", 
"int <a class=\"id\" href=\"#scsi_queue_work\">scsi_queue_work</a>(struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#shost\">shost</a>, struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#work_q\">work_q</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"ERROR: Scsi host '%s' attempted to queue scsi-work, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"when no workqueue created.\\n\", <a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#hostt\">hostt</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dump_stack\">dump_stack</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#queue_work\">queue_work</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#work_q\">work_q</a>, <a class=\"id\" href=\"#work\">work</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#scsi_queue_work\">scsi_queue_work</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * scsi_flush_work - Flush a Scsi_Host's workqueue.</span>", 
"<span class=\"comment\"> * @shost:<span class=\"ts\"/>Pointer to Scsi_Host.</span>", 
"<span class=\"comment\"> **/</span>", 
"void <a class=\"id\" href=\"#scsi_flush_work\">scsi_flush_work</a>(struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#shost\">shost</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#work_q\">work_q</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"ERROR: Scsi host '%s' attempted to flush scsi-work, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"when no workqueue created.\\n\", <a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#hostt\">hostt</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dump_stack\">dump_stack</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_workqueue\">flush_workqueue</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#work_q\">work_q</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#scsi_flush_work\">scsi_flush_work</a>);", 
];
xr_frag_insert('l/fa/b0eb529cd9736ea40ec5c6ef1d32427232d4d0.xr', __xr_tmp);
