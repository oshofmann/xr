var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_start\">orig_start</a>, <a class=\"id\" href=\"#donor_blocks\">donor_blocks</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* TODO: eliminate this artificial restriction */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#orig_start\">orig_start</a> + *<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#donor_blocks\">donor_blocks</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"ext4 move extent: End offset [%llu] should \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"be less than donor file blocks [%u].\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"So adjust length from %llu to %llu \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"[ino:orig %lu, donor %lu]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_start\">orig_start</a> + *<a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#donor_blocks\">donor_blocks</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#donor_blocks\">donor_blocks</a> - <a class=\"id\" href=\"#orig_start\">orig_start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#donor_blocks\">donor_blocks</a> - <a class=\"id\" href=\"#orig_start\">orig_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_blocks\">orig_blocks</a> = (<a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> + <a class=\"id\" href=\"#blocksize\">blocksize</a> - 1) >> <a class=\"id\" href=\"#blkbits\">blkbits</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#orig_start\">orig_start</a> >= <a class=\"id\" href=\"#orig_blocks\">orig_blocks</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"ext4 move extent: start offset [%llu] \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"should be less than original file blocks \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"[%u] [ino:orig %lu, donor %lu]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#orig_start\">orig_start</a>, <a class=\"id\" href=\"#orig_blocks\">orig_blocks</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#orig_start\">orig_start</a> + *<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#orig_blocks\">orig_blocks</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"ext4 move extent: Adjust length \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"from %llu to %llu. Because it should be \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"less than original file blocks \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"[ino:orig %lu, donor %lu]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#orig_blocks\">orig_blocks</a> - <a class=\"id\" href=\"#orig_start\">orig_start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#orig_blocks\">orig_blocks</a> - <a class=\"id\" href=\"#orig_start\">orig_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!*<a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"ext4 move extent: len should not be 0 \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"[ino:orig %lu, donor %lu]\\n\", <a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#donor_inode\">donor_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mext_inode_double_lock - Lock i_mutex on both @inode1 and @inode2</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @inode1:<span class=\"ts\"/>the inode structure</span>", 
"<span class=\"comment\"> * @inode2:<span class=\"ts\"/>the inode structure</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Lock two inodes' i_mutex by i_ino order.</span>", 
"<span class=\"comment\"> * If inode1 or inode2 is NULL, return -EIO. Otherwise, return 0.</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#mext_inode_double_lock\">mext_inode_double_lock</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode1\">inode1</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode2\">inode2</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#inode1\">inode1</a> == <a class=\"id\" href=\"#NULL\">NULL</a> && <a class=\"id\" href=\"#inode2\">inode2</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mext_check_null_inode\">mext_check_null_inode</a>(<a class=\"id\" href=\"#inode1\">inode1</a>, <a class=\"id\" href=\"#inode2\">inode2</a>, <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode1\">inode1</a> == <a class=\"id\" href=\"#inode2\">inode2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#inode1\">inode1</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode1\">inode1</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a> &lt; <a class=\"id\" href=\"#inode2\">inode2</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#inode1\">inode1</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>, <a class=\"id\" href=\"#I_MUTEX_PARENT\">I_MUTEX_PARENT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#inode2\">inode2</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>, <a class=\"id\" href=\"#I_MUTEX_CHILD\">I_MUTEX_CHILD</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#inode2\">inode2</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>, <a class=\"id\" href=\"#I_MUTEX_PARENT\">I_MUTEX_PARENT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#inode1\">inode1</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>, <a class=\"id\" href=\"#I_MUTEX_CHILD\">I_MUTEX_CHILD</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mext_inode_double_unlock - Release i_mutex on both @inode1 and @inode2</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @inode1:     the inode that is released first</span>", 
"<span class=\"comment\"> * @inode2:     the inode that is released second</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If inode1 or inode2 is NULL, return -EIO. Otherwise, return 0.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int", 
"<a class=\"id\" href=\"#mext_inode_double_unlock\">mext_inode_double_unlock</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode1\">inode1</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode2\">inode2</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#inode1\">inode1</a> == <a class=\"id\" href=\"#NULL\">NULL</a> && <a class=\"id\" href=\"#inode2\">inode2</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mext_check_null_inode\">mext_check_null_inode</a>(<a class=\"id\" href=\"#inode1\">inode1</a>, <a class=\"id\" href=\"#inode2\">inode2</a>, <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode1\">inode1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#inode1\">inode1</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode2\">inode2</a> && <a class=\"id\" href=\"#inode2\">inode2</a> != <a class=\"id\" href=\"#inode1\">inode1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#inode2\">inode2</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ext4_move_extents - Exchange the specified range of a file</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @o_filp:<span class=\"ts\"/><span class=\"ts\"/>file structure of the original file</span>", 
"<span class=\"comment\"> * @d_filp:<span class=\"ts\"/><span class=\"ts\"/>file structure of the donor file</span>", 
"<span class=\"comment\"> * @orig_start:<span class=\"ts\"/><span class=\"ts\"/>start offset in block for orig</span>", 
"<span class=\"comment\"> * @donor_start:<span class=\"ts\"/>start offset in block for donor</span>", 
"<span class=\"comment\"> * @len:<span class=\"ts\"/><span class=\"ts\"/>the number of blocks to be moved</span>", 
"<span class=\"comment\"> * @moved_len:<span class=\"ts\"/><span class=\"ts\"/>moved block length</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function returns 0 and moved block length is set in moved_len</span>", 
"<span class=\"comment\"> * if succeed, otherwise returns error value.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note: ext4_move_extents() proceeds the following order.</span>", 
"<span class=\"comment\"> * 1:ext4_move_extents() calculates the last block number of moving extent</span>", 
"<span class=\"comment\"> *   function by the start block number (orig_start) and the number of blocks</span>", 
"<span class=\"comment\"> *   to be moved (len) specified as arguments.</span>", 
"<span class=\"comment\"> *   If the {orig, donor}_start points a hole, the extent's start offset</span>", 
"<span class=\"comment\"> *   pointed by ext_cur (current extent), holecheck_path, orig_path are set</span>", 
"<span class=\"comment\"> *   after hole behind.</span>", 
"<span class=\"comment\"> * 2:Continue step 3 to step 5, until the holecheck_path points to last_extent</span>", 
"<span class=\"comment\"> *   or the ext_cur exceeds the block_end which is last logical block number.</span>", 
"<span class=\"comment\"> * 3:To get the length of continues area, call mext_next_extent()</span>", 
"<span class=\"comment\"> *   specified with the ext_cur (initial value is holecheck_path) re-cursive,</span>", 
"<span class=\"comment\"> *   until find un-continuous extent, the start logical block number exceeds</span>", 
"<span class=\"comment\"> *   the block_end or the extent points to the last extent.</span>", 
"<span class=\"comment\"> * 4:Exchange the original inode data with donor inode data</span>", 
"<span class=\"comment\"> *   from orig_page_offset to seq_end_page.</span>", 
"<span class=\"comment\"> *   The start indexes of data are specified as arguments.</span>", 
"<span class=\"comment\"> *   That of the original inode is orig_page_offset,</span>", 
"<span class=\"comment\"> *   and the donor inode is also orig_page_offset</span>", 
"<span class=\"comment\"> *   (To easily handle blocksize != pagesize case, the offset for the</span>", 
"<span class=\"comment\"> *   donor inode is block unit).</span>", 
"<span class=\"comment\"> * 5:Update holecheck_path and orig_path to points a next proceeding extent,</span>", 
"<span class=\"comment\"> *   then returns to step 2.</span>", 
"<span class=\"comment\"> * 6:Release holecheck_path, orig_path and set the len to moved_len</span>", 
"<span class=\"comment\"> *   which shows the number of moved blocks.</span>", 
"<span class=\"comment\"> *   The moved_len is useful for the command to calculate the file offset</span>", 
"<span class=\"comment\"> *   for starting next move extent ioctl.</span>", 
"<span class=\"comment\"> * 7:Return 0 on success, or a negative error value on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"int", 
"<a class=\"id\" href=\"#ext4_move_extents\">ext4_move_extents</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#o_filp\">o_filp</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#d_filp\">d_filp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#orig_start\">orig_start</a>, <a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#donor_start\">donor_start</a>, <a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#__u64\">__u64</a> *<a class=\"id\" href=\"#moved_len\">moved_len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#orig_inode\">orig_inode</a> = <a class=\"id\" href=\"#o_filp\">o_filp</a>-><a class=\"id\" href=\"#f_dentry\">f_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#donor_inode\">donor_inode</a> = <a class=\"id\" href=\"#d_filp\">d_filp</a>-><a class=\"id\" href=\"#f_dentry\">f_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#orig_path\">orig_path</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#holecheck_path\">holecheck_path</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#ext_prev\">ext_prev</a>, *<a class=\"id\" href=\"#ext_cur\">ext_cur</a>, *<a class=\"id\" href=\"#ext_dummy\">ext_dummy</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#block_start\">block_start</a> = <a class=\"id\" href=\"#orig_start\">orig_start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#block_end\">block_end</a>, <a class=\"id\" href=\"#seq_start\">seq_start</a>, <a class=\"id\" href=\"#add_blocks\">add_blocks</a>, <a class=\"id\" href=\"#file_end\">file_end</a>, <a class=\"id\" href=\"#seq_blocks\">seq_blocks</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#rest_blocks\">rest_blocks</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#orig_page_offset\">orig_page_offset</a> = 0, <a class=\"id\" href=\"#seq_end_page\">seq_end_page</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret1\">ret1</a>, <a class=\"id\" href=\"#ret2\">ret2</a>, <a class=\"id\" href=\"#depth\">depth</a>, <a class=\"id\" href=\"#last_extent\">last_extent</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#blocks_per_page\">blocks_per_page</a> = <a class=\"id\" href=\"#PAGE_CACHE_SIZE\">PAGE_CACHE_SIZE</a> >> <a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#data_offset_in_page\">data_offset_in_page</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#block_len_in_page\">block_len_in_page</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#uninit\">uninit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* orig and donor should be different file */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a> == <a class=\"id\" href=\"#donor_inode\">donor_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"ext4 move extent: The argument files should not \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"be same file [ino:orig %lu, donor %lu]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Regular file check */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#S_ISREG\">S_ISREG</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>) || !<a class=\"id\" href=\"#S_ISREG\">S_ISREG</a>(<a class=\"id\" href=\"#donor_inode\">donor_inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"ext4 move extent: The argument files should be \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"regular file [ino:orig %lu, donor %lu]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Protect orig and donor inodes against a truncate */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret1\">ret1</a> = <a class=\"id\" href=\"#mext_inode_double_lock\">mext_inode_double_lock</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret1\">ret1</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret1\">ret1</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Protect extent tree against block allocations via delalloc */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#double_down_write_data_sem\">double_down_write_data_sem</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Check the filesystem environment whether move_extent can be done */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret1\">ret1</a> = <a class=\"id\" href=\"#mext_check_arguments\">mext_check_arguments</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>, <a class=\"id\" href=\"#orig_start\">orig_start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#donor_start\">donor_start</a>, &amp;<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret1\">ret1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file_end\">file_end</a> = (<a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>) - 1) >> <a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#block_end\">block_end</a> = <a class=\"id\" href=\"#block_start\">block_start</a> + <a class=\"id\" href=\"#len\">len</a> - 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file_end\">file_end</a> &lt; <a class=\"id\" href=\"#block_end\">block_end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#block_end\">block_end</a> - <a class=\"id\" href=\"#file_end\">file_end</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret1\">ret1</a> = <a class=\"id\" href=\"#get_ext_path\">get_ext_path</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#block_start\">block_start</a>, &amp;<a class=\"id\" href=\"#orig_path\">orig_path</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret1\">ret1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get path structure to check the hole */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret1\">ret1</a> = <a class=\"id\" href=\"#get_ext_path\">get_ext_path</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#block_start\">block_start</a>, &amp;<a class=\"id\" href=\"#holecheck_path\">holecheck_path</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret1\">ret1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext_cur\">ext_cur</a> = <a class=\"id\" href=\"#holecheck_path\">holecheck_path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Get proper starting location of block replacement if block_start was</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * within the hole.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ext_cur\">ext_cur</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ext_cur\">ext_cur</a>) - 1 &lt; <a class=\"id\" href=\"#block_start\">block_start</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The hole exists between extents or the tail of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * original file.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_extent\">last_extent</a> = <a class=\"id\" href=\"#mext_next_extent\">mext_next_extent</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#holecheck_path\">holecheck_path</a>, &amp;<a class=\"id\" href=\"#ext_cur\">ext_cur</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#last_extent\">last_extent</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret1\">ret1</a> = <a class=\"id\" href=\"#last_extent\">last_extent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_extent\">last_extent</a> = <a class=\"id\" href=\"#mext_next_extent\">mext_next_extent</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#orig_path\">orig_path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#ext_dummy\">ext_dummy</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#last_extent\">last_extent</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret1\">ret1</a> = <a class=\"id\" href=\"#last_extent\">last_extent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_start\">seq_start</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ext_cur\">ext_cur</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ext_cur\">ext_cur</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) &gt; <a class=\"id\" href=\"#block_start\">block_start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The hole exists at the beginning of original file. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_start\">seq_start</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ext_cur\">ext_cur</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_start\">seq_start</a> = <a class=\"id\" href=\"#block_start\">block_start</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* No blocks within the specified range. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ext_cur\">ext_cur</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) &gt; <a class=\"id\" href=\"#block_end\">block_end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"ext4 move extent: The specified range of file \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"may be the hole\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret1\">ret1</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Adjust start blocks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_blocks\">add_blocks</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ext_cur\">ext_cur</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ext_cur\">ext_cur</a>), <a class=\"id\" href=\"#block_end\">block_end</a> + 1) -", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ext_cur\">ext_cur</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>), <a class=\"id\" href=\"#block_start\">block_start</a>);", 
"", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#last_extent\">last_extent</a> && <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ext_cur\">ext_cur</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) <= <a class=\"id\" href=\"#block_end\">block_end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_blocks\">seq_blocks</a> += <a class=\"id\" href=\"#add_blocks\">add_blocks</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Adjust tail blocks */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#seq_start\">seq_start</a> + <a class=\"id\" href=\"#seq_blocks\">seq_blocks</a> - 1 &gt; <a class=\"id\" href=\"#block_end\">block_end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_blocks\">seq_blocks</a> = <a class=\"id\" href=\"#block_end\">block_end</a> - <a class=\"id\" href=\"#seq_start\">seq_start</a> + 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_prev\">ext_prev</a> = <a class=\"id\" href=\"#ext_cur\">ext_cur</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_extent\">last_extent</a> = <a class=\"id\" href=\"#mext_next_extent\">mext_next_extent</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#holecheck_path\">holecheck_path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#ext_cur\">ext_cur</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#last_extent\">last_extent</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret1\">ret1</a> = <a class=\"id\" href=\"#last_extent\">last_extent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_blocks\">add_blocks</a> = <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ext_cur\">ext_cur</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Extend the length of contiguous block (seq_blocks)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * if extents are contiguous.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_can_extents_be_merged\">ext4_can_extents_be_merged</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ext_prev\">ext_prev</a>, <a class=\"id\" href=\"#ext_cur\">ext_cur</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#block_end\">block_end</a> >= <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ext_cur\">ext_cur</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#last_extent\">last_extent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Is original extent is uninitialized */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uninit\">uninit</a> = <a class=\"id\" href=\"#ext4_ext_is_uninitialized\">ext4_ext_is_uninitialized</a>(<a class=\"id\" href=\"#ext_prev\">ext_prev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data_offset_in_page\">data_offset_in_page</a> = <a class=\"id\" href=\"#seq_start\">seq_start</a> % <a class=\"id\" href=\"#blocks_per_page\">blocks_per_page</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Calculate data blocks count that should be swapped</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * at the first page.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#data_offset_in_page\">data_offset_in_page</a> + <a class=\"id\" href=\"#seq_blocks\">seq_blocks</a> &gt; <a class=\"id\" href=\"#blocks_per_page\">blocks_per_page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Swapped blocks are across pages */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block_len_in_page\">block_len_in_page</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocks_per_page\">blocks_per_page</a> - <a class=\"id\" href=\"#data_offset_in_page\">data_offset_in_page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Swapped blocks are in a page */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block_len_in_page\">block_len_in_page</a> = <a class=\"id\" href=\"#seq_blocks\">seq_blocks</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_page_offset\">orig_page_offset</a> = <a class=\"id\" href=\"#seq_start\">seq_start</a> >>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a> - <a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_end_page\">seq_end_page</a> = (<a class=\"id\" href=\"#seq_start\">seq_start</a> + <a class=\"id\" href=\"#seq_blocks\">seq_blocks</a> - 1) >>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a> - <a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_start\">seq_start</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ext_cur\">ext_cur</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rest_blocks\">rest_blocks</a> = <a class=\"id\" href=\"#seq_blocks\">seq_blocks</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Up semaphore to avoid following problems:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * a. transaction deadlock among ext4_journal_start,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *    -&gt;write_begin via pagefault, and jbd2_journal_commit</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * b. racing with -&gt;readpage, -&gt;write_begin, and ext4_get_block</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *    in move_extent_per_page</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#double_up_write_data_sem\">double_up_write_data_sem</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#orig_page_offset\">orig_page_offset</a> <= <a class=\"id\" href=\"#seq_end_page\">seq_end_page</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Swap original branches with new branches */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block_len_in_page\">block_len_in_page</a> = <a class=\"id\" href=\"#move_extent_per_page\">move_extent_per_page</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#o_filp\">o_filp</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_page_offset\">orig_page_offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data_offset_in_page\">data_offset_in_page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block_len_in_page\">block_len_in_page</a>, <a class=\"id\" href=\"#uninit\">uninit</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#ret1\">ret1</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Count how many blocks we have exchanged */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#moved_len\">moved_len</a> += <a class=\"id\" href=\"#block_len_in_page\">block_len_in_page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret1\">ret1</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#moved_len\">moved_len</a> &gt; <a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"We replaced blocks too much! \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"sum of replaced: %llu requested: %llu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#moved_len\">moved_len</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret1\">ret1</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_page_offset\">orig_page_offset</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data_offset_in_page\">data_offset_in_page</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rest_blocks\">rest_blocks</a> -= <a class=\"id\" href=\"#block_len_in_page\">block_len_in_page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rest_blocks\">rest_blocks</a> &gt; <a class=\"id\" href=\"#blocks_per_page\">blocks_per_page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block_len_in_page\">block_len_in_page</a> = <a class=\"id\" href=\"#blocks_per_page\">blocks_per_page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block_len_in_page\">block_len_in_page</a> = <a class=\"id\" href=\"#rest_blocks\">rest_blocks</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#double_down_write_data_sem\">double_down_write_data_sem</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret1\">ret1</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Decrease buffer counter */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#holecheck_path\">holecheck_path</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_drop_refs\">ext4_ext_drop_refs</a>(<a class=\"id\" href=\"#holecheck_path\">holecheck_path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret1\">ret1</a> = <a class=\"id\" href=\"#get_ext_path\">get_ext_path</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#seq_start\">seq_start</a>, &amp;<a class=\"id\" href=\"#holecheck_path\">holecheck_path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret1\">ret1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#holecheck_path\">holecheck_path</a>-><a class=\"id\" href=\"#p_depth\">p_depth</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Decrease buffer counter */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#orig_path\">orig_path</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_drop_refs\">ext4_ext_drop_refs</a>(<a class=\"id\" href=\"#orig_path\">orig_path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret1\">ret1</a> = <a class=\"id\" href=\"#get_ext_path\">get_ext_path</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#seq_start\">seq_start</a>, &amp;<a class=\"id\" href=\"#orig_path\">orig_path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret1\">ret1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_cur\">ext_cur</a> = <a class=\"id\" href=\"#holecheck_path\">holecheck_path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_blocks\">add_blocks</a> = <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ext_cur\">ext_cur</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_blocks\">seq_blocks</a> = 0;", 
"", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#moved_len\">moved_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_discard_preallocations\">ext4_discard_preallocations</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_discard_preallocations\">ext4_discard_preallocations</a>(<a class=\"id\" href=\"#donor_inode\">donor_inode</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#orig_path\">orig_path</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_drop_refs\">ext4_ext_drop_refs</a>(<a class=\"id\" href=\"#orig_path\">orig_path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#orig_path\">orig_path</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#holecheck_path\">holecheck_path</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_drop_refs\">ext4_ext_drop_refs</a>(<a class=\"id\" href=\"#holecheck_path\">holecheck_path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#holecheck_path\">holecheck_path</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#double_up_write_data_sem\">double_up_write_data_sem</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret2\">ret2</a> = <a class=\"id\" href=\"#mext_inode_double_unlock\">mext_inode_double_unlock</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret1\">ret1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret1\">ret1</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#ret2\">ret2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret2\">ret2</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
];
xr_frag_insert('l/fa/b3beb1ae8ee4d6b0c5aac437a76ec0a3af4f09.xr', __xr_tmp);
