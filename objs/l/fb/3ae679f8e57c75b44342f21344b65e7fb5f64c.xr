var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2003 Bernardo Innocenti &lt;bernie@develer.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Based on former do_div() implementation from asm-parisc/div64.h:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Copyright (C) 1999 Hewlett-Packard Co</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Copyright (C) 1999 David Mosberger-Tang &lt;davidm@hpl.hp.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Generic C version of 64bit/32bit division and modulo, with</span>", 
"<span class=\"comment\"> * 64bit result and 32bit remainder.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The fast case for (n&gt;&gt;32 == 0) is handled inline by do_div(). </span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Code generated for this function might be very inefficient</span>", 
"<span class=\"comment\"> * for some CPUs. __div64_32() can be overridden by linking arch-specific</span>", 
"<span class=\"comment\"> * assembly versions such as arch/ppc/lib/div64.S and arch/sh/lib/div64.S.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#math64\">math64</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Not needed on 64bit architectures */</span>", 
"#if <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a> == 32", 
"", 
"<a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#weak\">weak</a>)) <a class=\"id\" href=\"#__div64_32\">__div64_32</a>(<a class=\"id\" href=\"#uint64_t\">uint64_t</a> *<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#base\">base</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint64_t\">uint64_t</a> <a class=\"id\" href=\"#rem\">rem</a> = *<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint64_t\">uint64_t</a> <a class=\"id\" href=\"#b\">b</a> = <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint64_t\">uint64_t</a> <a class=\"id\" href=\"#res\">res</a>, <a class=\"id\" href=\"#d\">d</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#high\">high</a> = <a class=\"id\" href=\"#rem\">rem</a> >> 32;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Reduce the thing a bit first */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#high\">high</a> >= <a class=\"id\" href=\"#base\">base</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#high\">high</a> /= <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = (<a class=\"id\" href=\"#uint64_t\">uint64_t</a>) <a class=\"id\" href=\"#high\">high</a> << 32;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rem\">rem</a> -= (<a class=\"id\" href=\"#uint64_t\">uint64_t</a>) (<a class=\"id\" href=\"#high\">high</a>*<a class=\"id\" href=\"#base\">base</a>) << 32;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#int64_t\">int64_t</a>)<a class=\"id\" href=\"#b\">b</a> &gt; 0 && <a class=\"id\" href=\"#b\">b</a> &lt; <a class=\"id\" href=\"#rem\">rem</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a> = <a class=\"id\" href=\"#b\">b</a>+<a class=\"id\" href=\"#b\">b</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a> = <a class=\"id\" href=\"#d\">d</a>+<a class=\"id\" href=\"#d\">d</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rem\">rem</a> >= <a class=\"id\" href=\"#b\">b</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rem\">rem</a> -= <a class=\"id\" href=\"#b\">b</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> += <a class=\"id\" href=\"#d\">d</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a> >>= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a> >>= 1;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#d\">d</a>);", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rem\">rem</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__div64_32\">__div64_32</a>);", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#div_s64_rem\">div_s64_rem</a>", 
"<a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#div_s64_rem\">div_s64_rem</a>(<a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#dividend\">dividend</a>, <a class=\"id\" href=\"#s32\">s32</a> <a class=\"id\" href=\"#divisor\">divisor</a>, <a class=\"id\" href=\"#s32\">s32</a> *<a class=\"id\" href=\"#remainder\">remainder</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#quotient\">quotient</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dividend\">dividend</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quotient\">quotient</a> = <a class=\"id\" href=\"#div_u64_rem\">div_u64_rem</a>(-<a class=\"id\" href=\"#dividend\">dividend</a>, <a class=\"id\" href=\"#abs\">abs</a>(<a class=\"id\" href=\"#divisor\">divisor</a>), (<a class=\"id\" href=\"#u32\">u32</a> *)<a class=\"id\" href=\"#remainder\">remainder</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#remainder\">remainder</a> = -*<a class=\"id\" href=\"#remainder\">remainder</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#divisor\">divisor</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quotient\">quotient</a> = -<a class=\"id\" href=\"#quotient\">quotient</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quotient\">quotient</a> = <a class=\"id\" href=\"#div_u64_rem\">div_u64_rem</a>(<a class=\"id\" href=\"#dividend\">dividend</a>, <a class=\"id\" href=\"#abs\">abs</a>(<a class=\"id\" href=\"#divisor\">divisor</a>), (<a class=\"id\" href=\"#u32\">u32</a> *)<a class=\"id\" href=\"#remainder\">remainder</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#divisor\">divisor</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quotient\">quotient</a> = -<a class=\"id\" href=\"#quotient\">quotient</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#quotient\">quotient</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#div_s64_rem\">div_s64_rem</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* 64bit divisor, dividend and result. dynamic precision */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#div64_u64\">div64_u64</a>", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#div64_u64\">div64_u64</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#dividend\">dividend</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#divisor\">divisor</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#high\">high</a>, <a class=\"id\" href=\"#d\">d</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#high\">high</a> = <a class=\"id\" href=\"#divisor\">divisor</a> >> 32;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#high\">high</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#shift\">shift</a> = <a class=\"id\" href=\"#fls\">fls</a>(<a class=\"id\" href=\"#high\">high</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a> = <a class=\"id\" href=\"#divisor\">divisor</a> >> <a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dividend\">dividend</a> >>= <a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a> = <a class=\"id\" href=\"#divisor\">divisor</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#div_u64\">div_u64</a>(<a class=\"id\" href=\"#dividend\">dividend</a>, <a class=\"id\" href=\"#d\">d</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#div64_u64\">div64_u64</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* BITS_PER_LONG == 32 */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Iterative div/mod for use when dividend is not expected to be much</span>", 
"<span class=\"comment\"> * bigger than divisor.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#iter_div_u64_rem\">iter_div_u64_rem</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#dividend\">dividend</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#divisor\">divisor</a>, <a class=\"id\" href=\"#u64\">u64</a> *<a class=\"id\" href=\"#remainder\">remainder</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__iter_div_u64_rem\">__iter_div_u64_rem</a>(<a class=\"id\" href=\"#dividend\">dividend</a>, <a class=\"id\" href=\"#divisor\">divisor</a>, <a class=\"id\" href=\"#remainder\">remainder</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#iter_div_u64_rem\">iter_div_u64_rem</a>);", 
];
xr_frag_insert('l/fb/3ae679f8e57c75b44342f21344b65e7fb5f64c.xr', __xr_tmp);
