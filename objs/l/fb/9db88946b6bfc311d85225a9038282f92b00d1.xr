var __xr_tmp = [
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ds_method_data_init_args</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  *Params         - Pointer to a parameter list for the method</span>", 
"<span class=\"comment\"> *              max_param_count - The arg count for this method</span>", 
"<span class=\"comment\"> *              walk_state      - Current walk state object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Initialize arguments for a method.  The parameter list is a list</span>", 
"<span class=\"comment\"> *              of ACPI operand objects, either null terminated or whose length</span>", 
"<span class=\"comment\"> *              is defined by max_param_count.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ds_method_data_init_args\">acpi_ds_method_data_init_args</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#params\">params</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#max_param_count\">max_param_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#index\">index</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE_PTR\">ACPI_FUNCTION_TRACE_PTR</a>(<a class=\"id\" href=\"#ds_method_data_init_args\">ds_method_data_init_args</a>, <a class=\"id\" href=\"#params\">params</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#params\">params</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_EXEC\">ACPI_DB_EXEC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"No param list passed to method\\n\"));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Copy passed parameters into the new method stack frame */</span>", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#index\">index</a> &lt; <a class=\"id\" href=\"#ACPI_METHOD_NUM_ARGS\">ACPI_METHOD_NUM_ARGS</a>) &&", 
"<span class=\"ts\"/>       (<a class=\"id\" href=\"#index\">index</a> &lt; <a class=\"id\" href=\"#max_param_count\">max_param_count</a>) && <a class=\"id\" href=\"#params\">params</a>[<a class=\"id\" href=\"#index\">index</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * A valid parameter.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Store the argument in the method/walk descriptor.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Do not copy the arg in order to implement call by reference</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ds_method_data_set_value\">acpi_ds_method_data_set_value</a>(<a class=\"id\" href=\"#ACPI_REFCLASS_ARG\">ACPI_REFCLASS_ARG</a>, <a class=\"id\" href=\"#index\">index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#params\">params</a>[<a class=\"id\" href=\"#index\">index</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#walk_state\">walk_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_EXEC\">ACPI_DB_EXEC</a>, \"%u args passed to method\\n\", <a class=\"id\" href=\"#index\">index</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ds_method_data_get_node</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Type                - Either ACPI_REFCLASS_LOCAL or</span>", 
"<span class=\"comment\"> *                                    ACPI_REFCLASS_ARG</span>", 
"<span class=\"comment\"> *              Index               - Which Local or Arg whose type to get</span>", 
"<span class=\"comment\"> *              walk_state          - Current walk state object</span>", 
"<span class=\"comment\"> *              Node                - Where the node is returned.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status and node</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Get the Node associated with a local or arg.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ds_method_data_get_node\">acpi_ds_method_data_get_node</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#index\">index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> **<a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ds_method_data_get_node\">ds_method_data_get_node</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Method Locals and Arguments are supported</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_LOCAL\">ACPI_REFCLASS_LOCAL</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#index\">index</a> &gt; <a class=\"id\" href=\"#ACPI_METHOD_MAX_LOCAL\">ACPI_METHOD_MAX_LOCAL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Local index %u is invalid (max %u)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#ACPI_METHOD_MAX_LOCAL\">ACPI_METHOD_MAX_LOCAL</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_INVALID_INDEX\">AE_AML_INVALID_INDEX</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Return a pointer to the pseudo-node */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#node\">node</a> = &amp;<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#local_variables\">local_variables</a>[<a class=\"id\" href=\"#index\">index</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_ARG\">ACPI_REFCLASS_ARG</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#index\">index</a> &gt; <a class=\"id\" href=\"#ACPI_METHOD_MAX_ARG\">ACPI_METHOD_MAX_ARG</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Arg index %u is invalid (max %u)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#ACPI_METHOD_MAX_ARG\">ACPI_METHOD_MAX_ARG</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_INVALID_INDEX\">AE_AML_INVALID_INDEX</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Return a pointer to the pseudo-node */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#node\">node</a> = &amp;<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#arguments\">arguments</a>[<a class=\"id\" href=\"#index\">index</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, \"Type %u is invalid\", <a class=\"id\" href=\"#type\">type</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_TYPE\">AE_TYPE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ds_method_data_set_value</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Type                - Either ACPI_REFCLASS_LOCAL or</span>", 
"<span class=\"comment\"> *                                    ACPI_REFCLASS_ARG</span>", 
"<span class=\"comment\"> *              Index               - Which Local or Arg to get</span>", 
"<span class=\"comment\"> *              Object              - Object to be inserted into the stack entry</span>", 
"<span class=\"comment\"> *              walk_state          - Current walk state object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Insert an object onto the method stack at entry Opcode:Index.</span>", 
"<span class=\"comment\"> *              Note: There is no \"implicit conversion\" for locals.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ds_method_data_set_value\">acpi_ds_method_data_set_value</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#index\">index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#object\">object</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ds_method_data_set_value\">ds_method_data_set_value</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_EXEC\">ACPI_DB_EXEC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"NewObj %p Type %2.2X, Refs=%u [%s]\\n\", <a class=\"id\" href=\"#object\">object</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#object\">object</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#reference_count\">reference_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#acpi_ut_get_type_name\">acpi_ut_get_type_name</a>(<a class=\"id\" href=\"#object\">object</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a>)));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get the namespace node for the arg/local */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ds_method_data_get_node\">acpi_ds_method_data_get_node</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#walk_state\">walk_state</a>, &amp;<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Increment ref count so object can't be deleted while installed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * NOTE: We do not copy the object in order to preserve the call by</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * reference semantics of ACPI Control Method invocation.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (See ACPI Specification 2.0_c)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_add_reference\">acpi_ut_add_reference</a>(<a class=\"id\" href=\"#object\">object</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Install the object */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#object\">object</a> = <a class=\"id\" href=\"#object\">object</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ds_method_data_get_value</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Type                - Either ACPI_REFCLASS_LOCAL or</span>", 
"<span class=\"comment\"> *                                    ACPI_REFCLASS_ARG</span>", 
"<span class=\"comment\"> *              Index               - Which local_var or argument to get</span>", 
"<span class=\"comment\"> *              walk_state          - Current walk state object</span>", 
"<span class=\"comment\"> *              dest_desc           - Where Arg or Local value is returned</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Retrieve value of selected Arg or Local for this method</span>", 
"<span class=\"comment\"> *              Used only in acpi_ex_resolve_to_value().</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ds_method_data_get_value\">acpi_ds_method_data_get_value</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#index\">index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#dest_desc\">dest_desc</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#object\">object</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ds_method_data_get_value\">ds_method_data_get_value</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Validate the object descriptor */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dest_desc\">dest_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, \"Null object descriptor pointer\"));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get the namespace node for the arg/local */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ds_method_data_get_node\">acpi_ds_method_data_get_node</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#walk_state\">walk_state</a>, &amp;<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get the object from the node */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#object\">object</a> = <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#object\">object</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Examine the returned object, it must be valid. */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#object\">object</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Index points to uninitialized object.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * This means that either 1) The expected argument was</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * not passed to the method, or 2) A local variable</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * was referenced by the method (via the ASL)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * before it was initialized.  Either case is an error.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If slack enabled, init the local_x/arg_x to an Integer of value zero */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_enable_interpreter_slack\">acpi_gbl_enable_interpreter_slack</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#object\">object</a> = <a class=\"id\" href=\"#acpi_ut_create_integer_object\">acpi_ut_create_integer_object</a>((<a class=\"id\" href=\"#u64\">u64</a>) 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#object\">object</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#object\">object</a> = <a class=\"id\" href=\"#object\">object</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Otherwise, return the error */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_ARG\">ACPI_REFCLASS_ARG</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Uninitialized Arg[%u] at node %p\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#node\">node</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_UNINITIALIZED_ARG\">AE_AML_UNINITIALIZED_ARG</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_LOCAL\">ACPI_REFCLASS_LOCAL</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * No error message for this case, will be trapped again later to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * detect and ignore cases of Store(local_x,local_x)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_UNINITIALIZED_LOCAL\">AE_AML_UNINITIALIZED_LOCAL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Not a Arg/Local opcode: 0x%X\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#type\">type</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_INTERNAL\">AE_AML_INTERNAL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The Index points to an initialized and valid object.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Return an additional reference to the object</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#dest_desc\">dest_desc</a> = <a class=\"id\" href=\"#object\">object</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_add_reference\">acpi_ut_add_reference</a>(<a class=\"id\" href=\"#object\">object</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ds_method_data_delete_value</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Type                - Either ACPI_REFCLASS_LOCAL or</span>", 
"<span class=\"comment\"> *                                    ACPI_REFCLASS_ARG</span>", 
"<span class=\"comment\"> *              Index               - Which local_var or argument to delete</span>", 
"<span class=\"comment\"> *              walk_state          - Current walk state object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Delete the entry at Opcode:Index.  Inserts</span>", 
"<span class=\"comment\"> *              a null into the stack slot after the object is deleted.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static void", 
"<a class=\"id\" href=\"#acpi_ds_method_data_delete_value\">acpi_ds_method_data_delete_value</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#index\">index</a>, struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#object\">object</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ds_method_data_delete_value\">ds_method_data_delete_value</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get the namespace node for the arg/local */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ds_method_data_get_node\">acpi_ds_method_data_get_node</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#walk_state\">walk_state</a>, &amp;<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_VOID\">return_VOID</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get the associated object */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#object\">object</a> = <a class=\"id\" href=\"#acpi_ns_get_attached_object\">acpi_ns_get_attached_object</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Undefine the Arg or Local by setting its descriptor</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * pointer to NULL. Locals/Args can contain both</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ACPI_OPERAND_OBJECTS and ACPI_NAMESPACE_NODEs</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#object\">object</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#object\">object</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#ACPI_GET_DESCRIPTOR_TYPE\">ACPI_GET_DESCRIPTOR_TYPE</a>(<a class=\"id\" href=\"#object\">object</a>) == <a class=\"id\" href=\"#ACPI_DESC_TYPE_OPERAND\">ACPI_DESC_TYPE_OPERAND</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * There is a valid object.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Decrement the reference count by one to balance the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * increment when the object was stored.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#object\">object</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_VOID\">return_VOID</a>;", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ds_store_object_to_local</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Type                - Either ACPI_REFCLASS_LOCAL or</span>", 
"<span class=\"comment\"> *                                    ACPI_REFCLASS_ARG</span>", 
"<span class=\"comment\"> *              Index               - Which Local or Arg to set</span>", 
"<span class=\"comment\"> *              obj_desc            - Value to be stored</span>", 
"<span class=\"comment\"> *              walk_state          - Current walk state</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Store a value in an Arg or Local.  The obj_desc is installed</span>", 
"<span class=\"comment\"> *              as the new value for the Arg or Local and the reference count</span>", 
"<span class=\"comment\"> *              for obj_desc is incremented.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ds_store_object_to_local\">acpi_ds_store_object_to_local</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#index\">index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#obj_desc\">obj_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#current_obj_desc\">current_obj_desc</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#new_obj_desc\">new_obj_desc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ds_store_object_to_local\">ds_store_object_to_local</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_EXEC\">ACPI_DB_EXEC</a>, \"Type=%2.2X Index=%u Obj=%p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#obj_desc\">obj_desc</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Parameter validation */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#obj_desc\">obj_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get the namespace node for the arg/local */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ds_method_data_get_node\">acpi_ds_method_data_get_node</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#walk_state\">walk_state</a>, &amp;<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current_obj_desc\">current_obj_desc</a> = <a class=\"id\" href=\"#acpi_ns_get_attached_object\">acpi_ns_get_attached_object</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#current_obj_desc\">current_obj_desc</a> == <a class=\"id\" href=\"#obj_desc\">obj_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_EXEC\">ACPI_DB_EXEC</a>, \"Obj=%p already installed!\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#obj_desc\">obj_desc</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the reference count on the object is more than one, we must</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * take a copy of the object before we store.  A reference count</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * of exactly 1 means that the object was just created during the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * evaluation of an expression, and we can safely use it since it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is not used anywhere else.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_obj_desc\">new_obj_desc</a> = <a class=\"id\" href=\"#obj_desc\">obj_desc</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#reference_count\">reference_count</a> &gt; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ut_copy_iobject_to_iobject\">acpi_ut_copy_iobject_to_iobject</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>, &amp;<a class=\"id\" href=\"#new_obj_desc\">new_obj_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#walk_state\">walk_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If there is an object already in this slot, we either</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * have to delete it, or if this is an argument and there</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is an object reference stored there, we have to do</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * an indirect store!</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#current_obj_desc\">current_obj_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Check for an indirect store if an argument</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * contains an object reference (stored as an Node).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We don't allow this automatic dereferencing for</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * locals, since a store to a local should overwrite</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * anything there, including an object reference.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If both Arg0 and Local0 contain ref_of (Local4):</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Store (1, Arg0)             - Causes indirect store to local4</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Store (1, Local0)           - Stores 1 in local0, overwriting</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *                                  the reference to local4</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Store (1, de_refof (Local0)) - Causes indirect store to local4</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Weird, but true.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#ACPI_REFCLASS_ARG\">ACPI_REFCLASS_ARG</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If we have a valid reference object that came from ref_of(),</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * do the indirect store</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ACPI_GET_DESCRIPTOR_TYPE\">ACPI_GET_DESCRIPTOR_TYPE</a>(<a class=\"id\" href=\"#current_obj_desc\">current_obj_desc</a>) ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ACPI_DESC_TYPE_OPERAND\">ACPI_DESC_TYPE_OPERAND</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    && (<a class=\"id\" href=\"#current_obj_desc\">current_obj_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a> ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_TYPE_LOCAL_REFERENCE\">ACPI_TYPE_LOCAL_REFERENCE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    && (<a class=\"id\" href=\"#current_obj_desc\">current_obj_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#class\">class</a> ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_REFCLASS_REFOF\">ACPI_REFCLASS_REFOF</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_EXEC\">ACPI_DB_EXEC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Arg (%p) is an ObjRef(Node), storing in node %p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#new_obj_desc\">new_obj_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#current_obj_desc\">current_obj_desc</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Store this object to the Node (perform the indirect store)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * NOTE: No implicit conversion is performed, as per the ACPI</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * specification rules on storing to Locals/Args.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ex_store_object_to_node\">acpi_ex_store_object_to_node</a>(<a class=\"id\" href=\"#new_obj_desc\">new_obj_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#current_obj_desc\">current_obj_desc</a>->", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#reference\">reference</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#object\">object</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#walk_state\">walk_state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_NO_IMPLICIT_CONVERSION\">ACPI_NO_IMPLICIT_CONVERSION</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Remove local reference if we copied the object above */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_obj_desc\">new_obj_desc</a> != <a class=\"id\" href=\"#obj_desc\">obj_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#new_obj_desc\">new_obj_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Delete the existing object before storing the new one */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ds_method_data_delete_value\">acpi_ds_method_data_delete_value</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#walk_state\">walk_state</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Install the Obj descriptor (*new_obj_desc) into</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the descriptor for the Arg or Local.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (increments the object reference count by one)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ds_method_data_set_value\">acpi_ds_method_data_set_value</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#new_obj_desc\">new_obj_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#walk_state\">walk_state</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Remove local reference if we copied the object above */</span>", 
"", 
];
xr_frag_insert('l/fb/9db88946b6bfc311d85225a9038282f92b00d1.xr', __xr_tmp);
