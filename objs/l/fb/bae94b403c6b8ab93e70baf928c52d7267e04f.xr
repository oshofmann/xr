var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * 32bit compatibility wrappers for the input subsystem.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Very heavily based on evdev.c - Copyright (c) 1999-2002 Vojtech Pavlik</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify it</span>", 
"<span class=\"comment\"> * under the terms of the GNU General Public License version 2 as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"input-compat.h\"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"", 
"int <a class=\"id\" href=\"#input_event_from_user\">input_event_from_user</a>(const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#input_event\">input_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#INPUT_COMPAT_TEST\">INPUT_COMPAT_TEST</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#input_event_compat\">input_event_compat</a> <a class=\"id\" href=\"#compat_event\">compat_event</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#compat_event\">compat_event</a>, <a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   sizeof(struct <a class=\"id\" href=\"#input_event_compat\">input_event_compat</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> = <a class=\"id\" href=\"#compat_event\">compat_event</a>.<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tv_usec\">tv_usec</a> = <a class=\"id\" href=\"#compat_event\">compat_event</a>.<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tv_usec\">tv_usec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#compat_event\">compat_event</a>.<a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#code\">code</a> = <a class=\"id\" href=\"#compat_event\">compat_event</a>.<a class=\"id\" href=\"#code\">code</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#compat_event\">compat_event</a>.<a class=\"id\" href=\"#value\">value</a>;", 
"", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#event\">event</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, sizeof(struct <a class=\"id\" href=\"#input_event\">input_event</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#input_event_to_user\">input_event_to_user</a>(char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#input_event\">input_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#INPUT_COMPAT_TEST\">INPUT_COMPAT_TEST</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#input_event_compat\">input_event_compat</a> <a class=\"id\" href=\"#compat_event\">compat_event</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compat_event\">compat_event</a>.<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> = <a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compat_event\">compat_event</a>.<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tv_usec\">tv_usec</a> = <a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tv_usec\">tv_usec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compat_event\">compat_event</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compat_event\">compat_event</a>.<a class=\"id\" href=\"#code\">code</a> = <a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#code\">code</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compat_event\">compat_event</a>.<a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#value\">value</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, &amp;<a class=\"id\" href=\"#compat_event\">compat_event</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> sizeof(struct <a class=\"id\" href=\"#input_event_compat\">input_event_compat</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#event\">event</a>, sizeof(struct <a class=\"id\" href=\"#input_event\">input_event</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#input_ff_effect_from_user\">input_ff_effect_from_user</a>(const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ff_effect\">ff_effect</a> *<a class=\"id\" href=\"#effect\">effect</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#INPUT_COMPAT_TEST\">INPUT_COMPAT_TEST</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ff_effect_compat\">ff_effect_compat</a> *<a class=\"id\" href=\"#compat_effect\">compat_effect</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> != sizeof(struct <a class=\"id\" href=\"#ff_effect_compat\">ff_effect_compat</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * It so happens that the pointer which needs to be changed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * is the last field in the structure, so we can retrieve the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * whole thing and replace just the pointer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compat_effect\">compat_effect</a> = (struct <a class=\"id\" href=\"#ff_effect_compat\">ff_effect_compat</a> *)<a class=\"id\" href=\"#effect\">effect</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#compat_effect\">compat_effect</a>, <a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   sizeof(struct <a class=\"id\" href=\"#ff_effect_compat\">ff_effect_compat</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#compat_effect\">compat_effect</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#FF_PERIODIC\">FF_PERIODIC</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#compat_effect\">compat_effect</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#periodic\">periodic</a>.<a class=\"id\" href=\"#waveform\">waveform</a> == <a class=\"id\" href=\"#FF_CUSTOM\">FF_CUSTOM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#effect\">effect</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#periodic\">periodic</a>.<a class=\"id\" href=\"#custom_data\">custom_data</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compat_ptr\">compat_ptr</a>(<a class=\"id\" href=\"#compat_effect\">compat_effect</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#periodic\">periodic</a>.<a class=\"id\" href=\"#custom_data\">custom_data</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> != sizeof(struct <a class=\"id\" href=\"#ff_effect\">ff_effect</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#effect\">effect</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, sizeof(struct <a class=\"id\" href=\"#ff_effect\">ff_effect</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#else", 
"", 
"int <a class=\"id\" href=\"#input_event_from_user\">input_event_from_user</a>(const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#input_event\">input_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#event\">event</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, sizeof(struct <a class=\"id\" href=\"#input_event\">input_event</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#input_event_to_user\">input_event_to_user</a>(char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#input_event\">input_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#event\">event</a>, sizeof(struct <a class=\"id\" href=\"#input_event\">input_event</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#input_ff_effect_from_user\">input_ff_effect_from_user</a>(const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ff_effect\">ff_effect</a> *<a class=\"id\" href=\"#effect\">effect</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> != sizeof(struct <a class=\"id\" href=\"#ff_effect\">ff_effect</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#effect\">effect</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, sizeof(struct <a class=\"id\" href=\"#ff_effect\">ff_effect</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_COMPAT */</span>", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#input_event_from_user\">input_event_from_user</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#input_event_to_user\">input_event_to_user</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#input_ff_effect_from_user\">input_ff_effect_from_user</a>);", 
];
xr_frag_insert('l/fb/bae94b403c6b8ab93e70baf928c52d7267e04f.xr', __xr_tmp);
