var __xr_tmp = [
"<span class=\"comment\">/* memcontrol.h - Memory Controller</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright IBM Corporation, 2007</span>", 
"<span class=\"comment\"> * Author Balbir Singh &lt;balbir@linux.vnet.ibm.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright 2007 OpenVZ SWsoft Inc</span>", 
"<span class=\"comment\"> * Author: Pavel Emelianov &lt;xemul@openvz.org&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_MEMCONTROL_H\">_LINUX_MEMCONTROL_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_MEMCONTROL_H\">_LINUX_MEMCONTROL_H</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cgroup\">cgroup</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a>;", 
"struct <a class=\"id\" href=\"#page_cgroup\">page_cgroup</a>;", 
"struct <a class=\"id\" href=\"#page\">page</a>;", 
"struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a>;", 
"", 
"extern unsigned long <a class=\"id\" href=\"#mem_cgroup_isolate_pages\">mem_cgroup_isolate_pages</a>(unsigned long <a class=\"id\" href=\"#nr_to_scan\">nr_to_scan</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#scanned\">scanned</a>, int <a class=\"id\" href=\"#order\">order</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#mode\">mode</a>, struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#z\">z</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#mem_cont\">mem_cont</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#active\">active</a>, int <a class=\"id\" href=\"#file\">file</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CGROUP_MEM_RES_CTLR\">CONFIG_CGROUP_MEM_RES_CTLR</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * All \"charge\" functions with gfp_mask should use GFP_KERNEL or</span>", 
"<span class=\"comment\"> * (gfp_mask &amp; GFP_RECLAIM_MASK). In current implementatin, memcg doesn't</span>", 
"<span class=\"comment\"> * alloc memory but reclaims memory from all available zones. So, \"where I want</span>", 
"<span class=\"comment\"> * memory from\" bits of gfp_mask has no meaning. So any bits of that field is</span>", 
"<span class=\"comment\"> * available but adding a rule is better. charge functions' gfp_mask should</span>", 
"<span class=\"comment\"> * be set to GFP_KERNEL or gfp_mask &amp; GFP_RECLAIM_MASK for avoiding ambiguous</span>", 
"<span class=\"comment\"> * codes.</span>", 
"<span class=\"comment\"> * (Of course, if memcg does memory allocation in future, GFP_KERNEL is sane.)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"extern int <a class=\"id\" href=\"#mem_cgroup_newpage_charge\">mem_cgroup_newpage_charge</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"<span class=\"comment\">/* for swap handling */</span>", 
"extern int <a class=\"id\" href=\"#mem_cgroup_try_charge_swapin\">mem_cgroup_try_charge_swapin</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#mask\">mask</a>, struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> **<a class=\"id\" href=\"#ptr\">ptr</a>);", 
"extern void <a class=\"id\" href=\"#mem_cgroup_commit_charge_swapin\">mem_cgroup_commit_charge_swapin</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#ptr\">ptr</a>);", 
"extern void <a class=\"id\" href=\"#mem_cgroup_cancel_charge_swapin\">mem_cgroup_cancel_charge_swapin</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#ptr\">ptr</a>);", 
"", 
"extern int <a class=\"id\" href=\"#mem_cgroup_cache_charge\">mem_cgroup_cache_charge</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"extern void <a class=\"id\" href=\"#mem_cgroup_add_lru_list\">mem_cgroup_add_lru_list</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#lru\">lru</a>);", 
"extern void <a class=\"id\" href=\"#mem_cgroup_del_lru_list\">mem_cgroup_del_lru_list</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#lru\">lru</a>);", 
"extern void <a class=\"id\" href=\"#mem_cgroup_rotate_lru_list\">mem_cgroup_rotate_lru_list</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#lru\">lru</a>);", 
"extern void <a class=\"id\" href=\"#mem_cgroup_del_lru\">mem_cgroup_del_lru</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>);", 
"extern void <a class=\"id\" href=\"#mem_cgroup_move_lists\">mem_cgroup_move_lists</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#from\">from</a>, enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#to\">to</a>);", 
"", 
"<span class=\"comment\">/* For coalescing uncharge for reducing memcg' overhead*/</span>", 
"extern void <a class=\"id\" href=\"#mem_cgroup_uncharge_start\">mem_cgroup_uncharge_start</a>(void);", 
"extern void <a class=\"id\" href=\"#mem_cgroup_uncharge_end\">mem_cgroup_uncharge_end</a>(void);", 
"", 
"extern void <a class=\"id\" href=\"#mem_cgroup_uncharge_page\">mem_cgroup_uncharge_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>);", 
"extern void <a class=\"id\" href=\"#mem_cgroup_uncharge_cache_page\">mem_cgroup_uncharge_cache_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>);", 
"extern int <a class=\"id\" href=\"#mem_cgroup_shmem_charge_fallback\">mem_cgroup_shmem_charge_fallback</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"", 
"extern void <a class=\"id\" href=\"#mem_cgroup_out_of_memory\">mem_cgroup_out_of_memory</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#mem\">mem</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"int <a class=\"id\" href=\"#task_in_mem_cgroup\">task_in_mem_cgroup</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, const struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#mem\">mem</a>);", 
"", 
"extern struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#try_get_mem_cgroup_from_page\">try_get_mem_cgroup_from_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>);", 
"extern struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#mem_cgroup_from_task\">mem_cgroup_from_task</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a>", 
"int <a class=\"id\" href=\"#mm_match_cgroup\">mm_match_cgroup</a>(const struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, const struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#cgroup\">cgroup</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#mem\">mem</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mem\">mem</a> = <a class=\"id\" href=\"#mem_cgroup_from_task\">mem_cgroup_from_task</a>(<a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>((<a class=\"id\" href=\"#mm\">mm</a>)-><a class=\"id\" href=\"#owner\">owner</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cgroup\">cgroup</a> == <a class=\"id\" href=\"#mem\">mem</a>;", 
"}", 
"", 
"extern struct <a class=\"id\" href=\"#cgroup_subsys_state\">cgroup_subsys_state</a> *<a class=\"id\" href=\"#mem_cgroup_css\">mem_cgroup_css</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#mem\">mem</a>);", 
"", 
"extern int", 
"<a class=\"id\" href=\"#mem_cgroup_prepare_migration\">mem_cgroup_prepare_migration</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#newpage\">newpage</a>, struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> **<a class=\"id\" href=\"#ptr\">ptr</a>);", 
"extern void <a class=\"id\" href=\"#mem_cgroup_end_migration\">mem_cgroup_end_migration</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#mem\">mem</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#oldpage\">oldpage</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#newpage\">newpage</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * For memory reclaim.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#mem_cgroup_inactive_anon_is_low\">mem_cgroup_inactive_anon_is_low</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#memcg\">memcg</a>);", 
"int <a class=\"id\" href=\"#mem_cgroup_inactive_file_is_low\">mem_cgroup_inactive_file_is_low</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#memcg\">memcg</a>);", 
"unsigned long <a class=\"id\" href=\"#mem_cgroup_zone_nr_pages\">mem_cgroup_zone_nr_pages</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#memcg\">memcg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#lru\">lru</a>);", 
"struct <a class=\"id\" href=\"#zone_reclaim_stat\">zone_reclaim_stat</a> *<a class=\"id\" href=\"#mem_cgroup_get_reclaim_stat\">mem_cgroup_get_reclaim_stat</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#memcg\">memcg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a>);", 
"struct <a class=\"id\" href=\"#zone_reclaim_stat\">zone_reclaim_stat</a>*", 
"<a class=\"id\" href=\"#mem_cgroup_get_reclaim_stat_from_page\">mem_cgroup_get_reclaim_stat_from_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>);", 
"extern void <a class=\"id\" href=\"#mem_cgroup_print_oom_info\">mem_cgroup_print_oom_info</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#memcg\">memcg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CGROUP_MEM_RES_CTLR_SWAP\">CONFIG_CGROUP_MEM_RES_CTLR_SWAP</a>", 
"extern int <a class=\"id\" href=\"#do_swap_account\">do_swap_account</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#mem_cgroup_disabled\">mem_cgroup_disabled</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mem_cgroup_subsys\">mem_cgroup_subsys</a>.<a class=\"id\" href=\"#disabled\">disabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#mem_cgroup_update_file_mapped\">mem_cgroup_update_file_mapped</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, int <a class=\"id\" href=\"#val\">val</a>);", 
"unsigned long <a class=\"id\" href=\"#mem_cgroup_soft_limit_reclaim\">mem_cgroup_soft_limit_reclaim</a>(struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a>, int <a class=\"id\" href=\"#order\">order</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#mem_cgroup_get_limit\">mem_cgroup_get_limit</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#mem\">mem</a>);", 
"", 
"#else <span class=\"comment\">/* CONFIG_CGROUP_MEM_RES_CTLR */</span>", 
"struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a>;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#mem_cgroup_newpage_charge\">mem_cgroup_newpage_charge</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#mem_cgroup_cache_charge\">mem_cgroup_cache_charge</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#mem_cgroup_try_charge_swapin\">mem_cgroup_try_charge_swapin</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>, struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> **<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mem_cgroup_commit_charge_swapin\">mem_cgroup_commit_charge_swapin</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mem_cgroup_cancel_charge_swapin\">mem_cgroup_cancel_charge_swapin</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mem_cgroup_uncharge_start\">mem_cgroup_uncharge_start</a>(void)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mem_cgroup_uncharge_end\">mem_cgroup_uncharge_end</a>(void)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mem_cgroup_uncharge_page\">mem_cgroup_uncharge_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mem_cgroup_uncharge_cache_page\">mem_cgroup_uncharge_cache_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#mem_cgroup_shmem_charge_fallback\">mem_cgroup_shmem_charge_fallback</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mem_cgroup_add_lru_list\">mem_cgroup_add_lru_list</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, int <a class=\"id\" href=\"#lru\">lru</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mem_cgroup_del_lru_list\">mem_cgroup_del_lru_list</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, int <a class=\"id\" href=\"#lru\">lru</a>)", 
"{", 
"<span class=\"ts\"/>return ;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mem_cgroup_rotate_lru_list\">mem_cgroup_rotate_lru_list</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, int <a class=\"id\" href=\"#lru\">lru</a>)", 
"{", 
"<span class=\"ts\"/>return ;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mem_cgroup_del_lru\">mem_cgroup_del_lru</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>return ;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#mem_cgroup_move_lists\">mem_cgroup_move_lists</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#from\">from</a>, enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#to\">to</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#try_get_mem_cgroup_from_page\">try_get_mem_cgroup_from_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#mm_match_cgroup\">mm_match_cgroup</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#mem\">mem</a>)", 
"{", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#task_in_mem_cgroup\">task_in_mem_cgroup</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#mem\">mem</a>)", 
"{", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#cgroup_subsys_state\">cgroup_subsys_state</a> *<a class=\"id\" href=\"#mem_cgroup_css\">mem_cgroup_css</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#mem\">mem</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#mem_cgroup_prepare_migration\">mem_cgroup_prepare_migration</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#newpage\">newpage</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> **<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mem_cgroup_end_migration\">mem_cgroup_end_migration</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#mem\">mem</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#oldpage\">oldpage</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#newpage\">newpage</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#mem_cgroup_get_reclaim_priority\">mem_cgroup_get_reclaim_priority</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#mem\">mem</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mem_cgroup_note_reclaim_priority\">mem_cgroup_note_reclaim_priority</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#mem\">mem</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#priority\">priority</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mem_cgroup_record_reclaim_priority\">mem_cgroup_record_reclaim_priority</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#mem\">mem</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#priority\">priority</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#mem_cgroup_disabled\">mem_cgroup_disabled</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#mem_cgroup_inactive_anon_is_low\">mem_cgroup_inactive_anon_is_low</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#memcg\">memcg</a>)", 
"{", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#mem_cgroup_inactive_file_is_low\">mem_cgroup_inactive_file_is_low</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#memcg\">memcg</a>)", 
"{", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long", 
"<a class=\"id\" href=\"#mem_cgroup_zone_nr_pages\">mem_cgroup_zone_nr_pages</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#memcg\">memcg</a>, struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#lru\">lru</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#zone_reclaim_stat\">zone_reclaim_stat</a>*", 
"<a class=\"id\" href=\"#mem_cgroup_get_reclaim_stat\">mem_cgroup_get_reclaim_stat</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#memcg\">memcg</a>, struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#zone_reclaim_stat\">zone_reclaim_stat</a>*", 
"<a class=\"id\" href=\"#mem_cgroup_get_reclaim_stat_from_page\">mem_cgroup_get_reclaim_stat_from_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#mem_cgroup_print_oom_info\">mem_cgroup_print_oom_info</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#memcg\">memcg</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mem_cgroup_update_file_mapped\">mem_cgroup_update_file_mapped</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a>", 
"unsigned long <a class=\"id\" href=\"#mem_cgroup_soft_limit_reclaim\">mem_cgroup_soft_limit_reclaim</a>(struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a>, int <a class=\"id\" href=\"#order\">order</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a>", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#mem_cgroup_get_limit\">mem_cgroup_get_limit</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#mem\">mem</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_CGROUP_MEM_CONT */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_MEMCONTROL_H */</span>", 
"", 
];
xr_frag_insert('l/fb/ecf8bfc6202c9349401398081f38bfa5f1bb96.xr', __xr_tmp);
