var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fs/inotify_user.c - inotify support for userspace</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>John McCutchan<span class=\"ts\"/>&lt;ttb@tentacle.dhs.org&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Robert Love<span class=\"ts\"/>&lt;rml@novell.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2005 John McCutchan</span>", 
"<span class=\"comment\"> * Copyright 2006 Hewlett-Packard Development Company, L.P.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2009 Eric Paris &lt;Red Hat Inc&gt;</span>", 
"<span class=\"comment\"> * inotify was largely rewriten to make use of the fsnotify infrastructure</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify it</span>", 
"<span class=\"comment\"> * under the terms of the GNU General Public License as published by the</span>", 
"<span class=\"comment\"> * Free Software Foundation; either version 2, or (at your option) any</span>", 
"<span class=\"comment\"> * later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful, but</span>", 
"<span class=\"comment\"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>", 
"<span class=\"comment\"> * General Public License for more details.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#file\">file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt; <span class=\"comment\">/* struct inode */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fsnotify_backend\">fsnotify_backend</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#idr\">idr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt; <span class=\"comment\">/* module_init */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inotify\">inotify</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt; <span class=\"comment\">/* roundup() */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#namei\">namei</a>.<a class=\"id\" href=\"#h\">h</a>&gt; <span class=\"comment\">/* LOOKUP_FOLLOW */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt; <span class=\"comment\">/* struct user */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt; <span class=\"comment\">/* struct kmem_cache */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#anon_inodes\">anon_inodes</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#poll\">poll</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#wait\">wait</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"inotify.h\"", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#ioctls\">ioctls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* these are configurable via /proc/sys/fs/inotify/ */</span>", 
"static int <a class=\"id\" href=\"#inotify_max_user_instances\">inotify_max_user_instances</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"static int <a class=\"id\" href=\"#inotify_max_queued_events\">inotify_max_queued_events</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"static int <a class=\"id\" href=\"#inotify_max_user_watches\">inotify_max_user_watches</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#inotify_inode_mark_cachep\">inotify_inode_mark_cachep</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#event_priv_cachep\">event_priv_cachep</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static int <a class=\"id\" href=\"#zero\">zero</a>;", 
"", 
"<a class=\"id\" href=\"#ctl_table\">ctl_table</a> <a class=\"id\" href=\"#inotify_table\">inotify_table</a>[] = {", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#procname\">procname</a><span class=\"ts\"/>= \"max_user_instances\",", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#data\">data</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#inotify_max_user_instances\">inotify_max_user_instances</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#maxlen\">maxlen</a><span class=\"ts\"/><span class=\"ts\"/>= sizeof(int),", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mode\">mode</a><span class=\"ts\"/><span class=\"ts\"/>= 0644,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#proc_handler\">proc_handler</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_dointvec_minmax\">proc_dointvec_minmax</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#extra1\">extra1</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#zero\">zero</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#procname\">procname</a><span class=\"ts\"/>= \"max_user_watches\",", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#data\">data</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#inotify_max_user_watches\">inotify_max_user_watches</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#maxlen\">maxlen</a><span class=\"ts\"/><span class=\"ts\"/>= sizeof(int),", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mode\">mode</a><span class=\"ts\"/><span class=\"ts\"/>= 0644,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#proc_handler\">proc_handler</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_dointvec_minmax\">proc_dointvec_minmax</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#extra1\">extra1</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#zero\">zero</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#procname\">procname</a><span class=\"ts\"/>= \"max_queued_events\",", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#data\">data</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#inotify_max_queued_events\">inotify_max_queued_events</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#maxlen\">maxlen</a><span class=\"ts\"/><span class=\"ts\"/>= sizeof(int),", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mode\">mode</a><span class=\"ts\"/><span class=\"ts\"/>= 0644,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#proc_handler\">proc_handler</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_dointvec_minmax\">proc_dointvec_minmax</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#extra1\">extra1</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#zero\">zero</a>", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{ }", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SYSCTL */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#inotify_arg_to_mask\">inotify_arg_to_mask</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#mask\">mask</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * everything should accept their own ignored, cares about children,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and should receive events when the inode is unmounted</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = (<a class=\"id\" href=\"#FS_IN_IGNORED\">FS_IN_IGNORED</a> | <a class=\"id\" href=\"#FS_EVENT_ON_CHILD\">FS_EVENT_ON_CHILD</a> | <a class=\"id\" href=\"#FS_UNMOUNT\">FS_UNMOUNT</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* mask off the flags used to open the fd */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= (<a class=\"id\" href=\"#arg\">arg</a> &amp; (<a class=\"id\" href=\"#IN_ALL_EVENTS\">IN_ALL_EVENTS</a> | <a class=\"id\" href=\"#IN_ONESHOT\">IN_ONESHOT</a> | <a class=\"id\" href=\"#IN_EXCL_UNLINK\">IN_EXCL_UNLINK</a>));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mask\">mask</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#inotify_mask_to_arg\">inotify_mask_to_arg</a>(<a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mask\">mask</a> &amp; (<a class=\"id\" href=\"#IN_ALL_EVENTS\">IN_ALL_EVENTS</a> | <a class=\"id\" href=\"#IN_ISDIR\">IN_ISDIR</a> | <a class=\"id\" href=\"#IN_UNMOUNT\">IN_UNMOUNT</a> | <a class=\"id\" href=\"#IN_IGNORED\">IN_IGNORED</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#IN_Q_OVERFLOW\">IN_Q_OVERFLOW</a>);", 
"}", 
"", 
"<span class=\"comment\">/* intofiy userspace file descriptor functions */</span>", 
"static unsigned int <a class=\"id\" href=\"#inotify_poll\">inotify_poll</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#poll_table\">poll_table</a> *<a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#poll_wait\">poll_wait</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#notification_waitq\">notification_waitq</a>, <a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#notification_mutex\">notification_mutex</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fsnotify_notify_queue_is_empty\">fsnotify_notify_queue_is_empty</a>(<a class=\"id\" href=\"#group\">group</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#POLLIN\">POLLIN</a> | <a class=\"id\" href=\"#POLLRDNORM\">POLLRDNORM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#notification_mutex\">notification_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Get an inotify_kernel_event if one exists and is small</span>", 
"<span class=\"comment\"> * enough to fit in \"count\". Return an error pointer if</span>", 
"<span class=\"comment\"> * not large enough.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called with the group-&gt;notification_mutex held.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#fsnotify_event\">fsnotify_event</a> *<a class=\"id\" href=\"#get_one_event\">get_one_event</a>(struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#group\">group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#event_size\">event_size</a> = sizeof(struct <a class=\"id\" href=\"#inotify_event\">inotify_event</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fsnotify_event\">fsnotify_event</a> *<a class=\"id\" href=\"#event\">event</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fsnotify_notify_queue_is_empty\">fsnotify_notify_queue_is_empty</a>(<a class=\"id\" href=\"#group\">group</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a> = <a class=\"id\" href=\"#fsnotify_peek_notify_event\">fsnotify_peek_notify_event</a>(<a class=\"id\" href=\"#group\">group</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"%s: group=%p event=%p\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#event\">event</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#name_len\">name_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#event_size\">event_size</a> += <a class=\"id\" href=\"#roundup\">roundup</a>(<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#name_len\">name_len</a> + 1, <a class=\"id\" href=\"#event_size\">event_size</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#event_size\">event_size</a> &gt; <a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* held the notification_mutex the whole time, so this is the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * same event we peeked above */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_remove_notify_event\">fsnotify_remove_notify_event</a>(<a class=\"id\" href=\"#group\">group</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#event\">event</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copy an event to user space, returning how much we copied.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We already checked that the event size is smaller than the</span>", 
"<span class=\"comment\"> * buffer we had in \"get_one_event()\" above.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#copy_event_to_user\">copy_event_to_user</a>(struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#group\">group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#fsnotify_event\">fsnotify_event</a> *<a class=\"id\" href=\"#event\">event</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inotify_event\">inotify_event</a> <a class=\"id\" href=\"#inotify_event\">inotify_event</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fsnotify_event_private_data\">fsnotify_event_private_data</a> *<a class=\"id\" href=\"#fsn_priv\">fsn_priv</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inotify_event_private_data\">inotify_event_private_data</a> *<a class=\"id\" href=\"#priv\">priv</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#event_size\">event_size</a> = sizeof(struct <a class=\"id\" href=\"#inotify_event\">inotify_event</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#name_len\">name_len</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"%s: group=%p event=%p\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#event\">event</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we get the inotify watch descriptor from the event private data */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsn_priv\">fsn_priv</a> = <a class=\"id\" href=\"#fsnotify_remove_priv_from_event\">fsnotify_remove_priv_from_event</a>(<a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#event\">event</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fsn_priv\">fsn_priv</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inotify_event\">inotify_event</a>.<a class=\"id\" href=\"#wd\">wd</a> = -1;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#fsn_priv\">fsn_priv</a>, struct <a class=\"id\" href=\"#inotify_event_private_data\">inotify_event_private_data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#fsnotify_event_priv_data\">fsnotify_event_priv_data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inotify_event\">inotify_event</a>.<a class=\"id\" href=\"#wd\">wd</a> = <a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#wd\">wd</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inotify_free_event_priv\">inotify_free_event_priv</a>(<a class=\"id\" href=\"#fsn_priv\">fsn_priv</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * round up event-&gt;name_len so it is a multiple of event_size</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * plus an extra byte for the terminating '\\0'.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#name_len\">name_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name_len\">name_len</a> = <a class=\"id\" href=\"#roundup\">roundup</a>(<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#name_len\">name_len</a> + 1, <a class=\"id\" href=\"#event_size\">event_size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inotify_event\">inotify_event</a>.<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#name_len\">name_len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inotify_event\">inotify_event</a>.<a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#inotify_mask_to_arg\">inotify_mask_to_arg</a>(<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inotify_event\">inotify_event</a>.<a class=\"id\" href=\"#cookie\">cookie</a> = <a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#sync_cookie\">sync_cookie</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* send the main event */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, &amp;<a class=\"id\" href=\"#inotify_event\">inotify_event</a>, <a class=\"id\" href=\"#event_size\">event_size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> += <a class=\"id\" href=\"#event_size\">event_size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * fsnotify only stores the pathname, so here we have to send the pathname</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and then pad that pathname out to a multiple of sizeof(inotify_event)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * with zeros.  I get my zeros from the nul_inotify_event.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#name_len\">name_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len_to_zero\">len_to_zero</a> = <a class=\"id\" href=\"#name_len\">name_len</a> - <a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#name_len\">name_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* copy the path name */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#file_name\">file_name</a>, <a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#name_len\">name_len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> += <a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#name_len\">name_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fill userspace with 0's */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#clear_user\">clear_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#len_to_zero\">len_to_zero</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> += <a class=\"id\" href=\"#len_to_zero\">len_to_zero</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#event_size\">event_size</a> += <a class=\"id\" href=\"#name_len\">name_len</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#event_size\">event_size</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#inotify_read\">inotify_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fsnotify_event\">fsnotify_event</a> *<a class=\"id\" href=\"#kevent\">kevent</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DEFINE_WAIT\">DEFINE_WAIT</a>(<a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"", 
"<span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prepare_to_wait\">prepare_to_wait</a>(&amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#notification_waitq\">notification_waitq</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#notification_mutex\">notification_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kevent\">kevent</a> = <a class=\"id\" href=\"#get_one_event\">get_one_event</a>(<a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#notification_mutex\">notification_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"%s: group=%p kevent=%p\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#kevent\">kevent</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#kevent\">kevent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#kevent\">kevent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#kevent\">kevent</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#copy_event_to_user\">copy_event_to_user</a>(<a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#kevent\">kevent</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_put_event\">fsnotify_put_event</a>(<a class=\"id\" href=\"#kevent\">kevent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> += <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> -= <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> &amp; <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINTR\">EINTR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#start\">start</a> != <a class=\"id\" href=\"#buf\">buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#finish_wait\">finish_wait</a>(&amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#notification_waitq\">notification_waitq</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#start\">start</a> != <a class=\"id\" href=\"#buf\">buf</a> && <a class=\"id\" href=\"#ret\">ret</a> != -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#buf\">buf</a> - <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#inotify_fasync\">inotify_fasync</a>(int <a class=\"id\" href=\"#fd\">fd</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, int <a class=\"id\" href=\"#on\">on</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#fasync_helper\">fasync_helper</a>(<a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#on\">on</a>, &amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#inotify_data\">inotify_data</a>.<a class=\"id\" href=\"#fa\">fa</a>) >= 0 ? 0 : -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#inotify_release\">inotify_release</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#ignored\">ignored</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_struct\">user_struct</a> *<a class=\"id\" href=\"#user\">user</a> = <a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#inotify_data\">inotify_data</a>.<a class=\"id\" href=\"#user\">user</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"%s: group=%p\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#group\">group</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_clear_marks_by_group\">fsnotify_clear_marks_by_group</a>(<a class=\"id\" href=\"#group\">group</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* free this group, matching get was inotify_init-&gt;fsnotify_obtain_group */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_put_group\">fsnotify_put_group</a>(<a class=\"id\" href=\"#group\">group</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#inotify_devs\">inotify_devs</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static long <a class=\"id\" href=\"#inotify_ioctl\">inotify_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fsnotify_event_holder\">fsnotify_event_holder</a> *<a class=\"id\" href=\"#holder\">holder</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fsnotify_event\">fsnotify_event</a> *<a class=\"id\" href=\"#event\">event</a>;", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOTTY\">ENOTTY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#send_len\">send_len</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = (void <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#arg\">arg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"%s: group=%p cmd=%u\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#cmd\">cmd</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FIONREAD\">FIONREAD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#notification_mutex\">notification_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#holder\">holder</a>, &amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#notification_list\">notification_list</a>, <a class=\"id\" href=\"#event_list\">event_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a> = <a class=\"id\" href=\"#holder\">holder</a>-><a class=\"id\" href=\"#event\">event</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#send_len\">send_len</a> += sizeof(struct <a class=\"id\" href=\"#inotify_event\">inotify_event</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#name_len\">name_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#send_len\">send_len</a> += <a class=\"id\" href=\"#roundup\">roundup</a>(<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#name_len\">name_len</a> + 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#inotify_event\">inotify_event</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#notification_mutex\">notification_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#send_len\">send_len</a>, (int <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#inotify_fops\">inotify_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#inotify_poll\">inotify_poll</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#inotify_read\">inotify_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fasync\">fasync</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#inotify_fasync\">inotify_fasync</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#inotify_release\">inotify_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unlocked_ioctl\">unlocked_ioctl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#inotify_ioctl\">inotify_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#inotify_ioctl\">inotify_ioctl</a>,", 
"};", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * find_inode - resolve a user-given path to a specific inode</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#inotify_find_inode\">inotify_find_inode</a>(const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#dirname\">dirname</a>, struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a>, unsigned <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#user_path_at\">user_path_at</a>(<a class=\"id\" href=\"#AT_FDCWD\">AT_FDCWD</a>, <a class=\"id\" href=\"#dirname\">dirname</a>, <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* you can only watch an inode if you have read permissions on it */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#inode_permission\">inode_permission</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, <a class=\"id\" href=\"#MAY_READ\">MAY_READ</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#inotify_add_to_idr\">inotify_add_to_idr</a>(struct <a class=\"id\" href=\"#idr\">idr</a> *<a class=\"id\" href=\"#idr\">idr</a>, <a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#idr_lock\">idr_lock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int *<a class=\"id\" href=\"#last_wd\">last_wd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#inotify_inode_mark\">inotify_inode_mark</a> *<a class=\"id\" href=\"#i_mark\">i_mark</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#idr_pre_get\">idr_pre_get</a>(<a class=\"id\" href=\"#idr\">idr</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(<a class=\"id\" href=\"#idr_lock\">idr_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#idr_get_new_above\">idr_get_new_above</a>(<a class=\"id\" href=\"#idr\">idr</a>, <a class=\"id\" href=\"#i_mark\">i_mark</a>, *<a class=\"id\" href=\"#last_wd\">last_wd</a> + 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#wd\">wd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* we added the mark to the idr, take a reference */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#last_wd\">last_wd</a> = <a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#wd\">wd</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_get_mark\">fsnotify_get_mark</a>(&amp;<a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(<a class=\"id\" href=\"#idr_lock\">idr_lock</a>);", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#ret\">ret</a> == -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#inotify_inode_mark\">inotify_inode_mark</a> *<a class=\"id\" href=\"#inotify_idr_find_locked\">inotify_idr_find_locked</a>(struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#group\">group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#wd\">wd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#idr\">idr</a> *<a class=\"id\" href=\"#idr\">idr</a> = &amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#inotify_data\">inotify_data</a>.<a class=\"id\" href=\"#idr\">idr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#idr_lock\">idr_lock</a> = &amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#inotify_data\">inotify_data</a>.<a class=\"id\" href=\"#idr_lock\">idr_lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inotify_inode_mark\">inotify_inode_mark</a> *<a class=\"id\" href=\"#i_mark\">i_mark</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#assert_spin_locked\">assert_spin_locked</a>(<a class=\"id\" href=\"#idr_lock\">idr_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i_mark\">i_mark</a> = <a class=\"id\" href=\"#idr_find\">idr_find</a>(<a class=\"id\" href=\"#idr\">idr</a>, <a class=\"id\" href=\"#wd\">wd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i_mark\">i_mark</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fsnotify_mark\">fsnotify_mark</a> *<a class=\"id\" href=\"#fsn_mark\">fsn_mark</a> = &amp;<a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_get_mark\">fsnotify_get_mark</a>(<a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* One ref for being in the idr, one ref we just took */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>) &lt; 2);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#i_mark\">i_mark</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#inotify_inode_mark\">inotify_inode_mark</a> *<a class=\"id\" href=\"#inotify_idr_find\">inotify_idr_find</a>(struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#group\">group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#wd\">wd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inotify_inode_mark\">inotify_inode_mark</a> *<a class=\"id\" href=\"#i_mark\">i_mark</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#idr_lock\">idr_lock</a> = &amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#inotify_data\">inotify_data</a>.<a class=\"id\" href=\"#idr_lock\">idr_lock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(<a class=\"id\" href=\"#idr_lock\">idr_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i_mark\">i_mark</a> = <a class=\"id\" href=\"#inotify_idr_find_locked\">inotify_idr_find_locked</a>(<a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#wd\">wd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(<a class=\"id\" href=\"#idr_lock\">idr_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#i_mark\">i_mark</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#do_inotify_remove_from_idr\">do_inotify_remove_from_idr</a>(struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#group\">group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#inotify_inode_mark\">inotify_inode_mark</a> *<a class=\"id\" href=\"#i_mark\">i_mark</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#idr\">idr</a> *<a class=\"id\" href=\"#idr\">idr</a> = &amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#inotify_data\">inotify_data</a>.<a class=\"id\" href=\"#idr\">idr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#idr_lock\">idr_lock</a> = &amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#inotify_data\">inotify_data</a>.<a class=\"id\" href=\"#idr_lock\">idr_lock</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#wd\">wd</a> = <a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#wd\">wd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#assert_spin_locked\">assert_spin_locked</a>(<a class=\"id\" href=\"#idr_lock\">idr_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idr_remove\">idr_remove</a>(<a class=\"id\" href=\"#idr\">idr</a>, <a class=\"id\" href=\"#wd\">wd</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* removed from the idr, drop that ref */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_put_mark\">fsnotify_put_mark</a>(&amp;<a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Remove the mark from the idr (if present) and drop the reference</span>", 
"<span class=\"comment\"> * on the mark because it was in the idr.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#inotify_remove_from_idr\">inotify_remove_from_idr</a>(struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#group\">group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#inotify_inode_mark\">inotify_inode_mark</a> *<a class=\"id\" href=\"#i_mark\">i_mark</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#idr_lock\">idr_lock</a> = &amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#inotify_data\">inotify_data</a>.<a class=\"id\" href=\"#idr_lock\">idr_lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inotify_inode_mark\">inotify_inode_mark</a> *<a class=\"id\" href=\"#found_i_mark\">found_i_mark</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#wd\">wd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(<a class=\"id\" href=\"#idr_lock\">idr_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wd\">wd</a> = <a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#wd\">wd</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * does this i_mark think it is in the idr?  we shouldn't get called</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if it wasn't....</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#wd\">wd</a> == -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ONCE\">WARN_ONCE</a>(1, \"%s: i_mark=%p i_mark->wd=%d i_mark->group=%p\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" i_mark->inode=%p\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#i_mark\">i_mark</a>, <a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#wd\">wd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>.<a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>.<a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Lets look in the idr to see if we find it */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#found_i_mark\">found_i_mark</a> = <a class=\"id\" href=\"#inotify_idr_find_locked\">inotify_idr_find_locked</a>(<a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#wd\">wd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#found_i_mark\">found_i_mark</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ONCE\">WARN_ONCE</a>(1, \"%s: i_mark=%p i_mark->wd=%d i_mark->group=%p\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" i_mark->inode=%p\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#i_mark\">i_mark</a>, <a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#wd\">wd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>.<a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>.<a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We found an mark in the idr at the right wd, but it's</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * not the mark we were told to remove.  eparis seriously</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * fucked up somewhere.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#found_i_mark\">found_i_mark</a> != <a class=\"id\" href=\"#i_mark\">i_mark</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ONCE\">WARN_ONCE</a>(1, \"%s: i_mark=%p i_mark->wd=%d i_mark->group=%p \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"mark->inode=%p found_i_mark=%p found_i_mark->wd=%d \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"found_i_mark->group=%p found_i_mark->inode=%p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#i_mark\">i_mark</a>, <a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#wd\">wd</a>, <a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>.<a class=\"id\" href=\"#group\">group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>.<a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#found_i_mark\">found_i_mark</a>, <a class=\"id\" href=\"#found_i_mark\">found_i_mark</a>-><a class=\"id\" href=\"#wd\">wd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found_i_mark\">found_i_mark</a>-><a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>.<a class=\"id\" href=\"#group\">group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found_i_mark\">found_i_mark</a>-><a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>.<a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * One ref for being in the idr</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * one ref held by the caller trying to kill us</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * one ref grabbed by inotify_idr_find</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>.<a class=\"id\" href=\"#refcnt\">refcnt</a>) &lt; 3)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: i_mark=%p i_mark->wd=%d i_mark->group=%p\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" i_mark->inode=%p\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#i_mark\">i_mark</a>, <a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#wd\">wd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>.<a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>.<a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* we can't really recover with bad ref cnting.. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_inotify_remove_from_idr\">do_inotify_remove_from_idr</a>(<a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#i_mark\">i_mark</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* match the ref taken by inotify_idr_find_locked() */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#found_i_mark\">found_i_mark</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_put_mark\">fsnotify_put_mark</a>(&amp;<a class=\"id\" href=\"#found_i_mark\">found_i_mark</a>-><a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#wd\">wd</a> = -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(<a class=\"id\" href=\"#idr_lock\">idr_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Send IN_IGNORED for this wd, remove this wd from the idr.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#inotify_ignored_and_remove_idr\">inotify_ignored_and_remove_idr</a>(struct <a class=\"id\" href=\"#fsnotify_mark\">fsnotify_mark</a> *<a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#group\">group</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inotify_inode_mark\">inotify_inode_mark</a> *<a class=\"id\" href=\"#i_mark\">i_mark</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fsnotify_event\">fsnotify_event</a> *<a class=\"id\" href=\"#ignored_event\">ignored_event</a>, *<a class=\"id\" href=\"#notify_event\">notify_event</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inotify_event_private_data\">inotify_event_private_data</a> *<a class=\"id\" href=\"#event_priv\">event_priv</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fsnotify_event_private_data\">fsnotify_event_private_data</a> *<a class=\"id\" href=\"#fsn_event_priv\">fsn_event_priv</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ignored_event\">ignored_event</a> = <a class=\"id\" href=\"#fsnotify_create_event\">fsnotify_create_event</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#FS_IN_IGNORED\">FS_IN_IGNORED</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#FSNOTIFY_EVENT_NONE\">FSNOTIFY_EVENT_NONE</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ignored_event\">ignored_event</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i_mark\">i_mark</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>, struct <a class=\"id\" href=\"#inotify_inode_mark\">inotify_inode_mark</a>, <a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#event_priv\">event_priv</a> = <a class=\"id\" href=\"#kmem_cache_alloc\">kmem_cache_alloc</a>(<a class=\"id\" href=\"#event_priv_cachep\">event_priv_cachep</a>, <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#event_priv\">event_priv</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#skip_send_ignore\">skip_send_ignore</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsn_event_priv\">fsn_event_priv</a> = &amp;<a class=\"id\" href=\"#event_priv\">event_priv</a>-><a class=\"id\" href=\"#fsnotify_event_priv_data\">fsnotify_event_priv_data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsn_event_priv\">fsn_event_priv</a>-><a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#event_priv\">event_priv</a>-><a class=\"id\" href=\"#wd\">wd</a> = <a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#wd\">wd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#notify_event\">notify_event</a> = <a class=\"id\" href=\"#fsnotify_add_notify_event\">fsnotify_add_notify_event</a>(<a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#ignored_event\">ignored_event</a>, <a class=\"id\" href=\"#fsn_event_priv\">fsn_event_priv</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#notify_event\">notify_event</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#notify_event\">notify_event</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#notify_event\">notify_event</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_put_event\">fsnotify_put_event</a>(<a class=\"id\" href=\"#notify_event\">notify_event</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inotify_free_event_priv\">inotify_free_event_priv</a>(<a class=\"id\" href=\"#fsn_event_priv\">fsn_event_priv</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#skip_send_ignore\">skip_send_ignore</a>:", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* matches the reference taken when the event was created */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_put_event\">fsnotify_put_event</a>(<a class=\"id\" href=\"#ignored_event\">ignored_event</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* remove this mark from the idr */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inotify_remove_from_idr\">inotify_remove_from_idr</a>(<a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#i_mark\">i_mark</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#inotify_data\">inotify_data</a>.<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#inotify_watches\">inotify_watches</a>);", 
"}", 
"", 
"<span class=\"comment\">/* ding dong the mark is dead */</span>", 
"static void <a class=\"id\" href=\"#inotify_free_mark\">inotify_free_mark</a>(struct <a class=\"id\" href=\"#fsnotify_mark\">fsnotify_mark</a> *<a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inotify_inode_mark\">inotify_inode_mark</a> *<a class=\"id\" href=\"#i_mark\">i_mark</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i_mark\">i_mark</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>, struct <a class=\"id\" href=\"#inotify_inode_mark\">inotify_inode_mark</a>, <a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#inotify_inode_mark_cachep\">inotify_inode_mark_cachep</a>, <a class=\"id\" href=\"#i_mark\">i_mark</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#inotify_update_existing_watch\">inotify_update_existing_watch</a>(struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#group\">group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fsnotify_mark\">fsnotify_mark</a> *<a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inotify_inode_mark\">inotify_inode_mark</a> *<a class=\"id\" href=\"#i_mark\">i_mark</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#old_mask\">old_mask</a>, <a class=\"id\" href=\"#new_mask\">new_mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#add\">add</a> = (<a class=\"id\" href=\"#arg\">arg</a> &amp; <a class=\"id\" href=\"#IN_MASK_ADD\">IN_MASK_ADD</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* don't allow invalid bits: we don't want flags set */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#inotify_arg_to_mask\">inotify_arg_to_mask</a>(<a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!(<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#IN_ALL_EVENTS\">IN_ALL_EVENTS</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsn_mark\">fsn_mark</a> = <a class=\"id\" href=\"#fsnotify_find_inode_mark\">fsnotify_find_inode_mark</a>(<a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i_mark\">i_mark</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>, struct <a class=\"id\" href=\"#inotify_inode_mark\">inotify_inode_mark</a>, <a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_mask\">old_mask</a> = <a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>-><a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#add\">add</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_set_mark_mask_locked\">fsnotify_set_mark_mask_locked</a>(<a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>, (<a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>-><a class=\"id\" href=\"#mask\">mask</a> | <a class=\"id\" href=\"#mask\">mask</a>));", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_set_mark_mask_locked\">fsnotify_set_mark_mask_locked</a>(<a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_mask\">new_mask</a> = <a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>-><a class=\"id\" href=\"#mask\">mask</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_mask\">old_mask</a> != <a class=\"id\" href=\"#new_mask\">new_mask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* more bits in old than in new? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#dropped\">dropped</a> = (<a class=\"id\" href=\"#old_mask\">old_mask</a> &amp; ~<a class=\"id\" href=\"#new_mask\">new_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* more bits in this fsn_mark than the inode's mask? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#do_inode\">do_inode</a> = (<a class=\"id\" href=\"#new_mask\">new_mask</a> &amp; ~<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_fsnotify_mask\">i_fsnotify_mask</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* update the inode with this new fsn_mark */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dropped\">dropped</a> || <a class=\"id\" href=\"#do_inode\">do_inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_recalc_inode_mask\">fsnotify_recalc_inode_mask</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* return the wd */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#wd\">wd</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* match the get from fsnotify_find_mark() */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_put_mark\">fsnotify_put_mark</a>(<a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#inotify_new_watch\">inotify_new_watch</a>(struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#group\">group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inotify_inode_mark\">inotify_inode_mark</a> *<a class=\"id\" href=\"#tmp_i_mark\">tmp_i_mark</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#idr\">idr</a> *<a class=\"id\" href=\"#idr\">idr</a> = &amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#inotify_data\">inotify_data</a>.<a class=\"id\" href=\"#idr\">idr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#idr_lock\">idr_lock</a> = &amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#inotify_data\">inotify_data</a>.<a class=\"id\" href=\"#idr_lock\">idr_lock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* don't allow invalid bits: we don't want flags set */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#inotify_arg_to_mask\">inotify_arg_to_mask</a>(<a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!(<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#IN_ALL_EVENTS\">IN_ALL_EVENTS</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_i_mark\">tmp_i_mark</a> = <a class=\"id\" href=\"#kmem_cache_alloc\">kmem_cache_alloc</a>(<a class=\"id\" href=\"#inotify_inode_mark_cachep\">inotify_inode_mark_cachep</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#tmp_i_mark\">tmp_i_mark</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_init_mark\">fsnotify_init_mark</a>(&amp;<a class=\"id\" href=\"#tmp_i_mark\">tmp_i_mark</a>-><a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>, <a class=\"id\" href=\"#inotify_free_mark\">inotify_free_mark</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_i_mark\">tmp_i_mark</a>-><a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>.<a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_i_mark\">tmp_i_mark</a>-><a class=\"id\" href=\"#wd\">wd</a> = -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#inotify_data\">inotify_data</a>.<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#inotify_watches\">inotify_watches</a>) >= <a class=\"id\" href=\"#inotify_max_user_watches\">inotify_max_user_watches</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_err\">out_err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#inotify_add_to_idr\">inotify_add_to_idr</a>(<a class=\"id\" href=\"#idr\">idr</a>, <a class=\"id\" href=\"#idr_lock\">idr_lock</a>, &amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#inotify_data\">inotify_data</a>.<a class=\"id\" href=\"#last_wd\">last_wd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#tmp_i_mark\">tmp_i_mark</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_err\">out_err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we are on the idr, now get on the inode */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#fsnotify_add_mark\">fsnotify_add_mark</a>(&amp;<a class=\"id\" href=\"#tmp_i_mark\">tmp_i_mark</a>-><a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* we failed to get on the inode, get off the idr */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inotify_remove_from_idr\">inotify_remove_from_idr</a>(<a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#tmp_i_mark\">tmp_i_mark</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_err\">out_err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* increment the number of watches the user has */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#inotify_data\">inotify_data</a>.<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#inotify_watches\">inotify_watches</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* return the watch descriptor for this new mark */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#tmp_i_mark\">tmp_i_mark</a>-><a class=\"id\" href=\"#wd\">wd</a>;", 
"", 
"<a class=\"id\" href=\"#out_err\">out_err</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* match the ref from fsnotify_init_mark() */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_put_mark\">fsnotify_put_mark</a>(&amp;<a class=\"id\" href=\"#tmp_i_mark\">tmp_i_mark</a>-><a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#inotify_update_watch\">inotify_update_watch</a>(struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#group\">group</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<a class=\"id\" href=\"#retry\">retry</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* try to update and existing watch with the new arg */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#inotify_update_existing_watch\">inotify_update_existing_watch</a>(<a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* no mark present, try to add a new one */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#inotify_new_watch\">inotify_new_watch</a>(<a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * inotify_new_watch could race with another thread which did an</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * inotify_new_watch between the update_existing and the add watch</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * here, go back and try to update an existing mark again.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#inotify_new_group\">inotify_new_group</a>(struct <a class=\"id\" href=\"#user_struct\">user_struct</a> *<a class=\"id\" href=\"#user\">user</a>, unsigned int <a class=\"id\" href=\"#max_events\">max_events</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#group\">group</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#fsnotify_alloc_group\">fsnotify_alloc_group</a>(&amp;<a class=\"id\" href=\"#inotify_fsnotify_ops\">inotify_fsnotify_ops</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#group\">group</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#group\">group</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#max_events\">max_events</a> = <a class=\"id\" href=\"#max_events\">max_events</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#inotify_data\">inotify_data</a>.<a class=\"id\" href=\"#idr_lock\">idr_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idr_init\">idr_init</a>(&amp;<a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#inotify_data\">inotify_data</a>.<a class=\"id\" href=\"#idr\">idr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#inotify_data\">inotify_data</a>.<a class=\"id\" href=\"#last_wd\">last_wd</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#inotify_data\">inotify_data</a>.<a class=\"id\" href=\"#user\">user</a> = <a class=\"id\" href=\"#user\">user</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a>-><a class=\"id\" href=\"#inotify_data\">inotify_data</a>.<a class=\"id\" href=\"#fa\">fa</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#group\">group</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/* inotify syscalls */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE1\">SYSCALL_DEFINE1</a>(<a class=\"id\" href=\"#inotify_init1\">inotify_init1</a>, int, <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_struct\">user_struct</a> *<a class=\"id\" href=\"#user\">user</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check the IN_* constants for consistency.  */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#IN_CLOEXEC\">IN_CLOEXEC</a> != <a class=\"id\" href=\"#O_CLOEXEC\">O_CLOEXEC</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#IN_NONBLOCK\">IN_NONBLOCK</a> != <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; ~(<a class=\"id\" href=\"#IN_CLOEXEC\">IN_CLOEXEC</a> | <a class=\"id\" href=\"#IN_NONBLOCK\">IN_NONBLOCK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#user\">user</a> = <a class=\"id\" href=\"#get_current_user\">get_current_user</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#inotify_devs\">inotify_devs</a>) >=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inotify_max_user_instances\">inotify_max_user_instances</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EMFILE\">EMFILE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_uid\">out_free_uid</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* fsnotify_obtain_group took a reference to group, we put this when we kill the file in the end */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#inotify_new_group\">inotify_new_group</a>(<a class=\"id\" href=\"#user\">user</a>, <a class=\"id\" href=\"#inotify_max_queued_events\">inotify_max_queued_events</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#group\">group</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#group\">group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_uid\">out_free_uid</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#inotify_devs\">inotify_devs</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#anon_inode_getfd\">anon_inode_getfd</a>(\"inotify\", &amp;<a class=\"id\" href=\"#inotify_fops\">inotify_fops</a>, <a class=\"id\" href=\"#group\">group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#O_RDONLY\">O_RDONLY</a> | <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#inotify_devs\">inotify_devs</a>);", 
"<a class=\"id\" href=\"#out_free_uid\">out_free_uid</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_uid\">free_uid</a>(<a class=\"id\" href=\"#user\">user</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE0\">SYSCALL_DEFINE0</a>(<a class=\"id\" href=\"#inotify_init\">inotify_init</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sys_inotify_init1\">sys_inotify_init1</a>(0);", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#inotify_add_watch\">inotify_add_watch</a>, int, <a class=\"id\" href=\"#fd\">fd</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#pathname\">pathname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a>, <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#path\">path</a> <a class=\"id\" href=\"#path\">path</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a> = <a class=\"id\" href=\"#fget_light\">fget_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#filp\">filp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* verify that this is indeed an inotify instance */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_op\">f_op</a> != &amp;<a class=\"id\" href=\"#inotify_fops\">inotify_fops</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fput_and_out\">fput_and_out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#IN_DONT_FOLLOW\">IN_DONT_FOLLOW</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#LOOKUP_FOLLOW\">LOOKUP_FOLLOW</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#IN_ONLYDIR\">IN_ONLYDIR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#LOOKUP_DIRECTORY\">LOOKUP_DIRECTORY</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#inotify_find_inode\">inotify_find_inode</a>(<a class=\"id\" href=\"#pathname\">pathname</a>, &amp;<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fput_and_out\">fput_and_out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* inode held in place by reference to path; group by fget on fd */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* create/update an inode mark */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#inotify_update_watch\">inotify_update_watch</a>(<a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#path\">path</a>);", 
"<a class=\"id\" href=\"#fput_and_out\">fput_and_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#inotify_rm_watch\">inotify_rm_watch</a>, int, <a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#__s32\">__s32</a>, <a class=\"id\" href=\"#wd\">wd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fsnotify_group\">fsnotify_group</a> *<a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inotify_inode_mark\">inotify_inode_mark</a> *<a class=\"id\" href=\"#i_mark\">i_mark</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a> = <a class=\"id\" href=\"#fget_light\">fget_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#filp\">filp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* verify that this is indeed an inotify instance */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_op\">f_op</a> != &amp;<a class=\"id\" href=\"#inotify_fops\">inotify_fops</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i_mark\">i_mark</a> = <a class=\"id\" href=\"#inotify_idr_find\">inotify_idr_find</a>(<a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#wd\">wd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#i_mark\">i_mark</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_destroy_mark\">fsnotify_destroy_mark</a>(&amp;<a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* match ref taken by inotify_idr_find */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_put_mark\">fsnotify_put_mark</a>(&amp;<a class=\"id\" href=\"#i_mark\">i_mark</a>-><a class=\"id\" href=\"#fsn_mark\">fsn_mark</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * inotify_user_setup - Our initialization function.  Note that we cannnot return</span>", 
"<span class=\"comment\"> * error because we have compiled-in VFS hooks.  So an (unlikely) failure here</span>", 
"<span class=\"comment\"> * must result in panic().</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#inotify_user_setup\">inotify_user_setup</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#IN_ACCESS\">IN_ACCESS</a> != <a class=\"id\" href=\"#FS_ACCESS\">FS_ACCESS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#IN_MODIFY\">IN_MODIFY</a> != <a class=\"id\" href=\"#FS_MODIFY\">FS_MODIFY</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#IN_ATTRIB\">IN_ATTRIB</a> != <a class=\"id\" href=\"#FS_ATTRIB\">FS_ATTRIB</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#IN_CLOSE_WRITE\">IN_CLOSE_WRITE</a> != <a class=\"id\" href=\"#FS_CLOSE_WRITE\">FS_CLOSE_WRITE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#IN_CLOSE_NOWRITE\">IN_CLOSE_NOWRITE</a> != <a class=\"id\" href=\"#FS_CLOSE_NOWRITE\">FS_CLOSE_NOWRITE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#IN_OPEN\">IN_OPEN</a> != <a class=\"id\" href=\"#FS_OPEN\">FS_OPEN</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#IN_MOVED_FROM\">IN_MOVED_FROM</a> != <a class=\"id\" href=\"#FS_MOVED_FROM\">FS_MOVED_FROM</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#IN_MOVED_TO\">IN_MOVED_TO</a> != <a class=\"id\" href=\"#FS_MOVED_TO\">FS_MOVED_TO</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#IN_CREATE\">IN_CREATE</a> != <a class=\"id\" href=\"#FS_CREATE\">FS_CREATE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#IN_DELETE\">IN_DELETE</a> != <a class=\"id\" href=\"#FS_DELETE\">FS_DELETE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#IN_DELETE_SELF\">IN_DELETE_SELF</a> != <a class=\"id\" href=\"#FS_DELETE_SELF\">FS_DELETE_SELF</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#IN_MOVE_SELF\">IN_MOVE_SELF</a> != <a class=\"id\" href=\"#FS_MOVE_SELF\">FS_MOVE_SELF</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#IN_UNMOUNT\">IN_UNMOUNT</a> != <a class=\"id\" href=\"#FS_UNMOUNT\">FS_UNMOUNT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#IN_Q_OVERFLOW\">IN_Q_OVERFLOW</a> != <a class=\"id\" href=\"#FS_Q_OVERFLOW\">FS_Q_OVERFLOW</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#IN_IGNORED\">IN_IGNORED</a> != <a class=\"id\" href=\"#FS_IN_IGNORED\">FS_IN_IGNORED</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#IN_EXCL_UNLINK\">IN_EXCL_UNLINK</a> != <a class=\"id\" href=\"#FS_EXCL_UNLINK\">FS_EXCL_UNLINK</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#IN_ISDIR\">IN_ISDIR</a> != <a class=\"id\" href=\"#FS_IN_ISDIR\">FS_IN_ISDIR</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#IN_ONESHOT\">IN_ONESHOT</a> != <a class=\"id\" href=\"#FS_IN_ONESHOT\">FS_IN_ONESHOT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#hweight32\">hweight32</a>(<a class=\"id\" href=\"#ALL_INOTIFY_BITS\">ALL_INOTIFY_BITS</a>) != 21);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inotify_inode_mark_cachep\">inotify_inode_mark_cachep</a> = <a class=\"id\" href=\"#KMEM_CACHE\">KMEM_CACHE</a>(<a class=\"id\" href=\"#inotify_inode_mark\">inotify_inode_mark</a>, <a class=\"id\" href=\"#SLAB_PANIC\">SLAB_PANIC</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#event_priv_cachep\">event_priv_cachep</a> = <a class=\"id\" href=\"#KMEM_CACHE\">KMEM_CACHE</a>(<a class=\"id\" href=\"#inotify_event_private_data\">inotify_event_private_data</a>, <a class=\"id\" href=\"#SLAB_PANIC\">SLAB_PANIC</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inotify_max_queued_events\">inotify_max_queued_events</a> = 16384;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inotify_max_user_instances\">inotify_max_user_instances</a> = 128;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inotify_max_user_watches\">inotify_max_user_watches</a> = 8192;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#inotify_user_setup\">inotify_user_setup</a>);", 
];
xr_frag_insert('l/fc/03add9e61ff6f609e9df505ff7bf3d5e9eaa82.xr', __xr_tmp);
