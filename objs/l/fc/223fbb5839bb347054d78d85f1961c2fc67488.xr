var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#action\">action</a> || (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#action\">action</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IRQF_NO_SUSPEND\">IRQF_NO_SUSPEND</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> |= <a class=\"id\" href=\"#IRQ_SUSPENDED\">IRQ_SUSPENDED</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#depth\">depth</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> |= <a class=\"id\" href=\"#IRQ_DISABLED\">IRQ_DISABLED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#disable\">disable</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>disable_irq_nosync - disable an irq without waiting</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@irq: Interrupt to disable</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Disable the selected interrupt line.  Disables and Enables are</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>nested.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Unlike disable_irq(), this function does not ensure existing</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>instances of the IRQ handler have completed before returning.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This function may be called from IRQ context.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#disable_irq_nosync\">disable_irq_nosync</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chip_bus_lock\">chip_bus_lock</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__disable_irq\">__disable_irq</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chip_bus_sync_unlock\">chip_bus_sync_unlock</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#disable_irq_nosync\">disable_irq_nosync</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>disable_irq - disable an irq and wait for completion</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@irq: Interrupt to disable</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Disable the selected interrupt line.  Enables and Disables are</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>nested.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This function waits for any pending IRQ handlers for this interrupt</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to complete before returning. If you use this function while</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>holding a resource the IRQ handler may need you will deadlock.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This function may be called - with care - from IRQ context.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#disable_irq\">disable_irq</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disable_irq_nosync\">disable_irq_nosync</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#action\">action</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#synchronize_irq\">synchronize_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#disable_irq\">disable_irq</a>);", 
"", 
"void <a class=\"id\" href=\"#__enable_irq\">__enable_irq</a>(struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, unsigned int <a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#resume\">resume</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#resume\">resume</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> &= ~<a class=\"id\" href=\"#IRQ_SUSPENDED\">IRQ_SUSPENDED</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#depth\">depth</a>) {", 
"<span class=\"ts\"/>case 0:", 
" <a class=\"id\" href=\"#err_out\">err_out</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN\">WARN</a>(1, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"Unbalanced enable for IRQ %d\\n\", <a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 1: {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> &amp; ~<a class=\"id\" href=\"#IRQ_DISABLED\">IRQ_DISABLED</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#IRQ_SUSPENDED\">IRQ_SUSPENDED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Prevent probing on this irq: */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#status\">status</a> | <a class=\"id\" href=\"#IRQ_NOPROBE\">IRQ_NOPROBE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#check_irq_resend\">check_irq_resend</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall-through */</span>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#depth\">depth</a>--;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>enable_irq - enable handling of an irq</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@irq: Interrupt to enable</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Undoes the effect of one call to disable_irq().  If this</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>matches the last disable, processing of interrupts on this</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>IRQ line is re-enabled.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This function may be called from IRQ context only when</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>desc-&gt;chip-&gt;bus_lock and desc-&gt;chip-&gt;bus_sync_unlock are NULL !</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#enable_irq\">enable_irq</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chip_bus_lock\">chip_bus_lock</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__enable_irq\">__enable_irq</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chip_bus_sync_unlock\">chip_bus_sync_unlock</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#enable_irq\">enable_irq</a>);", 
"", 
"static int <a class=\"id\" href=\"#set_irq_wake_real\">set_irq_wake_real</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, unsigned int <a class=\"id\" href=\"#on\">on</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#set_wake\">set_wake</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#set_wake\">set_wake</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#on\">on</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>set_irq_wake - control irq power management wakeup</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@irq:<span class=\"ts\"/>interrupt to control</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@on:<span class=\"ts\"/>enable/disable power management wakeup</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Enable/disable power management wakeup mode, which is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>disabled by default.  Enables and disables must match,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>just as they match for non-wakeup mode support.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Wakeup mode lets this IRQ wake the system from sleep</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>states like \"suspend to RAM\".</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#set_irq_wake\">set_irq_wake</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, unsigned int <a class=\"id\" href=\"#on\">on</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* wakeup-capable irqs can be shared between drivers that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * don't need to have the same sleep mode behaviors.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#on\">on</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#wake_depth\">wake_depth</a>++ == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#set_irq_wake_real\">set_irq_wake_real</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#on\">on</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#wake_depth\">wake_depth</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> |= <a class=\"id\" href=\"#IRQ_WAKEUP\">IRQ_WAKEUP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#wake_depth\">wake_depth</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN\">WARN</a>(1, \"Unbalanced IRQ %d wake disable\\n\", <a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (--<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#wake_depth\">wake_depth</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#set_irq_wake_real\">set_irq_wake_real</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#on\">on</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#wake_depth\">wake_depth</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> &= ~<a class=\"id\" href=\"#IRQ_WAKEUP\">IRQ_WAKEUP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#set_irq_wake\">set_irq_wake</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Internal function that tells the architecture code whether a</span>", 
"<span class=\"comment\"> * particular irq has been exclusively allocated or is available</span>", 
"<span class=\"comment\"> * for driver use.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#can_request_irq\">can_request_irq</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, unsigned long <a class=\"id\" href=\"#irqflags\">irqflags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irqaction\">irqaction</a> *<a class=\"id\" href=\"#action\">action</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#IRQ_NOREQUEST\">IRQ_NOREQUEST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#action\">action</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#action\">action</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#action\">action</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#irqflags\">irqflags</a> &amp; <a class=\"id\" href=\"#action\">action</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IRQF_SHARED\">IRQF_SHARED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#action\">action</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#action\">action</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#compat_irq_chip_set_default_handler\">compat_irq_chip_set_default_handler</a>(struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the architecture still has not overriden</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the flow handler then zap the default. This</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * should catch incorrect flow-type setting.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#handle_irq\">handle_irq</a> == &amp;<a class=\"id\" href=\"#handle_bad_irq\">handle_bad_irq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#handle_irq\">handle_irq</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__irq_set_trigger\">__irq_set_trigger</a>(struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, unsigned int <a class=\"id\" href=\"#irq\">irq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_chip\">irq_chip</a> *<a class=\"id\" href=\"#chip\">chip</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#chip\">chip</a> || !<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#set_type\">set_type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * IRQF_TRIGGER_* but the PIC does not support multiple</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * flow-types?</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"No set_type function for IRQ %d (%s)\\n\", <a class=\"id\" href=\"#irq\">irq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chip\">chip</a> ? (<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#name\">name</a> ? : \"unknown\") : \"unknown\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* caller masked out all except trigger mode flags */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#set_type\">set_type</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"setting trigger mode %d for irq %u failed (%pF)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(int)<a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#set_type\">set_type</a>);", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; (<a class=\"id\" href=\"#IRQ_TYPE_LEVEL_LOW\">IRQ_TYPE_LEVEL_LOW</a> | <a class=\"id\" href=\"#IRQ_TYPE_LEVEL_HIGH\">IRQ_TYPE_LEVEL_HIGH</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IRQ_LEVEL\">IRQ_LEVEL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* note that IRQF_TRIGGER_MASK == IRQ_TYPE_SENSE_MASK */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> &= ~(<a class=\"id\" href=\"#IRQ_LEVEL\">IRQ_LEVEL</a> | <a class=\"id\" href=\"#IRQ_TYPE_SENSE_MASK\">IRQ_TYPE_SENSE_MASK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> |= <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#chip\">chip</a> != <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq_chip_set_defaults\">irq_chip_set_defaults</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Default primary interrupt handler for threaded interrupts. Is</span>", 
"<span class=\"comment\"> * assigned as primary handler when request_threaded_irq is called</span>", 
"<span class=\"comment\"> * with handler == NULL. Useful for oneshot interrupts.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#irq_default_primary_handler\">irq_default_primary_handler</a>(int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#dev_id\">dev_id</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#IRQ_WAKE_THREAD\">IRQ_WAKE_THREAD</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Primary handler for nested threaded interrupts. Should never be</span>", 
"<span class=\"comment\"> * called.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#irq_nested_primary_handler\">irq_nested_primary_handler</a>(int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#dev_id\">dev_id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN\">WARN</a>(1, \"Primary handler called for nested irq %d\\n\", <a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#IRQ_NONE\">IRQ_NONE</a>;", 
"}", 
];
xr_frag_insert('l/fc/223fbb5839bb347054d78d85f1961c2fc67488.xr', __xr_tmp);
