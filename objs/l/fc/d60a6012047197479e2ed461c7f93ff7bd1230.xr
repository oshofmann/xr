var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Discontiguous memory support, Kanoj Sarcar, SGI, Nov 1999</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_BOOTMEM_H\">_LINUX_BOOTMEM_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_BOOTMEM_H\">_LINUX_BOOTMEM_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mmzone\">mmzone</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#dma\">dma</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  simple boot-time physical memory area allocator.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"extern unsigned long <a class=\"id\" href=\"#max_low_pfn\">max_low_pfn</a>;", 
"extern unsigned long <a class=\"id\" href=\"#min_low_pfn\">min_low_pfn</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * highest page</span>", 
"<span class=\"comment\"> */</span>", 
"extern unsigned long <a class=\"id\" href=\"#max_pfn\">max_pfn</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CRASH_DUMP\">CONFIG_CRASH_DUMP</a>", 
"extern unsigned long <a class=\"id\" href=\"#saved_max_pfn\">saved_max_pfn</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_NO_BOOTMEM\">CONFIG_NO_BOOTMEM</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * node_bootmem_map is a map pointer - the bits represent all physical </span>", 
"<span class=\"comment\"> * memory pages (including holes) on the node.</span>", 
"<span class=\"comment\"> */</span>", 
"typedef struct <a class=\"id\" href=\"#bootmem_data\">bootmem_data</a> {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#node_min_pfn\">node_min_pfn</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#node_low_pfn\">node_low_pfn</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#node_bootmem_map\">node_bootmem_map</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#last_end_off\">last_end_off</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#hint_idx\">hint_idx</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;", 
"} <a class=\"id\" href=\"#bootmem_data_t\">bootmem_data_t</a>;", 
"", 
"extern <a class=\"id\" href=\"#bootmem_data_t\">bootmem_data_t</a> <a class=\"id\" href=\"#bootmem_node_data\">bootmem_node_data</a>[];", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern unsigned long <a class=\"id\" href=\"#bootmem_bootmap_pages\">bootmem_bootmap_pages</a>(unsigned long);", 
"", 
"extern unsigned long <a class=\"id\" href=\"#init_bootmem_node\">init_bootmem_node</a>(<a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#freepfn\">freepfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#startpfn\">startpfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#endpfn\">endpfn</a>);", 
"extern unsigned long <a class=\"id\" href=\"#init_bootmem\">init_bootmem</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#memend\">memend</a>);", 
"", 
"unsigned long <a class=\"id\" href=\"#free_all_memory_core_early\">free_all_memory_core_early</a>(int <a class=\"id\" href=\"#nodeid\">nodeid</a>);", 
"extern unsigned long <a class=\"id\" href=\"#free_all_bootmem_node\">free_all_bootmem_node</a>(<a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a>);", 
"extern unsigned long <a class=\"id\" href=\"#free_all_bootmem\">free_all_bootmem</a>(void);", 
"", 
"extern void <a class=\"id\" href=\"#free_bootmem_node\">free_bootmem_node</a>(<a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#size\">size</a>);", 
"extern void <a class=\"id\" href=\"#free_bootmem\">free_bootmem</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#size\">size</a>);", 
"extern void <a class=\"id\" href=\"#free_bootmem_late\">free_bootmem_late</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#size\">size</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Flags for reserve_bootmem (also if CONFIG_HAVE_ARCH_BOOTMEM_NODE,</span>", 
"<span class=\"comment\"> * the architecture-specific code should honor this).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If flags is 0, then the return value is always 0 (success). If</span>", 
"<span class=\"comment\"> * flags contains BOOTMEM_EXCLUSIVE, then -EBUSY is returned if the</span>", 
"<span class=\"comment\"> * memory already was reserved.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BOOTMEM_DEFAULT\">BOOTMEM_DEFAULT</a><span class=\"ts\"/><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BOOTMEM_EXCLUSIVE\">BOOTMEM_EXCLUSIVE</a><span class=\"ts\"/>(1<<0)", 
"", 
"extern int <a class=\"id\" href=\"#reserve_bootmem\">reserve_bootmem</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned long <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#flags\">flags</a>);", 
"extern int <a class=\"id\" href=\"#reserve_bootmem_node\">reserve_bootmem_node</a>(<a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#physaddr\">physaddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"extern void *<a class=\"id\" href=\"#__alloc_bootmem\">__alloc_bootmem</a>(unsigned long <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#align\">align</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#goal\">goal</a>);", 
"extern void *<a class=\"id\" href=\"#__alloc_bootmem_nopanic\">__alloc_bootmem_nopanic</a>(unsigned long <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#align\">align</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#goal\">goal</a>);", 
"extern void *<a class=\"id\" href=\"#__alloc_bootmem_node\">__alloc_bootmem_node</a>(<a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#align\">align</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#goal\">goal</a>);", 
"void *<a class=\"id\" href=\"#__alloc_bootmem_node_high\">__alloc_bootmem_node_high</a>(<a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#align\">align</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#goal\">goal</a>);", 
"extern void *<a class=\"id\" href=\"#__alloc_bootmem_node_nopanic\">__alloc_bootmem_node_nopanic</a>(<a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#align\">align</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#goal\">goal</a>);", 
"extern void *<a class=\"id\" href=\"#__alloc_bootmem_low\">__alloc_bootmem_low</a>(unsigned long <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#align\">align</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#goal\">goal</a>);", 
"extern void *<a class=\"id\" href=\"#__alloc_bootmem_low_node\">__alloc_bootmem_low_node</a>(<a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#align\">align</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#goal\">goal</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#alloc_bootmem\">alloc_bootmem</a>(<a class=\"id\" href=\"#x\">x</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__alloc_bootmem\">__alloc_bootmem</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#SMP_CACHE_BYTES\">SMP_CACHE_BYTES</a>, <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#MAX_DMA_ADDRESS\">MAX_DMA_ADDRESS</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#alloc_bootmem_nopanic\">alloc_bootmem_nopanic</a>(<a class=\"id\" href=\"#x\">x</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__alloc_bootmem_nopanic\">__alloc_bootmem_nopanic</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#SMP_CACHE_BYTES\">SMP_CACHE_BYTES</a>, <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#MAX_DMA_ADDRESS\">MAX_DMA_ADDRESS</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#alloc_bootmem_pages\">alloc_bootmem_pages</a>(<a class=\"id\" href=\"#x\">x</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__alloc_bootmem\">__alloc_bootmem</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#MAX_DMA_ADDRESS\">MAX_DMA_ADDRESS</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#alloc_bootmem_pages_nopanic\">alloc_bootmem_pages_nopanic</a>(<a class=\"id\" href=\"#x\">x</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__alloc_bootmem_nopanic\">__alloc_bootmem_nopanic</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#MAX_DMA_ADDRESS\">MAX_DMA_ADDRESS</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#alloc_bootmem_node\">alloc_bootmem_node</a>(<a class=\"id\" href=\"#pgdat\">pgdat</a>, <a class=\"id\" href=\"#x\">x</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__alloc_bootmem_node\">__alloc_bootmem_node</a>(<a class=\"id\" href=\"#pgdat\">pgdat</a>, <a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#SMP_CACHE_BYTES\">SMP_CACHE_BYTES</a>, <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#MAX_DMA_ADDRESS\">MAX_DMA_ADDRESS</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#alloc_bootmem_pages_node\">alloc_bootmem_pages_node</a>(<a class=\"id\" href=\"#pgdat\">pgdat</a>, <a class=\"id\" href=\"#x\">x</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__alloc_bootmem_node\">__alloc_bootmem_node</a>(<a class=\"id\" href=\"#pgdat\">pgdat</a>, <a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#MAX_DMA_ADDRESS\">MAX_DMA_ADDRESS</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#alloc_bootmem_pages_node_nopanic\">alloc_bootmem_pages_node_nopanic</a>(<a class=\"id\" href=\"#pgdat\">pgdat</a>, <a class=\"id\" href=\"#x\">x</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__alloc_bootmem_node_nopanic\">__alloc_bootmem_node_nopanic</a>(<a class=\"id\" href=\"#pgdat\">pgdat</a>, <a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#MAX_DMA_ADDRESS\">MAX_DMA_ADDRESS</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#alloc_bootmem_low\">alloc_bootmem_low</a>(<a class=\"id\" href=\"#x\">x</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__alloc_bootmem_low\">__alloc_bootmem_low</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#SMP_CACHE_BYTES\">SMP_CACHE_BYTES</a>, 0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#alloc_bootmem_low_pages\">alloc_bootmem_low_pages</a>(<a class=\"id\" href=\"#x\">x</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__alloc_bootmem_low\">__alloc_bootmem_low</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, 0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#alloc_bootmem_low_pages_node\">alloc_bootmem_low_pages_node</a>(<a class=\"id\" href=\"#pgdat\">pgdat</a>, <a class=\"id\" href=\"#x\">x</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__alloc_bootmem_low_node\">__alloc_bootmem_low_node</a>(<a class=\"id\" href=\"#pgdat\">pgdat</a>, <a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, 0)", 
"", 
"extern int <a class=\"id\" href=\"#reserve_bootmem_generic\">reserve_bootmem_generic</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"extern void *<a class=\"id\" href=\"#alloc_bootmem_section\">alloc_bootmem_section</a>(unsigned long <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned long <a class=\"id\" href=\"#section_nr\">section_nr</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HAVE_ARCH_ALLOC_REMAP\">CONFIG_HAVE_ARCH_ALLOC_REMAP</a>", 
"extern void *<a class=\"id\" href=\"#alloc_remap\">alloc_remap</a>(int <a class=\"id\" href=\"#nid\">nid</a>, unsigned long <a class=\"id\" href=\"#size\">size</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void *<a class=\"id\" href=\"#alloc_remap\">alloc_remap</a>(int <a class=\"id\" href=\"#nid\">nid</a>, unsigned long <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_HAVE_ARCH_ALLOC_REMAP */</span>", 
"", 
"extern void *<a class=\"id\" href=\"#alloc_large_system_hash\">alloc_large_system_hash</a>(const char *<a class=\"id\" href=\"#tablename\">tablename</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#bucketsize\">bucketsize</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#numentries\">numentries</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#scale\">scale</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned int *<a class=\"id\" href=\"#_hash_shift\">_hash_shift</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned int *<a class=\"id\" href=\"#_hash_mask\">_hash_mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#limit\">limit</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HASH_EARLY\">HASH_EARLY</a><span class=\"ts\"/>0x00000001<span class=\"ts\"/><span class=\"comment\">/* Allocating during early boot? */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HASH_SMALL\">HASH_SMALL</a><span class=\"ts\"/>0x00000002<span class=\"ts\"/><span class=\"comment\">/* sub-page allocation allowed, min</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * shift passed via *_hash_shift */</span>", 
"", 
"<span class=\"comment\">/* Only NUMA needs hash distribution. 64bit NUMA architectures have</span>", 
"<span class=\"comment\"> * sufficient vmalloc space.</span>", 
"<span class=\"comment\"> */</span>", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NUMA\">CONFIG_NUMA</a>) && <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_64BIT\">CONFIG_64BIT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HASHDIST_DEFAULT\">HASHDIST_DEFAULT</a> 1", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HASHDIST_DEFAULT\">HASHDIST_DEFAULT</a> 0", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"extern int <a class=\"id\" href=\"#hashdist\">hashdist</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Distribute hashes across NUMA nodes? */</span>", 
"", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_BOOTMEM_H */</span>", 
];
xr_frag_insert('l/fc/d60a6012047197479e2ed461c7f93ff7bd1230.xr', __xr_tmp);
