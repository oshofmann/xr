var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ASM_GENERIC_MSGBUF_H\">__ASM_GENERIC_MSGBUF_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__ASM_GENERIC_MSGBUF_H\">__ASM_GENERIC_MSGBUF_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#bitsperlong\">bitsperlong</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * generic msqid64_ds structure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note extra padding because this structure is passed back and forth</span>", 
"<span class=\"comment\"> * between kernel and user space.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * msqid64_ds was originally meant to be architecture specific, but</span>", 
"<span class=\"comment\"> * everyone just ended up making identical copies without specific</span>", 
"<span class=\"comment\"> * optimizations, so we may just as well all use the same one.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * 64 bit architectures typically define a 64 bit __kernel_time_t,</span>", 
"<span class=\"comment\"> * so they do not need the first three padding words.</span>", 
"<span class=\"comment\"> * On big-endian systems, the padding is in the wrong place.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Pad space is left for:</span>", 
"<span class=\"comment\"> * - 64-bit time_t to solve y2038 problem</span>", 
"<span class=\"comment\"> * - 2 miscellaneous 32-bit values</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#msqid64_ds\">msqid64_ds</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipc64_perm\">ipc64_perm</a> <a class=\"id\" href=\"#msg_perm\">msg_perm</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kernel_time_t\">__kernel_time_t</a> <a class=\"id\" href=\"#msg_stime\">msg_stime</a>;<span class=\"ts\"/><span class=\"comment\">/* last msgsnd time */</span>", 
"#if <a class=\"id\" href=\"#__BITS_PER_LONG\">__BITS_PER_LONG</a> != 64", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#__unused1\">__unused1</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kernel_time_t\">__kernel_time_t</a> <a class=\"id\" href=\"#msg_rtime\">msg_rtime</a>;<span class=\"ts\"/><span class=\"comment\">/* last msgrcv time */</span>", 
"#if <a class=\"id\" href=\"#__BITS_PER_LONG\">__BITS_PER_LONG</a> != 64", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#__unused2\">__unused2</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kernel_time_t\">__kernel_time_t</a> <a class=\"id\" href=\"#msg_ctime\">msg_ctime</a>;<span class=\"ts\"/><span class=\"comment\">/* last change time */</span>", 
"#if <a class=\"id\" href=\"#__BITS_PER_LONG\">__BITS_PER_LONG</a> != 64", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#__unused3\">__unused3</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>unsigned long  <a class=\"id\" href=\"#msg_cbytes\">msg_cbytes</a>;<span class=\"ts\"/><span class=\"comment\">/* current number of bytes on queue */</span>", 
"<span class=\"ts\"/>unsigned long  <a class=\"id\" href=\"#msg_qnum\">msg_qnum</a>;<span class=\"ts\"/><span class=\"comment\">/* number of messages in queue */</span>", 
"<span class=\"ts\"/>unsigned long  <a class=\"id\" href=\"#msg_qbytes\">msg_qbytes</a>;<span class=\"ts\"/><span class=\"comment\">/* max number of bytes on queue */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kernel_pid_t\">__kernel_pid_t</a> <a class=\"id\" href=\"#msg_lspid\">msg_lspid</a>;<span class=\"ts\"/><span class=\"comment\">/* pid of last msgsnd */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kernel_pid_t\">__kernel_pid_t</a> <a class=\"id\" href=\"#msg_lrpid\">msg_lrpid</a>;<span class=\"ts\"/><span class=\"comment\">/* last receive pid */</span>", 
"<span class=\"ts\"/>unsigned long  <a class=\"id\" href=\"#__unused4\">__unused4</a>;", 
"<span class=\"ts\"/>unsigned long  <a class=\"id\" href=\"#__unused5\">__unused5</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __ASM_GENERIC_MSGBUF_H */</span>", 
];
xr_frag_insert('l/fd/184cced560b6f71b20fa71af196f6c101bd7ff.xr', __xr_tmp);
