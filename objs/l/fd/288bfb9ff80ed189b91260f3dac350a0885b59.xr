var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * kernel/stacktrace.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Stack trace management functions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 2006 Red Hat, Inc., Ingo Molnar &lt;mingo@redhat.com&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kallsyms\">kallsyms</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#stacktrace\">stacktrace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"void <a class=\"id\" href=\"#print_stack_trace\">print_stack_trace</a>(struct <a class=\"id\" href=\"#stack_trace\">stack_trace</a> *<a class=\"id\" href=\"#trace\">trace</a>, int <a class=\"id\" href=\"#spaces\">spaces</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#entries\">entries</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#nr_entries\">nr_entries</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%*c\", 1 + <a class=\"id\" href=\"#spaces\">spaces</a>, ' ');", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_ip_sym\">print_ip_sym</a>(<a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#entries\">entries</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#print_stack_trace\">print_stack_trace</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Architectures that do not implement save_stack_trace_tsk get this</span>", 
"<span class=\"comment\"> * weak alias and a once-per-bootup warning (whenever this facility</span>", 
"<span class=\"comment\"> * is utilized - for example by procfs):</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#__weak\">__weak</a> void", 
"<a class=\"id\" href=\"#save_stack_trace_tsk\">save_stack_trace_tsk</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>, struct <a class=\"id\" href=\"#stack_trace\">stack_trace</a> *<a class=\"id\" href=\"#trace\">trace</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ONCE\">WARN_ONCE</a>(1, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"save_stack_trace_tsk() not implemented yet.\\n\");", 
"}", 
];
xr_frag_insert('l/fd/288bfb9ff80ed189b91260f3dac350a0885b59.xr', __xr_tmp);
