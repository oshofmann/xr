var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  fs/signalfd.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 2003  Linus Torvalds</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Mon Mar 5, 2007: Davide Libenzi &lt;davidel@xmailserver.org&gt;</span>", 
"<span class=\"comment\"> *      Changed -&gt;read() to return a siginfo strcture instead of signal number.</span>", 
"<span class=\"comment\"> *      Fixed locking in -&gt;poll().</span>", 
"<span class=\"comment\"> *      Added sighand-detach notification.</span>", 
"<span class=\"comment\"> *      Added fd re-use in sys_signalfd() syscall.</span>", 
"<span class=\"comment\"> *      Now using anonymous inode source.</span>", 
"<span class=\"comment\"> *      Thanks to Oleg Nesterov for useful code review and suggestions.</span>", 
"<span class=\"comment\"> *      More comments and suggestions from Arnd Bergmann.</span>", 
"<span class=\"comment\"> *  Sat May 19, 2007: Davi E. M. Arnaut &lt;davi@haxent.com.br&gt;</span>", 
"<span class=\"comment\"> *      Retrieve multiple signals with one read() call</span>", 
"<span class=\"comment\"> *  Sun Jul 15, 2007: Davide Libenzi &lt;davidel@xmailserver.org&gt;</span>", 
"<span class=\"comment\"> *      Attach to the sighand only during read() and poll().</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#file\">file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#poll\">poll</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#signal\">signal</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#anon_inodes\">anon_inodes</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#signalfd\">signalfd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#signalfd_ctx\">signalfd_ctx</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#sigmask\">sigmask</a>;", 
"};", 
"", 
"static int <a class=\"id\" href=\"#signalfd_release\">signalfd_release</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#signalfd_poll\">signalfd_poll</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#poll_table\">poll_table</a> *<a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#signalfd_ctx\">signalfd_ctx</a> *<a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#events\">events</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#poll_wait\">poll_wait</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#signalfd_wqh\">signalfd_wqh</a>, <a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#next_signal\">next_signal</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#pending\">pending</a>, &amp;<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#sigmask\">sigmask</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#next_signal\">next_signal</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#shared_pending\">shared_pending</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#sigmask\">sigmask</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#events\">events</a> |= <a class=\"id\" href=\"#POLLIN\">POLLIN</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#events\">events</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copied from copy_siginfo_to_user() in kernel/signal.c</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#signalfd_copyinfo\">signalfd_copyinfo</a>(struct <a class=\"id\" href=\"#signalfd_siginfo\">signalfd_siginfo</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#uinfo\">uinfo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> const *<a class=\"id\" href=\"#kinfo\">kinfo</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(sizeof(struct <a class=\"id\" href=\"#signalfd_siginfo\">signalfd_siginfo</a>) != 128);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Unused members should be zero ...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#__clear_user\">__clear_user</a>(<a class=\"id\" href=\"#uinfo\">uinfo</a>, sizeof(*<a class=\"id\" href=\"#uinfo\">uinfo</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If you change siginfo_t structure, please be sure</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this code is fixed accordingly.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_signo\">si_signo</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_signo\">ssi_signo</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_errno\">si_errno</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_errno\">ssi_errno</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>((short) <a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_code\">si_code</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_code\">ssi_code</a>);", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_code\">si_code</a> &amp; <a class=\"id\" href=\"#__SI_MASK\">__SI_MASK</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#__SI_KILL\">__SI_KILL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_pid\">si_pid</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_pid\">ssi_pid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_uid\">si_uid</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_uid\">ssi_uid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#__SI_TIMER\">__SI_TIMER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_tid\">si_tid</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_tid\">ssi_tid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_overrun\">si_overrun</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_overrun\">ssi_overrun</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>((long) <a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_ptr\">si_ptr</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_ptr\">ssi_ptr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_int\">si_int</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_int\">ssi_int</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#__SI_POLL\">__SI_POLL</a>:", 
];
xr_frag_insert('l/fd/6e3c44a46c539ff43c9e2bab453462bc40581c.xr', __xr_tmp);
