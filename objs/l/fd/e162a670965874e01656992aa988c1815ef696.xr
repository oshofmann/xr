var __xr_tmp = [
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#nfs_server\">nfs_server</a> *<a class=\"id\" href=\"#NFS_SB\">NFS_SB</a>(const struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#s\">s</a>)", 
"{", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#nfs_server\">nfs_server</a> *)(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#s_fs_info\">s_fs_info</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#nfs_fh\">nfs_fh</a> *<a class=\"id\" href=\"#NFS_FH\">NFS_FH</a>(const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#NFS_I\">NFS_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#fh\">fh</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#nfs_server\">nfs_server</a> *<a class=\"id\" href=\"#NFS_SERVER\">NFS_SERVER</a>(const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NFS_SB\">NFS_SB</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#rpc_clnt\">rpc_clnt</a> *<a class=\"id\" href=\"#NFS_CLIENT\">NFS_CLIENT</a>(const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NFS_SERVER\">NFS_SERVER</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#client\">client</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> const struct <a class=\"id\" href=\"#nfs_rpc_ops\">nfs_rpc_ops</a> *<a class=\"id\" href=\"#NFS_PROTO\">NFS_PROTO</a>(const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NFS_SERVER\">NFS_SERVER</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#nfs_client\">nfs_client</a>-><a class=\"id\" href=\"#rpc_ops\">rpc_ops</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__be32\">__be32</a> *<a class=\"id\" href=\"#NFS_COOKIEVERF\">NFS_COOKIEVERF</a>(const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NFS_I\">NFS_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#cookieverf\">cookieverf</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned <a class=\"id\" href=\"#NFS_MINATTRTIMEO\">NFS_MINATTRTIMEO</a>(const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nfs_server\">nfs_server</a> *<a class=\"id\" href=\"#nfss\">nfss</a> = <a class=\"id\" href=\"#NFS_SERVER\">NFS_SERVER</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>) ? <a class=\"id\" href=\"#nfss\">nfss</a>-><a class=\"id\" href=\"#acdirmin\">acdirmin</a> : <a class=\"id\" href=\"#nfss\">nfss</a>-><a class=\"id\" href=\"#acregmin\">acregmin</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned <a class=\"id\" href=\"#NFS_MAXATTRTIMEO\">NFS_MAXATTRTIMEO</a>(const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nfs_server\">nfs_server</a> *<a class=\"id\" href=\"#nfss\">nfss</a> = <a class=\"id\" href=\"#NFS_SERVER\">NFS_SERVER</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>) ? <a class=\"id\" href=\"#nfss\">nfss</a>-><a class=\"id\" href=\"#acdirmax\">acdirmax</a> : <a class=\"id\" href=\"#nfss\">nfss</a>-><a class=\"id\" href=\"#acregmax\">acregmax</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#NFS_STALE\">NFS_STALE</a>(const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#NFS_INO_STALE\">NFS_INO_STALE</a>, &amp;<a class=\"id\" href=\"#NFS_I\">NFS_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#NFS_FSCACHE\">NFS_FSCACHE</a>(const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#NFS_INO_FSCACHE\">NFS_INO_FSCACHE</a>, &amp;<a class=\"id\" href=\"#NFS_I\">NFS_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#NFS_FILEID\">NFS_FILEID</a>(const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NFS_I\">NFS_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#fileid\">fileid</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_nfs_fileid\">set_nfs_fileid</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#fileid\">fileid</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NFS_I\">NFS_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#fileid\">fileid</a> = <a class=\"id\" href=\"#fileid\">fileid</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#nfs_mark_for_revalidate\">nfs_mark_for_revalidate</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nfs_inode\">nfs_inode</a> *<a class=\"id\" href=\"#nfsi\">nfsi</a> = <a class=\"id\" href=\"#NFS_I\">NFS_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_lock\">i_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nfsi\">nfsi</a>-><a class=\"id\" href=\"#cache_validity\">cache_validity</a> |= <a class=\"id\" href=\"#NFS_INO_INVALID_ATTR\">NFS_INO_INVALID_ATTR</a>|<a class=\"id\" href=\"#NFS_INO_INVALID_ACCESS\">NFS_INO_INVALID_ACCESS</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nfsi\">nfsi</a>-><a class=\"id\" href=\"#cache_validity\">cache_validity</a> |= <a class=\"id\" href=\"#NFS_INO_REVAL_PAGECACHE\">NFS_INO_REVAL_PAGECACHE</a>|<a class=\"id\" href=\"#NFS_INO_INVALID_DATA\">NFS_INO_INVALID_DATA</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_lock\">i_lock</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nfs_server_capable\">nfs_server_capable</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#cap\">cap</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NFS_SERVER\">NFS_SERVER</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#caps\">caps</a> &amp; <a class=\"id\" href=\"#cap\">cap</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#NFS_USE_READDIRPLUS\">NFS_USE_READDIRPLUS</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#NFS_INO_ADVISE_RDPLUS\">NFS_INO_ADVISE_RDPLUS</a>, &amp;<a class=\"id\" href=\"#NFS_I\">NFS_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#nfs_set_verifier\">nfs_set_verifier</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> * <a class=\"id\" href=\"#dentry\">dentry</a>, unsigned long <a class=\"id\" href=\"#verf\">verf</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_time\">d_time</a> = <a class=\"id\" href=\"#verf\">verf</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nfs_save_change_attribute - Returns the inode attribute change cookie</span>", 
"<span class=\"comment\"> * @dir - pointer to parent directory inode</span>", 
"<span class=\"comment\"> * The \"change attribute\" is updated every time we finish an operation</span>", 
"<span class=\"comment\"> * that will result in a metadata change on the server.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#nfs_save_change_attribute\">nfs_save_change_attribute</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NFS_I\">NFS_I</a>(<a class=\"id\" href=\"#dir\">dir</a>)-><a class=\"id\" href=\"#cache_change_attribute\">cache_change_attribute</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nfs_verify_change_attribute - Detects NFS remote directory changes</span>", 
"<span class=\"comment\"> * @dir - pointer to parent directory inode</span>", 
"<span class=\"comment\"> * @chattr - previously saved change attribute</span>", 
"<span class=\"comment\"> * Return \"false\" if the verifiers doesn't match the change attribute.</span>", 
"<span class=\"comment\"> * This would usually indicate that the directory contents have changed on</span>", 
"<span class=\"comment\"> * the server, and that any dentries need revalidating.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nfs_verify_change_attribute\">nfs_verify_change_attribute</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, unsigned long <a class=\"id\" href=\"#chattr\">chattr</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#chattr\">chattr</a> == <a class=\"id\" href=\"#NFS_I\">NFS_I</a>(<a class=\"id\" href=\"#dir\">dir</a>)-><a class=\"id\" href=\"#cache_change_attribute\">cache_change_attribute</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/fs/nfs/inode.c</span>", 
"<span class=\"comment\"> */</span>", 
"extern int <a class=\"id\" href=\"#nfs_sync_mapping\">nfs_sync_mapping</a>(struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a>);", 
"extern void <a class=\"id\" href=\"#nfs_zap_mapping\">nfs_zap_mapping</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a>);", 
"extern void <a class=\"id\" href=\"#nfs_zap_caches\">nfs_zap_caches</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern void <a class=\"id\" href=\"#nfs_invalidate_atime\">nfs_invalidate_atime</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#nfs_fhget\">nfs_fhget</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *, struct <a class=\"id\" href=\"#nfs_fh\">nfs_fh</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#nfs_fattr\">nfs_fattr</a> *);", 
"extern int <a class=\"id\" href=\"#nfs_refresh_inode\">nfs_refresh_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, struct <a class=\"id\" href=\"#nfs_fattr\">nfs_fattr</a> *);", 
"extern int <a class=\"id\" href=\"#nfs_post_op_update_inode\">nfs_post_op_update_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#nfs_fattr\">nfs_fattr</a> *<a class=\"id\" href=\"#fattr\">fattr</a>);", 
"extern int <a class=\"id\" href=\"#nfs_post_op_update_inode_force_wcc\">nfs_post_op_update_inode_force_wcc</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#nfs_fattr\">nfs_fattr</a> *<a class=\"id\" href=\"#fattr\">fattr</a>);", 
"extern int <a class=\"id\" href=\"#nfs_getattr\">nfs_getattr</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *, struct <a class=\"id\" href=\"#dentry\">dentry</a> *, struct <a class=\"id\" href=\"#kstat\">kstat</a> *);", 
"extern int <a class=\"id\" href=\"#nfs_permission\">nfs_permission</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, int);", 
"extern int <a class=\"id\" href=\"#nfs_open\">nfs_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, struct <a class=\"id\" href=\"#file\">file</a> *);", 
"extern int <a class=\"id\" href=\"#nfs_release\">nfs_release</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, struct <a class=\"id\" href=\"#file\">file</a> *);", 
"extern int <a class=\"id\" href=\"#nfs_attribute_timeout\">nfs_attribute_timeout</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>);", 
"extern int <a class=\"id\" href=\"#nfs_revalidate_inode\">nfs_revalidate_inode</a>(struct <a class=\"id\" href=\"#nfs_server\">nfs_server</a> *<a class=\"id\" href=\"#server\">server</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>);", 
"extern int <a class=\"id\" href=\"#__nfs_revalidate_inode\">__nfs_revalidate_inode</a>(struct <a class=\"id\" href=\"#nfs_server\">nfs_server</a> *, struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern int <a class=\"id\" href=\"#nfs_revalidate_mapping\">nfs_revalidate_mapping</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a>);", 
"extern int <a class=\"id\" href=\"#nfs_setattr\">nfs_setattr</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *, struct <a class=\"id\" href=\"#iattr\">iattr</a> *);", 
"extern void <a class=\"id\" href=\"#nfs_setattr_update_inode\">nfs_setattr_update_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#iattr\">iattr</a> *<a class=\"id\" href=\"#attr\">attr</a>);", 
"extern struct <a class=\"id\" href=\"#nfs_open_context\">nfs_open_context</a> *<a class=\"id\" href=\"#get_nfs_open_context\">get_nfs_open_context</a>(struct <a class=\"id\" href=\"#nfs_open_context\">nfs_open_context</a> *<a class=\"id\" href=\"#ctx\">ctx</a>);", 
"extern void <a class=\"id\" href=\"#put_nfs_open_context\">put_nfs_open_context</a>(struct <a class=\"id\" href=\"#nfs_open_context\">nfs_open_context</a> *<a class=\"id\" href=\"#ctx\">ctx</a>);", 
"extern struct <a class=\"id\" href=\"#nfs_open_context\">nfs_open_context</a> *<a class=\"id\" href=\"#nfs_find_open_context\">nfs_find_open_context</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#rpc_cred\">rpc_cred</a> *<a class=\"id\" href=\"#cred\">cred</a>, <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a>);", 
"extern struct <a class=\"id\" href=\"#nfs_lock_context\">nfs_lock_context</a> *<a class=\"id\" href=\"#nfs_get_lock_context\">nfs_get_lock_context</a>(struct <a class=\"id\" href=\"#nfs_open_context\">nfs_open_context</a> *<a class=\"id\" href=\"#ctx\">ctx</a>);", 
"extern void <a class=\"id\" href=\"#nfs_put_lock_context\">nfs_put_lock_context</a>(struct <a class=\"id\" href=\"#nfs_lock_context\">nfs_lock_context</a> *<a class=\"id\" href=\"#l_ctx\">l_ctx</a>);", 
"extern <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#nfs_compat_user_ino64\">nfs_compat_user_ino64</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#fileid\">fileid</a>);", 
"extern void <a class=\"id\" href=\"#nfs_fattr_init\">nfs_fattr_init</a>(struct <a class=\"id\" href=\"#nfs_fattr\">nfs_fattr</a> *<a class=\"id\" href=\"#fattr\">fattr</a>);", 
"", 
"extern struct <a class=\"id\" href=\"#nfs_fattr\">nfs_fattr</a> *<a class=\"id\" href=\"#nfs_alloc_fattr\">nfs_alloc_fattr</a>(void);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#nfs_free_fattr\">nfs_free_fattr</a>(const struct <a class=\"id\" href=\"#nfs_fattr\">nfs_fattr</a> *<a class=\"id\" href=\"#fattr\">fattr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#fattr\">fattr</a>);", 
"}", 
"", 
"extern struct <a class=\"id\" href=\"#nfs_fh\">nfs_fh</a> *<a class=\"id\" href=\"#nfs_alloc_fhandle\">nfs_alloc_fhandle</a>(void);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#nfs_free_fhandle\">nfs_free_fhandle</a>(const struct <a class=\"id\" href=\"#nfs_fh\">nfs_fh</a> *<a class=\"id\" href=\"#fh\">fh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#fh\">fh</a>);", 
"}", 
"", 
"<span class=\"comment\">/* linux/net/ipv4/ipconfig.c: trims ip addr off front of name, too. */</span>", 
"extern <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#root_nfs_parse_addr\">root_nfs_parse_addr</a>(char *<a class=\"id\" href=\"#name\">name</a>); <span class=\"comment\">/*__init*/</span>", 
"extern unsigned long <a class=\"id\" href=\"#nfs_inc_attr_generation_counter\">nfs_inc_attr_generation_counter</a>(void);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/fs/nfs/file.c</span>", 
"<span class=\"comment\"> */</span>", 
"extern const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#nfs_file_inode_operations\">nfs_file_inode_operations</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NFS_V3\">CONFIG_NFS_V3</a>", 
"extern const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#nfs3_file_inode_operations\">nfs3_file_inode_operations</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_NFS_V3 */</span>", 
"extern const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#nfs_file_operations\">nfs_file_operations</a>;", 
"extern const struct <a class=\"id\" href=\"#address_space_operations\">address_space_operations</a> <a class=\"id\" href=\"#nfs_file_aops\">nfs_file_aops</a>;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#nfs_open_context\">nfs_open_context</a> *<a class=\"id\" href=\"#nfs_file_open_context\">nfs_file_open_context</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#rpc_cred\">rpc_cred</a> *<a class=\"id\" href=\"#nfs_file_cred\">nfs_file_cred</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#nfs_open_context\">nfs_open_context</a> *<a class=\"id\" href=\"#ctx\">ctx</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nfs_file_open_context\">nfs_file_open_context</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ctx\">ctx</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#cred\">cred</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/fs/nfs/xattr.c</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NFS_V3_ACL\">CONFIG_NFS_V3_ACL</a>", 
"extern <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#nfs3_listxattr\">nfs3_listxattr</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *, char *, <a class=\"id\" href=\"#size_t\">size_t</a>);", 
"extern <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#nfs3_getxattr\">nfs3_getxattr</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *, const char *, void *, <a class=\"id\" href=\"#size_t\">size_t</a>);", 
"extern int <a class=\"id\" href=\"#nfs3_setxattr\">nfs3_setxattr</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *, const char *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const void *, <a class=\"id\" href=\"#size_t\">size_t</a>, int);", 
"extern int <a class=\"id\" href=\"#nfs3_removexattr\">nfs3_removexattr</a> (struct <a class=\"id\" href=\"#dentry\">dentry</a> *, const char *<a class=\"id\" href=\"#name\">name</a>);", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#nfs3_listxattr\">nfs3_listxattr</a> <a class=\"id\" href=\"#NULL\">NULL</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#nfs3_getxattr\">nfs3_getxattr</a> <a class=\"id\" href=\"#NULL\">NULL</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#nfs3_setxattr\">nfs3_setxattr</a> <a class=\"id\" href=\"#NULL\">NULL</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#nfs3_removexattr\">nfs3_removexattr</a> <a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/fs/nfs/direct.c</span>", 
"<span class=\"comment\"> */</span>", 
"extern <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#nfs_direct_IO\">nfs_direct_IO</a>(int, struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *, const struct <a class=\"id\" href=\"#iovec\">iovec</a> *, <a class=\"id\" href=\"#loff_t\">loff_t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long);", 
"extern <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#nfs_file_direct_read\">nfs_file_direct_read</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iov\">iov</a>, unsigned long <a class=\"id\" href=\"#nr_segs\">nr_segs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>);", 
"extern <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#nfs_file_direct_write\">nfs_file_direct_write</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iov\">iov</a>, unsigned long <a class=\"id\" href=\"#nr_segs\">nr_segs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/fs/nfs/dir.c</span>", 
"<span class=\"comment\"> */</span>", 
"extern const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#nfs_dir_inode_operations\">nfs_dir_inode_operations</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NFS_V3\">CONFIG_NFS_V3</a>", 
"extern const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#nfs3_dir_inode_operations\">nfs3_dir_inode_operations</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_NFS_V3 */</span>", 
"extern const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#nfs_dir_operations\">nfs_dir_operations</a>;", 
"extern const struct <a class=\"id\" href=\"#dentry_operations\">dentry_operations</a> <a class=\"id\" href=\"#nfs_dentry_operations\">nfs_dentry_operations</a>;", 
"", 
"extern void <a class=\"id\" href=\"#nfs_force_lookup_revalidate\">nfs_force_lookup_revalidate</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>);", 
"extern int <a class=\"id\" href=\"#nfs_instantiate\">nfs_instantiate</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#nfs_fh\">nfs_fh</a> *<a class=\"id\" href=\"#fh\">fh</a>, struct <a class=\"id\" href=\"#nfs_fattr\">nfs_fattr</a> *<a class=\"id\" href=\"#fattr\">fattr</a>);", 
"extern int <a class=\"id\" href=\"#nfs_may_open\">nfs_may_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#rpc_cred\">rpc_cred</a> *<a class=\"id\" href=\"#cred\">cred</a>, int <a class=\"id\" href=\"#openflags\">openflags</a>);", 
"extern void <a class=\"id\" href=\"#nfs_access_zap_cache\">nfs_access_zap_cache</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/fs/nfs/symlink.c</span>", 
"<span class=\"comment\"> */</span>", 
"extern const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#nfs_symlink_inode_operations\">nfs_symlink_inode_operations</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/fs/nfs/sysctl.c</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"extern int <a class=\"id\" href=\"#nfs_register_sysctl\">nfs_register_sysctl</a>(void);", 
"extern void <a class=\"id\" href=\"#nfs_unregister_sysctl\">nfs_unregister_sysctl</a>(void);", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#nfs_register_sysctl\">nfs_register_sysctl</a>() 0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#nfs_unregister_sysctl\">nfs_unregister_sysctl</a>() do { } while(0)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/fs/nfs/namespace.c</span>", 
"<span class=\"comment\"> */</span>", 
"extern const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#nfs_mountpoint_inode_operations\">nfs_mountpoint_inode_operations</a>;", 
"extern const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#nfs_referral_inode_operations\">nfs_referral_inode_operations</a>;", 
"extern int <a class=\"id\" href=\"#nfs_mountpoint_expiry_timeout\">nfs_mountpoint_expiry_timeout</a>;", 
"extern void <a class=\"id\" href=\"#nfs_release_automount_timer\">nfs_release_automount_timer</a>(void);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/fs/nfs/unlink.c</span>", 
"<span class=\"comment\"> */</span>", 
"extern int  <a class=\"id\" href=\"#nfs_async_unlink\">nfs_async_unlink</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"extern void <a class=\"id\" href=\"#nfs_complete_unlink\">nfs_complete_unlink</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern void <a class=\"id\" href=\"#nfs_block_sillyrename\">nfs_block_sillyrename</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"extern void <a class=\"id\" href=\"#nfs_unblock_sillyrename\">nfs_unblock_sillyrename</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/fs/nfs/write.c</span>", 
"<span class=\"comment\"> */</span>", 
"extern int  <a class=\"id\" href=\"#nfs_congestion_kb\">nfs_congestion_kb</a>;", 
"extern int  <a class=\"id\" href=\"#nfs_writepage\">nfs_writepage</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, struct <a class=\"id\" href=\"#writeback_control\">writeback_control</a> *<a class=\"id\" href=\"#wbc\">wbc</a>);", 
"extern int  <a class=\"id\" href=\"#nfs_writepages\">nfs_writepages</a>(struct <a class=\"id\" href=\"#address_space\">address_space</a> *, struct <a class=\"id\" href=\"#writeback_control\">writeback_control</a> *);", 
"extern int  <a class=\"id\" href=\"#nfs_flush_incompatible\">nfs_flush_incompatible</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>);", 
"extern int  <a class=\"id\" href=\"#nfs_updatepage\">nfs_updatepage</a>(struct <a class=\"id\" href=\"#file\">file</a> *, struct <a class=\"id\" href=\"#page\">page</a> *, unsigned int, unsigned int);", 
"extern int <a class=\"id\" href=\"#nfs_writeback_done\">nfs_writeback_done</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *, struct <a class=\"id\" href=\"#nfs_write_data\">nfs_write_data</a> *);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Try to write back everything synchronously (but check the</span>", 
"<span class=\"comment\"> * return value!)</span>", 
"<span class=\"comment\"> */</span>", 
"extern int <a class=\"id\" href=\"#nfs_wb_all\">nfs_wb_all</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>);", 
"extern int <a class=\"id\" href=\"#nfs_wb_page\">nfs_wb_page</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#page\">page</a>* <a class=\"id\" href=\"#page\">page</a>);", 
"extern int <a class=\"id\" href=\"#nfs_wb_page_cancel\">nfs_wb_page_cancel</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#page\">page</a>* <a class=\"id\" href=\"#page\">page</a>);", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NFS_V3\">CONFIG_NFS_V3</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NFS_V4\">CONFIG_NFS_V4</a>)", 
"extern int  <a class=\"id\" href=\"#nfs_commit_inode\">nfs_commit_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, int);", 
"extern struct <a class=\"id\" href=\"#nfs_write_data\">nfs_write_data</a> *<a class=\"id\" href=\"#nfs_commitdata_alloc\">nfs_commitdata_alloc</a>(void);", 
"extern void <a class=\"id\" href=\"#nfs_commit_free\">nfs_commit_free</a>(struct <a class=\"id\" href=\"#nfs_write_data\">nfs_write_data</a> *<a class=\"id\" href=\"#wdata\">wdata</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#nfs_commit_inode\">nfs_commit_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#how\">how</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#nfs_have_writebacks\">nfs_have_writebacks</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NFS_I\">NFS_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#npages\">npages</a> != 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Allocate nfs_write_data structures</span>", 
"<span class=\"comment\"> */</span>", 
"extern struct <a class=\"id\" href=\"#nfs_write_data\">nfs_write_data</a> *<a class=\"id\" href=\"#nfs_writedata_alloc\">nfs_writedata_alloc</a>(unsigned int <a class=\"id\" href=\"#npages\">npages</a>);", 
"extern void <a class=\"id\" href=\"#nfs_writedata_free\">nfs_writedata_free</a>(struct <a class=\"id\" href=\"#nfs_write_data\">nfs_write_data</a> *);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/fs/nfs/read.c</span>", 
"<span class=\"comment\"> */</span>", 
"extern int  <a class=\"id\" href=\"#nfs_readpage\">nfs_readpage</a>(struct <a class=\"id\" href=\"#file\">file</a> *, struct <a class=\"id\" href=\"#page\">page</a> *);", 
"extern int  <a class=\"id\" href=\"#nfs_readpages\">nfs_readpages</a>(struct <a class=\"id\" href=\"#file\">file</a> *, struct <a class=\"id\" href=\"#address_space\">address_space</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *, unsigned);", 
"extern int  <a class=\"id\" href=\"#nfs_readpage_result\">nfs_readpage_result</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *, struct <a class=\"id\" href=\"#nfs_read_data\">nfs_read_data</a> *);", 
"extern int  <a class=\"id\" href=\"#nfs_readpage_async\">nfs_readpage_async</a>(struct <a class=\"id\" href=\"#nfs_open_context\">nfs_open_context</a> *, struct <a class=\"id\" href=\"#inode\">inode</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#page\">page</a> *);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Allocate nfs_read_data structures</span>", 
"<span class=\"comment\"> */</span>", 
"extern struct <a class=\"id\" href=\"#nfs_read_data\">nfs_read_data</a> *<a class=\"id\" href=\"#nfs_readdata_alloc\">nfs_readdata_alloc</a>(unsigned int <a class=\"id\" href=\"#npages\">npages</a>);", 
"extern void <a class=\"id\" href=\"#nfs_readdata_free\">nfs_readdata_free</a>(struct <a class=\"id\" href=\"#nfs_read_data\">nfs_read_data</a> *);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/fs/nfs3proc.c</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NFS_V3_ACL\">CONFIG_NFS_V3_ACL</a>", 
"extern struct <a class=\"id\" href=\"#posix_acl\">posix_acl</a> *<a class=\"id\" href=\"#nfs3_proc_getacl\">nfs3_proc_getacl</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#type\">type</a>);", 
"extern int <a class=\"id\" href=\"#nfs3_proc_setacl\">nfs3_proc_setacl</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#posix_acl\">posix_acl</a> *<a class=\"id\" href=\"#acl\">acl</a>);", 
"extern int <a class=\"id\" href=\"#nfs3_proc_set_default_acl\">nfs3_proc_set_default_acl</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode_t\">mode_t</a> <a class=\"id\" href=\"#mode\">mode</a>);", 
"extern void <a class=\"id\" href=\"#nfs3_forget_cached_acls\">nfs3_forget_cached_acls</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nfs3_proc_set_default_acl\">nfs3_proc_set_default_acl</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#mode_t\">mode_t</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#nfs3_forget_cached_acls\">nfs3_forget_cached_acls</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_NFS_V3_ACL */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * inline functions</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#nfs_size_to_loff_t\">nfs_size_to_loff_t</a>(<a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; (<a class=\"id\" href=\"#__u64\">__u64</a>) <a class=\"id\" href=\"#OFFSET_MAX\">OFFSET_MAX</a> - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#OFFSET_MAX\">OFFSET_MAX</a> - 1;", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#loff_t\">loff_t</a>) <a class=\"id\" href=\"#size\">size</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#ino_t\">ino_t</a>", 
"<a class=\"id\" href=\"#nfs_fileid_to_ino_t\">nfs_fileid_to_ino_t</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#fileid\">fileid</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ino_t\">ino_t</a> <a class=\"id\" href=\"#ino\">ino</a> = (<a class=\"id\" href=\"#ino_t\">ino_t</a>) <a class=\"id\" href=\"#fileid\">fileid</a>;", 
"<span class=\"ts\"/>if (sizeof(<a class=\"id\" href=\"#ino_t\">ino_t</a>) &lt; sizeof(<a class=\"id\" href=\"#u64\">u64</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ino\">ino</a> ^= <a class=\"id\" href=\"#fileid\">fileid</a> >> (sizeof(<a class=\"id\" href=\"#u64\">u64</a>)-sizeof(<a class=\"id\" href=\"#ino_t\">ino_t</a>)) * 8;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ino\">ino</a>;", 
"}", 
"", 
"<span class=\"comment\">/* NFS root */</span>", 
"", 
"extern void * <a class=\"id\" href=\"#nfs_root_data\">nfs_root_data</a>(void);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#nfs_wait_event\">nfs_wait_event</a>(<a class=\"id\" href=\"#clnt\">clnt</a>, <a class=\"id\" href=\"#wq\">wq</a>, <a class=\"id\" href=\"#condition\">condition</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"({<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#__retval\">__retval</a> = <a class=\"id\" href=\"#wait_event_killable\">wait_event_killable</a>(<a class=\"id\" href=\"#wq\">wq</a>, <a class=\"id\" href=\"#condition\">condition</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__retval\">__retval</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"})", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFS_JUKEBOX_RETRY_TIME\">NFS_JUKEBOX_RETRY_TIME</a> (5 * <a class=\"id\" href=\"#HZ\">HZ</a>)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL__ */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NFS debug flags</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFSDBG_VFS\">NFSDBG_VFS</a><span class=\"ts\"/><span class=\"ts\"/>0x0001", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFSDBG_DIRCACHE\">NFSDBG_DIRCACHE</a><span class=\"ts\"/><span class=\"ts\"/>0x0002", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFSDBG_LOOKUPCACHE\">NFSDBG_LOOKUPCACHE</a><span class=\"ts\"/>0x0004", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFSDBG_PAGECACHE\">NFSDBG_PAGECACHE</a><span class=\"ts\"/>0x0008", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFSDBG_PROC\">NFSDBG_PROC</a><span class=\"ts\"/><span class=\"ts\"/>0x0010", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFSDBG_XDR\">NFSDBG_XDR</a><span class=\"ts\"/><span class=\"ts\"/>0x0020", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFSDBG_FILE\">NFSDBG_FILE</a><span class=\"ts\"/><span class=\"ts\"/>0x0040", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFSDBG_ROOT\">NFSDBG_ROOT</a><span class=\"ts\"/><span class=\"ts\"/>0x0080", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFSDBG_CALLBACK\">NFSDBG_CALLBACK</a><span class=\"ts\"/><span class=\"ts\"/>0x0100", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFSDBG_CLIENT\">NFSDBG_CLIENT</a><span class=\"ts\"/><span class=\"ts\"/>0x0200", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFSDBG_MOUNT\">NFSDBG_MOUNT</a><span class=\"ts\"/><span class=\"ts\"/>0x0400", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFSDBG_FSCACHE\">NFSDBG_FSCACHE</a><span class=\"ts\"/><span class=\"ts\"/>0x0800", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFSDBG_ALL\">NFSDBG_ALL</a><span class=\"ts\"/><span class=\"ts\"/>0xFFFF", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Enable debugging support for nfs client.</span>", 
"<span class=\"comment\"> * Requires RPC_DEBUG.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#RPC_DEBUG\">RPC_DEBUG</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFS_DEBUG\">NFS_DEBUG</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"# <a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#ifdebug\">ifdebug</a>", 
"# <a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#NFS_DEBUG\">NFS_DEBUG</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ifdebug\">ifdebug</a>(<a class=\"id\" href=\"#fac\">fac</a>)<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#nfs_debug\">nfs_debug</a> &amp; <a class=\"id\" href=\"#NFSDBG_\">NFSDBG_</a>##<a class=\"id\" href=\"#fac\">fac</a>))", 
"# else", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ifdebug\">ifdebug</a>(<a class=\"id\" href=\"#fac\">fac</a>)<span class=\"ts\"/><span class=\"ts\"/>if (0)", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/fd/e162a670965874e01656992aa988c1815ef696.xr', __xr_tmp);
