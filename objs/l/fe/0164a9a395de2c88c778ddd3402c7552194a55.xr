var __xr_tmp = [
"<span class=\"comment\">//#define DEBUG</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp_lock\">smp_lock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hdreg\">hdreg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#virtio\">virtio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#virtio_blk\">virtio_blk</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#scatterlist\">scatterlist</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PART_BITS\">PART_BITS</a> 4", 
"", 
"static int <a class=\"id\" href=\"#major\">major</a>, <a class=\"id\" href=\"#index\">index</a>;", 
"", 
"struct <a class=\"id\" href=\"#virtio_blk\">virtio_blk</a>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#lock\">lock</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#vdev\">vdev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtqueue\">virtqueue</a> *<a class=\"id\" href=\"#vq\">vq</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The disk structure for the kernel. */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Request tracking. */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#reqs\">reqs</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mempool_t\">mempool_t</a> *<a class=\"id\" href=\"#pool\">pool</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* What host tells us, plus 2 for header &amp; tailer. */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#sg_elems\">sg_elems</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Scatterlist: can be too big for stack. */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> <a class=\"id\" href=\"#sg\">sg</a>[<span class=\"comment\">/*sg_elems*/</span>];", 
"};", 
"", 
"struct <a class=\"id\" href=\"#virtblk_req\">virtblk_req</a>", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#req\">req</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_blk_outhdr\">virtio_blk_outhdr</a> <a class=\"id\" href=\"#out_hdr\">out_hdr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_scsi_inhdr\">virtio_scsi_inhdr</a> <a class=\"id\" href=\"#in_hdr\">in_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#status\">status</a>;", 
"};", 
"", 
"static void <a class=\"id\" href=\"#blk_done\">blk_done</a>(struct <a class=\"id\" href=\"#virtqueue\">virtqueue</a> *<a class=\"id\" href=\"#vq\">vq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_blk\">virtio_blk</a> *<a class=\"id\" href=\"#vblk\">vblk</a> = <a class=\"id\" href=\"#vq\">vq</a>-><a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#priv\">priv</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtblk_req\">virtblk_req</a> *<a class=\"id\" href=\"#vbr\">vbr</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#vbr\">vbr</a> = <a class=\"id\" href=\"#virtqueue_get_buf\">virtqueue_get_buf</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#vq\">vq</a>, &amp;<a class=\"id\" href=\"#len\">len</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#status\">status</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#VIRTIO_BLK_S_OK\">VIRTIO_BLK_S_OK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#VIRTIO_BLK_S_UNSUPP\">VIRTIO_BLK_S_UNSUPP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOTTY\">ENOTTY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#cmd_type\">cmd_type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#REQ_TYPE_BLOCK_PC\">REQ_TYPE_BLOCK_PC</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#resid_len\">resid_len</a> = <a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#in_hdr\">in_hdr</a>.<a class=\"id\" href=\"#residual\">residual</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#sense_len\">sense_len</a> = <a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#in_hdr\">in_hdr</a>.<a class=\"id\" href=\"#sense_len\">sense_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#errors\">errors</a> = <a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#in_hdr\">in_hdr</a>.<a class=\"id\" href=\"#errors\">errors</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#REQ_TYPE_SPECIAL\">REQ_TYPE_SPECIAL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#errors\">errors</a> = (<a class=\"id\" href=\"#error\">error</a> != 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__blk_end_request_all\">__blk_end_request_all</a>(<a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mempool_free\">mempool_free</a>(<a class=\"id\" href=\"#vbr\">vbr</a>, <a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#pool\">pool</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* In case queue is stopped waiting for more buffers. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_start_queue\">blk_start_queue</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#queue\">queue</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#do_req\">do_req</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#virtio_blk\">virtio_blk</a> *<a class=\"id\" href=\"#vblk\">vblk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#out\">out</a> = 0, <a class=\"id\" href=\"#in\">in</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtblk_req\">virtblk_req</a> *<a class=\"id\" href=\"#vbr\">vbr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vbr\">vbr</a> = <a class=\"id\" href=\"#mempool_alloc\">mempool_alloc</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#pool\">pool</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vbr\">vbr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* When another request finishes we'll try again. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#req\">req</a> = <a class=\"id\" href=\"#req\">req</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_FLUSH\">REQ_FLUSH</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#out_hdr\">out_hdr</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#VIRTIO_BLK_T_FLUSH\">VIRTIO_BLK_T_FLUSH</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#out_hdr\">out_hdr</a>.<a class=\"id\" href=\"#sector\">sector</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#out_hdr\">out_hdr</a>.<a class=\"id\" href=\"#ioprio\">ioprio</a> = <a class=\"id\" href=\"#req_get_ioprio\">req_get_ioprio</a>(<a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#cmd_type\">cmd_type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#REQ_TYPE_FS\">REQ_TYPE_FS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#out_hdr\">out_hdr</a>.<a class=\"id\" href=\"#type\">type</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#out_hdr\">out_hdr</a>.<a class=\"id\" href=\"#sector\">sector</a> = <a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#out_hdr\">out_hdr</a>.<a class=\"id\" href=\"#ioprio\">ioprio</a> = <a class=\"id\" href=\"#req_get_ioprio\">req_get_ioprio</a>(<a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#REQ_TYPE_BLOCK_PC\">REQ_TYPE_BLOCK_PC</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#out_hdr\">out_hdr</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#VIRTIO_BLK_T_SCSI_CMD\">VIRTIO_BLK_T_SCSI_CMD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#out_hdr\">out_hdr</a>.<a class=\"id\" href=\"#sector\">sector</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#out_hdr\">out_hdr</a>.<a class=\"id\" href=\"#ioprio\">ioprio</a> = <a class=\"id\" href=\"#req_get_ioprio\">req_get_ioprio</a>(<a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#REQ_TYPE_SPECIAL\">REQ_TYPE_SPECIAL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#out_hdr\">out_hdr</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#VIRTIO_BLK_T_GET_ID\">VIRTIO_BLK_T_GET_ID</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#out_hdr\">out_hdr</a>.<a class=\"id\" href=\"#sector\">sector</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#out_hdr\">out_hdr</a>.<a class=\"id\" href=\"#ioprio\">ioprio</a> = <a class=\"id\" href=\"#req_get_ioprio\">req_get_ioprio</a>(<a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We don't put anything else in the queue. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_HARDBARRIER\">REQ_HARDBARRIER</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#out_hdr\">out_hdr</a>.<a class=\"id\" href=\"#type\">type</a> |= <a class=\"id\" href=\"#VIRTIO_BLK_T_BARRIER\">VIRTIO_BLK_T_BARRIER</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_set_buf\">sg_set_buf</a>(&amp;<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#sg\">sg</a>[<a class=\"id\" href=\"#out\">out</a>++], &amp;<a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#out_hdr\">out_hdr</a>, sizeof(<a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#out_hdr\">out_hdr</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If this is a packet command we need a couple of additional headers.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Behind the normal outhdr we put a segment with the scsi command</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * block, and before the normal inhdr we put the sense data and the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * inhdr with additional status information before the normal inhdr.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#cmd_type\">cmd_type</a> == <a class=\"id\" href=\"#REQ_TYPE_BLOCK_PC\">REQ_TYPE_BLOCK_PC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_set_buf\">sg_set_buf</a>(&amp;<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#sg\">sg</a>[<a class=\"id\" href=\"#out\">out</a>++], <a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a> = <a class=\"id\" href=\"#blk_rq_map_sg\">blk_rq_map_sg</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#sg\">sg</a> + <a class=\"id\" href=\"#out\">out</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#cmd_type\">cmd_type</a> == <a class=\"id\" href=\"#REQ_TYPE_BLOCK_PC\">REQ_TYPE_BLOCK_PC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_set_buf\">sg_set_buf</a>(&amp;<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#sg\">sg</a>[<a class=\"id\" href=\"#num\">num</a> + <a class=\"id\" href=\"#out\">out</a> + <a class=\"id\" href=\"#in\">in</a>++], <a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#sense\">sense</a>, 96);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_set_buf\">sg_set_buf</a>(&amp;<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#sg\">sg</a>[<a class=\"id\" href=\"#num\">num</a> + <a class=\"id\" href=\"#out\">out</a> + <a class=\"id\" href=\"#in\">in</a>++], &amp;<a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#in_hdr\">in_hdr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   sizeof(<a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#in_hdr\">in_hdr</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_set_buf\">sg_set_buf</a>(&amp;<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#sg\">sg</a>[<a class=\"id\" href=\"#num\">num</a> + <a class=\"id\" href=\"#out\">out</a> + <a class=\"id\" href=\"#in\">in</a>++], &amp;<a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#status\">status</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   sizeof(<a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#status\">status</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num\">num</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#req\">req</a>) == <a class=\"id\" href=\"#WRITE\">WRITE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#out_hdr\">out_hdr</a>.<a class=\"id\" href=\"#type\">type</a> |= <a class=\"id\" href=\"#VIRTIO_BLK_T_OUT\">VIRTIO_BLK_T_OUT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a> += <a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#out_hdr\">out_hdr</a>.<a class=\"id\" href=\"#type\">type</a> |= <a class=\"id\" href=\"#VIRTIO_BLK_T_IN\">VIRTIO_BLK_T_IN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in\">in</a> += <a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#virtqueue_add_buf\">virtqueue_add_buf</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#vq\">vq</a>, <a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#out\">out</a>, <a class=\"id\" href=\"#in\">in</a>, <a class=\"id\" href=\"#vbr\">vbr</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mempool_free\">mempool_free</a>(<a class=\"id\" href=\"#vbr\">vbr</a>, <a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#pool\">pool</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#vbr\">vbr</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#reqs\">reqs</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#do_virtblk_request\">do_virtblk_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_blk\">virtio_blk</a> *<a class=\"id\" href=\"#vblk\">vblk</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queuedata\">queuedata</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#req\">req</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#issued\">issued</a> = 0;", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#req\">req</a> = <a class=\"id\" href=\"#blk_peek_request\">blk_peek_request</a>(<a class=\"id\" href=\"#q\">q</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#nr_phys_segments\">nr_phys_segments</a> + 2 &gt; <a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#sg_elems\">sg_elems</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If this request fails, stop queue and wait for something to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   finish to restart it. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#do_req\">do_req</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#vblk\">vblk</a>, <a class=\"id\" href=\"#req\">req</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_stop_queue\">blk_stop_queue</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_start_request\">blk_start_request</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#issued\">issued</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#issued\">issued</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#virtqueue_kick\">virtqueue_kick</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#vq\">vq</a>);", 
"}", 
"", 
"<span class=\"comment\">/* return id (s/n) string for *disk to *id_str</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#virtblk_get_id\">virtblk_get_id</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>, char *<a class=\"id\" href=\"#id_str\">id_str</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_blk\">virtio_blk</a> *<a class=\"id\" href=\"#vblk\">vblk</a> = <a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#req\">req</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#bio_map_kern\">bio_map_kern</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#queue\">queue</a>, <a class=\"id\" href=\"#id_str\">id_str</a>, <a class=\"id\" href=\"#VIRTIO_BLK_ID_BYTES\">VIRTIO_BLK_ID_BYTES</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#bio\">bio</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a> = <a class=\"id\" href=\"#blk_make_request\">blk_make_request</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#queue\">queue</a>, <a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#req\">req</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_put\">bio_put</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#cmd_type\">cmd_type</a> = <a class=\"id\" href=\"#REQ_TYPE_SPECIAL\">REQ_TYPE_SPECIAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#blk_execute_rq\">blk_execute_rq</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#queue\">queue</a>, <a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>, <a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_put_request\">blk_put_request</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#virtblk_locked_ioctl\">virtblk_locked_ioctl</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a> = <a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_blk\">virtio_blk</a> *<a class=\"id\" href=\"#vblk\">vblk</a> = <a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Only allow the generic SCSI ioctls if the host can support it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_BLK_F_SCSI\">VIRTIO_BLK_F_SCSI</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOTTY\">ENOTTY</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#scsi_cmd_ioctl\">scsi_cmd_ioctl</a>(<a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#queue\">queue</a>, <a class=\"id\" href=\"#disk\">disk</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#data\">data</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#virtblk_ioctl\">virtblk_ioctl</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#param\">param</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_kernel\">lock_kernel</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#virtblk_locked_ioctl\">virtblk_locked_ioctl</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_kernel\">unlock_kernel</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/* We provide getgeo only to please some old bootloader/partitioning tools */</span>", 
"static int <a class=\"id\" href=\"#virtblk_getgeo\">virtblk_getgeo</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bd\">bd</a>, struct <a class=\"id\" href=\"#hd_geometry\">hd_geometry</a> *<a class=\"id\" href=\"#geo\">geo</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_blk\">virtio_blk</a> *<a class=\"id\" href=\"#vblk\">vblk</a> = <a class=\"id\" href=\"#bd\">bd</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_blk_geometry\">virtio_blk_geometry</a> <a class=\"id\" href=\"#vgeo\">vgeo</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* see if the host passed in geometry config */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#virtio_config_val\">virtio_config_val</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_BLK_F_GEOMETRY\">VIRTIO_BLK_F_GEOMETRY</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#virtio_blk_config\">virtio_blk_config</a>, <a class=\"id\" href=\"#geometry\">geometry</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#vgeo\">vgeo</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#geo\">geo</a>-><a class=\"id\" href=\"#heads\">heads</a> = <a class=\"id\" href=\"#vgeo\">vgeo</a>.<a class=\"id\" href=\"#heads\">heads</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#geo\">geo</a>-><a class=\"id\" href=\"#sectors\">sectors</a> = <a class=\"id\" href=\"#vgeo\">vgeo</a>.<a class=\"id\" href=\"#sectors\">sectors</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#geo\">geo</a>-><a class=\"id\" href=\"#cylinders\">cylinders</a> = <a class=\"id\" href=\"#vgeo\">vgeo</a>.<a class=\"id\" href=\"#cylinders\">cylinders</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* some standard values, similar to sd */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#geo\">geo</a>-><a class=\"id\" href=\"#heads\">heads</a> = 1 << 6;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#geo\">geo</a>-><a class=\"id\" href=\"#sectors\">sectors</a> = 1 << 5;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#geo\">geo</a>-><a class=\"id\" href=\"#cylinders\">cylinders</a> = <a class=\"id\" href=\"#get_capacity\">get_capacity</a>(<a class=\"id\" href=\"#bd\">bd</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>) >> 11;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#block_device_operations\">block_device_operations</a> <a class=\"id\" href=\"#virtblk_fops\">virtblk_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ioctl\">ioctl</a>  = <a class=\"id\" href=\"#virtblk_ioctl\">virtblk_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a>  = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getgeo\">getgeo</a> = <a class=\"id\" href=\"#virtblk_getgeo\">virtblk_getgeo</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#index_to_minor\">index_to_minor</a>(int <a class=\"id\" href=\"#index\">index</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#index\">index</a> << <a class=\"id\" href=\"#PART_BITS\">PART_BITS</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#virtblk_serial_show\">virtblk_serial_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a> = <a class=\"id\" href=\"#dev_to_disk\">dev_to_disk</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* sysfs gives us a PAGE_SIZE buffer */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> &lt; <a class=\"id\" href=\"#VIRTIO_BLK_ID_BYTES\">VIRTIO_BLK_ID_BYTES</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#VIRTIO_BLK_ID_BYTES\">VIRTIO_BLK_ID_BYTES</a>] = '\\0';", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#virtblk_get_id\">virtblk_get_id</a>(<a class=\"id\" href=\"#disk\">disk</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#buf\">buf</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EIO\">EIO</a>) <span class=\"comment\">/* Unsupported? Make it empty. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#DEVICE_ATTR\">DEVICE_ATTR</a>(<a class=\"id\" href=\"#serial\">serial</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#virtblk_serial_show\">virtblk_serial_show</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"static int <a class=\"id\" href=\"#__devinit\">__devinit</a> <a class=\"id\" href=\"#virtblk_probe\">virtblk_probe</a>(struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#vdev\">vdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_blk\">virtio_blk</a> *<a class=\"id\" href=\"#vblk\">vblk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#cap\">cap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#blk_size\">blk_size</a>, <a class=\"id\" href=\"#sg_elems\">sg_elems</a>, <a class=\"id\" href=\"#opt_io_size\">opt_io_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#min_io_size\">min_io_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#physical_block_exp\">physical_block_exp</a>, <a class=\"id\" href=\"#alignment_offset\">alignment_offset</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#index_to_minor\">index_to_minor</a>(<a class=\"id\" href=\"#index\">index</a>) >= 1 << <a class=\"id\" href=\"#MINORBITS\">MINORBITS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We need to know how many segments before we allocate. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#virtio_config_val\">virtio_config_val</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_BLK_F_SEG_MAX\">VIRTIO_BLK_F_SEG_MAX</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#virtio_blk_config\">virtio_blk_config</a>, <a class=\"id\" href=\"#seg_max\">seg_max</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#sg_elems\">sg_elems</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We need at least one SG element, whatever they say. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> || !<a class=\"id\" href=\"#sg_elems\">sg_elems</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_elems\">sg_elems</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We need an extra sg elements at head and tail. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_elems\">sg_elems</a> += 2;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#priv\">priv</a> = <a class=\"id\" href=\"#vblk\">vblk</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#vblk\">vblk</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    sizeof(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#sg\">sg</a>[0]) * <a class=\"id\" href=\"#sg_elems\">sg_elems</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vblk\">vblk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#reqs\">reqs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#vdev\">vdev</a> = <a class=\"id\" href=\"#vdev\">vdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#sg_elems\">sg_elems</a> = <a class=\"id\" href=\"#sg_elems\">sg_elems</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_init_table\">sg_init_table</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#sg_elems\">sg_elems</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We expect one virtqueue, for output. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#vq\">vq</a> = <a class=\"id\" href=\"#virtio_find_single_vq\">virtio_find_single_vq</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#blk_done\">blk_done</a>, \"requests\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#vq\">vq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#vq\">vq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_vblk\">out_free_vblk</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#pool\">pool</a> = <a class=\"id\" href=\"#mempool_create_kmalloc_pool\">mempool_create_kmalloc_pool</a>(1,sizeof(struct <a class=\"id\" href=\"#virtblk_req\">virtblk_req</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#pool\">pool</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_vq\">out_free_vq</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* FIXME: How many partitions?  How long is a piece of string? */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a> = <a class=\"id\" href=\"#alloc_disk\">alloc_disk</a>(1 << <a class=\"id\" href=\"#PART_BITS\">PART_BITS</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_mempool\">out_mempool</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#queue\">queue</a> = <a class=\"id\" href=\"#blk_init_queue\">blk_init_queue</a>(<a class=\"id\" href=\"#do_virtblk_request\">do_virtblk_request</a>, &amp;<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#q\">q</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put_disk\">out_put_disk</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queuedata\">queuedata</a> = <a class=\"id\" href=\"#vblk\">vblk</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#index\">index</a> &lt; 26) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>, \"vd%c\", 'a' + <a class=\"id\" href=\"#index\">index</a> % 26);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#index\">index</a> &lt; (26 + 1) * 26) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>, \"vd%c%c\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>'a' + <a class=\"id\" href=\"#index\">index</a> / 26 - 1, 'a' + <a class=\"id\" href=\"#index\">index</a> % 26);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>const unsigned int <a class=\"id\" href=\"#m1\">m1</a> = (<a class=\"id\" href=\"#index\">index</a> / 26 - 1) / 26 - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>const unsigned int <a class=\"id\" href=\"#m2\">m2</a> = (<a class=\"id\" href=\"#index\">index</a> / 26 - 1) % 26;", 
"<span class=\"ts\"/><span class=\"ts\"/>const unsigned int <a class=\"id\" href=\"#m3\">m3</a> =  <a class=\"id\" href=\"#index\">index</a> % 26;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>, \"vd%c%c%c\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>'a' + <a class=\"id\" href=\"#m1\">m1</a>, 'a' + <a class=\"id\" href=\"#m2\">m2</a>, 'a' + <a class=\"id\" href=\"#m3\">m3</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#major\">major</a> = <a class=\"id\" href=\"#major\">major</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#first_minor\">first_minor</a> = <a class=\"id\" href=\"#index_to_minor\">index_to_minor</a>(<a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#private_data\">private_data</a> = <a class=\"id\" href=\"#vblk\">vblk</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#fops\">fops</a> = &amp;<a class=\"id\" href=\"#virtblk_fops\">virtblk_fops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#driverfs_dev\">driverfs_dev</a> = &amp;<a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a>++;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_BLK_F_FLUSH\">VIRTIO_BLK_F_FLUSH</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If the FLUSH feature is supported we do have support for</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * flushing a volatile write cache on the host.  Use that</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to implement write barrier support.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_ordered\">blk_queue_ordered</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#QUEUE_ORDERED_DRAIN_FLUSH\">QUEUE_ORDERED_DRAIN_FLUSH</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_BLK_F_BARRIER\">VIRTIO_BLK_F_BARRIER</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If the BARRIER feature is supported the host expects us</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to order request by tags.  This implies there is not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * volatile write cache on the host, and that the host</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * never re-orders outstanding I/O.  This feature is not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * useful for real life scenarious and deprecated.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_ordered\">blk_queue_ordered</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#QUEUE_ORDERED_TAG\">QUEUE_ORDERED_TAG</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If the FLUSH feature is not supported we must assume that</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the host does not perform any kind of volatile write</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * caching. We still need to drain the queue to provider</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * proper barrier semantics.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_ordered\">blk_queue_ordered</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#QUEUE_ORDERED_DRAIN\">QUEUE_ORDERED_DRAIN</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If disk is read-only in the host, the guest should obey */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#virtio_has_feature\">virtio_has_feature</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_BLK_F_RO\">VIRTIO_BLK_F_RO</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_disk_ro\">set_disk_ro</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>, 1);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Host must always specify the capacity. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#config\">config</a>-><a class=\"id\" href=\"#get\">get</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#virtio_blk_config\">virtio_blk_config</a>, <a class=\"id\" href=\"#capacity\">capacity</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#cap\">cap</a>, sizeof(<a class=\"id\" href=\"#cap\">cap</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If capacity is too big, truncate with warning. */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#sector_t\">sector_t</a>)<a class=\"id\" href=\"#cap\">cap</a> != <a class=\"id\" href=\"#cap\">cap</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_warn\">dev_warn</a>(&amp;<a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"Capacity %llu too large: truncating\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (unsigned long long)<a class=\"id\" href=\"#cap\">cap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cap\">cap</a> = (<a class=\"id\" href=\"#sector_t\">sector_t</a>)-1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_capacity\">set_capacity</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>, <a class=\"id\" href=\"#cap\">cap</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We can handle whatever the host told us to handle. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_max_segments\">blk_queue_max_segments</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#sg_elems\">sg_elems</a>-2);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* No need to bounce any requests */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_bounce_limit\">blk_queue_bounce_limit</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#BLK_BOUNCE_ANY\">BLK_BOUNCE_ANY</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* No real sector limit. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_max_hw_sectors\">blk_queue_max_hw_sectors</a>(<a class=\"id\" href=\"#q\">q</a>, -1U);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Host can optionally specify maximum segment size and number of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * segments. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#virtio_config_val\">virtio_config_val</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_BLK_F_SIZE_MAX\">VIRTIO_BLK_F_SIZE_MAX</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#virtio_blk_config\">virtio_blk_config</a>, <a class=\"id\" href=\"#size_max\">size_max</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#v\">v</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_max_segment_size\">blk_queue_max_segment_size</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#v\">v</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_max_segment_size\">blk_queue_max_segment_size</a>(<a class=\"id\" href=\"#q\">q</a>, -1U);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Host can optionally specify the block size of the device */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#virtio_config_val\">virtio_config_val</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_BLK_F_BLK_SIZE\">VIRTIO_BLK_F_BLK_SIZE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#virtio_blk_config\">virtio_blk_config</a>, <a class=\"id\" href=\"#blk_size\">blk_size</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#blk_size\">blk_size</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_logical_block_size\">blk_queue_logical_block_size</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#blk_size\">blk_size</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_size\">blk_size</a> = <a class=\"id\" href=\"#queue_logical_block_size\">queue_logical_block_size</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Use topology information if available */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#virtio_config_val\">virtio_config_val</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_BLK_F_TOPOLOGY\">VIRTIO_BLK_F_TOPOLOGY</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#virtio_blk_config\">virtio_blk_config</a>, <a class=\"id\" href=\"#physical_block_exp\">physical_block_exp</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#physical_block_exp\">physical_block_exp</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a> && <a class=\"id\" href=\"#physical_block_exp\">physical_block_exp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_physical_block_size\">blk_queue_physical_block_size</a>(<a class=\"id\" href=\"#q\">q</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_size\">blk_size</a> * (1 << <a class=\"id\" href=\"#physical_block_exp\">physical_block_exp</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#virtio_config_val\">virtio_config_val</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_BLK_F_TOPOLOGY\">VIRTIO_BLK_F_TOPOLOGY</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#virtio_blk_config\">virtio_blk_config</a>, <a class=\"id\" href=\"#alignment_offset\">alignment_offset</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#alignment_offset\">alignment_offset</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a> && <a class=\"id\" href=\"#alignment_offset\">alignment_offset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_alignment_offset\">blk_queue_alignment_offset</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#blk_size\">blk_size</a> * <a class=\"id\" href=\"#alignment_offset\">alignment_offset</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#virtio_config_val\">virtio_config_val</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_BLK_F_TOPOLOGY\">VIRTIO_BLK_F_TOPOLOGY</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#virtio_blk_config\">virtio_blk_config</a>, <a class=\"id\" href=\"#min_io_size\">min_io_size</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#min_io_size\">min_io_size</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a> && <a class=\"id\" href=\"#min_io_size\">min_io_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_io_min\">blk_queue_io_min</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#blk_size\">blk_size</a> * <a class=\"id\" href=\"#min_io_size\">min_io_size</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#virtio_config_val\">virtio_config_val</a>(<a class=\"id\" href=\"#vdev\">vdev</a>, <a class=\"id\" href=\"#VIRTIO_BLK_F_TOPOLOGY\">VIRTIO_BLK_F_TOPOLOGY</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#virtio_blk_config\">virtio_blk_config</a>, <a class=\"id\" href=\"#opt_io_size\">opt_io_size</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#opt_io_size\">opt_io_size</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a> && <a class=\"id\" href=\"#opt_io_size\">opt_io_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_io_opt\">blk_queue_io_opt</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#blk_size\">blk_size</a> * <a class=\"id\" href=\"#opt_io_size\">opt_io_size</a>);", 
"", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_disk\">add_disk</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#device_create_file\">device_create_file</a>(<a class=\"id\" href=\"#disk_to_dev\">disk_to_dev</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>), &amp;<a class=\"id\" href=\"#dev_attr_serial\">dev_attr_serial</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_del_disk\">out_del_disk</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out_del_disk\">out_del_disk</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#del_gendisk\">del_gendisk</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_cleanup_queue\">blk_cleanup_queue</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#queue\">queue</a>);", 
"<a class=\"id\" href=\"#out_put_disk\">out_put_disk</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_disk\">put_disk</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>);", 
"<a class=\"id\" href=\"#out_mempool\">out_mempool</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mempool_destroy\">mempool_destroy</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#pool\">pool</a>);", 
"<a class=\"id\" href=\"#out_free_vq\">out_free_vq</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#config\">config</a>-><a class=\"id\" href=\"#del_vqs\">del_vqs</a>(<a class=\"id\" href=\"#vdev\">vdev</a>);", 
"<a class=\"id\" href=\"#out_free_vblk\">out_free_vblk</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#vblk\">vblk</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__devexit\">__devexit</a> <a class=\"id\" href=\"#virtblk_remove\">virtblk_remove</a>(struct <a class=\"id\" href=\"#virtio_device\">virtio_device</a> *<a class=\"id\" href=\"#vdev\">vdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#virtio_blk\">virtio_blk</a> *<a class=\"id\" href=\"#vblk\">vblk</a> = <a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#priv\">priv</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Nothing should be pending. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#reqs\">reqs</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Stop all the virtqueues. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#config\">config</a>-><a class=\"id\" href=\"#reset\">reset</a>(<a class=\"id\" href=\"#vdev\">vdev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#del_gendisk\">del_gendisk</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_cleanup_queue\">blk_cleanup_queue</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#queue\">queue</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_disk\">put_disk</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mempool_destroy\">mempool_destroy</a>(<a class=\"id\" href=\"#vblk\">vblk</a>-><a class=\"id\" href=\"#pool\">pool</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vdev\">vdev</a>-><a class=\"id\" href=\"#config\">config</a>-><a class=\"id\" href=\"#del_vqs\">del_vqs</a>(<a class=\"id\" href=\"#vdev\">vdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#vblk\">vblk</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#virtio_device_id\">virtio_device_id</a> <a class=\"id\" href=\"#id_table\">id_table</a>[] = {", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#VIRTIO_ID_BLOCK\">VIRTIO_ID_BLOCK</a>, <a class=\"id\" href=\"#VIRTIO_DEV_ANY_ID\">VIRTIO_DEV_ANY_ID</a> },", 
"<span class=\"ts\"/>{ 0 },", 
"};", 
"", 
"static unsigned int <a class=\"id\" href=\"#features\">features</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VIRTIO_BLK_F_BARRIER\">VIRTIO_BLK_F_BARRIER</a>, <a class=\"id\" href=\"#VIRTIO_BLK_F_SEG_MAX\">VIRTIO_BLK_F_SEG_MAX</a>, <a class=\"id\" href=\"#VIRTIO_BLK_F_SIZE_MAX\">VIRTIO_BLK_F_SIZE_MAX</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VIRTIO_BLK_F_GEOMETRY\">VIRTIO_BLK_F_GEOMETRY</a>, <a class=\"id\" href=\"#VIRTIO_BLK_F_RO\">VIRTIO_BLK_F_RO</a>, <a class=\"id\" href=\"#VIRTIO_BLK_F_BLK_SIZE\">VIRTIO_BLK_F_BLK_SIZE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VIRTIO_BLK_F_SCSI\">VIRTIO_BLK_F_SCSI</a>, <a class=\"id\" href=\"#VIRTIO_BLK_F_FLUSH\">VIRTIO_BLK_F_FLUSH</a>, <a class=\"id\" href=\"#VIRTIO_BLK_F_TOPOLOGY\">VIRTIO_BLK_F_TOPOLOGY</a>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * virtio_blk causes spurious section mismatch warning by</span>", 
"<span class=\"comment\"> * simultaneously referring to a __devinit and a __devexit function.</span>", 
"<span class=\"comment\"> * Use __refdata to avoid this warning.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#virtio_driver\">virtio_driver</a> <a class=\"id\" href=\"#__refdata\">__refdata</a> <a class=\"id\" href=\"#virtio_blk\">virtio_blk</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#feature_table\">feature_table</a> = <a class=\"id\" href=\"#features\">features</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#feature_table_size\">feature_table_size</a> = <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#features\">features</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#driver\">driver</a>.<a class=\"id\" href=\"#name\">name</a> =<span class=\"ts\"/><a class=\"id\" href=\"#KBUILD_MODNAME\">KBUILD_MODNAME</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#driver\">driver</a>.<a class=\"id\" href=\"#owner\">owner</a> =<span class=\"ts\"/><a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#id_table\">id_table</a> =<span class=\"ts\"/><a class=\"id\" href=\"#id_table\">id_table</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#probe\">probe</a> =<span class=\"ts\"/><a class=\"id\" href=\"#virtblk_probe\">virtblk_probe</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#remove\">remove</a> =<span class=\"ts\"/><a class=\"id\" href=\"#__devexit_p\">__devexit_p</a>(<a class=\"id\" href=\"#virtblk_remove\">virtblk_remove</a>),", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init\">init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#major\">major</a> = <a class=\"id\" href=\"#register_blkdev\">register_blkdev</a>(0, \"virtblk\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#major\">major</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#major\">major</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#register_virtio_driver\">register_virtio_driver</a>(&amp;<a class=\"id\" href=\"#virtio_blk\">virtio_blk</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#fini\">fini</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_blkdev\">unregister_blkdev</a>(<a class=\"id\" href=\"#major\">major</a>, \"virtblk\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_virtio_driver\">unregister_virtio_driver</a>(&amp;<a class=\"id\" href=\"#virtio_blk\">virtio_blk</a>);", 
"}", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#init\">init</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#fini\">fini</a>);", 
"", 
"<a class=\"id\" href=\"#MODULE_DEVICE_TABLE\">MODULE_DEVICE_TABLE</a>(<a class=\"id\" href=\"#virtio\">virtio</a>, <a class=\"id\" href=\"#id_table\">id_table</a>);", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"Virtio block driver\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
];
xr_frag_insert('l/fe/0164a9a395de2c88c778ddd3402c7552194a55.xr', __xr_tmp);
