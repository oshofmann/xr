var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_negative_advice\">dst_negative_advice</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retry_until\">retry_until</a> = <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_syn_retries\">icsk_syn_retries</a> ? : <a class=\"id\" href=\"#sysctl_tcp_syn_retries\">sysctl_tcp_syn_retries</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#syn_set\">syn_set</a> = 1;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retransmits_timed_out\">retransmits_timed_out</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#sysctl_tcp_retries1\">sysctl_tcp_retries1</a>, 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Black hole detection */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_mtu_probing\">tcp_mtu_probing</a>(<a class=\"id\" href=\"#icsk\">icsk</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_negative_advice\">dst_negative_advice</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retry_until\">retry_until</a> = <a class=\"id\" href=\"#sysctl_tcp_retries2\">sysctl_tcp_retries2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_DEAD\">SOCK_DEAD</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const int <a class=\"id\" href=\"#alive\">alive</a> = (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_rto\">icsk_rto</a> &lt; <a class=\"id\" href=\"#TCP_RTO_MAX\">TCP_RTO_MAX</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retry_until\">retry_until</a> = <a class=\"id\" href=\"#tcp_orphan_retries\">tcp_orphan_retries</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#alive\">alive</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_reset\">do_reset</a> = <a class=\"id\" href=\"#alive\">alive</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   !<a class=\"id\" href=\"#retransmits_timed_out\">retransmits_timed_out</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#retry_until\">retry_until</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_out_of_resources\">tcp_out_of_resources</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#do_reset\">do_reset</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retransmits_timed_out\">retransmits_timed_out</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#retry_until\">retry_until</a>, <a class=\"id\" href=\"#syn_set\">syn_set</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Has it gone just too far? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_write_err\">tcp_write_err</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tcp_delack_timer\">tcp_delack_timer</a>(unsigned long <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = (struct <a class=\"id\" href=\"#sock\">sock</a> *)<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh_lock_sock\">bh_lock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock_owned_by_user\">sock_owned_by_user</a>(<a class=\"id\" href=\"#sk\">sk</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Try again later. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#blocked\">blocked</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_DELAYEDACKLOCKED\">LINUX_MIB_DELAYEDACKLOCKED</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_reset_timer\">sk_reset_timer</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_delack_timer\">icsk_delack_timer</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#TCP_DELACK_MIN\">TCP_DELACK_MIN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_mem_reclaim_partial\">sk_mem_reclaim_partial</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> == <a class=\"id\" href=\"#TCP_CLOSE\">TCP_CLOSE</a> || !(<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#pending\">pending</a> &amp; <a class=\"id\" href=\"#ICSK_ACK_TIMER\">ICSK_ACK_TIMER</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#timeout\">timeout</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_reset_timer\">sk_reset_timer</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_delack_timer\">icsk_delack_timer</a>, <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#timeout\">timeout</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#pending\">pending</a> &= ~<a class=\"id\" href=\"#ICSK_ACK_TIMER\">ICSK_ACK_TIMER</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb_queue_empty\">skb_queue_empty</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#prequeue\">prequeue</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_TCPSCHEDULERFAILED\">LINUX_MIB_TCPSCHEDULERFAILED</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>while ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#__skb_dequeue\">__skb_dequeue</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#prequeue\">prequeue</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_backlog_rcv\">sk_backlog_rcv</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#memory\">memory</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_csk_ack_scheduled\">inet_csk_ack_scheduled</a>(<a class=\"id\" href=\"#sk\">sk</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#pingpong\">pingpong</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Delayed ACK missed: inflate ATO. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#ato\">ato</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#ato\">ato</a> << 1, <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_rto\">icsk_rto</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Delayed ACK missed: leave pingpong mode and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * deflate ATO.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#pingpong\">pingpong</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#ato\">ato</a>      = <a class=\"id\" href=\"#TCP_ATO_MIN\">TCP_ATO_MIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_send_ack\">tcp_send_ack</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_DELAYEDACKS\">LINUX_MIB_DELAYEDACKS</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_CHECK_TIMER\">TCP_CHECK_TIMER</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_memory_pressure\">tcp_memory_pressure</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_mem_reclaim\">sk_mem_reclaim</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh_unlock_sock\">bh_unlock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tcp_probe_timer\">tcp_probe_timer</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#max_probes\">max_probes</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#packets_out\">packets_out</a> || !<a class=\"id\" href=\"#tcp_send_head\">tcp_send_head</a>(<a class=\"id\" href=\"#sk\">sk</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_probes_out\">icsk_probes_out</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* *WARNING* RFC 1122 forbids this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It doesn't AFAIK, because we kill the retransmit timer -AK</span>", 
];
xr_frag_insert('l/fe/f22a074f958a4072e5896b0618bfe3a6c20e6e.xr', __xr_tmp);
