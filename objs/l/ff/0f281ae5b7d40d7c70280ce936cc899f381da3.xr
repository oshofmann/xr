var __xr_tmp = [
"<span class=\"comment\">/* find_last_bit.c: fallback find next bit implementation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2008 IBM Corporation</span>", 
"<span class=\"comment\"> * Written by Rusty Russell &lt;rusty@rustcorp.com.au&gt;</span>", 
"<span class=\"comment\"> * (Inspired by David Howell's find_next_bit implementation)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> * modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> * as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> * 2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#byteorder\">byteorder</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"unsigned long <a class=\"id\" href=\"#find_last_bit\">find_last_bit</a>(const unsigned long *<a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#words\">words</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Start at final word. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#words\">words</a> = <a class=\"id\" href=\"#size\">size</a> / <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Partial final word? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &amp; (<a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>-1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = (<a class=\"id\" href=\"#addr\">addr</a>[<a class=\"id\" href=\"#words\">words</a>] &amp; (~0UL >> (<a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> - (<a class=\"id\" href=\"#size\">size</a> &amp; (<a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>-1)))));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp\">tmp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#found\">found</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#words\">words</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#addr\">addr</a>[--<a class=\"id\" href=\"#words\">words</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp\">tmp</a>) {", 
"<a class=\"id\" href=\"#found\">found</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#words\">words</a> * <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a> + <a class=\"id\" href=\"#__fls\">__fls</a>(<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Not found */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#size\">size</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#find_last_bit\">find_last_bit</a>);", 
];
xr_frag_insert('l/ff/0f281ae5b7d40d7c70280ce936cc899f381da3.xr', __xr_tmp);
