var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * net/sched/sch_generic.c<span class=\"ts\"/>Generic packet scheduler routines.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Alexey Kuznetsov, &lt;kuznet@ms2.inr.ac.ru&gt;</span>", 
"<span class=\"comment\"> *              Jamal Hadi Salim, &lt;hadi@cyberus.ca&gt; 990601</span>", 
"<span class=\"comment\"> *              - Ingress support</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rtnetlink\">rtnetlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rcupdate\">rcupdate</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#pkt_sched\">pkt_sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Main transmission queue. */</span>", 
"", 
"<span class=\"comment\">/* Modifications to data participating in scheduling must be protected with</span>", 
"<span class=\"comment\"> * qdisc_lock(qdisc) spinlock.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The idea is the following:</span>", 
"<span class=\"comment\"> * - enqueue, dequeue are serialized via qdisc root lock</span>", 
"<span class=\"comment\"> * - ingress filtering is also serialized via qdisc root lock</span>", 
"<span class=\"comment\"> * - updates to tree and tree walking are only done under the rtnl mutex.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#dev_requeue_skb\">dev_requeue_skb</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_force\">skb_dst_force</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#gso_skb\">gso_skb</a> = <a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#qstats\">qstats</a>.<a class=\"id\" href=\"#requeues\">requeues</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#q\">q</a>.<a class=\"id\" href=\"#qlen\">qlen</a>++;<span class=\"ts\"/><span class=\"comment\">/* it's still part of the queue */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__netif_schedule\">__netif_schedule</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#dequeue_skb\">dequeue_skb</a>(struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#gso_skb\">gso_skb</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#qdisc_dev\">qdisc_dev</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#txq\">txq</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* check the reason of requeuing without tx lock first */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#txq\">txq</a> = <a class=\"id\" href=\"#netdev_get_tx_queue\">netdev_get_tx_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#skb_get_queue_mapping\">skb_get_queue_mapping</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#netif_tx_queue_stopped\">netif_tx_queue_stopped</a>(<a class=\"id\" href=\"#txq\">txq</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#netif_tx_queue_frozen\">netif_tx_queue_frozen</a>(<a class=\"id\" href=\"#txq\">txq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#gso_skb\">gso_skb</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#q\">q</a>.<a class=\"id\" href=\"#qlen\">qlen</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#dequeue\">dequeue</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#handle_dev_cpu_collision\">handle_dev_cpu_collision</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#dev_queue\">dev_queue</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#dev_queue\">dev_queue</a>-><a class=\"id\" href=\"#xmit_lock_owner\">xmit_lock_owner</a> == <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>())) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Same CPU holding the lock. It may be a transient</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * configuration error, when hard_start_xmit() recurses. We</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * detect it by checking xmit owner and drop the packet when</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * deadloop is detected. Return OK to try the next skb.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"Dead loop on netdevice %s, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"fix it urgently!\\n\", <a class=\"id\" href=\"#dev_queue\">dev_queue</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#qdisc_qlen\">qdisc_qlen</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Another cpu is holding lock, requeue &amp; delay xmits for</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * some time.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__this_cpu_inc\">__this_cpu_inc</a>(<a class=\"id\" href=\"#softnet_data\">softnet_data</a>.<a class=\"id\" href=\"#cpu_collision\">cpu_collision</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dev_requeue_skb\">dev_requeue_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Transmit one skb, and handle the return status as required. Holding the</span>", 
"<span class=\"comment\"> * __QDISC_STATE_RUNNING bit guarantees that only one CPU can execute this</span>", 
"<span class=\"comment\"> * function.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns to the caller:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0  - queue is empty or throttled.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&gt;0 - queue is not empty.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#sch_direct_xmit\">sch_direct_xmit</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#q\">q</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#txq\">txq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#root_lock\">root_lock</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#NETDEV_TX_BUSY\">NETDEV_TX_BUSY</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* And release qdisc */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(<a class=\"id\" href=\"#root_lock\">root_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HARD_TX_LOCK\">HARD_TX_LOCK</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#txq\">txq</a>, <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>());", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#netif_tx_queue_stopped\">netif_tx_queue_stopped</a>(<a class=\"id\" href=\"#txq\">txq</a>) && !<a class=\"id\" href=\"#netif_tx_queue_frozen\">netif_tx_queue_frozen</a>(<a class=\"id\" href=\"#txq\">txq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dev_hard_start_xmit\">dev_hard_start_xmit</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#txq\">txq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HARD_TX_UNLOCK\">HARD_TX_UNLOCK</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#txq\">txq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(<a class=\"id\" href=\"#root_lock\">root_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev_xmit_complete\">dev_xmit_complete</a>(<a class=\"id\" href=\"#ret\">ret</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Driver sent out skb successfully or skb was consumed */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#qdisc_qlen\">qdisc_qlen</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#ret\">ret</a> == <a class=\"id\" href=\"#NETDEV_TX_LOCKED\">NETDEV_TX_LOCKED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Driver try lock failed */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#handle_dev_cpu_collision\">handle_dev_cpu_collision</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#txq\">txq</a>, <a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Driver returned NETDEV_TX_BUSY - requeue skb */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a> (<a class=\"id\" href=\"#ret\">ret</a> != <a class=\"id\" href=\"#NETDEV_TX_BUSY\">NETDEV_TX_BUSY</a> && <a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>()))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"BUG %s code %d qlen %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#q\">q</a>.<a class=\"id\" href=\"#qlen\">qlen</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dev_requeue_skb\">dev_requeue_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> && (<a class=\"id\" href=\"#netif_tx_queue_stopped\">netif_tx_queue_stopped</a>(<a class=\"id\" href=\"#txq\">txq</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#netif_tx_queue_frozen\">netif_tx_queue_frozen</a>(<a class=\"id\" href=\"#txq\">txq</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NOTE: Called under qdisc_lock(q) with locally disabled BH.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * __QDISC_STATE_RUNNING guarantees only one CPU can process</span>", 
"<span class=\"comment\"> * this qdisc at a time. qdisc_lock(q) serializes queue accesses for</span>", 
"<span class=\"comment\"> * this queue.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  netif_tx_lock serializes accesses to device driver.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  qdisc_lock(q) and netif_tx_lock are mutually exclusive,</span>", 
"<span class=\"comment\"> *  if one is grabbed, another must be free.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note, that this procedure can be called by a watchdog timer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns to the caller:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0  - queue is empty or throttled.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&gt;0 - queue is not empty.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#qdisc_restart\">qdisc_restart</a>(struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#txq\">txq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#root_lock\">root_lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Dequeue packet */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#dequeue_skb\">dequeue_skb</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(<a class=\"id\" href=\"#skb_dst_is_noref\">skb_dst_is_noref</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root_lock\">root_lock</a> = <a class=\"id\" href=\"#qdisc_lock\">qdisc_lock</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#qdisc_dev\">qdisc_dev</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#txq\">txq</a> = <a class=\"id\" href=\"#netdev_get_tx_queue\">netdev_get_tx_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#skb_get_queue_mapping\">skb_get_queue_mapping</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sch_direct_xmit\">sch_direct_xmit</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#txq\">txq</a>, <a class=\"id\" href=\"#root_lock\">root_lock</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#__qdisc_run\">__qdisc_run</a>(struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start_time\">start_time</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#qdisc_restart\">qdisc_restart</a>(<a class=\"id\" href=\"#q\">q</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Postpone processing if</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 1. another process needs the CPU;</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 2. we've been doing it for too long.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#need_resched\">need_resched</a>() || <a class=\"id\" href=\"#jiffies\">jiffies</a> != <a class=\"id\" href=\"#start_time\">start_time</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__netif_schedule\">__netif_schedule</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qdisc_run_end\">qdisc_run_end</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"}", 
"", 
"unsigned long <a class=\"id\" href=\"#dev_trans_start\">dev_trans_start</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#trans_start\">trans_start</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#num_tx_queues\">num_tx_queues</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#netdev_get_tx_queue\">netdev_get_tx_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#i\">i</a>)-><a class=\"id\" href=\"#trans_start\">trans_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> && <a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#res\">res</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#trans_start\">trans_start</a> = <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dev_trans_start\">dev_trans_start</a>);", 
"", 
"static void <a class=\"id\" href=\"#dev_watchdog\">dev_watchdog</a>(unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = (struct <a class=\"id\" href=\"#net_device\">net_device</a> *)<a class=\"id\" href=\"#arg\">arg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_tx_lock\">netif_tx_lock</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#qdisc_tx_is_noop\">qdisc_tx_is_noop</a>(<a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#netif_device_present\">netif_device_present</a>(<a class=\"id\" href=\"#dev\">dev</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#netif_running\">netif_running</a>(<a class=\"id\" href=\"#dev\">dev</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#netif_carrier_ok\">netif_carrier_ok</a>(<a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#some_queue_timedout\">some_queue_timedout</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#trans_start\">trans_start</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#num_tx_queues\">num_tx_queues</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#txq\">txq</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#txq\">txq</a> = <a class=\"id\" href=\"#netdev_get_tx_queue\">netdev_get_tx_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * old device drivers set dev-&gt;trans_start</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trans_start\">trans_start</a> = <a class=\"id\" href=\"#txq\">txq</a>-><a class=\"id\" href=\"#trans_start\">trans_start</a> ? : <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#trans_start\">trans_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#netif_tx_queue_stopped\">netif_tx_queue_stopped</a>(<a class=\"id\" href=\"#txq\">txq</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, (<a class=\"id\" href=\"#trans_start\">trans_start</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#watchdog_timeo\">watchdog_timeo</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#some_queue_timedout\">some_queue_timedout</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#some_queue_timedout\">some_queue_timedout</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#drivername\">drivername</a>[64];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ONCE\">WARN_ONCE</a>(1, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"NETDEV WATCHDOG: %s (%s): transmit queue %u timed out\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#netdev_drivername\">netdev_drivername</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#drivername\">drivername</a>, 64), <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#netdev_ops\">netdev_ops</a>-><a class=\"id\" href=\"#ndo_tx_timeout\">ndo_tx_timeout</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#watchdog_timer\">watchdog_timer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#round_jiffies\">round_jiffies</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#watchdog_timeo\">watchdog_timeo</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_tx_unlock\">netif_tx_unlock</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#__netdev_watchdog_up\">__netdev_watchdog_up</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#netdev_ops\">netdev_ops</a>-><a class=\"id\" href=\"#ndo_tx_timeout\">ndo_tx_timeout</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#watchdog_timeo\">watchdog_timeo</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#watchdog_timeo\">watchdog_timeo</a> = 5*<a class=\"id\" href=\"#HZ\">HZ</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#watchdog_timer\">watchdog_timer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#round_jiffies\">round_jiffies</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#watchdog_timeo\">watchdog_timeo</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dev_watchdog_up\">dev_watchdog_up</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__netdev_watchdog_up\">__netdev_watchdog_up</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dev_watchdog_down\">dev_watchdog_down</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_tx_lock_bh\">netif_tx_lock_bh</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#del_timer\">del_timer</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#watchdog_timer\">watchdog_timer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_tx_unlock_bh\">netif_tx_unlock_bh</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>netif_carrier_on - set carrier</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: network device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Device has detected that carrier.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#netif_carrier_on\">netif_carrier_on</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_and_clear_bit\">test_and_clear_bit</a>(<a class=\"id\" href=\"#__LINK_STATE_NOCARRIER\">__LINK_STATE_NOCARRIER</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#state\">state</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#reg_state\">reg_state</a> == <a class=\"id\" href=\"#NETREG_UNINITIALIZED\">NETREG_UNINITIALIZED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#linkwatch_fire_event\">linkwatch_fire_event</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#netif_running\">netif_running</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__netdev_watchdog_up\">__netdev_watchdog_up</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#netif_carrier_on\">netif_carrier_on</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>netif_carrier_off - clear carrier</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: network device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Device has detected loss of carrier.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#netif_carrier_off\">netif_carrier_off</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(<a class=\"id\" href=\"#__LINK_STATE_NOCARRIER\">__LINK_STATE_NOCARRIER</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#state\">state</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#reg_state\">reg_state</a> == <a class=\"id\" href=\"#NETREG_UNINITIALIZED\">NETREG_UNINITIALIZED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#linkwatch_fire_event\">linkwatch_fire_event</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#netif_carrier_off\">netif_carrier_off</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>netif_notify_peers - notify network peers about existence of @dev</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>@dev: network device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Generate traffic such that interested network peers are aware of</span>", 
"<span class=\"comment\"> * @dev, such as by generating a gratuitous ARP. This may be used when</span>", 
"<span class=\"comment\"> * a device wants to inform the rest of the network about some sort of</span>", 
"<span class=\"comment\"> * reconfiguration such as a failover event or virtual machine</span>", 
"<span class=\"comment\"> * migration.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#netif_notify_peers\">netif_notify_peers</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call_netdevice_notifiers\">call_netdevice_notifiers</a>(<a class=\"id\" href=\"#NETDEV_NOTIFY_PEERS\">NETDEV_NOTIFY_PEERS</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#netif_notify_peers\">netif_notify_peers</a>);", 
"", 
"<span class=\"comment\">/* \"NOOP\" scheduler: the best scheduler, recommended for all interfaces</span>", 
"<span class=\"comment\">   under all circumstances. It is difficult to invent anything faster or</span>", 
"<span class=\"comment\">   cheaper.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#noop_enqueue\">noop_enqueue</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> * <a class=\"id\" href=\"#qdisc\">qdisc</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NET_XMIT_CN\">NET_XMIT_CN</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#noop_dequeue\">noop_dequeue</a>(struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> * <a class=\"id\" href=\"#qdisc\">qdisc</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#Qdisc_ops\">Qdisc_ops</a> <a class=\"id\" href=\"#noop_qdisc_ops\">noop_qdisc_ops</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#id\">id</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/>\"noop\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#priv_size\">priv_size</a><span class=\"ts\"/>=<span class=\"ts\"/>0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#enqueue\">enqueue</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#noop_enqueue\">noop_enqueue</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dequeue\">dequeue</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#noop_dequeue\">noop_dequeue</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#peek\">peek</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#noop_dequeue\">noop_dequeue</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> <a class=\"id\" href=\"#noop_netdev_queue\">noop_netdev_queue</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#qdisc\">qdisc</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#noop_qdisc\">noop_qdisc</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#qdisc_sleeping\">qdisc_sleeping</a><span class=\"ts\"/>=<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#noop_qdisc\">noop_qdisc</a>,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> <a class=\"id\" href=\"#noop_qdisc\">noop_qdisc</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#enqueue\">enqueue</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#noop_enqueue\">noop_enqueue</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dequeue\">dequeue</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#noop_dequeue\">noop_dequeue</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#TCQ_F_BUILTIN\">TCQ_F_BUILTIN</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ops\">ops</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#noop_qdisc_ops\">noop_qdisc_ops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#list\">list</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD_INIT\">LIST_HEAD_INIT</a>(<a class=\"id\" href=\"#noop_qdisc\">noop_qdisc</a>.<a class=\"id\" href=\"#list\">list</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#q\">q</a>.<a class=\"id\" href=\"#lock\">lock</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#__SPIN_LOCK_UNLOCKED\">__SPIN_LOCK_UNLOCKED</a>(<a class=\"id\" href=\"#noop_qdisc\">noop_qdisc</a>.<a class=\"id\" href=\"#q\">q</a>.<a class=\"id\" href=\"#lock\">lock</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dev_queue\">dev_queue</a><span class=\"ts\"/>=<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#noop_netdev_queue\">noop_netdev_queue</a>,", 
"};", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#noop_qdisc\">noop_qdisc</a>);", 
"", 
"static struct <a class=\"id\" href=\"#Qdisc_ops\">Qdisc_ops</a> <a class=\"id\" href=\"#noqueue_qdisc_ops\">noqueue_qdisc_ops</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#id\">id</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/>\"noqueue\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#priv_size\">priv_size</a><span class=\"ts\"/>=<span class=\"ts\"/>0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#enqueue\">enqueue</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#noop_enqueue\">noop_enqueue</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dequeue\">dequeue</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#noop_dequeue\">noop_dequeue</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#peek\">peek</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#noop_dequeue\">noop_dequeue</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> <a class=\"id\" href=\"#noqueue_qdisc\">noqueue_qdisc</a>;", 
"static struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> <a class=\"id\" href=\"#noqueue_netdev_queue\">noqueue_netdev_queue</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#qdisc\">qdisc</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#noqueue_qdisc\">noqueue_qdisc</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#qdisc_sleeping\">qdisc_sleeping</a><span class=\"ts\"/>=<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#noqueue_qdisc\">noqueue_qdisc</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> <a class=\"id\" href=\"#noqueue_qdisc\">noqueue_qdisc</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#enqueue\">enqueue</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dequeue\">dequeue</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#noop_dequeue\">noop_dequeue</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#TCQ_F_BUILTIN\">TCQ_F_BUILTIN</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ops\">ops</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#noqueue_qdisc_ops\">noqueue_qdisc_ops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#list\">list</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD_INIT\">LIST_HEAD_INIT</a>(<a class=\"id\" href=\"#noqueue_qdisc\">noqueue_qdisc</a>.<a class=\"id\" href=\"#list\">list</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#q\">q</a>.<a class=\"id\" href=\"#lock\">lock</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#__SPIN_LOCK_UNLOCKED\">__SPIN_LOCK_UNLOCKED</a>(<a class=\"id\" href=\"#noqueue_qdisc\">noqueue_qdisc</a>.<a class=\"id\" href=\"#q\">q</a>.<a class=\"id\" href=\"#lock\">lock</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dev_queue\">dev_queue</a><span class=\"ts\"/>=<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#noqueue_netdev_queue\">noqueue_netdev_queue</a>,", 
"};", 
"", 
"", 
"static const <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#prio2band\">prio2band</a>[<a class=\"id\" href=\"#TC_PRIO_MAX\">TC_PRIO_MAX</a>+1] =", 
"<span class=\"ts\"/>{ 1, 2, 2, 2, 1, 2, 0, 0 , 1, 1, 1, 1, 1, 1, 1, 1 };", 
"", 
"<span class=\"comment\">/* 3-band FIFO queue: old style, but should be a bit faster than</span>", 
"<span class=\"comment\">   generic prio+fifo combination.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PFIFO_FAST_BANDS\">PFIFO_FAST_BANDS</a> 3", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Private data for a pfifo_fast scheduler containing:</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>- queues for the three band</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>- bitmap indicating which of the bands contain skbs</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#pfifo_fast_priv\">pfifo_fast_priv</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bitmap\">bitmap</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff_head\">sk_buff_head</a> <a class=\"id\" href=\"#q\">q</a>[<a class=\"id\" href=\"#PFIFO_FAST_BANDS\">PFIFO_FAST_BANDS</a>];", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Convert a bitmap to the first band number where an skb is queued, where:</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>bitmap=0 means there are no skbs on any band.</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>bitmap=1 means there is an skb on band 0.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>bitmap=7 means there are skbs on all 3 bands, etc.</span>", 
"<span class=\"comment\"> */</span>", 
"static const int <a class=\"id\" href=\"#bitmap2band\">bitmap2band</a>[] = {-1, 0, 1, 0, 2, 0, 1, 0};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#sk_buff_head\">sk_buff_head</a> *<a class=\"id\" href=\"#band2list\">band2list</a>(struct <a class=\"id\" href=\"#pfifo_fast_priv\">pfifo_fast_priv</a> *<a class=\"id\" href=\"#priv\">priv</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#band\">band</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#q\">q</a> + <a class=\"id\" href=\"#band\">band</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pfifo_fast_enqueue\">pfifo_fast_enqueue</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a>* <a class=\"id\" href=\"#qdisc\">qdisc</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_queue_len\">skb_queue_len</a>(&amp;<a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#q\">q</a>) &lt; <a class=\"id\" href=\"#qdisc_dev\">qdisc_dev</a>(<a class=\"id\" href=\"#qdisc\">qdisc</a>)-><a class=\"id\" href=\"#tx_queue_len\">tx_queue_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#band\">band</a> = <a class=\"id\" href=\"#prio2band\">prio2band</a>[<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#priority\">priority</a> &amp; <a class=\"id\" href=\"#TC_PRIO_MAX\">TC_PRIO_MAX</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pfifo_fast_priv\">pfifo_fast_priv</a> *<a class=\"id\" href=\"#priv\">priv</a> = <a class=\"id\" href=\"#qdisc_priv\">qdisc_priv</a>(<a class=\"id\" href=\"#qdisc\">qdisc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff_head\">sk_buff_head</a> *<a class=\"id\" href=\"#list\">list</a> = <a class=\"id\" href=\"#band2list\">band2list</a>(<a class=\"id\" href=\"#priv\">priv</a>, <a class=\"id\" href=\"#band\">band</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#bitmap\">bitmap</a> |= (1 << <a class=\"id\" href=\"#band\">band</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#q\">q</a>.<a class=\"id\" href=\"#qlen\">qlen</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__qdisc_enqueue_tail\">__qdisc_enqueue_tail</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#qdisc\">qdisc</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#qdisc_drop\">qdisc_drop</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#qdisc\">qdisc</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#pfifo_fast_dequeue\">pfifo_fast_dequeue</a>(struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a>* <a class=\"id\" href=\"#qdisc\">qdisc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pfifo_fast_priv\">pfifo_fast_priv</a> *<a class=\"id\" href=\"#priv\">priv</a> = <a class=\"id\" href=\"#qdisc_priv\">qdisc_priv</a>(<a class=\"id\" href=\"#qdisc\">qdisc</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#band\">band</a> = <a class=\"id\" href=\"#bitmap2band\">bitmap2band</a>[<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#bitmap\">bitmap</a>];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#band\">band</a> >= 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff_head\">sk_buff_head</a> *<a class=\"id\" href=\"#list\">list</a> = <a class=\"id\" href=\"#band2list\">band2list</a>(<a class=\"id\" href=\"#priv\">priv</a>, <a class=\"id\" href=\"#band\">band</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#__qdisc_dequeue_head\">__qdisc_dequeue_head</a>(<a class=\"id\" href=\"#qdisc\">qdisc</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#q\">q</a>.<a class=\"id\" href=\"#qlen\">qlen</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_queue_empty\">skb_queue_empty</a>(<a class=\"id\" href=\"#list\">list</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#bitmap\">bitmap</a> &= ~(1 << <a class=\"id\" href=\"#band\">band</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#pfifo_fast_peek\">pfifo_fast_peek</a>(struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a>* <a class=\"id\" href=\"#qdisc\">qdisc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pfifo_fast_priv\">pfifo_fast_priv</a> *<a class=\"id\" href=\"#priv\">priv</a> = <a class=\"id\" href=\"#qdisc_priv\">qdisc_priv</a>(<a class=\"id\" href=\"#qdisc\">qdisc</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#band\">band</a> = <a class=\"id\" href=\"#bitmap2band\">bitmap2band</a>[<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#bitmap\">bitmap</a>];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#band\">band</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff_head\">sk_buff_head</a> *<a class=\"id\" href=\"#list\">list</a> = <a class=\"id\" href=\"#band2list\">band2list</a>(<a class=\"id\" href=\"#priv\">priv</a>, <a class=\"id\" href=\"#band\">band</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#skb_peek\">skb_peek</a>(<a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pfifo_fast_reset\">pfifo_fast_reset</a>(struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a>* <a class=\"id\" href=\"#qdisc\">qdisc</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#prio\">prio</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pfifo_fast_priv\">pfifo_fast_priv</a> *<a class=\"id\" href=\"#priv\">priv</a> = <a class=\"id\" href=\"#qdisc_priv\">qdisc_priv</a>(<a class=\"id\" href=\"#qdisc\">qdisc</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#prio\">prio</a> = 0; <a class=\"id\" href=\"#prio\">prio</a> &lt; <a class=\"id\" href=\"#PFIFO_FAST_BANDS\">PFIFO_FAST_BANDS</a>; <a class=\"id\" href=\"#prio\">prio</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__qdisc_reset_queue\">__qdisc_reset_queue</a>(<a class=\"id\" href=\"#qdisc\">qdisc</a>, <a class=\"id\" href=\"#band2list\">band2list</a>(<a class=\"id\" href=\"#priv\">priv</a>, <a class=\"id\" href=\"#prio\">prio</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#bitmap\">bitmap</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#qstats\">qstats</a>.<a class=\"id\" href=\"#backlog\">backlog</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#q\">q</a>.<a class=\"id\" href=\"#qlen\">qlen</a> = 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pfifo_fast_dump\">pfifo_fast_dump</a>(struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#qdisc\">qdisc</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tc_prio_qopt\">tc_prio_qopt</a> <a class=\"id\" href=\"#opt\">opt</a> = { .<a class=\"id\" href=\"#bands\">bands</a> = <a class=\"id\" href=\"#PFIFO_FAST_BANDS\">PFIFO_FAST_BANDS</a> };", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#opt\">opt</a>.<a class=\"id\" href=\"#priomap\">priomap</a>, <a class=\"id\" href=\"#prio2band\">prio2band</a>, <a class=\"id\" href=\"#TC_PRIO_MAX\">TC_PRIO_MAX</a>+1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT\">NLA_PUT</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#TCA_OPTIONS\">TCA_OPTIONS</a>, sizeof(<a class=\"id\" href=\"#opt\">opt</a>), &amp;<a class=\"id\" href=\"#opt\">opt</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<a class=\"id\" href=\"#nla_put_failure\">nla_put_failure</a>:", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pfifo_fast_init\">pfifo_fast_init</a>(struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#qdisc\">qdisc</a>, struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#opt\">opt</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#prio\">prio</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pfifo_fast_priv\">pfifo_fast_priv</a> *<a class=\"id\" href=\"#priv\">priv</a> = <a class=\"id\" href=\"#qdisc_priv\">qdisc_priv</a>(<a class=\"id\" href=\"#qdisc\">qdisc</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#prio\">prio</a> = 0; <a class=\"id\" href=\"#prio\">prio</a> &lt; <a class=\"id\" href=\"#PFIFO_FAST_BANDS\">PFIFO_FAST_BANDS</a>; <a class=\"id\" href=\"#prio\">prio</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_head_init\">skb_queue_head_init</a>(<a class=\"id\" href=\"#band2list\">band2list</a>(<a class=\"id\" href=\"#priv\">priv</a>, <a class=\"id\" href=\"#prio\">prio</a>));", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#Qdisc_ops\">Qdisc_ops</a> <a class=\"id\" href=\"#pfifo_fast_ops\">pfifo_fast_ops</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#id\">id</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/>\"pfifo_fast\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#priv_size\">priv_size</a><span class=\"ts\"/>=<span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#pfifo_fast_priv\">pfifo_fast_priv</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#enqueue\">enqueue</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#pfifo_fast_enqueue\">pfifo_fast_enqueue</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dequeue\">dequeue</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#pfifo_fast_dequeue\">pfifo_fast_dequeue</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#peek\">peek</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#pfifo_fast_peek\">pfifo_fast_peek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#init\">init</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#pfifo_fast_init\">pfifo_fast_init</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#reset\">reset</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#pfifo_fast_reset\">pfifo_fast_reset</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dump\">dump</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#pfifo_fast_dump\">pfifo_fast_dump</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#qdisc_alloc\">qdisc_alloc</a>(struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#dev_queue\">dev_queue</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#Qdisc_ops\">Qdisc_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>)", 
"{", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#sch\">sch</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ensure that the Qdisc and the private data are 64-byte aligned */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#QDISC_ALIGN\">QDISC_ALIGN</a>(sizeof(*<a class=\"id\" href=\"#sch\">sch</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> += <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#priv_size\">priv_size</a> + (<a class=\"id\" href=\"#QDISC_ALIGNTO\">QDISC_ALIGNTO</a> - 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout\">errout</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sch\">sch</a> = (struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *) <a class=\"id\" href=\"#QDISC_ALIGN\">QDISC_ALIGN</a>((unsigned long) <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sch\">sch</a>-><a class=\"id\" href=\"#padded\">padded</a> = (char *) <a class=\"id\" href=\"#sch\">sch</a> - (char *) <a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#sch\">sch</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_head_init\">skb_queue_head_init</a>(&amp;<a class=\"id\" href=\"#sch\">sch</a>-><a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#sch\">sch</a>-><a class=\"id\" href=\"#busylock\">busylock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sch\">sch</a>-><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sch\">sch</a>-><a class=\"id\" href=\"#enqueue\">enqueue</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#enqueue\">enqueue</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sch\">sch</a>-><a class=\"id\" href=\"#dequeue\">dequeue</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#dequeue\">dequeue</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sch\">sch</a>-><a class=\"id\" href=\"#dev_queue\">dev_queue</a> = <a class=\"id\" href=\"#dev_queue\">dev_queue</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#qdisc_dev\">qdisc_dev</a>(<a class=\"id\" href=\"#sch\">sch</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#sch\">sch</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>, 1);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sch\">sch</a>;", 
"<a class=\"id\" href=\"#errout\">errout</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> * <a class=\"id\" href=\"#qdisc_create_dflt\">qdisc_create_dflt</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#dev_queue\">dev_queue</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#Qdisc_ops\">Qdisc_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned int <a class=\"id\" href=\"#parentid\">parentid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#sch\">sch</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sch\">sch</a> = <a class=\"id\" href=\"#qdisc_alloc\">qdisc_alloc</a>(<a class=\"id\" href=\"#dev_queue\">dev_queue</a>, <a class=\"id\" href=\"#ops\">ops</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#sch\">sch</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout\">errout</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sch\">sch</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#parentid\">parentid</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#init\">init</a> || <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#init\">init</a>(<a class=\"id\" href=\"#sch\">sch</a>, <a class=\"id\" href=\"#NULL\">NULL</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sch\">sch</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qdisc_destroy\">qdisc_destroy</a>(<a class=\"id\" href=\"#sch\">sch</a>);", 
"<a class=\"id\" href=\"#errout\">errout</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#qdisc_create_dflt\">qdisc_create_dflt</a>);", 
"", 
"<span class=\"comment\">/* Under qdisc_lock(qdisc) and BH! */</span>", 
"", 
"void <a class=\"id\" href=\"#qdisc_reset\">qdisc_reset</a>(struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#qdisc\">qdisc</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#Qdisc_ops\">Qdisc_ops</a> *<a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#reset\">reset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#reset\">reset</a>(<a class=\"id\" href=\"#qdisc\">qdisc</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#gso_skb\">gso_skb</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#gso_skb\">gso_skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#gso_skb\">gso_skb</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#q\">q</a>.<a class=\"id\" href=\"#qlen\">qlen</a> = 0;", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#qdisc_reset\">qdisc_reset</a>);", 
"", 
"static void <a class=\"id\" href=\"#qdisc_rcu_free\">qdisc_rcu_free</a>(struct <a class=\"id\" href=\"#rcu_head\">rcu_head</a> *<a class=\"id\" href=\"#head\">head</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#qdisc\">qdisc</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#head\">head</a>, struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a>, <a class=\"id\" href=\"#rcu_head\">rcu_head</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>((char *) <a class=\"id\" href=\"#qdisc\">qdisc</a> - <a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#padded\">padded</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#qdisc_destroy\">qdisc_destroy</a>(struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#qdisc\">qdisc</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#Qdisc_ops\">Qdisc_ops</a>  *<a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TCQ_F_BUILTIN\">TCQ_F_BUILTIN</a> ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#atomic_dec_and_test\">atomic_dec_and_test</a>(&amp;<a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_SCHED\">CONFIG_NET_SCHED</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qdisc_list_del\">qdisc_list_del</a>(<a class=\"id\" href=\"#qdisc\">qdisc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qdisc_put_stab\">qdisc_put_stab</a>(<a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#stab\">stab</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gen_kill_estimator\">gen_kill_estimator</a>(&amp;<a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#bstats\">bstats</a>, &amp;<a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#rate_est\">rate_est</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#reset\">reset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#reset\">reset</a>(<a class=\"id\" href=\"#qdisc\">qdisc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#destroy\">destroy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#destroy\">destroy</a>(<a class=\"id\" href=\"#qdisc\">qdisc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#qdisc_dev\">qdisc_dev</a>(<a class=\"id\" href=\"#qdisc\">qdisc</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#gso_skb\">gso_skb</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * gen_estimator est_timer() might access qdisc-&gt;q.lock,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * wait a RCU grace period before freeing qdisc.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call_rcu\">call_rcu</a>(&amp;<a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#rcu_head\">rcu_head</a>, <a class=\"id\" href=\"#qdisc_rcu_free\">qdisc_rcu_free</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#qdisc_destroy\">qdisc_destroy</a>);", 
"", 
"<span class=\"comment\">/* Attach toplevel qdisc to device queue. */</span>", 
"struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#dev_graft_qdisc\">dev_graft_qdisc</a>(struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#dev_queue\">dev_queue</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#qdisc\">qdisc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#oqdisc\">oqdisc</a> = <a class=\"id\" href=\"#dev_queue\">dev_queue</a>-><a class=\"id\" href=\"#qdisc_sleeping\">qdisc_sleeping</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#root_lock\">root_lock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root_lock\">root_lock</a> = <a class=\"id\" href=\"#qdisc_lock\">qdisc_lock</a>(<a class=\"id\" href=\"#oqdisc\">oqdisc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(<a class=\"id\" href=\"#root_lock\">root_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Prune old scheduler */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#oqdisc\">oqdisc</a> && <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#oqdisc\">oqdisc</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>) <= 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qdisc_reset\">qdisc_reset</a>(<a class=\"id\" href=\"#oqdisc\">oqdisc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ... and graft new one */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#qdisc\">qdisc</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qdisc\">qdisc</a> = &amp;<a class=\"id\" href=\"#noop_qdisc\">noop_qdisc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_queue\">dev_queue</a>-><a class=\"id\" href=\"#qdisc_sleeping\">qdisc_sleeping</a> = <a class=\"id\" href=\"#qdisc\">qdisc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#dev_queue\">dev_queue</a>-><a class=\"id\" href=\"#qdisc\">qdisc</a>, &amp;<a class=\"id\" href=\"#noop_qdisc\">noop_qdisc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(<a class=\"id\" href=\"#root_lock\">root_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#oqdisc\">oqdisc</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#attach_one_default_qdisc\">attach_one_default_qdisc</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#dev_queue\">dev_queue</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     void *<a class=\"id\" href=\"#_unused\">_unused</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#qdisc\">qdisc</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#tx_queue_len\">tx_queue_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qdisc\">qdisc</a> = <a class=\"id\" href=\"#qdisc_create_dflt\">qdisc_create_dflt</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dev_queue\">dev_queue</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#pfifo_fast_ops\">pfifo_fast_ops</a>, <a class=\"id\" href=\"#TC_H_ROOT\">TC_H_ROOT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#qdisc\">qdisc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"%s: activation failed\\n\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Can by-pass the queue discipline for default qdisc */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#TCQ_F_CAN_BYPASS\">TCQ_F_CAN_BYPASS</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qdisc\">qdisc</a> =  &amp;<a class=\"id\" href=\"#noqueue_qdisc\">noqueue_qdisc</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_queue\">dev_queue</a>-><a class=\"id\" href=\"#qdisc_sleeping\">qdisc_sleeping</a> = <a class=\"id\" href=\"#qdisc\">qdisc</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#attach_default_qdiscs\">attach_default_qdiscs</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#txq\">txq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#qdisc\">qdisc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#txq\">txq</a> = <a class=\"id\" href=\"#netdev_get_tx_queue\">netdev_get_tx_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#netif_is_multiqueue\">netif_is_multiqueue</a>(<a class=\"id\" href=\"#dev\">dev</a>) || <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#tx_queue_len\">tx_queue_len</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netdev_for_each_tx_queue\">netdev_for_each_tx_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#attach_one_default_qdisc\">attach_one_default_qdisc</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#qdisc\">qdisc</a> = <a class=\"id\" href=\"#txq\">txq</a>-><a class=\"id\" href=\"#qdisc_sleeping\">qdisc_sleeping</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qdisc\">qdisc</a> = <a class=\"id\" href=\"#qdisc_create_dflt\">qdisc_create_dflt</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#txq\">txq</a>, &amp;<a class=\"id\" href=\"#mq_qdisc_ops\">mq_qdisc_ops</a>, <a class=\"id\" href=\"#TC_H_ROOT\">TC_H_ROOT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#qdisc\">qdisc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#attach\">attach</a>(<a class=\"id\" href=\"#qdisc\">qdisc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#qdisc\">qdisc</a> = <a class=\"id\" href=\"#qdisc\">qdisc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#transition_one_qdisc\">transition_one_qdisc</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#dev_queue\">dev_queue</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void *<a class=\"id\" href=\"#_need_watchdog\">_need_watchdog</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#new_qdisc\">new_qdisc</a> = <a class=\"id\" href=\"#dev_queue\">dev_queue</a>-><a class=\"id\" href=\"#qdisc_sleeping\">qdisc_sleeping</a>;", 
"<span class=\"ts\"/>int *<a class=\"id\" href=\"#need_watchdog_p\">need_watchdog_p</a> = <a class=\"id\" href=\"#_need_watchdog\">_need_watchdog</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#new_qdisc\">new_qdisc</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TCQ_F_BUILTIN\">TCQ_F_BUILTIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#__QDISC_STATE_DEACTIVATED\">__QDISC_STATE_DEACTIVATED</a>, &amp;<a class=\"id\" href=\"#new_qdisc\">new_qdisc</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#dev_queue\">dev_queue</a>-><a class=\"id\" href=\"#qdisc\">qdisc</a>, <a class=\"id\" href=\"#new_qdisc\">new_qdisc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#need_watchdog_p\">need_watchdog_p</a> && <a class=\"id\" href=\"#new_qdisc\">new_qdisc</a> != &amp;<a class=\"id\" href=\"#noqueue_qdisc\">noqueue_qdisc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_queue\">dev_queue</a>-><a class=\"id\" href=\"#trans_start\">trans_start</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#need_watchdog_p\">need_watchdog_p</a> = 1;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#dev_activate\">dev_activate</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#need_watchdog\">need_watchdog</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* No queueing discipline is attached to device;</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   create default one i.e. pfifo_fast for devices,</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   which need queueing and noqueue_qdisc for</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   virtual interfaces</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#qdisc\">qdisc</a> == &amp;<a class=\"id\" href=\"#noop_qdisc\">noop_qdisc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#attach_default_qdiscs\">attach_default_qdiscs</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#netif_carrier_ok\">netif_carrier_ok</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Delay activation until next carrier-on event */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#need_watchdog\">need_watchdog</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netdev_for_each_tx_queue\">netdev_for_each_tx_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#transition_one_qdisc\">transition_one_qdisc</a>, &amp;<a class=\"id\" href=\"#need_watchdog\">need_watchdog</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transition_one_qdisc\">transition_one_qdisc</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#rx_queue\">rx_queue</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#need_watchdog\">need_watchdog</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#trans_start\">trans_start</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_watchdog_up\">dev_watchdog_up</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dev_deactivate_queue\">dev_deactivate_queue</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#dev_queue\">dev_queue</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void *<a class=\"id\" href=\"#_qdisc_default\">_qdisc_default</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#qdisc_default\">qdisc_default</a> = <a class=\"id\" href=\"#_qdisc_default\">_qdisc_default</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#qdisc\">qdisc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qdisc\">qdisc</a> = <a class=\"id\" href=\"#dev_queue\">dev_queue</a>-><a class=\"id\" href=\"#qdisc\">qdisc</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#qdisc\">qdisc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(<a class=\"id\" href=\"#qdisc_lock\">qdisc_lock</a>(<a class=\"id\" href=\"#qdisc\">qdisc</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TCQ_F_BUILTIN\">TCQ_F_BUILTIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#__QDISC_STATE_DEACTIVATED\">__QDISC_STATE_DEACTIVATED</a>, &amp;<a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#dev_queue\">dev_queue</a>-><a class=\"id\" href=\"#qdisc\">qdisc</a>, <a class=\"id\" href=\"#qdisc_default\">qdisc_default</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qdisc_reset\">qdisc_reset</a>(<a class=\"id\" href=\"#qdisc\">qdisc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(<a class=\"id\" href=\"#qdisc_lock\">qdisc_lock</a>(<a class=\"id\" href=\"#qdisc\">qdisc</a>));", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#some_qdisc_is_busy\">some_qdisc_is_busy</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#num_tx_queues\">num_tx_queues</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#dev_queue\">dev_queue</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#root_lock\">root_lock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#q\">q</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#val\">val</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_queue\">dev_queue</a> = <a class=\"id\" href=\"#netdev_get_tx_queue\">netdev_get_tx_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#dev_queue\">dev_queue</a>-><a class=\"id\" href=\"#qdisc_sleeping\">qdisc_sleeping</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#root_lock\">root_lock</a> = <a class=\"id\" href=\"#qdisc_lock\">qdisc_lock</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(<a class=\"id\" href=\"#root_lock\">root_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = (<a class=\"id\" href=\"#qdisc_is_running\">qdisc_is_running</a>(<a class=\"id\" href=\"#q\">q</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#__QDISC_STATE_SCHED\">__QDISC_STATE_SCHED</a>, &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#state\">state</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(<a class=\"id\" href=\"#root_lock\">root_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#dev_deactivate\">dev_deactivate</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netdev_for_each_tx_queue\">netdev_for_each_tx_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dev_deactivate_queue\">dev_deactivate_queue</a>, &amp;<a class=\"id\" href=\"#noop_qdisc\">noop_qdisc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_deactivate_queue\">dev_deactivate_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#rx_queue\">rx_queue</a>, &amp;<a class=\"id\" href=\"#noop_qdisc\">noop_qdisc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_watchdog_down\">dev_watchdog_down</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Wait for outstanding qdisc-less dev_queue_xmit calls. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#synchronize_rcu\">synchronize_rcu</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Wait for outstanding qdisc_run calls. */</span>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#some_qdisc_is_busy\">some_qdisc_is_busy</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#yield\">yield</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dev_init_scheduler_queue\">dev_init_scheduler_queue</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#dev_queue\">dev_queue</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     void *<a class=\"id\" href=\"#_qdisc\">_qdisc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#qdisc\">qdisc</a> = <a class=\"id\" href=\"#_qdisc\">_qdisc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_queue\">dev_queue</a>-><a class=\"id\" href=\"#qdisc\">qdisc</a> = <a class=\"id\" href=\"#qdisc\">qdisc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_queue\">dev_queue</a>-><a class=\"id\" href=\"#qdisc_sleeping\">qdisc_sleeping</a> = <a class=\"id\" href=\"#qdisc\">qdisc</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#dev_init_scheduler\">dev_init_scheduler</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#qdisc\">qdisc</a> = &amp;<a class=\"id\" href=\"#noop_qdisc\">noop_qdisc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netdev_for_each_tx_queue\">netdev_for_each_tx_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dev_init_scheduler_queue\">dev_init_scheduler_queue</a>, &amp;<a class=\"id\" href=\"#noop_qdisc\">noop_qdisc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_init_scheduler_queue\">dev_init_scheduler_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#rx_queue\">rx_queue</a>, &amp;<a class=\"id\" href=\"#noop_qdisc\">noop_qdisc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_timer\">setup_timer</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#watchdog_timer\">watchdog_timer</a>, <a class=\"id\" href=\"#dev_watchdog\">dev_watchdog</a>, (unsigned long)<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#shutdown_scheduler_queue\">shutdown_scheduler_queue</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#dev_queue\">dev_queue</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     void *<a class=\"id\" href=\"#_qdisc_default\">_qdisc_default</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#qdisc\">qdisc</a> = <a class=\"id\" href=\"#dev_queue\">dev_queue</a>-><a class=\"id\" href=\"#qdisc_sleeping\">qdisc_sleeping</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#qdisc_default\">qdisc_default</a> = <a class=\"id\" href=\"#_qdisc_default\">_qdisc_default</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#qdisc\">qdisc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#dev_queue\">dev_queue</a>-><a class=\"id\" href=\"#qdisc\">qdisc</a>, <a class=\"id\" href=\"#qdisc_default\">qdisc_default</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_queue\">dev_queue</a>-><a class=\"id\" href=\"#qdisc_sleeping\">qdisc_sleeping</a> = <a class=\"id\" href=\"#qdisc_default\">qdisc_default</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qdisc_destroy\">qdisc_destroy</a>(<a class=\"id\" href=\"#qdisc\">qdisc</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#dev_shutdown\">dev_shutdown</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netdev_for_each_tx_queue\">netdev_for_each_tx_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#shutdown_scheduler_queue\">shutdown_scheduler_queue</a>, &amp;<a class=\"id\" href=\"#noop_qdisc\">noop_qdisc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shutdown_scheduler_queue\">shutdown_scheduler_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#rx_queue\">rx_queue</a>, &amp;<a class=\"id\" href=\"#noop_qdisc\">noop_qdisc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qdisc_destroy\">qdisc_destroy</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#qdisc\">qdisc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#qdisc\">qdisc</a> = &amp;<a class=\"id\" href=\"#noop_qdisc\">noop_qdisc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#timer_pending\">timer_pending</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#watchdog_timer\">watchdog_timer</a>));", 
"}", 
];
xr_frag_insert('l/ff/43f0e36ffdd882384936cf5f7540bbee8712a6.xr', __xr_tmp);
