var __xr_tmp = [
"<span class=\"comment\"> * ktime_equal - Compares two ktime_t variables to see if they are equal</span>", 
"<span class=\"comment\"> * @cmp1:<span class=\"ts\"/>comparable1</span>", 
"<span class=\"comment\"> * @cmp2:<span class=\"ts\"/>comparable2</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Compare two ktime_t variables, returns 1 if equal</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ktime_equal\">ktime_equal</a>(const <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#cmp1\">cmp1</a>, const <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#cmp2\">cmp2</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cmp1\">cmp1</a>.<a class=\"id\" href=\"#tv64\">tv64</a> == <a class=\"id\" href=\"#cmp2\">cmp2</a>.<a class=\"id\" href=\"#tv64\">tv64</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#ktime_to_us\">ktime_to_us</a>(const <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#kt\">kt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timeval\">timeval</a> <a class=\"id\" href=\"#tv\">tv</a> = <a class=\"id\" href=\"#ktime_to_timeval\">ktime_to_timeval</a>(<a class=\"id\" href=\"#kt\">kt</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#s64\">s64</a>) <a class=\"id\" href=\"#tv\">tv</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> * <a class=\"id\" href=\"#USEC_PER_SEC\">USEC_PER_SEC</a> + <a class=\"id\" href=\"#tv\">tv</a>.<a class=\"id\" href=\"#tv_usec\">tv_usec</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#ktime_to_ms\">ktime_to_ms</a>(const <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#kt\">kt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timeval\">timeval</a> <a class=\"id\" href=\"#tv\">tv</a> = <a class=\"id\" href=\"#ktime_to_timeval\">ktime_to_timeval</a>(<a class=\"id\" href=\"#kt\">kt</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#s64\">s64</a>) <a class=\"id\" href=\"#tv\">tv</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> * <a class=\"id\" href=\"#MSEC_PER_SEC\">MSEC_PER_SEC</a> + <a class=\"id\" href=\"#tv\">tv</a>.<a class=\"id\" href=\"#tv_usec\">tv_usec</a> / <a class=\"id\" href=\"#USEC_PER_MSEC\">USEC_PER_MSEC</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#ktime_us_delta\">ktime_us_delta</a>(const <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#later\">later</a>, const <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#earlier\">earlier</a>)", 
"{", 
"       return <a class=\"id\" href=\"#ktime_to_us\">ktime_to_us</a>(<a class=\"id\" href=\"#ktime_sub\">ktime_sub</a>(<a class=\"id\" href=\"#later\">later</a>, <a class=\"id\" href=\"#earlier\">earlier</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#ktime_add_us\">ktime_add_us</a>(const <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#kt\">kt</a>, const <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#usec\">usec</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ktime_add_ns\">ktime_add_ns</a>(<a class=\"id\" href=\"#kt\">kt</a>, <a class=\"id\" href=\"#usec\">usec</a> * 1000);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#ktime_sub_us\">ktime_sub_us</a>(const <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#kt\">kt</a>, const <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#usec\">usec</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ktime_sub_ns\">ktime_sub_ns</a>(<a class=\"id\" href=\"#kt\">kt</a>, <a class=\"id\" href=\"#usec\">usec</a> * 1000);", 
"}", 
"", 
"extern <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#ktime_add_safe\">ktime_add_safe</a>(const <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#lhs\">lhs</a>, const <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#rhs\">rhs</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The resolution of the clocks. The resolution value is returned in</span>", 
"<span class=\"comment\"> * the clock_getres() system call to give application programmers an</span>", 
"<span class=\"comment\"> * idea of the (in)accuracy of timers. Timer values are rounded up to</span>", 
"<span class=\"comment\"> * this resolution values.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LOW_RES_NSEC\">LOW_RES_NSEC</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TICK_NSEC\">TICK_NSEC</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KTIME_LOW_RES\">KTIME_LOW_RES</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#ktime_t\">ktime_t</a>){ .<a class=\"id\" href=\"#tv64\">tv64</a> = <a class=\"id\" href=\"#LOW_RES_NSEC\">LOW_RES_NSEC</a> }", 
"", 
"<span class=\"comment\">/* Get the monotonic time in timespec format: */</span>", 
"extern void <a class=\"id\" href=\"#ktime_get_ts\">ktime_get_ts</a>(struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#ts\">ts</a>);", 
"", 
"<span class=\"comment\">/* Get the real (wall-) time in timespec format: */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ktime_get_real_ts\">ktime_get_real_ts</a>(<a class=\"id\" href=\"#ts\">ts</a>)<span class=\"ts\"/><a class=\"id\" href=\"#getnstimeofday\">getnstimeofday</a>(<a class=\"id\" href=\"#ts\">ts</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#ns_to_ktime\">ns_to_ktime</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ns\">ns</a>)", 
"{", 
"<span class=\"ts\"/>static const <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#ktime_zero\">ktime_zero</a> = { .<a class=\"id\" href=\"#tv64\">tv64</a> = 0 };", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ktime_add_ns\">ktime_add_ns</a>(<a class=\"id\" href=\"#ktime_zero\">ktime_zero</a>, <a class=\"id\" href=\"#ns\">ns</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/ff/ab0f6bbfc614c31d7d93233af848a5afd0b2cd.xr', __xr_tmp);
